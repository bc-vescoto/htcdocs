overlayService.$inject = ['$rootScope', '$templateRequest', '$compile', '$timeout'], overlayDirective.$inject = ['$overlay'],
    function() {
        const e = '',
            t = 'app',
            a = window.location.host,
            s = window.location.protocol,
            i = 'paypal.link.source',
            o = '/redirect/paypal',
            n = localStorage.getItem(i);
        window.ApplicationConfiguration = {
            applicationModuleName: t,
            applicationModuleVendorDependencies: ['ngResource', 'ngSanitize', 'restangular', 'angularMoment', 'ngAnimate', 'ui.router', 'lodash', 'ui.bootstrap', 'ui.utils', 'ui.event', 'toaster', 'angular-medium-editor', 'LocalStorageModule', 'ngTagsInput', 'duScroll', 'monospaced.elastic', 'angular-stripe', 'credit-cards', 'rzModule', 'angular.filter', 'addthis', 'luegg.directives', 'ajoslin.promise-tracker', 'angular-sortable-view', 'ui.utils.masks', 'vcRecaptcha', 'holospace', 'angular-uuid'],
            registerModule(e, a) {
                angular.module(e, a || []), angular.module(t).requires.push(e)
            }
        }, angular.module(ApplicationConfiguration.applicationModuleName, ApplicationConfiguration.applicationModuleVendorDependencies), angular.module(ApplicationConfiguration.applicationModuleName).config(['$locationProvider', '$httpProvider', '$sceDelegateProvider', 'RestangularProvider', 'constants', '$addthisProvider', 'ChartJsProvider', 'vcRecaptchaServiceProvider', function(t, i, o, n, l, r, d, c) {
            i.interceptors.push('authInterceptorService'), t.html5Mode(!0), o.resourceUrlWhitelist(['self', l.CDN.URL + '/**']), window._thirdParty === void 0 && (window._thirdParty = {}), n.setBaseUrl(e + '/api'), r.profile_id('ra-553bd86c0e29d0b8'), window.addthis_share = {
                passthrough: {
                    facebook: {
                        app_id: l.CREDENTIALS.FACEBOOK.APP_ID,
                        redirect_uri: s + '//' + a + '/share/callback'
                    }
                }
            }, d.setOptions({
                elements: {
                    point: {
                        radius: 0
                    }
                }
            }), c.setDefaults({
                key: l.CREDENTIALS.RECAPTCHA.PUBLIC_KEY
            })
        }]).run(['$rootScope', '$timeout', '$q', 'constants', 'Authentication', '$state', '$stateParams', 'Prerender', '$location', 'holospace', 'localStorageService', 'Restangular', 'stripe', 'svgSprite', 'jquery', '_', 'Analytics', '$log', '$uibModalStack', 'dsModal', 'dsTooltip', 'promiseTracker', 'ScrollbarUtils', 'TileCache', '$overlay', '$window', 'dfp', 'loadScript', 'ad', 'view', 'OnboardingService', function(t, a, s, l, r, d, c, p, m, u, g, v, h, b, f, y, w, k, S, C, x, T, I, A, P, U, E, L, M, D, N) {
            function O() {
                t.$broadcast('holonis_resize')
            }

            function H() {
                angular.element(U).focus(), t.$broadcast('holonis_scroll')
            }

            function q() {
                t.$broadcast('holonis_focus')
            }

            function F() {
                if (t.$broadcast('holonis_blur'), document.activeElement instanceof HTMLIFrameElement) {
                    const e = document.activeElement.contentDocument,
                        t = y.get(e, 'body.innerHTML'),
                        a = 1 < document.activeElement.offsetHeight && 1 < document.activeElement.offsetWidth;
                    t && a && angular.element(document.activeElement).trigger('iframe_click')
                }
            }

            function B() {
                t.$broadcast('holonis_closed')
            }

            function R(e) {
                t.$broadcast('holonis_clicked', e)
            }

            function V() {
                angular.element(U).off('resize', O), angular.element(U).off('scroll', H), angular.element(U).off('focus', q), angular.element(U).off('blur', F), angular.element(U).off('click', R)
            }

            function z() {
                const e = t.state.dsModalOpened ? angular.element('.ds-modal-container .ad-unit-center > div') : angular.element('.ad-unit-center > div, div[ad]:not(.ad-untrackable)'),
                    a = {};
                y.forEach(e, (e) => {
                    if (angular.element(e).find('iframe').length && D.isElementInView(e)) {
                        const t = e.id,
                            s = M.getWinningBid(t);
                        if (!s) return;
                        const i = s.adId;
                        a[i] = M.getAdParamsForAnalytics(s)
                    }
                }), w.trackImpressions(a, 'adImpression')
            }

            function j(e) {
                a(() => {
                    t.cardWidth = e.matches ? ae : f(window).width()
                })
            }
            t.API_DOMAIN = e, t.promiseTracker = T(), t.dsModals = [], t.cdnBaseUrl = l.CDN.URL, L.loadAllScripts();
            (() => {
                l.ADS.STATIC_SLOTS.forEach((e) => {
                    const t = M.createAdUnit({
                        code: e.slotName,
                        bids: l.ADS.PREBID.bids,
                        sizes: e.adSize
                    });
                    M.addAdUnits([t])
                })
            })(), M.init(l.ADS.PREBID.bidderSettings), E.prepareEnv(l.ADS.STATIC_SLOTS), y.has(m.search(), 'utm_campaign') && (t._originalSearch = m.search(), g.set('_rpq', m.search())), window.branch.init(l.CREDENTIALS.BRANCHIO.KEY, (e) => {
                e ? console.error(e) : console.info('Branch.io SDK loaded successfully')
            }), p.start(), b.load(), h.setPublishableKey(l.CREDENTIALS.STRIPE.PUBLISHABLE_KEY);
            const Y = bowser.name.toLowerCase();
            y.includes(['firefox', 'safari'], Y) && f('body').addClass('browser-' + Y);
            const W = ['/auth/facebook', '/auth/google', '/link/facebook', '/link/google', '/link/foursquare', '/link/yelp', '/link/twitter', '/link/stripe', '/link/paypal', '/link/instagram', '/link/tumblr', '/link/pinterest'];
            f(document.body).on('click', 'a', function(e) {
                y.includes(W, this.pathname) && (e.preventDefault(), location = this.href)
            }), t.state = {}, t.state.dsModalOpened = !1, t.state.content = {}, angular.element(U).on('resize', y.throttle(() => {
                O()
            }, l.THROTTLE_RESIZE)), angular.element(U).on('scroll', y.throttle(() => {
                H()
            }, l.THROTTLE_SCROLL)), angular.element(U).on('focus', q), angular.element(U).on('blur', F), angular.element(U).on('click', R), U.addEventListener('beforeunload', () => {
                B(), V()
            }), I.setScrollbarWidth(), t.$watchCollection('dsModals', () => {
                a(() => {
                    t.state.dsModalOpened = !!t.dsModals.length
                })
            }), t.$watch('state.content.spaceId', () => {
                t.$broadcast('user.selection.space-id')
            });
            y.forEach(['holonis_scroll', 'holonis_resize', 'holonis_pageLoaded', 'holonis_focus', 'holonis_modalClosed', 'holonis_modalOpen', 'holonis_ad_refresh'], (e) => t.$on(e, () => z())), t.$on('holonis_ad_refresh', (e, t) => {
                const a = t.slotName;
                M.onAdClick(a, () => {
                    const e = M.getWinningBid(a);
                    if (e) {
                        const t = M.getAdParamsForAnalytics(e);
                        w.trackCustom(t, 'adClick')
                    }
                })
            }), t.isPrerender = y.includes(navigator.userAgent, 'Prerender'), t.isLoggedOut = r.isLoggedOut, t.Authentication = r, t.$state = d, t.$stateParams = c, t.limitGlobalHoloTabsTiles = 15, t.isVisible = !1, t.toggleTooltip = function() {
                f('body').toggleClass('hide-itercom-when-tooltip'), t.isVisible = !t.isVisible
            }, t.loadingFeedback = function(e) {
                const t = f('body');
                'add' === e ? t.addClass('feedback') : t.removeClass('feedback')
            }, t.pickMediaFile = !1, t.isOverflow = !1, t.$watch('pickMediaFile', (e, a) => {
                e === a || (t.pickMediaFile ? setTimeout(() => {
                    f('#intercom-container').addClass('hide-intercom')
                }, 1500) : f('#intercom-container').removeClass('hide-intercom'))
            });
            const G = history.pushState;
            history.pushState = function() {
                return y.get(t._originalSearch, 'utm_campaign') === y.get(m.search(), 'utm_campaign') ? void(G.apply(history, arguments), t.$broadcast('holonis_navigation', arguments[2])) : m.search(t._originalSearch)
            }, t.$broadcast('holonis_navigation', window.location.href);
            const K = 'showModalAfterLoginRedirect',
                X = 'showOverlayAfterLoginRedirect',
                Z = (e) => {
                    const t = sessionStorage.getItem(e),
                        a = t ? JSON.parse(t) : null,
                        s = !!(a && Date.now() - a.timestamp < 900000);
                    return !!s && a
                },
                Q = () => {
                    const e = Z(X);
                    if (!e) return !1;
                    if (e.url !== m.absUrl()) return !1;
                    if (sessionStorage.removeItem(X), e.overlay) {
                        const a = t.$new();
                        Object.assign(a, e), P.show(a, e.overlay)
                    }
                    return !0
                },
                J = () => {
                    const e = Z(K);
                    return !!e && !(e.url !== m.absUrl()) && (sessionStorage.removeItem(K), e.modalData && C.create(e.modalData).then((e) => {
                        e.show()
                    }), !0)
                };
            let ee = !1;
            t.$on('$stateChangeStart', (e, a, c, p, v, h) => {
                t.resizeHeaderOnScroll && (window.removeEventListener('scroll', t.resizeHeaderOnScroll), t.resizeHeaderOnScroll = null), f('body').removeClass('show-checkout nav-active'), y.get(a, 'name') !== y.get(p, 'name') && A.flush(), y.get(t, 'signupRootState.name') === a.name && (h.notify = !1), N.isSignupState(a) && ('' === p.name ? h.notify = !0 : (h.notify = !1, t.signupModalVisible ? t.$emit('signup.state.change', {
                    toState: a,
                    toParams: c
                }) : r.showLoginPrompt())), N.isSignupState(a) || (C.closeAll(), x.closeAll());
                const b = y.includes(a.name, 'apps');
                if (b) {
                    const e = f('.apps-view-content');
                    e.hasClass('active') && (console.warn('active'), e.toggleClass('active'))
                }
                if (a.requiresLoggedIn && t.Authentication.isLoggedOut()) return e.preventDefault(), void(p.name ? s.resolve() : d.go('homescreen')).then(() => {
                    g.set('redirectState', a.name), g.set('redirectParams', JSON.stringify(c)), r.showLoginPrompt()
                });
                if (p.name === a.name && y.isEqual(v, c) && !ee && (ee = !0, e.preventDefault(), f('html, body').stop().animate({
                        scrollTop: 0
                    }, 500, () => {
                        ee = !1
                    })), 'holospace.home' === a.name ? !c.holospaceName && (e.preventDefault(), u.getCurrentUserSpaces().then(() => t.primarySpace ? 'authentication' === p.name ? void d.go('feeds') : void d.go('holospace.home', {
                        holospaceName: t.primarySpace.vanityUrl
                    }, h) : void d.go('onboarding.new'))) : m.path() === o && n ? (window.location.href = '/create/item-selection', localStorage.removeItem(i)) : m.path() === o && (!c.holospaceName || '_' === c.holospaceName) && (e.preventDefault(), u.getCurrentUserSpaces().then(() => t.primarySpace ? void d.go('apps.paypal', y.assign({}, c, {
                        holospaceName: t.primarySpace.vanityUrl
                    })) : void d.go('404', void 0, {
                        location: 'replace'
                    }))), Q()) return;
                if (J()) return;
                const w = m.path(),
                    S = w && /\/insights\/\w+\/\w+/.test(w),
                    T = [/prerender/, /facebookexternalhit/, /Facebot/, /Twitterbot/, /Googlebot/, /Bingbot/, /Slurp/, /DuckDuckBot/, /Baiduspider/, /YandexBot/],
                    I = window.navigator.userAgent,
                    P = S || T.some(function(e) {
                        return I && e.test(I)
                    });
                P || window.Intercom || (function() {
                    var e = window,
                        t = e.Intercom;
                    if ('function' == typeof t) t('reattach_activator'), t('update', intercomSettings);
                    else {
                        var a = document,
                            s = function() {
                                s.c(arguments)
                            };
                        s.q = [], s.c = function(e) {
                            s.q.push(e)
                        }, e.Intercom = s;
                        var i = function() {
                            var e = a.createElement('script');
                            e.type = 'text/javascript', e.async = !0, e.src = 'https://widget.intercom.io/widget/' + l.CREDENTIALS.INTERCOM.APPLICATION_ID;
                            var t = a.getElementsByTagName('script')[0];
                            t.parentNode.insertBefore(e, t)
                        };
                        e.attachEvent ? e.attachEvent('onload', i) : e.addEventListener('load', i, !1)
                    }
                }(), window.Intercom ? (window.Intercom('boot', {
                    app_id: l.CREDENTIALS.INTERCOM.APPLICATION_ID
                }), k.info('Intercom Acquire loaded successfully')) : k.error('Intercom Acquire is not loaded'))
            }), t.$on('$stateChangeSuccess', (e, a, s, i, o) => {
                S.dismissAll(), t.fromState = i.name, t.currentState = a.name, t.fromStatePlain = i;
                const n = s.holospaceName === o.holospaceName,
                    l = t.fromState.split('.')[0] === t.currentState.split('.')[0],
                    r = f('body');
                if (!n || !l) {
                    const e = angular.element('body');
                    e.scrollTop(0)
                }
                t.isVisible && t.toggleTooltip(), r.toggleClass('body-homescreen', 'homescreen' === a.name), f(document.body).removeClass('prevent-bug-scroll-ios'), t.loadingFeedback('remove'), 1 === a.name.split('.').length && a.views.main && f('html, body').scrollTop(0), r.toggleClass('body-edit-holospace', 'edit' === a.name), r.toggleClass('bg-create-menu', 'content-creation.content-type' === a.name), r.toggleClass('body-explore', 'holospace.explore' === a.name), ('holospace' !== a.name || 'holospace.reviews' !== a.name) && r.removeClass('unclaimed-holospace'), r.toggleClass('messages-ui', 'messages' === a.name || 'messages.conversation' === a.name), r.toggleClass('body-content-creation-page', 'content-creation.publish' === a.name && 'page' === s.contentType && !s.editingSpace), r.toggleClass('body-content-creation-space', 'content-creation.publish' === a.name && 'page' === s.contentType && !!s.editingSpace), r.toggleClass('body-content-creation-channel', 'content-creation.publish' === a.name && 'channel' === s.contentType), r.toggleClass('body-content-creation-post', 'content-creation.publish' === a.name && 'post' === s.contentType), r.toggleClass('body-content-creation-product', 'content-creation.publish' === a.name && 'product' === s.contentType)
            });
            const te = 325,
                ae = te - 15,
                se = window.matchMedia('(min-width: ' + (2 * te + 20) + 'px)');
            se.addListener(j), j(se),
                function() {
                    const e = f('body');
                    e.on('focus', 'input:not("#input-search"), textarea', () => {
                        f('nav.navbar').addClass('hide-app-nav'), f('.header-mobile-top, .header-back-arrow-content, .content-creation-header, .header-fixed').addClass('position-absolute-mobile')
                    }), e.on('blur', 'input:not("#input-search"), textarea', () => {
                        f('nav.navbar').removeClass('hide-app-nav'), f('.header-mobile-top, .header-back-arrow-content, .content-creation-header, .header-fixed').removeClass('position-absolute-mobile')
                    })
                }(), u.getCurrentUserSpaces().then(() => {
                    !t.state.content.spaceId && t.primarySpace && (t.state.content.spaceId = t.primarySpace.id, t.state.content.accessLevel = 'owner')
                })
        }]), angular.module('lodash', []).factory('_', () => window._), angular.element(document).ready(() => {
            '#_=_' === window.location.hash && history.replaceState(null, document.title, window.location.pathname + window.location.search), angular.bootstrap(document, [ApplicationConfiguration.applicationModuleName], {})
        })
    }(),
    function() {
        ApplicationConfiguration.registerModule('activity')
    }(),
    function() {
        ApplicationConfiguration.registerModule('channels')
    }(),
    function() {
        ApplicationConfiguration.registerModule('content-creation')
    }(),
    function() {
        ApplicationConfiguration.registerModule('ads', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('core', ['updateMeta', 'googleplusv2', 'ngLoad', 'ngSanitize', 'ngMap', 'com.2fdevs.videogular', 'com.2fdevs.videogular.plugins.controls', 'com.2fdevs.videogular.plugins.overlayplay', 'com.2fdevs.videogular.plugins.poster', 'com.2fdevs.videogular.plugins.dash', 'ajoslin.promise-tracker', 'credit-cards', 'ui.mask', 'ngPasswordStrength']), angular.module('core').filter('sanitize', ['$sce', function(e) {
            return function(t) {
                return e.trustAsHtml(t)
            }
        }])
    }(),
    function() {
        ApplicationConfiguration.registerModule('drafts')
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ecommerce')
    }(),
    function() {
        ApplicationConfiguration.registerModule('explore', ['ngMap'])
    }(),
    function() {
        ApplicationConfiguration.registerModule('feeds', ['ngSanitize'])
    }(),
    function() {
        ApplicationConfiguration.registerModule('followers')
    }(),
    function() {
        ApplicationConfiguration.registerModule('holospace', ['infinite-scroll'])
    }(),
    function() {
        ApplicationConfiguration.registerModule('home')
    }(),
    function() {
        ApplicationConfiguration.registerModule('insights', ['chart.js'])
    }(),
    function() {
        ApplicationConfiguration.registerModule('inventory', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('items', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('landingpage')
    }(),
    function() {
        ApplicationConfiguration.registerModule('messages')
    }(),
    function() {
        ApplicationConfiguration.registerModule('messaging')
    }(),
    function() {
        ApplicationConfiguration.registerModule('notifications')
    }(),
    function() {
        ApplicationConfiguration.registerModule('onboarding', ['ngCookies'])
    }(),
    function() {
        ApplicationConfiguration.registerModule('overlay')
    }(),
    function() {
        ApplicationConfiguration.registerModule('pages', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('pixels', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('places')
    }(),
    function() {
        ApplicationConfiguration.registerModule('shop', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('posts', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('social')
    }(),
    function() {
        ApplicationConfiguration.registerModule('tiles', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('users')
    }(),
    function() {
        ApplicationConfiguration.registerModule('video-input')
    }(),
    function() {
        ApplicationConfiguration.registerModule('videos')
    }(),
    function() {
        angular.module('activity').config(['$stateProvider', '$urlRouterProvider', function(e) {
            e.state('holospace.home', {
                url: '',
                views: {
                    holotab: {
                        controller: 'ActivityController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/activity/views/activity.view.html'
                    }
                }
            }).state('holospace.home.page', {
                url: '/{page:\\d+}',
                views: {
                    holotab: {
                        controller: 'ActivityController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/activity/views/activity.view.html'
                    }
                }
            })
        }])
    }(),
    function() {
        angular.module('activity').controller('ActivityController', ['$log', '$scope', '$rootScope', '_', 'collections', 'Authentication', 'PageService', 'Meta', '$timeout', '$q', 'PagePagination', 'Prerender', '$state', 'contentCreationService', 'pixels', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g) {
            function v(e) {
                return s.flatten(e).join(' - ')
            }
            e.debug('Loading Activity Controller'), p.handleManually();
            const h = this,
                b = t.$parent;
            h.fieldTitle = 'Activity', h.pageContent = {}, h.callToAction = !1;
            let f = null,
                y = null;
            b.vm.space.location && (f = b.vm.space.location[0], y = [f.address, f.city, f.stateAbbr, f.zipCode].join(',').replace(/ /g, '+'), h.directions = 'https://www.google.com/maps?daddr=' + y);
            const w = t.$parent.vm.space,
                k = t.$parent.vm.space.id,
                S = t.$parent.vm.space.vanityUrl;
            h.showAds = s.get(w, 'Ads.home', !1);
            const C = [];
            h.spaceId = k, h.vanity = S, h.ads = t.$parent.vm.space.isAdsenabled, t.items, t.space = t.$parent.vm.space, t.hoursVisible = !1, t.formatedHours = [], t.toggleHours = function() {
                t.hoursVisible = !t.hoursVisible
            }, t.space.hours && Object.keys(t.space.hours).forEach((e) => {
                const a = t.space.hours[e];
                t.formatedHours.push({
                    day: e,
                    time: v(a)
                })
            }), t.$watchCollection('items', (e) => {
                e && (h.callToAction = !e.length)
            }), C.push(d((e) => {
                h.isMySpace = !1, b.$watch('vm.currentSpace', (e) => {
                    e && (h.ownerHasBlocked = e.ownerHasBlocked)
                }), b.$watch('vm.space', (t) => {
                    if (h.isMySpace = !o.isLoggedOut() && a.primarySpace.id === t.id, t.pixels && g.fire({
                            pixelObject: t.pixels,
                            eventType: 'ViewContent',
                            params: {
                                content_name: t.name,
                                pixelLocation: [window.location.origin, t.vanityUrl].join('/')
                            }
                        }), t.homePageId) {
                        const a = {},
                            i = '@' + t.vanityUrl;
                        a.meta = {}, a.meta.title = [s.get(t, 'meta.title') || t.name, i, 'Holonis'].join(' | '), a.meta.description = [i + ':', s.get(t, 'meta.description') || s.get(t, 'information.tagline') || ''].join(' '), a.tags = s.get(t, 'meta.tags', []), a.type = t.type, a.image = t.headerMediaUrl, a.url = u.getCurrentUrl(t.vanityUrl), l.AddDefaultMetaObject(a), e()
                    } else t.meta = t.categories && t.location && t.phoneNumber ? {
                        title: t.name + ' | ' + (t.categories[0] ? t.categories[0].title : '') + ' | ' + t.phoneNumber + ' | ' + t.location[0].city + ' | ' + t.location[0].state + ' | Holonis',
                        description: '@' + t.vanityUrl + ': ' + (t.information && t.information.tagline ? t.information.tagline : 'Find information like directions, phone numbers, reviews and social media for the ' + t.name + ' at ' + t.location[0].address + ',' + t.location[0].city + ', ' + t.location[0].stateAbbr + '. Discover more about ' + (t.categories[0] ? t.categories[0].title : '') + ' on Holonis.')
                    } : {
                        title: t.name + ' | Holonis',
                        description: '@' + t.vanityUrl + ': ' + (t.information && t.information.tagline ? t.information.tagline : 'Find information like directions, phone numbers, reviews and social media for the ' + t.name + ' on Holonis.')
                    }, l.AddDefaultMetaObject(t), e()
                })
            })), d.all(C).then(() => {
                setTimeout(p.ready, 100)
            })
        }])
    }(),
    function() {
        angular.module('activity').factory('Activity', ['$log', 'Restangular', function(e, t) {
            return {
                getActivitiesBySpaceId(e, a, s) {
                    const i = {};
                    return i.order = 'created DESC', i.where = {
                        status: 'published'
                    }, (a || 0 === a) && s && (i.skip = a, i.limit = s), t.one('spaces/' + e + '/activities').get({
                        filter: i
                    }).then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('channels').config(['$stateProvider', function(e) {
            e.state('channel', {
                abstract: !0,
                url: '',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        template: '<ui-view/>'
                    }
                }
            }).state('channel.detail', {
                url: '/:space/c/:vanityUrl',
                title: 'Channel detail',
                controllerAs: 'vm',
                controller: 'ChannelDetailController',
                templateUrl: 'public/modules/channels/views/detail.view.html'
            }).state('channel.draft', {
                url: '/:space/cd/:id',
                params: {
                    draft: !0
                },
                title: 'Channel draft',
                controllerAs: 'vm',
                controller: 'ChannelDetailController',
                templateUrl: 'public/modules/channels/views/detail.view.html'
            }).state('channel.create', {
                url: '/create/channel',
                title: 'New Channel',
                controllerAs: 'vm',
                controller: 'ChannelFormController',
                templateUrl: 'public/modules/channels/views/form.view.html',
                resolve: {
                    channel: ['userSpaces', 'ChannelService', function(e, t) {
                        return t.getOrCreate()
                    }]
                }
            }).state('channel.edit', {
                url: '/edit/channel/:id',
                params: {
                    edit: !0
                },
                title: 'Edit channel',
                controllerAs: 'vm',
                controller: 'ChannelFormController',
                templateUrl: 'public/modules/channels/views/form.view.html',
                resolve: {
                    channel: ['userSpaces', 'ChannelService', '$stateParams', function(e, t, a) {
                        return t.v1.getChannelDraftById(a.id).then((e) => (e.deck = [].concat(e.page), e))
                    }]
                }
            })
        }])
    }(),
    function() {
        angular.module('core').controller('ChannelDetailController', ['$rootScope', '$scope', '$log', '$q', '_', '$stateParams', 'ChannelService', 'holospace', 'Authentication', 'Categories', 'collections', 'Followers', '$state', '$window', '$uibModal', 'contentCreationService', 'localStorageService', '$location', 'notifyService', 'holoSaveService', 'Meta', 'Prerender', 'report', 'Content', 'TilesService', 'pixels', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v, h, b, f, y, w, k, S, C, x, T) {
            function I(e) {
                if (A.channel = e, !!A.channel) {
                    U.then((e) => {
                        A.channel.shareTile = x.normalizeItem(C.toV1(e))
                    });
                    const e = i.get(A, 'channel.space', {}),
                        a = i.get(A, 'channel.createdBy', {}),
                        s = a || e,
                        o = s._meta && s._meta.facebookPageId;
                    i.has(e, 'pixels') && T.fire({
                        pixelObject: e.pixels,
                        eventType: 'ViewContent',
                        params: {
                            content_name: A.channel.name,
                            pixelLocation: b.absUrl()
                        }
                    }), 'deactivate' === i.get(A, 'channel.space.status') ? $('body').addClass('user-deactivate') : (A.pagePopulate = !0, t.data = A.channel), !0 !== A.isDraft && (m.current.canonical = b.absUrl(), A.isFollowingChannel = i.includes(A.channelsFollowing, A.channel.id), A.toggleFollowChannel = function() {
                        n.v1.toggleFollow(A.channel, A.isFollowingChannel).then(() => {
                            A.isFollowingChannel = !A.isFollowingChannel
                        }).catch(() => {})
                    }), A.createdBySpace = a, A.isMySpace = A.isDraft || a.userId === r.currentUser(), A.isOwner = e.userId === r.currentUser(), A.landingpageHeaderInfo.holospaceDetails = e;
                    const l = i(A.channel.page).map((t) => {
                            const e = i.get(t, 'content.cover', null),
                                a = i.get(t, 'content.embedded[0].cover', i.get(t, 'content.embedded.content.cover', null)),
                                s = e || a;
                            return s ? {
                                url: s.url || s,
                                width: s.width || null,
                                height: s.height || null
                            } : void 0
                        }).sortBy(['width']).compact().value(),
                        d = i.pick(i.first(l), ['width', 'height']);
                    P.meta = {}, P.meta.title = i.get(A, 'channel.meta.title') || A.channel.name, P.meta.description = i.get(A, 'channel.meta.description') || A.channel.description, P.tags = A.channel.tags, P.type = A.channel.type, P.image = i.get(i.first(l), 'url', null), P.coverDimensions = i.isEmpty(d) ? null : d, P.url = b.$$absUrl, P.published_time = A.channel.publishDate || A.channel.created, P.modified_time = A.channel.modified, P.tag = A.channel.tags;
                    const c = o || (i.find(s.links, (e) => 'facebook' === e.name.toLowerCase()) || {
                        link: ''
                    }).link.split('/').pop();
                    i.assign(P, {
                        author: c || s.name,
                        author_name: s.name
                    }), w.setPageMetaTags(P, !!o), setTimeout(k.ready, 100)
                }
            }
            a.debug('Loading Channel Controller'), k.handleManually();
            const A = this,
                P = {};
            let U;
            o.holospaceName = o.space, A.userId = r.currentUser(), A.currentSpace = null, A.mySpace = null, A.isMySpace = !1, A.holospaceName = o.holospaceName, A.vanityUrl = o.vanityUrl, A.isDraft = o.draft, A.fieldTitle = 'Pages in Channel', A.channel = {}, A.landingpageHeaderInfo = {
                    title: A.fieldTitle,
                    type: 'channelMetrics',
                    holospaceDetails: {
                        profilePhoto: '',
                        name: '',
                        tagline: ''
                    },
                    holospaceMetrics: {
                        pages: '',
                        views: '',
                        followers: '',
                        comments: '',
                        shares: ''
                    },
                    headerOffsetTop: '60'
                }, A.landingpageHeaderInfo.goToEditPage = function() {
                    return m.go('channel.edit', {
                        id: A.channel.id
                    })
                }, A.appBackFn = function() {
                    window.history.back()
                },
                function() {
                    setTimeout(() => {
                        $('.jumpToComment').click(() => {
                            $('html, body').animate({
                                scrollTop: $('#fb-comment').offset().top
                            }, 500)
                        })
                    }, 0);
                    const t = A.isDraft ? n.v1.getChannelDraftById(o.id) : n.v1.getChannelbyVanityUrl(A.vanityUrl);
                    U = A.isDraft ? n.draft(o.id) : n.detail(A.vanityUrl), t.then(I).catch((e) => n.handleError(e)), l.getUserSpaces(A.userId).then((t) => (0 < t.length && (A.mySpace = e.primarySpace, A.channelsFollowing = A.mySpace.channelsFollowed), A.holospaceName = void 0 !== o.holospaceName && 0 < o.holospaceName.length ? o.holospaceName : A.mySpace.vanityUrl, l.getSpace(A.holospaceName))).then((e) => {
                        A.currentSpace = e, A.isMySpace = A.currentSpace.userId === A.userId
                    })
                }()
        }])
    }(),
    function() {
        angular.module('channels').controller('ChannelFormController', ['$state', 'channel', '$log', '$scope', '$rootScope', 'ChannelService', 'dsModal', 'notifyService', '_', 'MetaContentService', function(e, t, a, s, i, o, n, l, r, d) {
            function c() {
                clearTimeout(s.state.drafting)
            }
            a.debug('Loading Post Form Controller Controller'), s.data = t, s.tracker = i.promiseTracker, s.data.deck = s.data.deck || [], d.generate(s.data), s.state = {
                title: 'Channel',
                edit: e.params.edit
            }, s.params = {
                contentId: s.data.id,
                spaceId: s.data.spaceId,
                template: 'channel',
                contents: s.data.story,
                multiple: !0,
                form: 'form',
                vanity: r.find(i.userSpaces, {
                    id: s.data.spaceId
                }).vanityUrl,
                tracker: s.tracker
            }, s.header = {
                title: '',
                tracker: s.tracker,
                params: {
                    seo: {
                        hideChannels: !0
                    }
                }
            }, s.state.edit && (s.header.params.cancel = {
                label: 'Close',
                menu: {
                    draft: 'Save as draft',
                    discard: 'Discard'
                }
            }), s.publish = function() {
                const t = s.data;
                return c(), o.publish(t.id, t).then((a) => (dataLayer.push({
                    event: 'PublishChannel',
                    publish: {
                        description: t.description,
                        name: t.name,
                        spaceId: t.spaceId,
                        id: t.id
                    }
                }), e.go('channel.detail', {
                    space: a.header.space.vanityUrl,
                    vanityUrl: a.vanityUrl
                }), l.success('Channel created succesfully.'), a)).catch((e) => {
                    l.error(e.data.message || 'An error occurred. Please try again.')
                })
            }, s.delete = function() {
                const t = s.data;
                return c(), o.delete(t.id).then(() => (e.go('holospace.home'), l.success('Channel deleted successfully.'))).catch(() => l.error('Couldn\'t delete the channel.'))
            }, s.discard = function() {
                const t = s.data;
                return c(), o.discard(t.id).then(() => (e.go('holospace.home'), l.success('Changes discarded successfully.'))).catch(() => l.error('Couldn\'t discard the changes.'))
            }, s.draft = function() {
                const t = s.data;
                return c(), o.saveAsDraft(t.id, t).then((a) => (e.go('channel.draft', {
                    space: a.header.space.vanityUrl,
                    id: t.id
                }), l.success('Channel drafted successfully.'))).catch(() => l.error('Couldn\'t draft the channel.'))
            }, s.save = function() {
                return !s.tracker.active() && void(s.state.drafting && clearTimeout(s.state.drafting), s.header.title = 'Saving in drafts', s.state.drafting = setTimeout(() => {
                    const e = s.data,
                        t = o.save(e.id, e, o.DRAFT.NOTHING).then(() => {
                            s.header.title = 'Saved in drafts'
                        }).catch(() => {
                            s.header.title = 'Fail to save'
                        });
                    s.tracker.addPromise(t)
                }, 300))
            }, s.$watch('data', () => {
                s.save()
            }, !0)
        }])
    }(),
    function() {
        angular.module('channels').controller('ChannelTabController', ['$log', '$rootScope', '$scope', '_', 'collections', 'Meta', 'PagePagination', '$state', 'PageService', 'contentCreationService', 'pixels', '$location', function(e, t, a, s, i, o, n, l, r, d, c, p) {
            e.debug('Loading Channels Controller');
            const m = this,
                u = a.$parent;
            let g = {};
            m.fieldTitle = 'Channels', m.pageContent = {}, m.callToAction = !1;
            const v = a.$parent.vm.space,
                h = v.id,
                b = v.vanityUrl;
            m.showAds = s.get(v, 'Ads.channels', !1), m.spaceId = h, m.vanity = b, a.items, a.$watchCollection('items', (e) => {
                e && (m.callToAction = 1 > e.length)
            }), m.spaceId = v.id, m.init = function() {
                m.isMySpace = !1, u.$watch('vm.space', (e) => {
                    e.pixels && c.fire({
                        pixelObject: e.pixels,
                        eventType: 'ViewContent',
                        params: {
                            content_name: e.name,
                            pixelLocation: p.absUrl()
                        }
                    });
                    const t = '@' + e.vanityUrl;
                    g = {
                        meta: {
                            title: [s.get(e, 'meta.title') || e.name, t, 'Channels on Holonis'].join(' | '),
                            description: 'Discover how ' + e.name + ' organizes their posts, pages & items. See all channels created by ' + t
                        },
                        tags: s.get(e, 'meta.tags'),
                        type: e.type,
                        image: e.headerMediaUrl,
                        url: d.getCurrentUrl(e.vanityUrl) + '/channels'
                    }, o.setPageMetaTags(g)
                }), n.updatePaginationRelLinks(0)
            }, m.init()
        }])
    }(),
    function() {
        angular.module('channels').factory('ChannelService', ['$rootScope', 'DefaultContentService', '_', 'Restangular', '$timeout', function(e, t, a, s, i) {
            const o = new t('channels', {
                plain: function(e) {
                    const t = a.pick(e.body, ['description', 'name', 'story']);
                    return t.spaceId = e.header.space.id, t.type = e.type, t.id = e.id, t.meta = e.meta, t.published = e.published, t
                }
            });
            return o.addContents = function(e, t) {
                return s.all(this.route + '/' + e + '/contents').post({
                    contents: t
                }).then((e) => e.plain())
            }, o.removeContents = function(e, t) {
                return s.all(this.route + '/' + e + '/contents').customOperation('remove', '', {}, {
                    "Content-Type": 'application/json'
                }, {
                    contents: t
                }).then((e) => e.plain())
            }, o.v1 = {}, o.v1.toggleFollow = function(e, t) {
                return t ? s.all('channels/unfollow').customPUT({
                    id: e.id
                }).then((e) => e) : s.all('channels/follow').customPUT({
                    id: e.id
                }).then((e) => e)
            }, o.v1.pageView = function() {
                return i().then(() => ({
                    views: 1
                }))
            }, o.v1.getChannelbyVanityUrl = function(e) {
                return s.one('channels/' + e + '/details/normalized?version=2').get({}).then((e) => (e = e.plain(), e.page = e.contents, e.contents = void 0, e))
            }, o.v1.getChannelbyId = function(e) {
                return s.all('channels/' + e + '/normalized?version=2').get('').then((e) => (e = e.plain(), e.page = e.contents, e.contents = void 0, e))
            }, o.v1.getChannelDraftById = function(e) {
                return s.all('channels/draft/' + e + '/normalized?version=2').get('').then((e) => (e = e.plain(), e.page = e.contents, e.contents = void 0, e))
            }, o
        }])
    }(),
    function() {
        angular.module('content-creation').config(['$stateProvider', function(e) {
            e.state('create', {
                url: '/create/types',
                views: {
                    main: {
                        controller: 'ContentTypeController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/content-creation/views/content-type.view.html'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }],
                    ownsSpace: ['contentCreationService', function(e) {
                        return e.isAuthoringInOwnedSpace()
                    }]
                },
                animateClass: 'bottom-to-top'
            })
        }])
    }(),
    function() {
        angular.module('content-creation').controller('ChannelPickerController', ['$log', '$uibModalInstance', 'oldSelectedChannels', 'spaceId', function(e, t, a, s) {
            e.debug('Loading Channel Picker Controller');
            const i = this;
            i.selectedChannels = a || [], i.spaceId = s, i.done = function() {
                t.close(i.selectedChannels)
            }, i.cancel = function() {
                t.dismiss()
            }
        }])
    }(),
    function() {
        angular.module('content-creation').controller('ContentTypeController', ['$log', '$scope', 'ownsSpace', '$rootScope', 'dsTooltip', 'dsModal', 'intro', 'holospace', function(e, t, a, s, i, o, n, l) {
            e.debug('Loading Content Type Controller'), new WOW().init(), t.tracker = s.promiseTracker, t.ownsSpace = a, t.tooltipTemplate = 'public/modules/tooltips/tooltip-create.view.html', window.Intercom && window.Intercom('update'), t.header = {
                params: {
                    info: !0
                }
            }, s.$watch('state.content.spaceId', () => {
                t.state.owner = 'owner' === s.state.content.accessLevel
            }), t.isOwner = function(e) {
                e && !t.state.owner && (e.preventDefault(), e.stopPropagation())
            }, t.state = {
                owner: t.isOwner()
            }, t.showInfo = function(e) {
                return t.tooltip && !t.tooltip.destroyed ? void t.tooltip.close() : void(t.openedOptions = !0, i.create({
                    template: 'public/modules/content-creation/templates/info.template.html',
                    element: e,
                    scope: {
                        position: 'right'
                    },
                    offset: {
                        top: 36,
                        left: 43
                    },
                    arrow: {
                        right: 25
                    },
                    fixed: !0,
                    fullscreenMobile: !0
                }).then((e) => {
                    e.show(), t.tooltip = e
                }))
            };
            const r = l.getPrimarySpace();
            r.tutorials.contentCreation || o.create({
                template: 'public/modules/core/templates/modal/create-intro.template.html',
                controller: ['$scope', function(e) {
                    e.$on('ds.modal.close', () => {
                        r.tutorials.contentCreation = !0, 768 < $(window).width() ? setTimeout(n.createType, 500) : setTimeout(n.createTypeMobile, 500)
                    })
                }],
                scope: {
                    overflow: !1,
                    additionalClass: 'ds-modal-create-content',
                    noHeader: !0,
                    overlayAdditionalClass: 'ds-modal-overlay-first-time'
                }
            }).then((e) => {
                e.show()
            })
        }])
    }(),
    function() {
        angular.module('content-creation').controller('PagePickerController', ['$log', '$uibModalInstance', 'selectedPages', 'spaceId', 'holospace', 'collections', '_', function(e, t, a, s) {
            e.debug('Loading Page Picker Controller');
            const i = this;
            i.pages = [], i.spaceId = s, i.selectedPages = a, i.done = function() {
                t.close(i.selectedPages)
            }, i.cancel = function() {
                t.dismiss()
            }
        }])
    }(),
    function() {
        angular.module('core').factory('AutoSaving', ['$q', '$rootScope', function(e, t) {
            const a = t.promiseTracker;
            return {
                getTracker() {
                    return a
                }, track(e) {
                    a.addPromise(e)
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('Content', ['$log', '$sce', 'Restangular', 'collections', '_', function(e, t, a, s, i) {
            function o(e) {
                let t;
                return 'image' !== e.type && i.get(e, 'body.story') && (t = e.body.story.v2 ? e.body.story : l(e.body.story)), {
                    created: e.created,
                    description: i.get(e, 'body.description'),
                    id: e.id,
                    modified: e.modified,
                    price: i.get(e, 'body.item.price'),
                    status: e.status,
                    tags: i.get(e, 'meta.tags'),
                    title: i.get(e, 'body.name'),
                    type: e.type,
                    url: e.url,
                    vanityUrl: e.vanityUrl,
                    embedded: t,
                    source: e.source,
                    cover: i.get(e, 'cover.url'),
                    coverData: i.get(e, 'cover'),
                    mediaType: e.type
                }
            }

            function n(e) {
                let t = {};
                switch (e && e.type) {
                    case 'video':
                        t.mediaType = 'video';
                        break;
                    case 'image':
                        t.mediaType = 'image', t.source = i.get(e, 'cover.url'), t.cover = i.get(e, 'cover.url'), t.width = i.get(e, 'cover.width'), t.height = i.get(e, 'cover.height');
                        break;
                    case 'link':
                        t.cover = i.get(e, 'cover.url'), t.source = i.get(e, 'source');
                        break;
                    case 'item':
                        t = o(e), t.type = 'item', t.item = e.body && e.body.item || {}, t.item.isFree = i.get(e, 'item.free', !1);
                        break;
                    case 'page':
                        t = o(e), t.type = 'page', t.headerMediaUrl = i.get(e, 'cover.url'), t.headerMediaPosition = i.get(e, 'cover.position');
                        break;
                    case 'post':
                        t = o(e), t.type = 'post', t.subType = 'share';
                        break;
                    case 'share':
                        t = o(e), t.type = 'share', t.subType = 'share';
                        break;
                    default:
                        console.warn(`Unknown story type ${e&&e.type}`);
                }
                if (i.get(e, 'body.story'))
                    if ('image' == e.body.story.type) t.embedded = [l(e.body.story)], t.width = i.get(e, 'body.story.cover.width'), t.height = i.get(e, 'body.story.cover.height'), t.ratio = t.height && t.width ? t.height / t.width : 0.6;
                    else if ('video' == e.body.story.type) {
                    const a = {
                            created: e.body.story.created,
                            id: e.body.story.id,
                            modified: e.body.story.modified,
                            ooId: e.body.story.body.ooId,
                            ratio: i.get(e.body, 'story.cover.height') ? e.body.story.cover.height / e.body.story.cover.width : 0,
                            status: e.body.story.status,
                            tags: [],
                            thumb: i.get(e.body, 'story.cover.url'),
                            type: e.body.story.type,
                            title: e.body.story.body.name,
                            description: e.body.story.body.description,
                            views: i.get(e, 'body.story.engagement.views')
                        },
                        s = i.get(e, 'body.story.cover.width'),
                        o = i.get(e, 'body.story.cover.height'),
                        n = {
                            cover: i.get(e.body.story, 'cover.url'),
                            thumb: i.get(e.body.story, 'cover.url'),
                            id: e.body.story.id,
                            ratio: o && s ? o / s : 0.6
                        };
                    t.embedded = l(e.body.story), t.embedded.content = n, t.embedded.block = [a]
                } else if ('link' == e.body.story.type) {
                    const a = i.get(e, 'body.story.cover.width'),
                        s = i.get(e, 'body.story.cover.height'),
                        o = i.get(e, 'body.story.cover.url'),
                        n = a && s ? e.body.story.cover.height / e.body.story.cover.width : 0;
                    t.type = 'embedly', t.ratio = n, t.embedded = [{
                        embedlyData: e.body.story.body.data,
                        created: e.body.story.created,
                        mediaType: e.body.story.body.data.type,
                        modified: e.body.story.modified,
                        provider: e.body.story.body.data.provider_name,
                        source: e.body.story.source,
                        storyId: e.body.story.storyId,
                        structure: e.body.story.structure,
                        thumbnail: o,
                        type: 'embedly',
                        width: a,
                        height: s,
                        ratio: 100 * n
                    }]
                }
                return t
            }

            function l(e) {
                if ('ads' === e.type) return e;
                e.body || (e.body = {});
                const t = {
                    footer: {},
                    type: e.type
                };
                switch (e.type) {
                    case 'video':
                        {
                            t.thumb = t.thumbnail = i.get(e, 'cover.url'), t.type = 'video';
                            const a = e.cover ? e.cover.height / e.cover.width : 0.6,
                                s = {
                                    created: e.created,
                                    id: e.id,
                                    modified: e.modified,
                                    ooId: e.body.ooId,
                                    ratio: a,
                                    status: e.status,
                                    tags: [],
                                    thumb: t.thumb,
                                    type: e.type,
                                    title: e.body.name,
                                    description: e.body.description,
                                    views: i.get(e, 'engagement.views')
                                },
                                o = {
                                    cover: t.thumb,
                                    thumb: t.thumb,
                                    id: e.id,
                                    ratio: a
                                };
                            t.block = [s], t.content = o;
                            break
                        }
                    case 'link':
                        {
                            t.cover = i.get(e, 'cover.url');
                            break
                        }
                    case 'image':
                        {
                            t.type = 'media', t.mediaType = 'image', t.source = i.get(e, 'cover.url');
                            break
                        }
                    case 'channel':
                        {
                            t.type = 'channel', t.block = i.get(e, 'body.contents', []), t.contentsCount = i.get(e, 'body.contentsCount', []), t.content = {
                                title: e.body.name
                            };
                            break
                        }
                    case 'item':
                        {
                            t.item = e.body && e.body.item || {}, t.item.isFree = i.get(e, 'item.free', !1), t.type = t.item.type, t.isItem = !0;
                            const a = i.get(e, 'cover');
                            t.content = {
                                title: e.body.name,
                                description: e.body.description,
                                cover: a ? a.url : void 0,
                                coverData: a,
                                ratio: a ? a.height / a.width : -1,
                                id: e.id,
                                price: t.item.price,
                                finalPrice: t.item.finalPrice,
                                minPrice: t.item.minPrice,
                                maxPrice: t.item.maxPrice,
                                discount: t.item.discount,
                                isFree: t.item.free,
                                totalAvailable: t.item.totalAvailable
                            };
                            break
                        }
                    case 'page':
                        {
                            const a = i.get(e, 'cover');
                            t.content = {
                                title: e.body.name,
                                description: e.body.description,
                                cover: a ? a.url : void 0,
                                coverData: a,
                                ratio: a ? a.height / a.width : -1,
                                id: e.id
                            };
                            break
                        }
                    case 'share':
                        {
                            t.content = {
                                embedded: [n(i.get(e, 'body.story'))]
                            }, t.type = 'post', t.subType = 'share';
                            break
                        }
                }
                if ((e.body && i.size(e.body.story) && 'video' != e.type && 'tile' == e.structure || 'post' == e.type) && (t.block = [], t.block.push(n(e)), t.content = t.block[0], t.embedSource = i.get(e, 'body.story.source')), t.cover = i.get(e, 'cover'), t.created = e.created, t.modified = e.modified, t.published = e.published, t.provider = e.provider && e.provider.toLowerCase() || '', t.engagement = e.engagement, t.header = {
                        author: i.get(e, 'header.space', {}),
                        sharedBy: i.get(e, 'header.sharedBy', []),
                        authoredBy: i.get(e, 'header.createdBy', {})
                    }, t.id = e.id, t.space = i.get(e, 'header.space'), t.status = e.status, t.tags = i.get(e, 'meta.tags'), t.url = e.url, t.vanityUrl = e.vanityUrl, t.isFollowing = e.isFollowing || !1, t.shareType = i.get(e, 'shareType', ''), 'dynamic' === t.shareType) {
                    let a = t.header.sharedBy,
                        s = e.body.story.engagement.shares - t.header.sharedBy.length;
                    if (2 < t.header.sharedBy.length && 0 < s && (a = t.header.sharedBy.slice(0, 2), s++), 0 < s) {
                        const e = 1 < s ? ' others' : ' other';
                        a.push({
                            name: s + e,
                            multiple: !0
                        })
                    }
                    for (let e = 0; e < a.length - 1; ++e) a[e].separator = e === a.length - 2 ? ' and ' : ', ';
                    t.header.sharedByParsed = a, t.header.sharedType = e.body.story.type, t.header.sharedId = e.body.story.id
                }
                return t
            }
            return {
                toV1(e) {
                    const t = l(e);
                    return t.v2 = e, t
                }, getPageContent(e) {
                    return a.all('contents/' + e.id).get('').then((e) => s.collectify(e.plain()))
                }, upsertContent(e, t, i) {
                    i = i || 'page', e.title = e.title || '', e.content = e.content || '', e.updated = new Date, e[i + 'Id'] = t;
                    const o = e.id ? a.all('contents/' + e.id).customPUT(e) : a.all('contents').post(e);
                    return o.then((t) => s.collectify(t.plain()).map((t) => (t.ctx = {
                        beforeDeleteContentBlock: null,
                        afterDeleteContentBlock: null
                    }, t.vanityUrl = e.vanityUrl, t)))
                }, updatePositions(e, t) {
                    return a.all('contents/positions').customPUT(Object.assign(t || {}, {
                        positions: e
                    }))
                }, removeContentById(e) {
                    return a.one('contents', e).remove().then((e) => e)
                }
            }
        }])
    }(),
    function() {
        angular.module('content-creation').factory('DefaultContentService', ['$rootScope', 'Restangular', 'DraftStorageService', '$q', '_', '$state', 'notifyService', function(e, t, a, s, i, o, n) {
            const l = function(r, d) {
                const c = this;
                this.route = ['v2', r].join('/'), this.DRAFT = a.ACTIONS, this.FORMAT = {}, this.FORMAT.PLAIN = 'plain', this.FORMAT.SAVE = 'save', this.formats = i.assign({}, l.DefaultFormats, d), this.getFormated = function(e, t) {
                    const a = this.formats[t];
                    return a ? a(e) : e
                }, this.create = function(s) {
                    s = s || {};
                    const o = e.primarySpace.id,
                        n = t.one(this.route).post(null, i.assign({
                            spaceId: o
                        }, s)).then((e) => {
                            const t = e.plain();
                            return a.set(s.type || r, t.id), c.getFormated(t, c.FORMAT.PLAIN)
                        });
                    return e.promiseTracker.addPromise(n), n
                }, this.getOrCreate = function(e) {
                    e = e || {};
                    const t = a.get(e.type || r);
                    return t ? this.draft(t, this.FORMAT.PLAIN).catch(() => c.create(e)) : this.create(e)
                }, this.delete = function(e, s) {
                    return a.unset(s || r, e), t.all(this.route + '/' + e).remove()
                }, this.deleteDraft = function(e, s) {
                    return a.unset(s || r, e), t.all(this.route + '/' + e + '/draft').remove()
                }, this.discard = function(e, s) {
                    return a.unset(s || r, e), t.all(this.route + '/' + e + '/discard').customPUT()
                }, this.save = function(s, i, o, n) {
                    return o === this.DRAFT.SET && a.set(n || r, s), o === this.DRAFT.UNSET && a.unset(n || r, s), i = this.getFormated(i, this.FORMAT.SAVE), i.spaceId = e.state.content.spaceId, t.all(this.route + '/' + s + '/save').customPUT(i)
                }, this.saveAsDraft = function(s, i, o) {
                    return a.unset(o || r, s), i = this.getFormated(i, this.FORMAT.SAVE), i.spaceId = e.state.content.spaceId, t.all(this.route + '/' + s + '/draft').customPUT(i)
                }, this.publish = function(s, i, o) {
                    return a.unset(o || r, s), i = this.getFormated(i, this.FORMAT.SAVE), i.spaceId = e.state.content.spaceId, t.all(this.route + '/' + s + '/publish').customPUT(i)
                }, this.detail = function(e) {
                    return t.one(this.route + '/' + e).get().then((e) => e.plain())
                }, this.draft = function(e, a) {
                    return t.one(this.route + '/draft/' + e).get().then((e) => c.getFormated(e.plain(), a))
                }, this.handleError = function(e) {
                    switch (e.status) {
                        case 404:
                            o.go('404', void 0, {
                                location: 'replace'
                            });
                            break;
                        case 303:
                            o.go('holospace.home', {
                                holospaceName: e.data.redirect
                            }, {
                                location: 'replace'
                            });
                            break;
                        case 500:
                            n.error('An error occurred, please try again.');
                            break;
                        default:
                    }
                    return s.reject()
                }
            };
            return l.DefaultFormats = {}, l.DefaultFormats.plain = function(e) {
                return e
            }, l.DefaultFormats.save = function(e) {
                return e
            }, l
        }])
    }(),
    function() {
        angular.module('content-creation').factory('DraftStorageService', ['$rootScope', 'localStorageService', function(e, t) {
            function a(t) {
                const a = e.primarySpace.id;
                return ['draft', a, t].join('.')
            }
            const s = {};
            return s.ACTIONS = {}, s.ACTIONS.SET = 'set', s.ACTIONS.GET = 'get', s.ACTIONS.UNSET = 'unset', s.ACTIONS.NOTHING = void 0, s.set = function(e, s) {
                const i = a(e);
                t.set(i, s)
            }, s.unset = function(e, i) {
                const o = a(e);
                return s.get(e) === i && void t.set(o, null)
            }, s.get = function(e) {
                const s = a(e);
                return t.get(s)
            }, s
        }])
    }(),
    function() {
        angular.module('content-creation').factory('MetaContentService', ['$rootScope', '_', function() {
            function e() {
                return {}
            }
            return {
                generate: function(t) {
                    t.meta || (t.meta = e(t))
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('identityService', ['$log', '$q', '$rootScope', 'FacebookService', '_', function(e, t, a, s, i) {
            function o() {
                Error.apply(this, arguments), this.name = this.constructor.name
            }
            return o.prototype = Object.create(Error.prototype, {
                constructor: {
                    value: o
                }
            }), {
                getFacebookIdentities: function(e) {
                    const a = i.find(e, {
                        provider: 'facebook',
                        active: !0
                    });
                    return a ? s.getUserPages().then((e) => [{
                        id: e.id,
                        picture: 'http://graph.facebook.com/' + e.id + '/picture?type=large&width=720&height=720',
                        provider: 'facebook',
                        displayName: a.displayName || e.first_name + ' ' + e.last_name,
                        type: 'profile'
                    }].concat(e.accounts.data.map((e) => ({
                        id: e.id,
                        picture: 'http://graph.facebook.com/' + e.id + '/picture?type=large&width=720&height=720',
                        provider: 'facebook',
                        displayName: e.name,
                        type: 'page'
                    })))).catch((e) => 'OAuthException' === e.type && i.includes([190, 2500], e.code) ? t.reject(new o('STORED CREDENTIAL IS INVALID')) : t.reject(e)) : t.resolve([])
                },
                getTwitterIdentities: function(e) {
                    return t.resolve(i.filter(e, {
                        provider: 'twitter',
                        active: !0
                    }))
                },
                InvalidTokenError: o
            }
        }])
    }(),
    function() {
        angular.module('ads').directive('ad', ['$log', '$window', 'dfp', 'ad', 'constants', function(e, t, a, s, i) {
            function o(e, a) {
                const s = e.slotTargeting;
                if (!t.googletag.pubadsReady) {
                    const i = () => {
                        n(s, a), t.removeEventListener('dfp.prepare.ready', i)
                    };
                    return e.$on('$destroy', () => {
                        t.removeEventListener('dfp.prepare.ready', i)
                    }), t.addEventListener('dfp.prepare.ready', i)
                }
                n(s, a)
            }

            function n(e, o) {
                const n = t.staticAds[o];
                if (!n) return void console.error(`DFP - slot '${o}' not found`);
                const l = {
                    slot: n,
                    targeting: e || {}
                };
                a.setTargeting(l), s.refreshBid({
                    labels: [o],
                    slot: l.slot,
                    slotName: o,
                    timeout: i.ADS.PREBID.TIMEOUT
                })
            }
            return {
                restrict: 'A',
                scope: {
                    slotTargeting: '=?'
                },
                link(e, t, a) {
                    const s = a.id;
                    s && o(e, s)
                }
            }
        }])
    }(),
    function() {
        angular.module('ads').directive('adStory', ['uuid', '$log', '$rootScope', '_', 'constants', 'dfp', 'view', 'AdRefresher', 'ad', 'windowSizeService', function(e, t, a, s, i, o, n, l, r) {
            return t.debug('Loading AdStoryDirective Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=',
                    story: '@?'
                },
                link: function(t, d) {
                    let c = null;
                    t.Math = window.Math, t.$on('$destroy', () => {
                        const e = d.closest('.tile-group-wrapper');
                        e.data('isotope') && e.isotope('remove', d[0]).isotope('layout'), c && (c.destroy(), c = null)
                    });
                    s.set(t.data, 'type', 'ads'), t.adIndex = e.v4();
                    const p = i.ADS.DETAIL.pagesStory;
                    t.adsSlotName = p.slotName.replace('%NUM%', t.adIndex);
                    const m = {
                        slotName: t.adsSlotName,
                        adUnitPath: p.adUnitPath,
                        adSize: p.size,
                        adSizeMapping: p.adSizeMapping,
                        targeting: ((e) => {
                            const i = s.get(t, '$parent.slotTargeting', {});
                            return Object.assign(i, {
                                space_id: s.get(a, 'state.content.spaceId'),
                                ad_slot: e
                            })
                        })(t.adIndex)
                    };
                    c = new l({
                        displayEvents: ['holonis_scroll', 'holonis_resize', 'ad_story_page_loaded'],
                        adInfo: m,
                        $scope: t,
                        element: d,
                        dfp: o,
                        bidderTimeout: i.ADS.PREBID.TIMEOUT,
                        adService: r,
                        bids: i.ADS.PREBID.bids,
                        view: n,
                        pixelsBeforeDisplay: i.ADS.PIXELS_BEFORE_DISPLAY,
                        fullyVisible: i.ADS.FULLY_VISIBLE_TO_DISPLAY
                    }), a.$broadcast('ad_story_page_loaded')
                },
                template: '<div class="ad-unit-center"><div id="{{ ::adsSlotName }}"></div></div>'
            }
        }])
    }(),
    function() {
        const e = [1, 2],
            t = 'fluid',
            a = {
                VERSION: '2.6.143',
                DEBUG: !1,
                AUTO_SAVE_DELAY: 1e3,
                TYPING_DEBOUNCE_DELAY: 200,
                PURCHASE_MAX_QUANTITY: 9999,
                keyCode: {
                    BACKSPACE: 8,
                    COMMA: 188,
                    DELETE: 46,
                    DOWN: 40,
                    END: 35,
                    ENTER: 13,
                    ESCAPE: 27,
                    HOME: 36,
                    LEFT: 37,
                    PAGE_DOWN: 34,
                    PAGE_UP: 33,
                    PERIOD: 190,
                    RIGHT: 39,
                    SPACE: 32,
                    TAB: 9,
                    UP: 38,
                    CTRL: 17,
                    CMD: 91,
                    V: 86
                },
                DFP: {
                    RANGES: {
                        VIEWS: [10000, 50000, 100000, 500000, 1000000],
                        SCORE: [250, 1000, 5000, 20000, 100000, 1000000]
                    }
                },
                OVERFLOW_CLASSNAME: '.ds-modal-open',
                MODAL_OVERFLOW_CLASSNAME: '.ds-modal-container',
                HEADER_OVERFLOW_CLASSNAME: '.width--overflow',
                USER_HAS_SEEN_FACEBOOK_DIALOG_WARNING: 'facebook.profile.modal.seen',
                VALIDATION: {
                    EMAIL_PATTERN: /^[-a-z0-9~!$%^&*_=+}{'?]+(\.[-a-z0-9~!$%^&*_=+}{'?]+)*@[a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]{2,})+$/i
                },
                DEFAULT_DATE_TIME: 1011970,
                CREDENTIALS: {
                    RECAPTCHA: {
                        PUBLIC_KEY: '6LdQH2QUAAAAAC-T0J2v6F0YZoBs_IjDb0qR2c0m'
                    },
                    GOOGLE: {
                        CLIENT_ID: '490577541076-v37shbl16ue9jvgelqnicp63ar40dvsl.apps.googleusercontent.com',
                        API_KEY: 'jso7my9ZW35Kjl3ALWmHdxrf',
                        MAP_API_KEY: 'AIzaSyC22X3hHRQsOrtuecALyxSM4EpNL4FQP7Q'
                    },
                    FACEBOOK: {
                        APP_ID: '449824688450320'
                    },
                    FILESTACK: function() {
                        return 'An3dWtRnyRZqwaVljsSg7z'
                    }(),
                    ALGOLIA: {
                        APPLICATION_ID: '52CNZXXMJN',
                        API_KEY: 'c5cc2cf9022eaaf3d046be89d1eb4ac0'
                    },
                    STRIPE: {
                        PUBLISHABLE_KEY: 'pk_live_YvtzJj3q8ju2lga4yMJZYcnr'
                    },
                    GETSTREAM: {
                        APPLICATION_ID: '28777',
                        API_KEY: 'e9qjgkea9ry5'
                    },
                    GOOGLE_ANALYTICS: {
                        APPLICATION_ID: 'UA-49849690-1'
                    },
                    INTERCOM: {
                        APPLICATION_ID: 'p9py7vyl'
                    },
                    BRANCHIO: {
                        KEY: 'key_live_nhwzZLtdOjykj1s3f9UQSopbAqmlGWxu'
                    }
                },
                VIDEO: {
                    DURATION: {
                        MAX_DURATION_NORMAL_USER: 180,
                        MAX_DURATION_VERIFIED_USER: 900
                    }
                },
                SELECTED: {
                    VIDEO_SERVICE_TAB: 'videoService.tab.selected',
                    MINIMUM_OFFER_PRICE_CHECKBOX: 'minimum.price.checked',
                    MAKE_OFFER_CHECKBOX: 'make.offer.checked'
                },
                GOOGLE_MAP: {
                    URL: 'https://maps.googleapis.com/maps/api/js?key=AIzaSyC22X3hHRQsOrtuecALyxSM4EpNL4FQP7Q&libraries=places'
                },
                COMMERCE: {
                    URL: 'https://api.holonis.com'
                },
                INSIGHTS: {
                    URL: 'https://api.holonis.com'
                },
                CDN: {
                    URL: 'https://holocdn.com'
                },
                PAYPAL: {
                    ENV: 'production'
                },
                ANALYTICS: {
                    URL: 'https://api.holonis.com',
                    BATCH_INTERVAL: 4e3
                },
                ANALYTICS_DETAIL: {
                    videoEngagement: {
                        watermarkTimeDuration: 10,
                        watermarkPercentTimeDuration: 50
                    }
                },
                THROTTLE: {
                    RESIZE: 150,
                    SCROLL: 150
                },
                ADS: {
                    COMMENTS: {
                        POSITION: 15,
                        MIN_LENGTH: 15
                    },
                    PREBID: {
                        TIMEOUT: 1e3,
                        bids: [{
                            bidder: 'adkernel',
                            params: {
                                zoneId: '59703',
                                host: 'cpm.152media.com'
                            }
                        }, {
                            bidder: 'appnexus',
                            params: {
                                placementId: '13677014'
                            }
                        }, {
                            bidder: 'conversant',
                            params: {
                                site_id: '119315'
                            }
                        }, {
                            bidder: 'rubicon',
                            params: {
                                accountId: '14288',
                                siteId: '189902',
                                zoneId: '943458'
                            }
                        }, {
                            bidder: 'gumgum',
                            params: {
                                inSlot: 'b245ab12'
                            }
                        }, {
                            bidder: 'justpremium',
                            params: {
                                zone: 57562
                            }
                        }, {
                            bidder: 'sharethrough',
                            labelAll: ['mobile-web'],
                            params: {
                                pkey: 'aFYQArje2J8ZMVSQ7TFKzJvv'
                            }
                        }, {
                            bidder: 'sharethrough',
                            labelAll: ['display'],
                            params: {
                                pkey: '8WMPnvTz3AxXfCiFW3xK2eA1'
                            }
                        }, {
                            bidder: 'onedisplay',
                            labelAll: ['display', '300x250'],
                            params: {
                                placement: '4819239',
                                network: '11448.1'
                            }
                        }, {
                            bidder: 'onedisplay',
                            labelAll: ['mobile-web', '300x250'],
                            params: {
                                placement: '4820101',
                                network: '11448.1'
                            }
                        }, {
                            bidder: 'onedisplay',
                            labelAll: ['display', 'div-gpt-ad-holonis_main_banner'],
                            params: {
                                placement: '4819240',
                                network: '11448.1'
                            }
                        }, {
                            bidder: 'onedisplay',
                            labelAll: ['display', 'div-gpt-ad-holonis_main_banner'],
                            params: {
                                placement: '4819241',
                                network: '11448.1'
                            }
                        }, {
                            bidder: 'onedisplay',
                            labelAll: ['display', 'div-gpt-ad-holonis_main_banner'],
                            params: {
                                placement: '4819239',
                                network: '11448.1'
                            }
                        }, {
                            bidder: 'aol',
                            labelAll: ['mobile-web', 'div-gpt-ad-holonis_main_banner'],
                            params: {
                                placement: '4820101',
                                network: '11448.1'
                            }
                        }, {
                            bidder: 'aol',
                            labelAll: ['mobile-web', 'div-gpt-ad-holonis_main_banner'],
                            params: {
                                placement: '4820102',
                                network: '11448.1'
                            }
                        }, {
                            bidder: 'onedisplay',
                            labelAll: ['display', 'div-gpt-ad-holonis_sticky_1'],
                            params: {
                                placement: '4943139',
                                network: '11448.1'
                            }
                        }],
                        bidderSettings: {
                            rubicon: {
                                bidCpmAdjustment(e) {
                                    return 0.85 * e
                                }
                            }
                        }
                    },
                    STATIC_SLOTS: [{
                        adUnitPath: '/188641797/holonis_main_2',
                        adSize: [],
                        adSizeMapping: [{
                            viewport: [1024, 0],
                            adSize: [
                                [970, 250],
                                [970, 90],
                                [728, 90], e
                            ]
                        }, {
                            viewport: [768, 0],
                            adSize: [
                                [728, 90], e
                            ]
                        }, {
                            viewport: [320, 0],
                            adSize: [
                                [300, 250],
                                [320, 100],
                                [320, 50], e, t
                            ]
                        }],
                        slotName: 'div-gpt-ad-holonis_main_banner'
                    }, {
                        adUnitPath: '/188641797/just_premium',
                        adSize: [1, 1],
                        slotName: 'div-gpt-ad-holonis_just_premium'
                    }, {
                        adUnitPath: '/188641797/holonis_sticky_1',
                        adSize: [],
                        adSizeMapping: [{
                            viewport: [1500, 768],
                            adSize: [
                                [300, 600],
                                [160, 600]
                            ]
                        }, {
                            viewport: [1220, 768],
                            adSize: [
                                [160, 600]
                            ]
                        }, {
                            viewport: [1024, 768],
                            adSize: []
                        }],
                        slotName: 'div-gpt-ad-holonis_sticky_1'
                    }],
                    SCROLL_INTERVAL: 6,
                    SCROLL_START: 3,
                    PIXELS_BEFORE_DISPLAY: 600,
                    FULLY_VISIBLE_TO_DISPLAY: !1,
                    DETAIL: {
                        activities: {
                            adUnitPath: '/188641797/holospace_homepage_feed_1',
                            size: [
                                [300, 250], e, t
                            ],
                            slotName: 'div-gpt-ad-holospace_homepage_feed_%NUM%'
                        },
                        channels: {
                            adUnitPath: '/188641797/holospace_channels_feed_1',
                            size: [
                                [300, 250], e, t
                            ],
                            slotName: 'div-gpt-ad-holospace_channels_feed_%NUM%'
                        },
                        feeds: {
                            adUnitPath: '/188641797/holospace_main_feed_1',
                            size: [
                                [300, 250], e, t
                            ],
                            slotName: 'div-gpt-ad-holospace_feeds_feed_%NUM%'
                        },
                        posts: {
                            adUnitPath: '/188641797/holospace_posts_feed_1',
                            size: [
                                [300, 250], e, t
                            ],
                            slotName: 'div-gpt-ad-holospace_posts_feed_%NUM%'
                        },
                        pages: {
                            adUnitPath: '/188641797/holospace_pages_feed_1',
                            size: [
                                [300, 250], e, t
                            ],
                            slotName: 'div-gpt-ad-holospace_pages_feed_%NUM%'
                        },
                        pagesStory: {
                            adUnitPath: '/188641797/holospace_pages_details_story_1',
                            size: [],
                            adSizeMapping: [{
                                viewport: [768, 0],
                                adSize: [
                                    [728, 90], e, t
                                ]
                            }, {
                                viewport: [320, 0],
                                adSize: [
                                    [300, 250], e, t
                                ]
                            }, {
                                viewport: [1024, 0],
                                adSize: [
                                    [728, 90], e, t
                                ]
                            }],
                            slotName: 'div-gpt-ad-holospace_pages_details_story_%NUM%'
                        },
                        search: {
                            adUnitPath: '/188641797/holospace_search_feed_1',
                            size: [
                                [300, 250], e, t
                            ],
                            slotName: 'div-gpt-ad-holospace_search_feed_%NUM%'
                        },
                        commentsHeader: {
                            adUnitPath: '/188641797/comments',
                            size: [728, 90],
                            slotName: 'div-gpt-ad-comments_%NUM%'
                        },
                        commentsHeaderSmall: {
                            adUnitPath: '/188641797/comments',
                            size: [320, 50],
                            slotName: 'div-gpt-ad-comments_%NUM%'
                        },
                        comments: {
                            adUnitPath: '/188641797/comments',
                            size: [
                                [300, 250], t
                            ],
                            slotName: 'div-gpt-ad-comments_%NUM%'
                        }
                    }
                }
            };
        'undefined' != typeof angular && angular.module('core').constant('constants', a), 'object' == typeof module && module.exports && (module.exports = a)
    }(),
    function() {
        angular.module('core').config(['$stateProvider', '$urlRouterProvider', function(e, t) {
            t.otherwise('/'), t.when('/search', 'search/'), e.state('search', {
                url: '/search/:searchString',
                title: 'Search',
                params: {
                    tab: null
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'SearchController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/core/views/search.view.html'
                    }
                }
            }).state('404', {
                url: '/404',
                location: !1,
                views: {
                    main: {
                        controller: 'errorController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/users/views/authentication/errors/404.html'
                    }
                }
            }).state('redirect', {
                url: '/redirect/paypal',
                views: {
                    main: {
                        templateUrl: 'public/modules/core/templates/redirect-loader.template.html'
                    }
                }
            })
        }])
    }(), angular.module('core').config(['tagsInputConfigProvider', function(e) {
        e.setDefaults('tagsInput', {
            placeholder: ''
        })
    }]), (() => {
        angular.module('core').config(['uibDatepickerConfig', 'uibDatepickerPopupConfig', function(e, t) {
            t.showButtonBar = !1, e.showWeeks = !1, t.datepickerPopupTemplateUrl = 'public/modules/core/temp.templates/datepicker.template.html'
        }]).run(['$templateCache', function(e) {
            e.put('template/datepicker/popup.html', void 0)
        }])
    })(),
    function() {
        angular.module('core').controller('FeedModalController', ['$log', '$scope', '$sce', '$uibModalInstance', 'cardItem', 'cardLink', function(e, t, a, s, i) {
            e.debug('Loading FeedModalController Controller');
            const o = $(window),
                n = Math.min(o.width(), 600);
            t.card = i, t.mediaType = null, t.media = null, t.card.hasIframe = !1, t.message = '', t.provider = null, t.loaded = !1, t.card.content.source = t.card.content.source || t.card.content.thumb, t.card.content && t.card.content.source && (t.card.content.secureSource = a.trustAsResourceUrl(t.card.content.source)), t.card.content.height = t.card.content && t.card.content.ratio ? 600 * t.card.content.ratio : 338, t.card.content.embedded && t.card.content.embedded.length && t.card.content.embedded[0].embedlyData && (t.card.content.height = 600 * (t.card.content.embedded[0].embedlyData.height / t.card.content.embedded[0].embedlyData.width), 0 > t.card.content.ratio && (console.warn('negative ratio'), t.card.content.height = t.card.content.embedded[0].embedlyData.height + 20)), t.card.content.embedded && t.card.content.embedded.length && t.card.content.embedded[0].embedlyData && ('YouTube' == t.card.content.embedded[0].embedlyData.provider_name || 'SoundCloud' == t.card.content.embedded[0].embedlyData.provider_name || 'Vimeo' == t.card.content.embedded[0].embedlyData.provider_name || 'Twitter' == t.card.content.embedded[0].embedlyData.provider_name || 'Flickr' == t.card.content.embedded[0].embedlyData.provider_name || t.card.content.embedded[0].mediaType && 'video' == t.card.content.embedded[0].mediaType && 'Facebook' == t.card.content.embedded[0].embedlyData.provider_name || 'Instagram' == t.card.content.embedded[0].embedlyData.provider_name) && (t.provider = t.card.content.embedded[0].embedlyData.provider_name, t.card.hasIframe = !0, t.card.iframe = t.card.content.embedded[0].embedlyData.html, t.card.content.height = 600 * (t.card.content.embedded[0].embedlyData.height / t.card.content.embedded[0].embedlyData.width)), t.card.content.embedded && t.card.content.embedded.length && t.card.content.embedded[0].mediaType && 'photo' == t.card.content.embedded[0].mediaType && (t.card.content.type = 'image', t.card.content.source = t.card.content.embedded[0].embedlyData && t.card.content.embedded[0].embedlyData.url ? t.card.content.embedded[0].embedlyData.url : t.card.content.embedded[0].thumb);
            const l = t.card.provider;
            switch (t.provider = t.provider || l[0].toUpperCase() + l.slice(1), t.videogular = {
                autoPlay: !1,
                theme: 'bower_components/videogular-themes-default/videogular.css'
            }, t.closeModal = function() {
                s.dismiss()
            }, i.provider) {
                case 'instagram':
                    break;
                case 'facebook':
                    break;
                case 'twitter':
                    break;
                case 'stream.io':
            }
            t.message = t.card.content.description || '', t.filterParam = i.provider, e.debug(t.card), t.loading = function() {
                t.loaded = !0
            }, t.$watch('loaded', (e, a) => {
                e === a || console.warn('loaded', t.loaded)
            })
        }])
    }(),
    function() {
        angular.module('core').controller('HeaderController', ['$scope', '$rootScope', '$log', '$state', '$timeout', '$window', 'intro', 'Authentication', 'Search', 'users', 'holospace', '_', '$stateParams', 'localStorageService', 'Notifications', 'dsModal', 'Followers', '$uibModal', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v, h, b) {
            function f() {
                return 768 >= $(window).width()
            }
            a.debug('Loading Header Controller'), 'ontouchstart' in window ? $('html').addClass('touch') : $(window).on('scroll', function() {
                const e = $(window).scrollTop(),
                    t = $(window).height();
                e <= t && $('.holo-radial-gradient, .new-holospace-cover').css({
                    transform: 'translateY(-' + e / 2 + 'px)',
                    opacity: 1 - e / t
                })
            }), e.isMessageDetail = 'messages.conversation' === s.current.name;
            const y = this,
                w = 'guest.product.url',
                k = 'leadsModalSessionDismissed',
                S = sessionStorage.getItem(k),
                C = () => {
                    i(() => {
                        const e = document.getElementById('mainNavbarMobile');
                        e.style.bottom = 748 <= o.innerHeight ? 'auto' : 0
                    })
                };
            f() && function() {
                return 635 <= $(window).height()
            }() && (angular.element(o).on('resize', C), e.$on('$destroy', () => {
                angular.element(o).off('resize', C)
            })), y.userId = l.currentUser(), y.swapSpace = c.swapSpace, y.gotoCreationTipOpen = function() {
                setTimeout(() => {
                    $('#modal-tips-create-post-step').addClass('opened')
                }, 0)
            }, y.openLinkInNewWindow = (e) => {
                o.open(e, '_blank')
            }, y.cartCount = p.range(4), sessionStorage.getItem(w) && (window.location.href = sessionStorage.getItem(w), sessionStorage.removeItem(w)), y.isLoggedOut = l.isLoggedOut(), y.logout = d.logout, y.goSearch = function(e) {
                s.go('search', {
                    searchString: e
                }, {
                    reload: !0
                })
            }, y.searchString = m.searchString, y.searchEnter = function(e) {
                13 === e.which && (dataLayer.push({
                    eventCategory: 'Native Search Func.',
                    event: 'Search',
                    eventAction: 'Search',
                    eventLabel: y.searchString
                }), e.target.blur(), y.goSearch(y.searchString))
            }, e.trendingDataLoading = !0, e.historyLoading = !0, e.historyVisible = !0, y.editProfile = () => {
                s.go('edit', {
                    holospaceName: y.primarySpace.vanityUrl
                })
            }, y.openFollowModal = function(t) {
                dataLayer.push({
                    eventCategory: 'Modal Visit',
                    event: 'Follower Modal Visit',
                    eventAction: 'Follow',
                    eventLabel: y.primarySpace.vanityUrl
                }), h.openFollowModal(e.data, t)
            }, y.deleteAccount = () => {
                y.closeMenu();
                b.open({
                    templateUrl: 'public/modules/core/templates/delete-account-modal.template.html',
                    controller: ['$uibModalInstance', '$scope', function(e, t) {
                        t.confirm = function() {
                            Intercom('showNewMessage', 'I\u2019d like to delete my account please.'), e.close()
                        }, t.cancel = function() {
                            e.dismiss()
                        }
                    }],
                    controllerAs: 'vm',
                    size: 'lg',
                    windowClass: 'confirm-modal holonis-modal delete-account'
                })
            }, y.goTosettingsTab = (t) => {
                s.go('settings', {
                    holospaceName: y.primarySpace.vanityUrl
                }).then(i(() => {
                    e.$apply(), $(`#${t}`).click()
                }, 0))
            }, y.focusSearch = function() {
                r.history().then((t) => {
                    e.history = t.history, e.historyLoading = !1, e.historyVisible = !!e.history.length, $('.drop-menu-trending .loaderInline.historyLoading').hide()
                }), $('.drop-menu-trending').show(), $('span.algolia-autocomplete').addClass('hide-appNav in-overlay-search')
            }, y.blurSearch = function() {
                $('.drop-menu-trending').hide(), $('span.algolia-autocomplete').removeClass('hide-appNav in-overlay-search')
            }, y.dropNotification = !1, y.dropNotificationAction = function(a, s) {
                e.$evalAsync(() => {
                    y.dropNotification = a;
                    const e = document.querySelector('body');
                    e.style.overflow = y.dropNotification ? 'hidden' : '', a || t.$emit('activity:close'), 'function' == typeof s && s()
                })
            }, y.toggleDropNotification = function() {
                y.dropNotificationAction(!y.dropNotification, () => {
                    y.dropNotification && (dataLayer.push({
                        eventCategory: 'Notifications',
                        event: 'Notifications Accessed',
                        eventAction: 'Accessed',
                        eventLabel: t.primarySpace.vanityUrl
                    }), t.$emit('activity:open'), setTimeout(() => {
                        $('.close-notification').one('click', y.dropNotificationAction.bind(y, !1))
                    }, 0))
                })
            }, $(window).on('keydown', (t) => {
                27 === t.keyCode && y.dropNotification && $(window).trigger('click')
            }), e.showSearchMobile = !1, y.closeSearchMobile = function(t) {
                e.showSearchMobile = !1, $('.item.search').removeClass('active'), $(t.target).closest('.item:not(.notifications)').addClass('active'), $('body').removeClass('prevent-bug-scroll-ios')
            }, y.toggleSearchMobile = function(t) {
                e.showSearchMobile = !e.showSearchMobile, e.showSearchMobile ? ($('.item').removeClass('active'), $(t.target).closest('.item').addClass('active')) : ($(t.target).closest('.item').removeClass('active'), 'feeds' === s.current.name ? $('.item.brand').addClass('active') : 'notifications' === s.current.name && $('.item.notifications').addClass('active')), $('body').toggleClass('prevent-bug-scroll-ios', e.showSearchMobile)
            }, y.updateAutocomplete = function() {
                return {
                    source(e, t) {
                        t([])
                    }
                }
            }, y.shareThisHolospace = () => {
                v.create({
                    template: 'public/modules/core/templates/sharethis.modal.template.html',
                    controller: 'ShareThisController',
                    title: 'Share this Holospace',
                    close: !0,
                    scope: {
                        minWidth: 360,
                        params: {
                            type: e.primarySpace.type,
                            space: {
                                vanityUrl: e.primarySpace.vanityUrl
                            }
                        }
                    }
                }).then((e) => {
                    e.show()
                })
            }, t.notificationCloseListener && t.notificationCloseListener(), t.notificationCloseListener = t.$on('close:activity', () => {
                y.dropNotificationAction()
            }), e.$on('autocomplete:selected', (e, t) => {
                y.searchString = t.name, y.goSearch(y.searchString)
            }), y.goToHolospaceHome = function() {
                s.go('holospace.home', {
                    holospaceName: y.primarySpace.vanityUrl
                })
            }, y.isActive = function(e) {
                if (e === y.item) return !0
            }, y.showLogin = function() {
                return l.showLoginPrompt()
            }, y.logout = function() {
                dataLayer.push({
                    eventCategory: 'Log Out',
                    event: 'Logout',
                    eventAction: 'Log Out',
                    eventLabel: y.primarySpace.vanityUrl
                }), window.Intercom && window.Intercom('shutdown'), d.logout()
            }, y.appBackFn = function() {
                window.history.back()
            }, y.closeMenu = function() {
                y.isNavMenuOpen = !1, y.isNavMenuOpenMobile = !1, t.isOverflow = !1
            }, y.submit = function(e) {
                p.includes(['drafts', 'settings', 'likes', 'videos', 'saved', 'transactions', 'apps', 'messages', 'feed', 'ecommerce.buyers.orders', 'ecommerce.sellers.orders'], e) && s.go(e, {
                    holospaceName: y.primarySpace.vanityUrl
                })
            }, y.chatWithUs = function() {
                Intercom('show')
            };
            const x = c.getPrimarySpace();
            y.showNavigationIntro = () => {
                y.isNavMenuOpen = !1, y.isNavMenuOpenMobile = !1, setTimeout(f() ? n.navigationMobile : n.navigation, 500), document.body.scrollTop = document.documentElement.scrollTop = 0
            }, y.showEditHolospaceIntro = async() => {
                const e = x.tutorials.editHolospace;
                await s.go('edit', {
                    holospaceName: y.primarySpace.vanityUrl
                }), e && setTimeout(f() ? n.editHolospaceMobile : n.editHolospace, 500)
            }, e.toggleSideMenu = (e) => {
                y.isMenuOpen = !!e
            }, y.showCreateIntro = async() => {
                const e = x.tutorials.contentCreation;
                await s.go('create'), e && setTimeout(f() ? n.createTypeMobile : n.createType, 500)
            }, y.showMenuIntro = () => {
                const e = f();
                n.menu(e)
            }, c.getCurrentUserSpaces().then(() => {
                y.primarySpace = t.primarySpace, y.userSpaces = t.userSpaces, t.primarySpace && t.primarySpace.email && window.Intercom && window.Intercom('update', {
                    user_id: t.primarySpace.userId
                })
            }), t.isLoggedOut() || g.getUnseenCount().then((e) => {
                t.unseenNotifications = e
            }), e.overlays = {
                invite: 'public/modules/overlay/views/invite.view.html'
            }, m.invited && u.set('invited', m.invited);
            const T = u.get('invited');
            T && i(() => {
                l.isLoggedOut() ? l.showLoginPrompt() : (u.remove('invited'), t.invitedTeamId = T, $('[overlay="invite"]').click())
            }), e.$watch('vm.isNavMenuOpen', (e, t) => {
                e === t || ($('body').css('overflow', e ? 'hidden' : ''), e && !x.tutorials.optionsMenu && (x.tutorials.optionsMenu = !0, setTimeout(n.menu, 500)))
            }), e.$watch('vm.isNavMenuOpenMobile', (e, t) => {
                e === t || ($('body').css('overflow', e ? 'hidden' : ''), e && !x.tutorials.optionsMenu && (x.tutorials.optionsMenu = !0, setTimeout(n.menuMobile, 500)))
            }), y.mobileNotification = () => {
                v.create({
                    template: 'public/modules/core/views/header-notifications.view.html',
                    controller: '',
                    allowClose: !0,
                    scope: {
                        overflow: !0,
                        noHeader: !0,
                        full: 'ds-modal-full',
                        additionalClass: 'drop-notifications notifications create-button animated fadeIn'
                    }
                }).then((e) => {
                    t.$emit('activity:open'), e.show()
                })
            }, y.loggedOutUserAction = () => v.create({
                template: 'public/modules/core/templates/modal/signup-leads.template.html',
                controller: ['$scope', function(e) {
                    e.$on('ds.modal.close', () => {
                        y.leadsModalSessionDismissed = !0, sessionStorage.setItem(k, y.leadsModalSessionDismissed)
                    })
                }],
                allowClose: !0,
                scope: {
                    overflow: !0,
                    noHeader: !0,
                    additionalClass: 'ds-modal-signup-leads create-button animated fadeInUp',
                    overlayAdditionalClass: 'ds-modal-signup-leades-overlay',
                    containerAdditionalClass: 'ds-modal-container-leads'
                }
            }).then((e) => {
                e.show()
            }), !y.isLoggedOut || S || t.signupLeadTimeout || (t.signupLeadTimeout = setTimeout(() => {
                v.create({
                    template: 'public/modules/core/templates/modal/signup-leads.template.html',
                    controller: ['$scope', function(e) {
                        e.$on('ds.modal.close', () => {
                            y.leadsModalSessionDismissed = !0, sessionStorage.setItem(k, y.leadsModalSessionDismissed)
                        })
                    }],
                    allowClose: !0,
                    scope: {
                        overflow: !0,
                        noHeader: !0,
                        additionalClass: 'ds-modal-signup-leads create-button animated fadeInUp',
                        overlayAdditionalClass: 'ds-modal-signup-leades-overlay',
                        containerAdditionalClass: 'ds-modal-container-leads'
                    }
                }).then((e) => {
                    e.show()
                })
            }, 1.2e5))
        }])
    }(),
    function() {
        angular.module('core').controller('MetaDataController', ['$scope', function(e) {
            e.$on('pageMetaData', (t, a) => {
                e.metaTags = a
            })
        }])
    }(),
    function() {
        angular.module('core').controller('SearchController', ['$state', '$stateParams', '$log', '_', 'Meta', function(e, t, a, s, i) {
            a.debug('Loading Search Controller');
            const o = this;
            o.searchResults = [], o.searchLoading = !1, o.tabsArray = [{
                title: 'All',
                url: 'public/modules/holospace/views/all-search.html'
            }, {
                type: 'item',
                title: 'Shop',
                url: 'public/modules/holospace/views/item-search.html'
            }, {
                type: 'space',
                title: 'Holospaces',
                url: 'public/modules/holospace/views/space-search.html'
            }, {
                type: 'post',
                title: 'Posts',
                url: 'public/modules/holospace/views/posts-search.html'
            }, {
                type: 'page',
                title: 'Pages',
                url: 'public/modules/holospace/views/pages-search.html'
            }, {
                type: 'channel',
                title: 'Channels',
                url: 'public/modules/holospace/views/channel-search.html'
            }], o.items = [], o.status = '', o.lastSearchString = '', o.query = {
                query: t.searchString
            }, o.active = s.get(s.find(o.tabsArray, (t) => t.type === e.params.tab), 'url');
            const n = {
                meta: {
                    title: 'Search results for ' + t.searchString + ' | Holonis',
                    description: 'search ' + t.searchString
                },
                tags: ['Search', t.searchString],
                type: 'search',
                url: ''
            };
            i.setPageMetaTags(n)
        }])
    }(),
    function() {
        angular.module('core').controller('ShareThisController', ['$rootScope', '$scope', '$location', function(e, t) {
            const a = 60,
                s = _.get(t.params, 'type'),
                i = _.get(t.params, 'space.vanityUrl'),
                o = `https://${window.location.host}/${i}`;
            switch (s) {
                case 'post':
                    t.shareTitle = `Holonis | @${i} | ${t.params.data.body.description.substring(0,a)}`;
                    break;
                case 'page':
                case 'item':
                case 'channel':
                    t.shareTitle = `Holonis | @${i} | ${t.params.data.body.name.substring(0,a)}`;
                    break;
                case 'space':
                    t.shareTitle = `Holonis | @${i}`;
                    break;
                default:
            }
            t.permalink = _.get(t.params, 'data.url') || o, t.cancel = function() {
                t.close()
            }, dataLayer.push({
                eventCategory: `${s} Action`,
                event: `Shared a ${s}`,
                eventAction: 'Share',
                eventLabel: i
            })
        }])
    }(),
    function() {
        angular.module('core').controller('signupController', ['$state', 'OnboardingService', 'Authentication', function(e, t, a) {
            return a.isLoggedOut() ? void t.showLogin({
                fromController: !0
            }) : e.go('holospace.home', void 0, {
                location: 'replace'
            })
        }])
    }(),
    function() {
        angular.module('core').controller('TempController', ['$scope', '$log', function(e) {
            this;
            e.followers = [{
                id: 1,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Jane Smith',
                likes: '12.2k',
                selected: 1,
                followedOn: 'Mar 5, 2016'
            }, {
                id: 1,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Jim Switzer',
                likes: '8.7k',
                selected: 1,
                followedOn: 'Feb 21, 2016'
            }, {
                id: 1,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Robert Kellogg',
                likes: '3.6k',
                selected: 0,
                followedOn: 'Feb 20, 2016'
            }, {
                id: 1,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Sharon Webb',
                likes: '1.2k',
                selected: 1,
                followedOn: 'Feb 16, 2016'
            }, {
                id: 1,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Susan Stromm',
                likes: '11.9k',
                selected: 0,
                followedOn: 'Feb 16, 2016'
            }, {
                id: 1,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Ken Cole',
                likes: '10.3k',
                selected: 0,
                followedOn: 'Feb 3, 2016'
            }, {
                id: 1,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Robert Chen',
                likes: '14.5k',
                selected: 1,
                followedOn: 'Feb 1, 2016'
            }, {
                id: 1,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Mukesh Sharma',
                likes: '22.7k',
                selected: 1,
                followedOn: 'Jan 19, 2016'
            }, {
                id: 1,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Deepa Reddy',
                likes: '2.2k',
                selected: 1,
                followedOn: 'Jan 19, 2016'
            }], e.activeaccounts = [{
                id: 2,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Donut Bar',
                likes: '2.2k',
                selected: 1,
                followedOn: 'Jan 19, 2016'
            }, {
                id: 2,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Holonis',
                likes: '2.2k',
                selected: 1,
                followedOn: 'Jan 19, 2016'
            }, {
                id: 2,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Holoshop',
                likes: '2.2k',
                selected: 1,
                followedOn: 'Jan 19, 2016'
            }, {
                id: 2,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Jake Mensky',
                likes: '2.2k',
                selected: 1,
                followedOn: 'Jan 19, 2016'
            }], e.referrals = [{
                id: 3,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Deepa Reddy',
                via: 'Facebook',
                joined: 'Jan 17, 2015',
                credits: 5
            }, {
                id: 3,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Robert Chen',
                via: 'Instagram',
                joined: 'Feb 17, 2016',
                credits: 3
            }, {
                id: 3,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Willow Zhen',
                via: 'Facebook',
                joined: 'Apr 03, 2015',
                credits: 6
            }, {
                id: 3,
                profilePhoto: 'http://lorempixel.com/40/40/business',
                name: 'Bob Wilson',
                via: 'LinkedIn',
                joined: 'Nov 22, 2015',
                credits: 5
            }]
        }])
    }(),
    function() {
        angular.module('core').filter('abbreviateNumber', [function() {
            const e = 1;
            return function(t) {
                return 'undefined' == typeof t || null == t ? '' : (t = parseFloat(t), 1E9 <= t ? (t / 1E9).toFixed(e).replace(/\.0$/, '') + 'b' : 1E6 <= t ? (t / 1E6).toFixed(e).replace(/\.0$/, '') + 'm' : 1E3 <= t ? (t / 1E3).toFixed(e).replace(/\.0$/, '') + 'k' : isNaN(t) ? '' : t)
            }
        }])
    }(), angular.module('core').filter('capitalize', () => function(e) {
        return e && e.charAt(0).toUpperCase() + e.substr(1).toLowerCase()
    }),
    function() {
        angular.module('core').filter('cut', function() {
            return function(e, t, a, s) {
                if (!e) return '';
                if (a = parseInt(a, 10), !a) return e;
                if (e.length <= a) return e;
                if (e = e.substr(0, a), t) {
                    let t = e.lastIndexOf(' '); - 1 != t && (('.' == e.charAt(t - 1) || ',' == e.charAt(t - 1)) && (t -= 1), e = e.substr(0, t))
                }
                return e + (void 0 == s ? ' \u2026' : s)
            }
        })
    }(), angular.module('core').filter('escapeHTML', ['_', function() {
        return function(e) {
            return e && e.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')
        }
    }]),
    function() {
        angular.module('core').filter('exif', ['$rootScope', 'jquery', 'constants', 'uri', function(e, t, a, s) {
            return function(e) {
                if (!e) return e;
                e = s.resolve(e);
                const t = 'rotate=deg:exif/',
                    i = /^https?:\/\/(?:cdn\.filepicker\.io\/api\/file|process\.fs\.holonis\.com)\/(.*)/.exec(e);
                return 'https://process.fs.holonis.com/' + (i ? t + i[1] : a.CREDENTIALS.FILESTACK + '/' + t + e)
            }
        }])
    }(),
    function() {
        angular.module('core').filter('generateLinks', ['$sce', function(e) {
            return function(t, a) {
                let s = '?q=$1';
                'instagram' === a ? s = 'https://www.instagram.com/explore/tags/$1/' : 'facebook' === a ? s = 'https://www.facebook.com/hashtag/$1' : 'twitter' === a ? s = 'https://twitter.com/hashtag/$1?src=hash' : void 0;
                let i = /((https?:\/\/)([A-z0-9-._]+)(\/[A-z0-9-_]+)*(\?([A-z0-9-_]+(=[A-z0-9-_]*)?&?)*)?)/gi;
                return t = t.replace(i, '<a target=\'_blank\' href=\'$1\' class=\'feed-message-link\'>$1</a>'), i = /#([A-zÀ-ú0-9-._]+)/gi, t = t.replace(i, '<a target=\'_blank\' href=\'' + s + '\' class=\'feed-message-link\'>#$1</a>'), e.trustAsHtml(t)
            }
        }])
    }(), angular.module('core').filter('millisecondsToHours', ['moment', millisecondsToHours]);

function millisecondsToHours(e) {
    return function(t) {
        const a = e.duration(t),
            s = new Date(1e3 * (1e-3 * a)).toISOString().substr(11, 8);
        let i;
        const o = s.split(':');
        return 3 == o.length && 0 == o[0] ? (i = o.shift(), i = o.join(':')) : i = s, i
    }
}
angular.module('core').filter('millisecondsToMinutes', [millisecondsToMinutes]);

function millisecondsToMinutes() {
    return function(e) {
        return Math.floor(Math.round((e || 0) / 1e3) / 60)
    }
}(function() {
    angular.module('core').filter('notInArray', ['$filter', function(e) {
        return function(t, a, s) {
            return e('filter')(t, (e) => a && a.length ? !a.some((t) => e[s] === t[s]) : !0)
        }
    }])
})(),
function() {
    angular.module('core').filter('pluralize', [function() {
        return function(e, t, a) {
            const s = [e, 1 === parseInt(e) ? t : a || t + 's'];
            return s.join(' ')
        }
    }])
}(),
function() {
    angular.module('core').filter('processImage', ['_', function() {
        return function(e, t, a) {
            if (!e) return e;
            if (!e.settings) return e.url || e;
            if (!t) throw new Error('Width is a required parameter.');
            let s;
            return s = a ? `resize=w:${t},h:${t},fit:crop` : `resize=w:${t}`, 'https://process.fs.holonis.com' + e.settings.replace('{resize}', s)
        }
    }])
}(),
function() {
    angular.module('core').filter('processImageURL', ['$rootScope', 'jquery', 'constants', 'uri', '_', function(e, t, a, s, i) {
        return console.warn('Holonis: `processImageURL` filter is deprecated. Please use the `processImage` filter instead.'),
            function(e, o, n, l) {
                if (!e || i.startsWith(e, 'https://localhost') || i.startsWith(e, 'http://localhost') || i.startsWith(e, 'data:')) return e;
                e = s.resolve(e);
                let r = !1,
                    d;
                if ('string' == typeof o) {
                    const a = t(o);
                    if (!a.length) return console.warn('processImageURL filter: selector did not match any elements:', o), e;
                    if (d = a.width() * (l || 1), !d) return console.warn('processImageURL filter: could not compute the width from the element matched by:', o), e
                } else if ('number' == typeof o) {
                    if (0 >= o) return console.warn('processImageURL filter: `width` should be > 0. Received:', o), e;
                    d = o
                } else if (null == o) d = t(window).width();
                else if (!1 === o) r = !0;
                else return console.warn('processImageURL filter: `width` parameter should be a selector string, positive number, null or undefined. Received:', o), e;
                d = Math.ceil(d * 1);
                const c = r ? '' : 'resize=w:' + d + (n ? ',h:' + d + ',fit:crop' : '') + '/quality=value:70/',
                    p = 'rotate=deg:exif/',
                    m = /^https?:\/\/(?:cdn\.filestackcontent\.com|cdn\.filepicker\.io\/api\/file|process\.fs\.holonis\.com)\/(\w+)/.exec(e);
                return 'https://process.fs.holonis.com/' + (m ? c + p + m[1] : a.CREDENTIALS.FILESTACK + '/' + c + p + e)
            }
    }])
}(),
function() {
    angular.module('core').filter('trusted', ['$sce', function(e) {
        return function(t) {
            return e.trustAsResourceUrl(t)
        }
    }])
}(), angular.module('core').directive('abbreviation', () => ({
        require: 'ngModel',
        link(e, t, a, s) {
            function i(e) {
                return 'undefined' == typeof e || null == e ? '' : e.toFixed ? 1E9 <= e ? (e / 1E9).toFixed(o).replace(/\.0$/, '') + 'B' : 1E6 <= e ? (e / 1E6).toFixed(o).replace(/\.0$/, '') + 'M' : 1E3 <= e ? (e / 1E3).toFixed(o).replace(/\.0$/, '') + 'K' : isNaN(e) ? '' : e : e
            }
            const o = 0;
            s.$parsers.push((e) => i(e)), s.$formatters.push((e) => i(e))
        }
    })),
    function() {
        function e(e, t, a) {
            return {
                restrict: 'A',
                link(s, i) {
                    function o() {
                        c && c.one('transitionend webkitTransitionEnd oTransitionEnd', function() {
                            d = !1, $(this).remove(), $(window).off('click', o)
                        }).removeClass('active')
                    }

                    function n() {
                        const e = i[0].getBoundingClientRect(),
                            t = e.top + window.scrollY,
                            a = e.bottom + window.scrollY,
                            o = s.actionSheetPosition.split('-');
                        switch (c.addClass(s.actionSheetPosition), o[0]) {
                            case 'left':
                                c.css('left', e.left);
                                break;
                            case 'right':
                                c.css('left', e.right);
                                break;
                            case 'top':
                                c.css('top', t);
                                break;
                            case 'bottom':
                                c.css('top', a);
                        }
                        switch (o[1]) {
                            case 'top':
                                c.css('top', t);
                                break;
                            case 'bottom':
                                c.css('top', a);
                                break;
                            case 'left':
                                c.css('left', e.left);
                                break;
                            case 'right':
                                c.css('left', e.right);
                                break;
                            case 'center':
                                ('left' === o[0] || 'right' === o[0]) && c.css('top', (a - t) / 2 + t), ('top' === o[0] || 'bottom' === o[0]) && c.css('left', (e.right - e.left) / 2 + e.left);
                        }
                    }
                    const l = $('body'),
                        r = e('public/modules/core/templates/action-sheet.template.html');
                    let d = !1,
                        c;
                    i.on('click', function() {
                        return d ? void o() : void r.then((e) => {
                            c = t(e)(s), l.append(c), a(() => {
                                d = !0, c.addClass('active'), s.actionSheetClasses && c.addClass(s.actionSheetClasses), s.actionSheetPosition && n(), $(window).on('click', o)
                            }, 150)
                        })
                    }), l.on('click', '.as-overlay', o), $(window).on('resize', o).on('keydown', (t) => {
                        27 === t.keyCode && d && o()
                    })
                },
                scope: {
                    actionSheet: '=',
                    actionSheetPosition: '@',
                    actionSheetClasses: '@',
                    actionSheetLabel: '@'
                }
            }
        }
        e.$inject = ['$templateRequest', '$compile', '$timeout'], angular.module('core').directive('actionSheet', e), e.$inject = ['$templateRequest', '$compile', '$timeout']
    }(), angular.module('core').directive('actionSubmenuDropdown', [function() {
        function e(e) {
            e.searchText = ''
        }
        return e.$inject = ['$scope'], {
            restrict: 'E',
            scope: {
                vm: '=controller',
                hasSearch: '=search',
                multiple: '=',
                placeholderText: '@',
                callback: '=?'
            },
            templateUrl: 'public/modules/core/templates/action-submenu-dropdown.template.html',
            controller: e,
            transclude: !0,
            replace: !0
        }
    }]), angular.module('core').directive('actionSubmenuItem', ['$window', '$document', function(e, t) {
        return {
            restrict: 'E',
            scope: {
                label: '@'
            },
            templateUrl: 'public/modules/core/templates/action-submenu-item.template.html',
            link: function(e, a) {
                e.isOpen = !1;
                const s = a.find('.submenu-item-content');
                e.toggle = function(a) {
                    return s.has(a.target).length || s.is(a.target) ? void a.stopPropagation() : void(e.isOpen = !e.isOpen, e.isOpen ? setTimeout(() => {
                        t.one('click.actionSubmenu', () => {
                            e.$apply(() => {
                                e.isOpen = !1
                            })
                        })
                    }, 0) : t.off('click.actionSubmenu'))
                }
            },
            transclude: !0,
            replace: !0
        }
    }]), angular.module('core').directive('action', [function() {
        function e(e) {
            e.isOpen = !1, e.toggle = function() {
                e.openedTab = e.isOpen() ? null : e.$id, $('body').toggleClass('prevent-scrolling', e.isOpen())
            }, e.isOpen = function() {
                return e.openedTab === e.$id
            }
        }
        return e.$inject = ['$scope'], {
            restrict: 'E',
            scope: {
                openedTab: '=',
                label: '@',
                icon: '@'
            },
            templateUrl: 'public/modules/core/templates/action.template.html',
            controller: e,
            replace: !0,
            transclude: !0
        }
    }]), angular.module('core').directive('actionsGroup', [function() {
        function e(e) {
            e.openedTab = null
        }
        return e.$inject = ['$scope'], {
            restrict: 'E',
            templateUrl: 'public/modules/core/templates/actions-group.template.html',
            controller: e,
            transclude: !0,
            replace: !0
        }
    }]), angular.module('core').directive('addthisToolbox', [function() {
        return {
            restrict: 'A',
            transclude: !0,
            replace: !0,
            template: '<div ng-transclude></div>',
            link(e, t) {
                addthis.init(), addthis.toolbox($(t).get())
            }
        }
    }]), angular.module('core').directive('asyncCard', ['$compile', function(e) {
        return {
            restrict: 'E',
            template: '<div class="async-card"></div>',
            link(t, a) {
                e('<card card="card" disable-actions="disableActions" ng-if="card"></card>')(t).appendTo(a)
            },
            replace: !0
        }
    }]), angular.module('core').directive('holonisAutofocus', ['$rootScope', function() {
        return {
            restrict: 'A',
            link(e, t) {
                function a() {
                    t.focus()
                }
                e.$on('holonisAutofocus.refocus', a), a()
            }
        }
    }]), angular.module('app').directive('autosave', ['debounce', function(e) {
        return {
            restrict: 'A',
            scope: {
                update: '=ngAutoUpdate',
                text: '=ngModel',
                model: '=ngData',
                wait: '=ngWait',
                disabled: '=ngAutosaveDisabled'
            },
            link(t) {
                const a = e(t.update, null == t.wait ? 2e3 : t.wait);
                t.$watch('text', (e, s) => {
                    t.disabled || e === s || a(t.model, e)
                })
            }
        }
    }]), angular.module('core').directive('backArrow', ['$window', '$rootScope', '$state', function(e, t, a) {
        return {
            restrict: 'A',
            link(s, i) {
                i.on('click', () => {
                    'content-creation.publish' === t.fromState ? a.go('holospace.home', {
                        holospaceName: t.primarySpace.vanityUrl
                    }) : e.history.back()
                })
            }
        }
    }]), angular.module('core').directive('buy', ['$rootScope', '$log', 'CheckoutService', function(e, t, a) {
        return {
            restrict: 'E',
            scope: {
                tile: '=',
                params: '=',
                disabled: '=?',
                onCheckout: '=?',
                onClose: '=?'
            },
            controller: [function() {
                t.debug('Loading Buy Directive');
                const s = this;
                s.checkout = function() {
                    const e = {
                        action: s.action,
                        params: s.params,
                        onClose: s.onClose
                    };
                    return s.onCheckout ? _.isFunction(s.onCheckout) && s.onCheckout() ? a.checkout(s.tile, e) : void 0 : a.checkout(s.tile, e)
                }, e.checkout || (e.checkout = s.checkout)
            }],
            controllerAs: 'vm',
            bindToController: !0,
            templateUrl: 'public/modules/core/templates/buy.template.html'
        }
    }]), angular.module('core').directive('cardEmbeddedPage', [function() {
        return {
            restrict: 'A',
            templateUrl: 'public/modules/core/templates/card-embedded-page.template.html',
            link() {},
            replace: !0
        }
    }]), angular.module('core').directive('cardEmbeddedPost', [function() {
        return {
            restrict: 'A',
            templateUrl: 'public/modules/core/templates/card-embedded-post.template.html',
            link() {},
            replace: !0
        }
    }]), angular.module('core').directive('cardEmbeddedProduct', [function() {
        return {
            restrict: 'A',
            templateUrl: 'public/modules/core/templates/card-embedded-product.template.html',
            link(e) {
                e.stripeAppearance = {
                    buyText: e.$parent.card.price,
                    buyTextFree: 'Free',
                    buttonClass: 'btn-md-width'
                }
            },
            replace: !0
        }
    }]), angular.module('core').directive('cardEmbeddedVideo', ['$sce', 'Videos', function(e, t) {
        return {
            restrict: 'A',
            templateUrl: 'public/modules/core/templates/card-embedded-video.template.html',
            link(a) {
                function s() {
                    return t.publishVideo(a.card.id, {
                        title: a.card.title,
                        description: a.card.description
                    })
                }
                a.card.sources = a.card.sources ? Object.keys(a.card.sources).map((t) => {
                    const s = a.card.sources[t];
                    return {
                        location: e.trustAsResourceUrl(s.location),
                        mime: s.mime
                    }
                }) : [], a.$watch('[card.title, card.description]', function() {
                    i && clearTimeout(i), i = setTimeout(s, 1e3)
                });
                let i
            },
            replace: !0
        }
    }]), angular.module('core').directive('cardFeed', ['$sce', '$state', 'Open', '$uibModal', '_', function(e, t, a, s, i) {
        return {
            restrict: 'A',
            templateUrl: 'public/modules/core/templates/card-feed.template.html',
            link(o, n) {
                o.modal = {
                        data: o.card,
                        config: {
                            sources: [{
                                src: e.trustAsResourceUrl('http://static.videogular.com/assets/videos/videogular.mp4'),
                                type: 'video/mp4'
                            }, {
                                src: e.trustAsResourceUrl('http://static.videogular.com/assets/videos/videogular.webm'),
                                type: 'video/webm'
                            }, {
                                src: e.trustAsResourceUrl('http://static.videogular.com/assets/videos/videogular.ogg'),
                                type: 'video/ogg'
                            }],
                            tracks: [{
                                src: 'http://www.videogular.com/assets/subs/pale-blue-dot.vtt',
                                kind: 'subtitles',
                                srclang: 'en',
                                label: 'English',
                                default: ''
                            }],
                            theme: 'bower_components/videogular-themes-default/videogular.css',
                            plugins: {
                                poster: 'http://www.videogular.com/assets/images/videogular.png'
                            }
                        }
                    }, o.imageLoaded = !1, o.onImageLoaded = function() {
                        o.imageLoaded = !0
                    }, o.openTaggedProfile = function(e, s) {
                        const i = o.$parent.card;
                        let n;
                        if (i) {
                            const e = i.storyObjects[s];
                            if ('twitter' == i.provider) return;
                            if (e && e.id) return n = 'http://www.facebook.com/' + e.id, void a.external(n)
                        }
                        e.stopPropagation();
                        const l = o.card;
                        t.go('holospace.home', {
                            holospaceName: l.normalized.user.vanityUrl
                        })
                    },
                    function() {
                        'channel' === o.card.normalized.objectType && (o.hasGallery = o.card.target_object, 0 < o.hasGallery.page.length && n.closest('.isotope-wrap').one('layoutComplete', () => {
                            setTimeout(() => {
                                n.find('.channel-pages-gallery').swiper({
                                    slidesPerView: 'auto',
                                    paginationType: 'bullets',
                                    pagination: n.find('.swiper-pagination'),
                                    paginationClickable: !0
                                })
                            }, 0)
                        })), 'facebook' === o.card.normalized.provider && o.card.story && (o.story = o.card.story, o.storyTags = o.card.story_tags, o.storyObjects = [], i.forEach(o.storyTags, (e) => {
                            o.storyObjects.push({
                                name: e.name,
                                id: e.id
                            }), o.fbProfile = 'https://www.facebook.com/' + e.id, o.story = o.story.replace(new RegExp('(' + e.name + ')', 'i'), '<a href=\'' + o.fbProfile + '\' target=\'_blank\'>$1<a/>')
                        }), o.card.storyObjects = o.storyObjects)
                    }(), o.hasLink = 'holonis' === o.card.normalized.provider, o.openLink = function(e) {
                        const a = o.$parent.card;
                        if (a) {
                            const e = a.normalized.embed || (a.actions ? a.actions[0].link : null) || (a.target_object && a.target_object.contents ? a.target_object.contents[0].source : null);
                            if (e) return void s.open({
                                animation: !1,
                                templateUrl: 'public/modules/core/templates/feedmodal.view.html',
                                controller: 'FeedModalController',
                                controllerAs: 'vm',
                                resolve: {
                                    cardItem() {
                                        return a
                                    }, cardLink() {
                                        return e
                                    }
                                },
                                windowClass: 'holo-feed-modal'
                            })
                        }
                        if (!o.hasLink) return;
                        e.stopPropagation();
                        const i = o.card;
                        let n = null;
                        'page' === i.normalized.objectType ? n = 'landingpage' : 'product' === i.normalized.objectType ? n = 'landingpage' : 'channel' === i.normalized.objectType && (n = 'channel'), n && t.go(n, {
                            holospaceName: i.normalized.user.vanityUrl,
                            vanityUrl: i.target_object.url
                        })
                    }, o.openProfile = function(e) {
                        const s = o.$parent.card;
                        let i, n;
                        if (s) {
                            if ('twitter' == s.provider && s.user && s.user.screen_name) return n = 'http://twitter.com/' + s.user.screen_name, void a.external(n);
                            if (s.normalized.embed) return i = s.normalized.embed.replace(/posts.*/, ''), void a.external(i)
                        }
                        e.stopPropagation();
                        const l = o.card;
                        t.go('holospace.home', {
                            holospaceName: l.normalized.user.vanityUrl
                        })
                    }
            },
            replace: !0
        }
    }]), angular.module('core').directive('cardPreloader', [function() {
        return {
            restrict: 'A',
            templateUrl: 'public/modules/core/templates/card-preloader.template.html',
            replace: !0
        }
    }]), angular.module('core').directive('card', ['$rootScope', function(e) {
        return {
            restrict: 'E',
            scope: {
                card: '=',
                disableActions: '=?'
            },
            templateUrl: 'public/modules/core/templates/card.template.html',
            link(t) {
                t.deck = t.$parent.$parent.deck, t.cardWidth = e.cardWidth
            },
            replace: !0
        }
    }]), angular.module('core').directive('tabs', ['$window', '$document', 'jquery', '_', function(e, t, a, s) {
        function i(e) {
            e.tabs = e.array, e.currentTab = e.active || s.head(e.tabs).url, e.onClickTab = function(t, s) {
                e.currentTab = t.url;
                const i = t.title;
                a('.dropSettingsMenuTitle').text(i), e.dropSettings = !1, e.dontToggleModalClass || a('body').removeClass('modal-open'), e.onTabChange && e.onTabChange(t);
                const o = a(s.target).position().left;
                a('.tabs-wrap').animate({
                    scrollLeft: o
                }, 500)
            }, e.dropSettings = !1, e.dropSettingsFn = function() {
                e.dontToggleModalClass || a('body').toggleClass('modal-open'), e.dropSettings = !e.dropSettings, a('#tabs .holo-tabs').toggleClass('dropdownSettingsMenu', e.dropSettings)
            }, e.isActiveTab = function(t) {
                return t === e.currentTab
            }, e.appBackFn = function() {
                window.history.back()
            }
        }
        return i.$inject = ['$scope'], {
            scope: {
                spaceId: '=',
                array: '=',
                onTabChange: '=?',
                dropSettingsFn: '=?',
                dontToggleModalClass: '=?',
                alwaysFixed: '=?',
                active: '=?'
            },
            restrict: 'E',
            transclude: !0,
            templateUrl: 'public/modules/core/templates/page-tabs.template.html',
            controller: i
        }
    }]),
    function() {
        angular.module('core').directive('contentCreationActions', [function() {
            return {
                restrict: 'AE',
                templateUrl: 'public/modules/core/templates/content-creator-actions.template.html',
                link(e, t, a) {
                    e.position = a.position, e.thisScope = e, e.activeButtonSet = !!a.position
                }
            }
        }])
    }(),
    function() {
        angular.module('core').directive('contentCreationIntro', ['$log', '_', function(e) {
            return {
                restrict: 'EA',
                scope: {
                    contentData: '=',
                    contentType: '=',
                    placeholderName: '=',
                    placeholderDescription: '=',
                    form: '=',
                    save: '&'
                },
                controller: [function() {
                    e.debug('Loading Content Creation Intro Controller');
                    const t = this;
                    t.autoSaveWait = 0, t.saveTitle = function(e, a) {
                        t.save({
                            existing: e,
                            key: 'name',
                            data: a
                        })
                    }, t.saveDescription = function(e, a) {
                        t.save({
                            existing: e,
                            key: 'description',
                            data: a
                        })
                    }
                }],
                controllerAs: 'vm',
                bindToController: !0,
                templateUrl: 'public/modules/core/templates/content-creation-intro.template.html'
            }
        }])
    }(), angular.module('core').directive('contentCreator', ['$uibModal', '$log', '$timeout', 'medium', 'media', '$rootScope', 'Content', 'localStorageService', '_', 'jquery', '$state', '$compile', 'AutoSaving', 'constants', 'debounce', 'dsVideoUploaderUtils', '$q', 'promiseTracker', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v, h) {
        return {
            restrict: 'E',
            scope: {
                contentBlocks: '=?',
                spaceId: '=',
                pageId: '=?',
                form: '=?',
                template: '=?',
                deckCollection: '=?',
                embedMultiple: '=?',
                single: '=?',
                isActive: '=?',
                vanity: '=?',
                addOpened: '=?',
                textActive: '=?',
                bucket: '=',
                disableDeleteContent: '='
            },
            controller: ['$scope', function(p) {
                function v(a, s) {
                    const i = e.open({
                        templateUrl: 'public/modules/core/templates/confirmation-delete.template.html',
                        controller: ['$uibModalInstance', function(e) {
                            const t = this;
                            t.confirmDelete = function() {
                                e.close(t.isHideConfirmDelete)
                            }, t.cancel = function() {
                                e.dismiss()
                            }
                        }],
                        controllerAs: 'vm',
                        size: 'sm',
                        windowClass: 'confirm-modal'
                    });
                    i.result.then((e) => {
                        b(a, s), e && l.set('isHideConfirmDelete', !0)
                    }, () => {
                        t.info('Modal dismissed at: ' + new Date)
                    })
                }

                function b(e, a) {
                    k();
                    const s = w.contentBlocks[e].ctx && w.contentBlocks[e].ctx.beforeDeleteContentBlock && w.contentBlocks[e].ctx.beforeDeleteContentBlock();
                    h.resolve(s).then(() => {
                        m.track(n.removeContentById(a).then(() => {
                            r.remove(w.contentBlocks, (t, a) => e === a)
                        }, (e) => {
                            t.error('Remove Content By ID Error: ', e)
                        }))
                    })
                }

                function f() {
                    const e = n.upsertContent.apply(n, arguments);
                    return m.track(e), e
                }
                t.debug('Loading Content Creator Controller');
                const y = c.current.name;
                ('content-creation.content-type' !== y || 'content-creation.space-picker' !== y) && d('.slideRoute').removeClass('bottom-to-top');
                const w = this;
                w.autoSaveWait = 0, w.activeContentBlock = null, w.isAddMode = !1, w.mediumOptions = {
                    disabledEditing: !1,
                    targetBlank: !0,
                    toolbar: {
                        allowMultiParagraphSelection: !0,
                        buttons: [{
                            name: 'h3',
                            contentDefault: '<b>T<span style="font-size: .75em; margin-left: -2px; vertical-align: -1px;">T</span></b>'
                        }, 'bold', 'italic', 'underline', 'indent', 'outdent', 'justifyLeft', 'justifyCenter', 'justifyRight', 'orderedlist', 'unorderedlist', 'anchor', 'quote'],
                        diffLeft: 0,
                        diffTop: -10,
                        firstButtonClass: 'medium-editor-button-first',
                        lastButtonClass: 'medium-editor-button-last',
                        relativeContainer: null,
                        standardizeSelectionStart: !1,
                        static: !1,
                        align: 'center',
                        sticky: !1,
                        updateOnEmptySelection: !1
                    },
                    autoLink: !0
                }, w.contentBlocks = w.contentBlocks || [], w.setActiveButton = function(e) {
                    w.activeButton = e, 'text' === e && (w.textSelected = !0, d('.attach, .embed, .add').addClass('fadeOut'))
                }, w.isActiveContentBlock = function(e) {
                    return w.isActive = !1, w.textActive = !1, e === w.activeContentBlock
                };
                const k = function() {
                    w.activeButton = null, w.activeContentBlock = null, w.isAddMode = !1, d('.attach, .embed, .add').removeClass('fadeOut')
                };
                w.delete = function(e, t, a) {
                    o.pickMediaFile = !1, t.stopPropagation(), l.get('isHideConfirmDelete') ? b(e, a) : v(e, a)
                };
                let S = null;
                w.saveMedia = function(e) {
                    a.cancel(S), S = a(() => {
                        e.mediaId ? i.updateMedia({
                            id: e.mediaId,
                            source: e.source,
                            thumbnail: e.thumbnail,
                            description: e.caption
                        }).then(() => {
                            w.saveContent(e)
                        }) : ('embed' === e.type || 'media' === e.type) && w.saveContent(e)
                    }, 200)
                }, w.saveContent = function(e) {
                    o.pickMediaFile = !1;
                    const t = s.clean(e);
                    f(t, w.pageId)
                }, w.addContentBlock = function(e) {
                    x(e)
                };
                const C = function(e) {
                        w.activeContentBlock = e
                    },
                    x = function(e) {
                        w.contentBlocks = w.contentBlocks || [];
                        const t = w.position || w.contentBlocks.length;
                        w.contentBlocks.splice(t, 0, e), C(e)
                    };
                w.initContentBlock = function(e) {
                    e.debouncedSave = g(() => {
                        w.saveContent(e)
                    }, u.AUTO_SAVE_DELAY)
                }, w.mediumChange = function(e) {
                    m.track(e.debouncedSave())
                }, w.save = function(e, t) {
                    e.stopPropagation(), k(), w.saveContent(t)
                }, w.pickFile = function(e, t) {
                    o.pickMediaFile = !0;
                    let a, s;
                    const n = i.pickFile(a, w.bucket, e, (e) => {
                        w.isAddMode = !0, w.activeButton = 'file', s = {
                            type: 'media',
                            mediaType: e[0].mimetype.split('/')[0],
                            isLoading: !0
                        }
                    }).then((e) => (s.source = e.source, s.thumbnail = e.thumbnail, s.content = '', delete s.isLoading, f(s, t, w.template).then((e) => {
                        r.defaults(s, e[0]), x(s)
                    })));
                    o.promiseTracker.addPromise(n)
                }, w.openEmbedModal = function() {
                    const e = [w.spaceId, w.template || 'page', w.pageId, w.deckCollection, w.embedMultiple, !1, w.vanity];
                    return i.openEmbedModal.apply(i, e).then((e) => {
                        e.forEach((e) => {
                            const t = r.first(e) || e;
                            t && x(t)
                        })
                    })
                }, w.goToBottom = function() {
                    const e = document.getElementById('bottom');
                    if (e) {
                        const e = angular.element(document.getElementById('bottom'));
                        angular.element(document).scrollToElementAnimated(e, 0, 700)
                    }
                }, w.hasEmbed = function(e) {
                    return -1 !== ['media', 'embed', 'embedly', 'image'].indexOf(e.type)
                }, p.$watch((e) => {
                    let t = !0;
                    return e.vm.contentBlocks ? (e.vm.contentBlocks.map((e) => {
                        e.ctx && e.ctx.validateBlock && (t = t && e.ctx.validateBlock())
                    }), !!t) : t
                }, (e) => {
                    p.$parent.validBlocks = e
                }), p.$watchCollection('vm.contentBlocks', (e, t) => {
                    t === e || w.contentBlocks && 0 === w.contentBlocks.length && (w.isActive = !0, w.textActive = !0)
                })
            }],
            controllerAs: 'vm',
            bindToController: !0,
            templateUrl: 'public/modules/core/templates/content-creator.template.html'
        }
    }]), angular.module('core').directive('contentViewer', ['Videos', 'PageService', 'ItemService', 'PostService', '$q', '_', '$timeout', function(e, t, a, s, i) {
        return {
            restrict: 'E',
            scope: {
                content: '=',
                disableActions: '=?',
                modalData: '=?',
                editor: '='
            },
            templateUrl: 'public/modules/core/templates/content-viewer.template.html',
            link(o) {
                if (o.modalData && (o.modal = {
                        data: o.modalData,
                        openerScope: o
                    }), -1 !== ['media', 'embed'].indexOf(o.content.type) && !o.content.source) return void(o.content.type = void 0);
                if (o.videogular = {
                        autoPlay: !1,
                        theme: 'bower_components/videogular-themes-default/videogular.css'
                    }, 'embed' === o.content.type)
                    if (o.content.data) o.content.data.type = 'embedded-' + o.content.data.type, o.card = o.content.data, o.card.tile = o.content.tile;
                    else {
                        const n = o.content.source.split(':'),
                            l = n[0],
                            r = 'item' === l ? o.content.vanityUrl : n[1],
                            d = {
                                page: t.v1.getPagesWithContentById,
                                item: a.v1.get,
                                post: s.v1.getPostByIdNormalized,
                                video: e.getVideoByIdNormalized
                            };
                        d[l](r).then((e) => {
                            if (o.content.tile = e[0] || e, o.content.ctx = o.content.ctx || {}, e = e[0], e && e.type) return e.type = 'embedded-' + e.type, o.card = e, i((e) => {
                                setTimeout(e, 0)
                            })
                        })
                    }
            },
            replace: !1
        }
    }]),
    function() {
        angular.module('core').directive('coverImageEdit', ['$log', 'media', function(e, t) {
            return {
                restrict: 'E',
                scope: {
                    contentData: '=',
                    contentType: '=',
                    save: '&',
                    header: '=?'
                },
                controller: [function() {
                    e.debug('Loading Cover Image Edit Controller');
                    const a = this;
                    a.pickHeader = function() {
                        const s = {
                            cropRatio: '[5/2]'
                        };
                        e.debug('cropOptions', s), t.pickFile(s, a.contentData.space.bucket, a.contentData.space.id).then((e) => {
                            a.save({
                                existing: a.contentData,
                                key: 'headerMediaUrl',
                                data: e.source
                            })
                        })
                    }
                }],
                controllerAs: 'vm',
                bindToController: !0,
                templateUrl: 'public/modules/core/templates/cover-image-edit.template.html'
            }
        }])
    }(), angular.module('core').directive('abbreviation', () => ({
        require: 'ngModel',
        link(e, t, a, s) {
            function i(e) {
                return 'undefined' == typeof e || null == e ? '' : e.toFixed ? 1E9 <= e ? (e / 1E9).toFixed(o).replace(/\.0$/, '') + 'B' : 1E6 <= e ? (e / 1E6).toFixed(o).replace(/\.0$/, '') + 'M' : 1E3 <= e ? (e / 1E3).toFixed(o).replace(/\.0$/, '') + 'K' : isNaN(e) ? '' : e : e
            }
            const o = 0;
            s.$parsers.push((e) => i(e)), s.$formatters.push((e) => i(e))
        }
    })), angular.module('core').directive('debouncedIsotopeItem', ['$q', 'jquery', function(e, t) {
        function a(e, t) {
            return e.complete ? void t() : void setTimeout(() => {
                a(e, t)
            }, 50)
        }

        function s(t) {
            return e.all(t.find('.js__wait-for-img-dimensions').toArray().map((t) => e((e) => {
                a(t, e)
            })))
        }
        const i = [],
            o = _.debounce(() => {
                const a = t(i).find('.grid-item');
                i.length = 0, e.all([s(a), e.all(a.find('.async-card').toArray().map((e) => t(e).scope().cardPromise.then(() => s(t(e)))))]).then(() => {
                    a.show().each(function() {
                        t(this).closest('.isotope-wrap').isotope('appended', this).scope().isLoadingMore = !1
                    })
                })
            });
        return {
            restrict: 'A',
            link(e, t) {
                const a = t.closest('.isotope-wrap').scope();
                a && (a.isLoadingMore = !0, i.push(t[0]), o(), e.$on('$destroy', () => {
                    const e = t.closest('.isotope-wrap');
                    e.data('isotope') && e.isotope('remove', t.find('.grid-item'))
                }))
            },
            replace: !0
        }
    }]), angular.module('core').directive('embedlyCard', ['embedlyAsync', 'dsModal', function(e, t) {
        return e.then((e) => {
            e('on', 'card.rendered', (e) => {
                console.warn('embedly loaded'), t.repositionAll();
                const a = null != $(e).scope().$parent.$parent.$parent.loaded;
                a && ($(e).scope().$parent.$parent.$parent.loaded = !0, console.warn(a)), $(e.contentWindow.document).on('click', 'a[target="_blank"]', function(e) {
                    e.preventDefault(), window.open(this.href, this.target)
                })
            })
        }), {
            restrict: 'E',
            scope: {
                url: '='
            },
            template: '<div></div>',
            link(t, a) {
                e.then((e) => {
                    function s() {
                        e('card', $('<a>', {
                            href: t.url,
                            "data-card-controls": 0,
                            "data-card-branding": 0,
                            "data-card-recommend": 0,
                            "data-card-chrome": 0,
                            "data-card-theme": 'light'
                        }).appendTo(a)[0])
                    }

                    function i() {
                        a.empty()
                    }
                    s(), t.$watch('url', (e, t) => {
                        e === t || (i(), s())
                    })
                })
            },
            replace: !0
        }
    }]), angular.module('core').directive('feedModalEmbed', [function() {
        return {
            restrict: 'A',
            replace: !1,
            transclude: !0,
            link() {}
        }
    }]),
    function() {
        angular.module('core').directive('field', function() {
            return {
                scope: {
                    model: '=',
                    label: '@',
                    pattern: '@'
                },
                replace: !0,
                transclude: !0,
                link(e, t) {
                    function a(e) {
                        t[e ? 'addClass' : 'removeClass'](n)
                    }

                    function s() {
                        o[e.model ? 'addClass' : 'removeClass'](l)
                    }

                    function i() {
                        t[c === e.model ? 'addClass' : 'removeClass'](r), t[c === e.model ? 'removeClass' : 'addClass'](d)
                    }
                    const o = t.find('.field-input'),
                        n = 'focus',
                        l = 'empty',
                        r = 'valid',
                        d = 'invalid';
                    let c;
                    o.on('focus', () => {
                        a(!0)
                    }).on('blur', () => {
                        a(!1)
                    }), e.$watch('model', () => {
                        s(), e.pattern && (c = c || e.pattern, i())
                    })
                },
                restrict: 'E',
                templateUrl: 'public/modules/core/templates/field.template.html'
            }
        })
    }(),
    function() {
        angular.module('core').directive('fileread', [function() {
            function e(e) {
                return {
                    mp4: 'video/mp4'
                }[e]
            }
            return {
                scope: {
                    fileread: '&'
                },
                link(t, a) {
                    a.bind('change', (a) => {
                        const s = new FileReader,
                            i = {
                                data: null,
                                meta: {}
                            };
                        s.onload = function(e) {
                            t.$apply(() => {
                                const a = new Blob([e.target.result], {
                                        type: 'video/mp4'
                                    }),
                                    s = URL.createObjectURL(a),
                                    o = document.createElement('video');
                                i.blob = a, i.data = e.target.result, o.preload = 'metadata', o.addEventListener('loadedmetadata', () => {
                                    i.meta.duration = o.duration, URL.revokeObjectURL(s)
                                }), o.src = s, t.fileread()(i)
                            })
                        };
                        const o = /(.*\\)?([a-z0-9 ]+)\.([a-z0-9]+)/gi,
                            n = o.exec(a.target.value);
                        i.meta.title = n[2], i.meta.ext = n[3], i.meta.mime = e(n[3]), s.readAsArrayBuffer(a.target.files[0])
                    })
                }
            }
        }])
    }(), angular.module('core').directive('flyMenu', [function() {
        return {
            restrict: 'E',
            template: '<div class="fly-menu"><a tabindex="0" role="button" class="hicon-menu-dots" rel="popover"></a><div class="fly-menu-content" style="display: none;" ng-transclude></div></div>',
            link(e, t) {
                const a = t.find('[rel="popover"]');
                a.popover({
                    html: !0,
                    content: t.find('.fly-menu-content').children(),
                    placement: 'bottom',
                    trigger: 'focus'
                }), a.on('show.bs.popover', () => {
                    t.addClass('active')
                }).on('hide.bs.popover', () => {
                    t.removeClass('active')
                })
            },
            transclude: !0,
            replace: !0
        }
    }]), angular.module('core').directive('formatLinks', ['jquery', '$timeout', function(e, t) {
        return {
            restrict: 'A',
            link(a, s) {
                t(() => {
                    s.find('a').each((t, a) => {
                        e(a).attr('target', '_blank')
                    })
                }, 0)
            }
        }
    }]), angular.module('core').directive('holoPopover', [function() {
        return {
            restrict: 'E',
            transclude: !0,
            scope: {
                popoverTitle: '@',
                showIcon: '=?'
            },
            template: ' <i class="icon-vertical-dots-small dsicon-options"></i><div class="holo-popover-container holo-popover-content visibility-hidden"><ng-transclude></ng-transclude></div>',
            link(t, a) {
                t.popOverClose = function() {
                    a.removeClass('active'), a.children(':not(.icon-to-mobile)').addClass('visibility-hidden'), a.closest('.more-options').removeClass('sheet'), a.bind('click', t.popOverOpen), $('body').unbind('click', t.popOverClose)
                }, t.popOverOpen = function(s) {
                    s.stopPropagation(), a.children().removeClass('visibility-hidden'), a.addClass('active'), a.closest('.more-options').addClass('sheet'), $('body').bind('click', t.popOverClose), a.unbind('click', t.popOverOpen)
                }, a.bind('click', t.popOverOpen)
            }
        }
    }]), angular.module('core').directive('holonisLoader', [function() {
        return {
            restrict: 'E',
            templateUrl: 'public/modules/core/templates/holonis-loader.template.html',
            controller: ['$scope', function() {}],
            replace: !0,
            transclude: !0
        }
    }]), angular.module('core').directive('holoLike', ['holoLikesService', '_', '$timeout', 'Authentication', function(e, t, a, s) {
        return {
            restrict: 'E',
            templateUrl: 'public/modules/core/views/holoLike.view.html',
            controller: ['$scope', function(i) {
                function o(e) {
                    e ? n.counter-- : n.counter++
                }
                const n = this;
                n.currUserId = n.spaceId, n.ply = {}, n.ply.userVotes = {}, n.ply.userVotes[n.currUserId] = 0, n.ply.votes = 0, n.likeObj.reactionType = 'like', n.doVote = function() {
                        if (!n.currUserId) return void a(s.showLoginPrompt());
                        1 === n.ply.userVotes[n.currUserId] ? o(!0) : o(!1);
                        const t = n.currUserId;
                        1 === n.ply.userVotes[t] ? (e.deleteLike(n.likeObj.id, n.likeObj.type), delete n.ply.userVotes[t], n.ply.votes--) : (e.postLike(n.likeObj.id, n.likeObj.type).then((e) => {
                            n.lastInsertId = e.id
                        }), n.ply.userVotes[t] = 1, n.ply.votes++)
                    }, n.deleteItem = function() {
                        0 <= n.selectedItem && n.data.splice(n.selectedItem, 1)
                    },
                    function() {
                        i.$watch('vm.likeObj.likedBy', () => {
                            n.likeObj.likedBy ? (n.counter = n.likeObj.likedBy.length, t.some(n.likeObj.likedBy, {
                                spaceId: n.currUserId
                            }) && (n.ply.userVotes[n.currUserId] = 1)) : n.counter = 0
                        })
                    }()
            }],
            controllerAs: 'vm',
            bindToController: !0,
            scope: {
                likeObj: '=',
                spaceId: '=?'
            },
            replace: !0,
            link() {}
        }
    }]), angular.module('core').directive('holoSave', ['holoSaveService', '_', '$timeout', 'Authentication', function(e, t, a, s) {
        return {
            restrict: 'E',
            templateUrl: 'public/modules/core/views/holoSave.view.html',
            controller: [function() {
                const t = this;
                t.currUserId = t.spaceId, t.ply = {}, t.ply.userSave = {}, t.ply.userSave[t.currUserId] = 0, t.ply.save = 0, t.SaveText = t.ply.userSave[t.currUserId], t.doSave = function() {
                    const i = t.currUserId;
                    return i ? void(1 === t.ply.userSave[i] ? t.lastInsertId && (e.deleteSave(t.saveObj.id, t.saveObj.type), delete t.ply.userSave[i], t.ply.save--, t.lastInsertId = null) : (e.postSave(t.saveObj.id, t.saveObj.type).then((e) => {
                        t.lastInsertId = e.id
                    }), t.ply.userSave[i] = 1, t.ply.save++)) : void a(s.showLoginPrompt())
                }, t.deleteItem = function() {
                    0 <= t.selectedItem && t.data.splice(t.selectedItem, 1)
                }, e.getSaveById(t.currUserId, t.saveObj.id).then((e) => {
                    e && (t.lastInsertId = e.id, t.ply.userSave[t.currUserId] = 1, t.SaveText = t.ply.userSave[t.currUserId], t.ply.save++), t.SaveText = t.ply.userSave[t.currUserId]
                }), t.SaveText = t.ply.userSave[t.currUserId]
            }],
            controllerAs: 'vm',
            bindToController: !0,
            scope: {
                saveObj: '=',
                spaceId: '=?'
            },
            replace: !0,
            link() {}
        }
    }]),
    function() {
        angular.module('core').directive('holospaceSearch', function() {
            return {
                restrict: 'E',
                transclude: !0,
                templateUrl: 'public/modules/core/templates/holospace-search.template.html',
                link() {},
                scope: {
                    placeholder: '@',
                    value: '=?'
                }
            }
        })
    }(), angular.module('core').directive('landingpageHeader', ['$uibModal', '$location', 'Authentication', function(e, t, a) {
        return {
            restrict: 'E',
            scope: {
                landingpageHeaderInfo: '=',
                data: '=',
                hideCover: '=?',
                hideUser: '=?',
                headerAlwaysFixed: '=?'
            },
            templateUrl: 'public/modules/core/templates/landingpage-header.template.html',
            link(s) {
                s.isLoggedOut = a.isLoggedOut, s.shareModal = function() {
                    e.open({
                        templateUrl: 'public/modules/core/templates/sharethis.modal.template.html',
                        controller: ['$uibModalInstance', function(e) {
                            const a = this;
                            a.permalink = t.absUrl(), a.cancel = function() {
                                e.dismiss()
                            }
                        }],
                        controllerAs: 'vm',
                        size: 'sm',
                        windowClass: 'confirm-modal modal-share modal-mobile-full'
                    })
                }
            }
        }
    }]), angular.module('core').directive('mainContent', ['$document', '$window', 'windowSizeService', '$log', 'jquery', function() {
        return {
            restrict: 'AE',
            link() {}
        }
    }]),
    function() {
        angular.module('core').directive('makeOfferBanner', ['$rootScope', '$log', function(e, t) {
            return t.debug('Loading makeOfferBanner Controller'), {
                replace: !0,
                restrict: 'E',
                controller: ['$scope', function() {}],
                scope: {
                    title: '@?',
                    size: '=?'
                },
                templateUrl: 'public/modules/core/templates/make-offer-banner.template.html'
            }
        }])
    }(), angular.module('core').directive('modal', ['$window', '$document', '$rootScope', 'jquery', '$timeout', 'Authentication', function(e, t, a, s, i, o) {
        function n(e, t) {
            function s() {
                return n('next')
            }

            function n(e) {
                const t = v[e](),
                    a = t.find('.card-content');
                if (1 > a.length) return 'next' === e ? r() : null;
                const s = p(a);
                return v = m(a), d(s)
            }

            function r() {
                e.vm.deck.loadMore().then(() => {
                    i(s)
                })
            }

            function d(e, s) {
                i(() => {
                    a.modal = e
                }, 10), t.hasClass('modal-with-controller') && a.$broadcast('open-access-modal', {
                    $element: t,
                    dataset: s
                }), l.addClass('modal-open'), t.addClass('opened');
                const o = v.find('.grid-item');
                if (o.length) {
                    const e = o.clone(),
                        t = o.offset().top - $(window).scrollTop(),
                        a = o.offset().left - $(window).scrollLeft();
                    e.css({
                        top: t,
                        left: a
                    }), e.children().css('visibility', 'hidden'), o.after(e), e[0].offsetHeight, e.addClass('animeTile'), $('.main-holospace-content').addClass('z-index-modal'), $('.animated.modal-feeds-user-profile').addClass('fadeInLeft'), $('.animated.modal-feeds-user-name').addClass('fadeInUp'), setTimeout(() => {
                        $('.animated.modal-feeds-user-description').addClass('fadeInUp')
                    }, 500)
                }
            }

            function c() {
                l.removeClass('modal-open modal-open--static'), t.removeClass('opened'), i(() => {
                    a.modal = void 0
                }), $('.animated.modal-feeds-user-profile').removeClass('fadeInLeft'), $('.animated.modal-feeds-user-name').removeClass('fadeInUp'), $('.animated.modal-feeds-user-description').removeClass('fadeInUp'), $('.main-holospace-content').removeClass('z-index-modal')
            }

            function p(e) {
                return e.scope().modal
            }

            function m(e) {
                return e.closest('.grid-item').parent()
            }
            const u = this,
                g = t.attr('id');
            let v = null;
            u.openModal = function(e) {
                if (!e.currentTarget.hasAttribute('prevent-modal')) {
                    const e = angular.element(this),
                        t = e.data(),
                        a = p(e);
                    return v = m(e), d(a, t)
                }
            }, u.showLogin = function() {
                o.showLoginPrompt()
            }, l.on('click', '[data-open-modal="' + g + '"]', 'modal-access' == g ? u.showLogin : u.openModal), l.on('click', '[class*="close-modal"]', c), l.on('click', '.modal-feeds-close', c), l.on('click', '.close--modal-access', c), l.on('click', '.close--modal-intro', c), l.on('click', '.close--modal-intro-signin', c), l.on('click', '.close--modal-intro-join', c), l.on('click', '.close--modal-intro-registration-email', c), l.on('click', '.close--modal-tips', c), l.on('click', '.close--tips-create-post', c), l.on('click', '.modal-feeds-nav-prev', function() {
                return n('prev')
            }), l.on('click', '.modal-feeds-nav-next', s), t.on('open-modal', u.openModal), t.on('close-modal', c)
        }
        n.$inject = ['$scope', '$element'];
        const l = angular.element('body');
        return {
            restrict: 'E',
            templateUrl(e, t) {
                return t.type ? 'public/modules/core/templates/modal/' + t.type + '.template.html' : 'public/modules/core/templates/modal/default.template.html'
            },
            controller: n,
            link(e, t, a, s) {
                a.autoOpen && s.openModal.call(angular.element(document.body))
            },
            replace: !0
        }
    }]),
    function() {
        angular.module('core').directive('offerStatusModule', ['$log', function(e) {
            return e.debug('Loading offerStatusModule Controller'), {
                replace: !0,
                restrict: 'E',
                controller: ['$scope', function() {}],
                scope: {
                    data: '=?'
                },
                templateUrl: 'public/modules/core/templates/offer-status-module.template.html'
            }
        }])
    }(), angular.module('core').directive('pageTabs', ['$window', 'PageService', 'ItemService', '$document', 'jquery', '_', 'collections', function(e, t, a, s, i, o) {
        function n(e) {
            function s(t) {
                this.selectedCard = t, e.currentBlocks = [t], e.selectedBlocks(e.currentBlocks)
            }

            function i() {
                n = 0, e.currentBlocks = [], e.selectedBlocks(e.currentBlocks)
            }
            e.pageData = [], e.productData = [], e.currentBlocks = [], e.tabs = [{
                title: 'Pages',
                url: 'public/modules/core/templates/pages.template.html'
            }, {
                title: 'Items',
                url: 'public/modules/core/templates/items.template.html'
            }, {
                title: 'Posts',
                url: 'public/modules/core/templates/posts.template.html'
            }];
            let n = 0;
            const l = 6;
            e.pageData = {
                collection: [],
                loadMore() {
                    return t.getPagesWithContent(e.spaceId, n, l).then((e) => (n += e.length, e))
                },
                selectCard: s,
                infiniteScrollParent: !0
            }, e.productData = {
                collection: [],
                loadMore() {
                    return a.getProductPagesBySpaceId(e.spaceId, n, l).then((e) => (n += e.length, e))
                },
                selectCard: s,
                infiniteScrollParent: !0
            }, t.getPagesWithContentCount(e.spaceId).then((t) => {
                t && (e.tabs[0].title += ' (' + t + ')')
            }), a.getProductPagesBySpaceIdCount(e.spaceId).then((t) => {
                t && (e.tabs[1].title += ' (' + t + ')')
            }), e.currentTab = 'public/modules/core/templates/pages.template.html', e.onClickTab = function(t) {
                e.currentTab !== t.url && i(), e.currentTab = t.url
            }, e.isActiveTab = function(t) {
                return t === e.currentTab
            }, e.selectBlockProduct = function() {
                e.currentBlocks = o.filter(e.productData.collection, (e) => e.current), e.selectedBlocks(e.currentBlocks)
            }
        }
        return n.$inject = ['$scope'], {
            scope: {
                spaceId: '=',
                selectedBlocks: '=',
                contentType: '=',
                vanity: '=?'
            },
            restrict: 'E',
            templateUrl: 'public/modules/core/templates/page-tabs.template.html',
            controller: n
        }
    }]),
    function() {
        angular.module('core').directive('profileImageEdit', ['$log', 'media', function(e, t) {
            return {
                restrict: 'E',
                scope: {
                    contentData: '=',
                    contentType: '=',
                    save: '&'
                },
                controller: [function() {
                    e.debug('Loading Profile Image Edit Controller');
                    const a = this;
                    a.hasPickedImage = !1, a.pickHeader = function(e) {
                        t.pickFile(e, a.contentData.space.bucket, a.contentData.space.id).then((e) => {
                            a.contentData.space.profilePhoto = e.source, a.hasPickedImage = !0
                        })
                    }
                }],
                controllerAs: 'vm',
                bindToController: !0,
                templateUrl: 'public/modules/core/templates/profile-image-edit.template.html'
            }
        }])
    }(), angular.module('core').directive('reportActionSheet', ['$timeout', '_', 'report', 'notifyService', function(e, t, a, s) {
        const i = a.getReasons();
        return {
            restrict: 'E',
            scope: {
                instanceType: '=',
                instanceId: '=',
                actionSheetClasses: '@',
                actionSheetPosition: '@'
            },
            templateUrl: 'public/modules/core/templates/report-action-sheet.template.html',
            controller: ['$scope', function(o) {
                const n = this;
                i.then((i) => {
                    const l = t.find(i, {
                        type: 'spam'
                    }).value;
                    n.reportOptions = {
                        actions: [{
                            text: 'It\u2019s Spam',
                            callback() {
                                return a.send(o.instanceType, o.instanceId, l).then(() => {
                                    s.success('Thank you for reporting.')
                                })
                            }
                        }, {
                            text: 'It\u2019s Inappropriate',
                            callback() {
                                e(() => {
                                    $('.ras-' + o.instanceType + '-' + o.instanceId + ' .report-action-sheet-inappropriate').click()
                                }, 100)
                            }
                        }]
                    }
                }), i.then((e) => {
                    n.inappropriateReportOptions = {
                        actions: t(e).filter({
                            type: 'inappropriate'
                        }).map((e) => ({
                            text: e.label,
                            callback() {
                                return a.send(o.instanceType, o.instanceId, e.value).then(() => {
                                    s.success('Thank you for reporting.')
                                })
                            }
                        })).value()
                    }
                })
            }],
            controllerAs: 'vm',
            replace: !0
        }
    }]), angular.module('core').directive('shareThis', ['constants', '$q', '$timeout', 'jquery', 'dsModal', function(e, t, a, s, i) {
        function o(e) {
            switch (e.type) {
                case 'addthis.menu.open':
                    n();
                    break;
                case 'addthis.menu.close':
                    break;
                case 'addthis.menu.share':
                    break;
                default:
            }
            'addthis.menu.share' == e.type && (l = [], l.push(e.data.service), r(l, e.data.url))
        }

        function n() {
            a(() => {
                const e = s('#at15s'),
                    t = s('.at-expanded-menu.at-expanded-menu-round'),
                    a = s('.at-win-mask.at-expanded-menu-mask'),
                    o = s('.ds-modal-visible'),
                    n = i.handleMultipleModal(o);
                e.css('z-index', n.modal), a.css('z-index', n.modal + 1), t.css('z-index', n.modal + 2)
            })
        }
        let l;
        window.addthis && (window.addthis.addEventListener('addthis.menu.open', o), window.addthis.addEventListener('addthis.menu.close', o), window.addthis.addEventListener('addthis.menu.share', o));
        const r = function(e, a) {
            const s = t.defer();
            return window.addthis.sharecounters.getShareCounts({
                service: e,
                countUrl: a
            }, (e) => {
                s.resolve(e)
            }), s.promise
        };
        return {
            restrict: 'E',
            templateUrl: 'public/modules/core/views/sharethis.view.html',
            scope: {
                shareTitle: '=',
                shareUrl: '='
            }
        }
    }]),
    function() {
        angular.module('core').directive('socialProviderTextfield', ['$log', '_', function(e) {
            return {
                restrict: 'EA',
                scope: {
                    contentData: '=',
                    contentType: '=',
                    form: '=',
                    link: '=',
                    save: '&'
                },
                controller: [function() {
                    e.debug('Loading Social Provider Directive Controller');
                    const t = this;
                    t.icon = function(e) {
                        let t;
                        switch (e) {
                            case 'facebook':
                                t = 'icn-fb-color';
                                break;
                            case 'twitter':
                                t = 'icn-twitter-color';
                                break;
                            case 'instagram':
                                t = 'icn-instagram';
                                break;
                            default:
                                t = 'icn-fb-color';
                        }
                        return t
                    }(t.contentData.name)
                }],
                controllerAs: 'vm',
                bindToController: !0,
                templateUrl: 'public/modules/core/templates/social-provider-textfield.template.html'
            }
        }])
    }(),
    function() {
        angular.module('core').directive('socialProviderView', ['$log', '_', function(e) {
            return {
                restrict: 'EA',
                scope: {
                    contentData: '=',
                    contentType: '=',
                    form: '=',
                    link: '=',
                    save: '&'
                },
                controller: [function() {
                    e.debug('Loading Social Provider Directive Controller');
                    const t = this;
                    t.icon = function(e) {
                        let t;
                        switch (e) {
                            case 'facebook':
                                t = 'icn-fb-color';
                                break;
                            case 'twitter':
                                t = 'icn-twitter-color';
                                break;
                            case 'instagram':
                                t = 'icn-instagram';
                                break;
                            default:
                                t = 'icn-fb-color';
                        }
                        return t
                    }(t.contentData.name)
                }],
                controllerAs: 'vm',
                bindToController: !0,
                templateUrl: 'public/modules/core/templates/social-provider-view.template.html'
            }
        }])
    }(),
    function() {
        angular.module('core').directive('sticky', ['jquery', function(e) {
            return {
                link(t, a, s) {
                    function i() {
                        p || (m = a.offset().top);
                        const t = e(s.stickyHideBefore);
                        if ((p || s.stickyShare) && t.length) {
                            if (a.offset().top + a.height() + 100 >= t.offset().top) return void a.addClass(c);
                            a.removeClass(c)
                        }
                        p !== (p = window.scrollY > m - (+s.stickyOffsetTop || 0)) && (p ? (n(), a.addClass(d)) : (a.removeClass(d), l()))
                    }

                    function o() {
                        r().css('height', a.outerHeight(!0))
                    }

                    function n() {
                        s.noPlaceholder || (a.after(e('<div>', {
                            class: 'sticky-placeholder'
                        })), o())
                    }

                    function l() {
                        s.noPlaceholder || r().remove()
                    }

                    function r() {
                        return a.next()
                    }
                    const d = 'sticky',
                        c = 'sticky-hidden';
                    let p = a.hasClass(d),
                        m;
                    return e(window).on('resize', o), t.$on('$destroy', () => {
                        e(window).off('resize', o), window.removeEventListener('scroll', i, {
                            passive: !0
                        })
                    }), s.stickyAlways ? (n(), void a.addClass(d)) : void window.addEventListener('scroll', i, {
                        passive: !0
                    })
                }, restrict: 'A'
            }
        }])
    }();

function suggestionsDirective() {
    return {
        restrict: 'E',
        scope: {
            suggestions: '=',
            limit: '=',
            search: '=?'
        },
        templateUrl: 'public/modules/core/templates/suggestions.template.html',
        controller: ['$scope', 'constants', function(e, t) {
            e.searchDelay = t.TYPING_DEBOUNCE_DELAY
        }],
        link(t, a) {
            function e() {
                t.limitExceeded = !!t.limit && t.selected.length >= t.limit
            }

            function s(a) {
                const e = a.keyCode;
                let i;
                if (!t.search && t.selected.length && (i = $(':focus'), 37 === e && i.prev().focus(), 39 === e && i.next().focus(), 8 === e)) {
                    const e = (i.is('input') ? i.prev() : i).scope().s;
                    return t.$apply(() => {
                        t.unselect(e)
                    }), !1
                }
            }

            function i(s) {
                const e = s.keyCode;
                let i;
                t.search && (i = $(':focus'), 38 === e && (i.is('input') ? a.find('.suggestions-list-item').last().focus() : i[0] === a.find('.suggestions-list-item').first()[0] ? m.focus() : i.prev().focus()), 40 === e && (i.is('input') ? a.find('.suggestions-list-item').first().focus() : i[0] === a.find('.suggestions-list-item').last()[0] ? m.focus() : i.next().focus()))
            }

            function o() {
                p.on('keydown', s)
            }

            function n() {
                p.off('keydown', s)
            }

            function l() {
                p.on('keydown', i)
            }

            function r() {
                p.off('keydown', i)
            }

            function d() {
                o(), l()
            }

            function c() {
                n(), r()
            }
            const p = $(document),
                m = a.find('.suggestions-field');
            t.selected = t.$parent.$parent.selected = [], t.select = function(e) {
                    t.selected.push(e), t.search = '', m.focus(), t.$emit('updateSelected')
                }, t.unselect = function(e, a) {
                    angular.element(a.target).closest('.suggestions-item').hide(), t.selected.splice(t.selected.indexOf(e), 1), t.$emit('updateSelected'), setTimeout(() => {
                        m.focus()
                    }, 0)
                },
                function() {
                    m.on('focus', d).on('blur', c), a.on('focus', '.suggestions-item', o).on('blur', '.suggestions-item', n).on('focus', '.suggestions-list-item', l).on('blur', '.suggestions-list-item', r), t.$on('updateSelected', () => {
                        e(), t.$parent.$parent.selected = t.selected
                    })
                }()
        }
    }
}
angular.module('core').directive('suggestions', suggestionsDirective), angular.module('core').directive('svgIcon', ['$rootScope', '$timeout', function(e, t) {
        return {
            restrict: 'E',
            templateUrl: 'public/modules/core/templates/svg-icon.template.html',
            scope: {
                icon: '@',
                className: '@'
            },
            controller: ['$scope', '$log', function(a) {
                function s() {
                    t(() => {
                        a.baseUrl = location.protocol + '//' + location.host + location.pathname + location.search
                    })
                }
                a.className && (a.classNameScope = a.className), a.isPrerender = e.isPrerender, s(), a.$on('$stateChangeSuccess', s)
            }],
            replace: !0
        }
    }]), angular.module('core').directive('taboolaAds', [function() {
        return {
            restrict: 'E',
            scope: {
                user: '='
            },
            templateUrl: 'public/modules/core/views/taboola.view.html',
            controller: ['$timeout', '$scope', 'users', function(e, t, a) {
                e(() => {
                    const {
                        user: e
                    } = t, s = document.getElementById('taboola-below-article-thumbnails');
                    a.getSpaceByUserId(e).then((e) => {
                        t.taboolaEnabled = e[0].taboolaEnabled, t.taboolaEnabled && (window._taboola = window._taboola || [], window._taboola.push({
                            mode: 'thumbnails-a',
                            container: s,
                            placement: 'Below Article Thumbnails',
                            target_type: 'mix'
                        }), window._taboola = window._taboola || [], window._taboola.push({
                            flush: !0
                        }))
                    })
                }, 0)
            }]
        }
    }]), (() => {
        angular.module('core').directive('tabsChannel', ['$window', 'Pages', '$document', 'jquery', function() {
            return {
                restrict: 'E',
                transclude: !0,
                scope: {},
                controller: ['$scope', function(e) {
                    const t = e.panes = [];
                    e.select = function(e) {
                        angular.forEach(t, (e) => {
                            e.selected = !1
                        }), e.selected = !0
                    }, this.addPane = function(a) {
                        0 === t.length && e.select(a), t.push(a)
                    }
                }],
                template: '<div class="tabbable"><ul class="nav nav-tabs"><li ng-repeat="pane in panes" ng-class="{active:pane.selected}"><a href="" ng-click="select(pane)">{{pane.title}}</a></li></ul><div class="tab-content" ng-transclude></div></div>',
                replace: !0
            }
        }]).directive('pane', () => ({
            require: '^tabs',
            restrict: 'E',
            transclude: !0,
            scope: {
                title: '@'
            },
            link(e, t, a, s) {
                s.addPane(e)
            },
            template: '<div class="tab-pane" ng-class="{active: selected}" ng-transclude></div>',
            replace: !0
        }))
    })(), angular.module('app').directive('tags', [function() {
        return {
            restrict: 'E',
            templateUrl: 'public/modules/core/templates/tags.template.html',
            link(e) {
                e.placeholder = 'Adding tags improves searchability'
            }
        }
    }]),
    function() {
        angular.module('core').directive('target', ['Open', function(e) {
            return {
                link(t, a, s) {
                    '_system' === s.target && a.bind('click', () => (e.external(s.href), !1))
                }, restrict: 'A'
            }
        }])
    }(), angular.module('app').directive('topNav', ['$document', '$window', 'windowSizeService', function() {
        return {
            restrict: 'A',
            link() {}
        }
    }]), angular.module('core').directive('trendingSearch', [function() {
        return {
            restrict: 'E',
            controller: ['$scope', function(e) {
                e.goSearch = e.$parent.vm.goSearch
            }],
            templateUrl: 'public/modules/core/templates/trendingSearch.template.html',
            replace: !0
        }
    }]),
    function() {
        angular.module('core').directive('uid', [function() {
            return {
                scope: !0,
                controller: ['$scope', 'uid', function(e, t) {
                    e.uid = t.generateUid()
                }],
                link(e, t) {
                    t.attr('data-uid', e.uid), e.getUniqueSelector = function() {
                        return '[data-uid="' + e.uid + '"]'
                    }
                },
                restrict: 'A'
            }
        }])
    }(), angular.module('core').directive('vanityUrlField', ['$timeout', '$rootScope', '_', 'holospace', function(e, t, a, s) {
        return {
            scope: {
                model: '=',
                validModel: '='
            },
            replace: !0,
            link(i) {
                function o() {
                    if (!i.model) return;
                    const e = n = s.getSpace(i.model, !0).then((a) => {
                        e !== n || (i.validModel = !a.length || !!t.primarySpace && a[0].id === t.primarySpace.id)
                    })
                }
                let n;
                const l = a.debounce(() => {
                    e(o)
                }, 200);
                o(), i.$watch('model', (e, t) => {
                    e === t || (i.validModel = void 0, l())
                })
            },
            restrict: 'E',
            templateUrl: 'public/modules/core/templates/vanity-url-field.template.html'
        }
    }]), angular.module('core').directive('variantSelect', ['$log', '$timeout', 'constants', 'notifyService', 'ItemService', function(e, t, a, s, i) {
        return {
            replace: !0,
            restrict: 'E',
            scope: {
                buyParams: '=',
                data: '='
            },
            controller: ['$scope', function(o) {
                function n(e, t) {
                    e = e || {}, e.variants = e.variants || [], null != t && (o.buyParams.selects[t] = l(e, t)), o.buyParams.price = o.data.body.item.price = _.min(_.map(e.variants, 'price')), o.buyParams.finalPrice = o.data.body.item.finalPrice = _.min(_.map(e.variants, 'finalPrice')), o.buyParams.maxQuantity = _.min(e.variants.map((e) => e.unlimited ? a.PURCHASE_MAX_QUANTITY : e.quantity)), o.buyParams.soldOut = !e.variants.length, o.buyParams.quantity = 1, o.data.minPrice = e.minPrice, o.data.maxPrice = e.maxPrice
                }

                function l(e, t) {
                    const a = e.values.map((e) => ({
                            text: e,
                            value: e
                        })),
                        s = o.data.body.item.variantOptions[t].name;
                    return {
                        label: s,
                        options: a
                    }
                }
                e.debug('Loading Variant Select Directive'), o.buyParams.selects = o.buyParams.selects || [], o.buyParams.selected = o.buyParams.selected || [], o.state = {}, o.change = function(e) {
                    const t = e + 1;
                    o.state.loading = !0, o.buyParams.variant = null, o.buyParams.selects = o.buyParams.selects.slice(0, t), o.buyParams.selected = o.buyParams.selected.slice(0, t);
                    const a = i.getVariants(o.data.id, o.buyParams.selected).then((e) => {
                        n(e, _.get(e, 'values', []).length ? t : null), _.get(e, 'values', []).length || (e = e || [], _.set(e, 'variants[0]', _.get(e, 'variants[0]') || {
                            sku: null
                        }), o.buyParams.variant = _.get(e, 'variants[0].sku')), o.state.loading = !1
                    }).catch((e) => {
                        s.error('Couldn\'t fetch variants. Please try again.'), console.error(e), o.state.loading = !1
                    });
                    return o.buyParams.loadingTracker && o.buyParams.loadingTracker.addPromise(a), a
                }, o.$on('variant-select:update-quantity', () => {
                    o.change(o.buyParams.selects.length - 1)
                }), o.$watch('buyParams', () => {
                    o.buyParams && o.buyParams.variant ? (o.initializingWithData = !0, t(() => {
                        o.initializingWithData = !1
                    })) : o.change(-1)
                })
            }],
            templateUrl: 'public/modules/core/templates/variant-select.template.html',
            link() {}
        }
    }]),
    function() {
        angular.module('core').factory('AblyAsync', ['jquery', function(e) {
            return e.ajax({
                url: 'https://cdn.ably.io/lib/ably.min-0.8.js',
                dataType: 'script',
                cache: !0
            }).then(() => {
                const e = window.Ably;
                return delete window.Ably, e
            })
        }])
    }(),
    function() {
        angular.module('core').service('ad', ['$window', '$rootScope', function(e, t) {
            const a = e.pbjs,
                s = e.googletag;
            return {
                createAdUnit({
                    code: e,
                    bids: t,
                    sizes: a
                }) {
                    const s = t && t.length;
                    return s ? {
                        code: e,
                        mediaTypes: {
                            banner: {
                                sizes: a
                            }
                        },
                        bids: t
                    } : null
                }, addAdUnits(e) {
                    a.que.push(() => {
                        a.addAdUnits(e)
                    })
                }, removeAdUnit(e) {
                    a.que.push(() => {
                        a.removeAdUnit(e)
                    })
                }, getAdParamsForAnalytics(e) {
                    return !!e && {
                        adUnitId: e.adUnitCode,
                        adMeta: {
                            adUrl: e.url || e.bidder,
                            adServerTargeting: e.adserverTargeting,
                            adCpm: e.cpm
                        }
                    }
                }, getWinningBid(e) {
                    if (!a) return !1;
                    const t = a.getAllWinningBids(),
                        s = _.find(t, {
                            adUnitCode: e
                        });
                    if (s) return s;
                    const i = a.getHighestCpmBids(),
                        o = _.find(i, {
                            adUnitCode: e
                        });
                    if (o) {
                        const t = 'googleadx',
                            a = _.get(o, 'adserverTargeting', {});
                        return {
                            adId: o.adId,
                            adUnitCode: e,
                            bidder: t,
                            adserverTargeting: {
                                hb_bidder: t,
                                hb_size: a.hb_size,
                                hb_format: a.hb_format,
                                hb_source: a.hb_source
                            },
                            cpm: o.cpm + 0.01
                        }
                    }
                    return {
                        adId: e,
                        adUnitCode: e,
                        bidder: 'housead',
                        adserverTargeting: {},
                        cpm: null
                    }
                }, onBidWon(e) {
                    return a.onEvent('bidWon', e)
                }, offBidWon(e) {
                    return a.offEvent('bidWon', e)
                }, onAdClick(e, t) {
                    const a = angular.element(`#${e}`),
                        s = a.find('iframe');
                    s.on('iframe_click', t), a.on('click', t)
                }, cleanUp() {
                    this.offBidWon()
                }, init(e) {
                    Object.assign(_.get(a, 'bidderSettings', {}), e), this.setSizeConfig()
                }, setSizeConfig() {
                    a.que.push(() => {
                        a.setConfig({
                            priceGranularity: 'high',
                            sizeConfig: [{
                                mediaQuery: '(min-width: 768px)',
                                labels: ['display']
                            }, {
                                mediaQuery: '(min-width: 0px) and (max-width: 767px)',
                                labels: ['mobile-web']
                            }]
                        })
                    })
                }, refreshBid({
                    slot: e,
                    slotName: i,
                    timeout: o,
                    labels: n
                }) {
                    a.que.push(() => {
                        a.requestBids({
                            labels: n,
                            timeout: o,
                            adUnitCodes: [i],
                            bidsBackHandler: () => {
                                a.setTargetingForGPTAsync([i]), s.cmd.push(() => {
                                    s.pubads().refresh([e]), t.$emit('holonis_ad_refresh', {
                                        slotName: i
                                    })
                                })
                            }
                        })
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('core').service('AdRefresher', ['$window', function() {
            function e(e) {
                this.displayEvents = e.displayEvents, this.adInfo = _.clone(e.adInfo), this.watingForSlotDefinition = !0, this.element = e.element, this.dfp = e.dfp, this.bidderTimeout = e.bidderTimeout, this.adService = e.adService, this.adUnit = e.adService.createAdUnit({
                    code: this.adInfo.slotName,
                    bids: e.bids,
                    sizes: this.adInfo.adSize
                }), this.view = e.view, this.pixelsBeforeDisplay = e.pixelsBeforeDisplay, this.fullyVisible = e.fullyVisible, this.timer = null;
                this.eventHandlers = (() => this.displayEvents.map((t) => e.$scope.$on(t, () => {
                    this.updateAdDisplay()
                })))(), this.dfp.defineAdSlot(this.adInfo).then((e) => {
                    this.adInfo.slot = e, this.watingForSlotDefinition = !1, this.adService.addAdUnits([this.adUnit])
                }).catch(() => {
                    `Error defining ad slot for slot name ${this.adInfo.slotName} `;
                    this.timer && (clearTimeout(this.timer), this.timer = null), this.unregisterAdDisplayHandlers()
                })
            }
            return e.prototype.updateAdDisplay = function() {
                if (!this.adInfo) return void this.unregisterAdDisplayHandlers();
                if (this.watingForSlotDefinition) {
                    return void(() => {
                        this.timer && (clearTimeout(this.timer), this.timer = null), this.timer = setTimeout(() => {
                            this.updateAdDisplay()
                        }, 150)
                    })()
                }
                const e = this.view.isElementInView(this.element, {
                    offset: this.pixelsBeforeDisplay
                }, this.fullyVisible);
                if (e) {
                    const e = this.adInfo.adSize.join('x');
                    this.adService.refreshBid({
                        labels: [e],
                        slot: this.adInfo.slot,
                        slotName: this.adInfo.slotName,
                        timeout: this.bidderTimeout
                    }), this.unregisterAdDisplayHandlers()
                }
            }, e.prototype.unregisterAdDisplayHandlers = function() {
                this.eventHandlers && this.eventHandlers.forEach((e) => {
                    e()
                })
            }, e.prototype.destroy = function() {
                this.timer && (clearTimeout(this.timer), this.timer = null), this.unregisterAdDisplayHandlers(), this.adInfo && this.adInfo.slot && (this.dfp.destroyAdSlots(this.adInfo, [this.adInfo.slot]), this.adService.removeAdUnit(this.adInfo.slotName))
            }, e
        }])
    }(),
    function() {
        angular.module('core').factory('Analytics', ['constants', 'uuid', '$http', '$q', '$log', '$rootScope', 'Restangular', 'jquery', '_', 'ad', function(e, t, a, s, i, o, n, l, r) {
            function d() {
                return Math.round(Date.now() / 1e3)
            }

            function c(e) {
                return r.get(o._adDataLayerInfos, e)
            }

            function p() {
                localStorage.setItem('analytics.events.buffer', JSON.stringify(T))
            }

            function m() {
                try {
                    T = JSON.parse(localStorage.getItem('analytics.events.buffer')) || []
                } catch (t) {
                    T = []
                }
                localStorage.removeItem('analytics.events.buffer')
            }

            function u(e) {
                T.push(e)
            }

            function g() {
                Object.keys(S).forEach((e) => k([], e))
            }

            function v() {
                const t = r.clone(T);
                if (t.length) return T = [], a.post(e.ANALYTICS.URL + '/analytics/events', {
                    data: t
                }).catch((e) => (console.error(e), T.push.apply(t), 0))
            }

            function h(t) {
                t.sid = C;
                const s = r.map(t, (e, t) => `${t}=${e}`).join('&');
                return a.get(e.ANALYTICS.URL + '/analytics/events?' + s).catch((e) => (console.error(e), 0))
            }

            function b(e, t = !0) {
                return h({
                    type: 'pageview',
                    ref: encodeURIComponent(x),
                    url: encodeURIComponent(e)
                }).then(() => {
                    t && (x = e)
                })
            }

            function f(e) {
                return e ? (S[e] || (S[e] = {}), S[e]) : S.impression
            }

            function y(e, t) {
                delete S[e][t]
            }

            function w(e) {
                return e || 'impression'
            }

            function k(e, t) {
                const a = w(t),
                    s = f(a),
                    i = Object.keys(e),
                    o = Object.keys(s),
                    n = r.difference(i, o),
                    l = r.difference(o, i);
                n.forEach((t) => {
                    s[t] = {
                        params: e[t],
                        time: new Date
                    }
                }), l.forEach((e) => {
                    const t = s[e],
                        i = {
                            type: a,
                            dur: new Date - t.time,
                            ref: x,
                            sid: C,
                            dt: d()
                        };
                    'impression' === a && (i.url = e), 'object' == typeof t.params && Object.assign(i, t.params), y(a, e), 0 < i.dur && u(i)
                })
            }
            const S = {
                    impression: {}
                },
                C = t.v4();
            let x = document.referrer,
                T;
            return function() {
                m(), setInterval(v, e.ANALYTICS.BATCH_INTERVAL), o.$on('holonis_closed', () => {
                    g(), p()
                }), o.$on('holonis_blur', () => {
                    g()
                }), o.$on('holonis_navigation', (e, t) => {
                    g(), b(t)
                }), o.$on('$destroy', () => {
                    o.holonisAdRefresh && o.holonisAdRefresh()
                }), o.holonisAdRefresh && o.holonisAdRefresh(), o.holonisAdRefresh = o.$on('holonis_ad_refresh', (e, t) => {
                    const a = c(t.slotName);
                    a && dataLayer.push(a)
                })
            }(), {
                getAdDataLayerInfo: c,
                setAdDataLayerInfo: function(e, t) {
                    o._adDataLayerInfos || (o._adDataLayerInfos = {}), o._adDataLayerInfos[e] = t
                },
                getViews: function(e) {
                    return n.all('analytics/views').get('?' + l.param({
                        vanityUrl: e
                    })).then((e) => e.plain())
                },
                trackPageView: b,
                trackImpressions: k,
                trackCustom: function(t, s) {
                    const i = [Object.assign({
                        type: s,
                        ref: x,
                        sid: C,
                        dt: d()
                    }, t)];
                    return a.post(e.ANALYTICS.URL + '/analytics/events', {
                        data: i
                    }).catch((e) => {
                        console.error(e)
                    })
                },
                stopImpressionTracking: g
            }
        }])
    }(),
    function() {
        angular.module('core').service('Categories', ['Restangular', '$log', '_', function(e, t, a) {
            return {
                all() {
                    return e.all('categories').get('').then((e) => a(e).map((e) => ({
                        name: e.name,
                        id: e.id
                    })).value())
                }, getCategoryById(t) {
                    return e.one('categories', t).get('').then((e) => e.plain())
                }, getCategoryByType(t) {
                    return e.one('/v2/categories/' + t).get().then((e) => e.plain()).catch((e) => (console.error(e), e))
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('collections', ['$log', '$q', '_', function(e, t, a) {
            return {
                collectify(e) {
                    return a.isArray(e) ? e : [e]
                }, initInfiniteCollection(e, s) {
                    function i() {
                        if (this.noMore = !1, this.hashCollection = [], this.collection = [], this.cursor = 0, this.pageLen = s || 6, this.length = 0, this.initialized = !1, 'function' != typeof e) throw new Error('Must pass in a valid update function');
                        this.updateFunction = e
                    }
                    let o;
                    const n = a.bind(this.updateContentList, this);
                    return i.prototype.initCollection = function() {
                        return this.update(0).then(a.bind(function() {
                            return this
                        }, this))
                    }, i.prototype.loadMore = function() {
                        return this.update(this.cursor)
                    }, i.prototype.update = function(e) {
                        const s = e + ':' + this.pageLen;
                        return a.includes(this.hashCollection, s) || this.noMore ? t(a.bind(function(e) {
                            e(this)
                        }, this)) : (this.hashCollection.push(s), this.updateFunction(e, this.pageLen).then(a.bind(function(e) {
                            return this.initialized = !0, this.cursor += this.pageLen, this.updateContentList(e), this.noMore = 0 === e.length, this
                        }, this)))
                    }, i.prototype.updateContentList = function(e) {
                        n(this.collection, e), this.length = this.collection.length
                    }, o = new i, o.initCollection()
                }, updateContentItem(e, t, s) {
                    a.findIndex(e, (e) => e.id === t.id);
                    return void 0 === s || s == e.length ? void e.push(t) : void e.splice(s, 0, t)
                }, updateContentList(e, t) {
                    t.forEach(function(t) {
                        this.updateContentItem(e, t)
                    }, this)
                }, removeContentItem(e, t) {
                    const s = a.findIndex(e, (e) => e.id === t.id); - 1 !== s && e.splice(s, 1)
                }, removeContentList(e, t) {
                    const s = this.removeContentItem;
                    a.each(t, a.partial(s, e))
                }, initInifiniteScroll(e, t, s) {
                    function i(e) {
                        this.page = [], this.collection = e, this.cursor = 0, this.pageLen = t || 10, this.length = this.collection.length
                    }
                    let o, n;
                    const l = a.bind(this.removeContentList, this),
                        r = a.bind(this.updateContentList, this),
                        d = a.bind(this.updateContentItem, this),
                        c = a.bind(this.removeContentItem, this);
                    return i.prototype.loadMore = a.throttle(function() {
                        this.cursor += this.pageLen, this.page = this.collection.slice(0, this.cursor), this.length = this.collection.length, s && s(this.length, this.pageLen)
                    }, 1e3), i.prototype.reset = function() {
                        this.cursor = this.pageLen, this.page = this.collection.slice(0, this.cursor), this.length = this.collection.length
                    }, i.prototype.updateContentList = function(e) {
                        r(this.collection, e), this.reset()
                    }, i.prototype.updateContentItem = function(e) {
                        d(this.collection, e), this.reset()
                    }, i.prototype.removeContentList = function(e) {
                        l(this.collection, e), this.reset()
                    }, i.prototype.removeContentItem = function(e) {
                        c(this.collection, e), this.reset()
                    }, o = this.collectify(e), n = new i(o), n.loadMore(), n
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('Comment', ['$log', 'Restangular', 'collections', function(e, t, a) {
            return {
                createComment(e) {
                    return t.all('comments').post(e).then((e) => a.collectify(e.plain()))
                }, getComments() {
                    return t.all('comments').get('').then((e) => a.collectify(e.plain()))
                }, getComment(e) {
                    return t.all('comments/' + e.id).get('').then((e) => a.collectify(e.plain()))
                }, updateComment(e) {
                    return t.all('comments/' + e.id).customPUT(e).then((e) => a.collectify(e.plain()))
                }, deleteComment(e) {
                    return t.all('comments/' + e.id).customDELETE(e).then((e) => a.collectify(e.plain()))
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('contentCreationService', ['$rootScope', '$log', '$state', '$q', '_', 'Team', 'localStorageService', 'holospace', function(e, t, a, s, i, o, n, l) {
            const r = window.location.host,
                d = window.location.protocol,
                c = {
                    isAuthoringInOwnedSpace() {
                        const e = n.get('contentCreation');
                        return e && e.currentSpace ? l.getCurrentUserSpaces().then((t) => i.some(t, {
                            id: e.currentSpace.id
                        })) : s.resolve(!0)
                    }, getCurrentUrl(e) {
                        return d + '//' + r + '/' + e
                    }
                };
            return c
        }])
    }(),
    function() {
        angular.module('core').factory('ConversionTrackingService', ['$rootScope', '$http', function(e, t) {
            return {
                isEnabled: () => _.includes(e.primarySpace._features, 'item-conversion-tracking-url'),
                request: (e) => !!e && t({
                    method: 'GET',
                    url: e
                }).then((t) => (console.log(`Conversion tracking url ${e} successfully called.`), t)).catch((t) => {
                    console.error(`An error has occurred when calling the conversion tracking url ${e}.`, t)
                })
            }
        }])
    }(),
    function() {
        var e = Math.round;
        angular.module('core').factory('DateTimeService', ['$log', function() {
            return {
                getUnixTime(t) {
                    return t ? e(new Date(t).getTime() / 1e3) : e(new Date().getTime() / 1e3)
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('debounce', ['$timeout', function(e) {
            return function(t, a) {
                let s;
                return function() {
                    const i = this,
                        o = [].slice.call(arguments);
                    return s && e.cancel(s), s = e(() => (s = void 0, t.apply(i, o)), a), s
                }
            }
        }])
    }(),
    function() {
        angular.module('core').service('dfp', ['$window', function(e) {
            const t = e.googletag;
            return {
                createRangeText(e, t) {
                    const a = _.last(t);
                    let s, i;
                    const o = `${a}+`;
                    return e >= a ? o : (t.some((a, o) => !(e >= a) && (s = t[o - 1] || 0, i = a - 1, !0)), `${s}-${i}`)
                }, setTargeting(e) {
                    return e.slot ? (_.forEach(e.targeting, (t, a) => {
                        e.slot.setTargeting(a, t)
                    }), this) : this
                }, refreshAdSlot(e) {
                    t.cmd.push(() => {
                        t.pubads().refresh([e.slot])
                    })
                }, defineAdSlot(e) {
                    const a = new Promise((a, s) => {
                        t.cmd.push(() => {
                            try {
                                e.slot = t.defineSlot(e.adUnitPath, e.adSize, e.slotName), this.applyAdSizeMapping(e.slot, e.adSizeMapping), e.slot.addService(t.pubads()), e.targeting && this.setTargeting(e), t.display(e.slotName), a(e.slot)
                            } catch (e) {
                                s(e)
                            }
                        })
                    });
                    return a
                }, applyAdSizeMapping(e, a) {
                    const s = t.sizeMapping();
                    _.forEach(a, (e) => {
                        s.addSize(e.viewport, e.adSize)
                    });
                    const i = s.build();
                    i && e.defineSizeMapping(i)
                }, displayAdSlot(e) {
                    t.cmd.push(() => {
                        t.display(e)
                    })
                }, prepareEnv(a) {
                    e.staticAds = {}, t.cmd.push(() => {
                        if (a)
                            for (let s = 0; s < a.length; s++) {
                                const i = a[s].slotName,
                                    o = t.defineSlot(a[s].adUnitPath, a[s].adSize, i);
                                this.applyAdSizeMapping(o, a[s].adSizeMapping), o.addService(t.pubads()), e.staticAds[i] = o
                            }
                        t.pubads().enableSingleRequest(), t.pubads().disableInitialLoad(), t.enableServices(), e.dispatchEvent(new Event('dfp.prepare.ready'))
                    })
                }, destroyAdSlots(e, a) {
                    t.cmd.push(() => {
                        a ? t.destroySlots(a) : t.destroySlots()
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('core'), angular.module('core').factory('embedlyAsync', ['jquery', function(e) {
            return e.ajax({
                url: 'https://cdn.embedly.com/widgets/platform.js',
                dataType: 'script',
                cache: !0
            }).then(() => {
                const e = window.embedly;
                return delete window.embedly, e
            })
        }])
    }(),
    function() {
        angular.module('core').config(['constants', (e) => {
            const t = e.CREDENTIALS.FACEBOOK.APP_ID;
            FB.init({
                appId: t,
                status: !0,
                xfbml: !0,
                version: 'v2.10'
            })
        }]).factory('FacebookService', ['$rootScope', '$log', '$q', '_', 'localStorageService', 'holospace', function(e, t, a, s, i, o) {
            function n(e, t) {
                return function(a) {
                    !a || a.error ? t(a && a.error) : e(a)
                }
            }

            function l(t) {
                const s = t || e.Authentication.fbAccessToken(),
                    i = ['id', 'about', 'birthday', 'cover', 'first_name', 'last_name', 'email', 'gender', 'location', 'timezone', 'website', 'accounts{id,name,category,cover,access_token,perms,is_published}'];
                return a((e, t) => {
                    d.api('/me', {
                        fields: i,
                        access_token: s
                    }, n((t) => {
                        t.picture = 'https://graph.facebook.com/' + t.id + '/picture?type=large&width=720&height=720', e(t)
                    }, t))
                })
            }

            function r() {
                return a((e, t) => {
                    d.getLoginStatus(n(e, t), !0)
                })
            }
            const d = FB;
            let c;
            return {
                reauthenticate: function() {
                    return a((t, a) => {
                        const i = window.open('/link/facebook?spaceId=' + e.primarySpace.id + '&space_token=' + e.Authentication.spaceAccessToken().id, 'facebookAuthWindow');
                        if (!i) return a();
                        c && c.cancel();
                        const o = setInterval(() => {
                            if (i.closed) return void c.cancel();
                            let e;
                            try {
                                e = i.location && i.location.pathname
                            } catch (e) {}
                            s(e).endsWith('/apps/facebook') && (i.close(), c.fulfill())
                        }, 100);
                        c = {
                            cancel() {
                                c = void 0, clearInterval(o), a()
                            }, fulfill() {
                                c = void 0, clearInterval(o), t()
                            }
                        }
                    }).then(() => o.getCredentials()).then((e) => {
                        const t = s.find(e, {
                            provider: 'facebook-link'
                        });
                        return t ? void i.set('fbAccessToken', t.credentials.accessToken) : a.reject(new Error('Facebook link not found'))
                    })
                },
                getUserData: l,
                getLoggedInStatus: r,
                getPermissions: function(t, s) {
                    const i = s || e.Authentication.fbAccessToken();
                    return a((e, a) => {
                        d.api('/' + (t || 'me') + '/permissions', {
                            access_token: i
                        }, n(e, a))
                    })
                },
                getUserPages: function(t) {
                    const a = t || e.Authentication.fbAccessToken();
                    return l(a).then((e) => (e.accounts = e.accounts || {
                        data: []
                    }, e.accounts.data = e.accounts.data.filter((e) => !1 !== e.is_published), e.accounts.data.forEach((e) => {
                        e.picture = 'https://graph.facebook.com/' + e.id + '/picture?type=large&width=720&height=720'
                    }), e))
                },
                logout: function() {
                    return r().then((e) => {
                        if ('connected' === e.status) return a((e, t) => {
                            d.logout(n(e, t))
                        })
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('core').service('fileSaver', [function() {
            function e(e, t) {
                return 'undefined' == typeof t ? t = {
                    autoBom: !1
                } : 'object' != typeof t && (console.warn('Depricated: Expected third argument to be a object'), t = {
                    autoBom: !t
                }), t.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type) ? new Blob(['\uFEFF', e], {
                    type: e.type
                }) : e
            }

            function t(e, t, a) {
                const s = new XMLHttpRequest;
                return s.open('GET', e), s.responseType = 'blob', s.onload = function() {
                    l(s.response, t, a)
                }, s.onerror = function() {
                    console.error('could not download file')
                }, s.send(), s
            }

            function s(e) {
                const t = new XMLHttpRequest;
                return t.open('HEAD', e, !1), t.send(), 200 <= t.status && 299 >= t.status
            }

            function i(e) {
                try {
                    e.dispatchEvent(new MouseEvent('click'))
                } catch (t) {
                    console.log(t);
                    const a = document.createEvent('MouseEvents');
                    a.initMouseEvent('click', !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), e.dispatchEvent(a)
                }
            }

            function a(e, o, n) {
                const l = r.URL || r.webkitURL,
                    d = document.createElement('a');
                let a = null;
                return o = o || e.name || 'download', d.download = o, d.rel = 'noopener', 'string' == typeof e ? (d.href = e, d.origin === location.origin ? i(d) : s(d.href) ? a = t(e, o, n) : i(d, d.target = '_blank')) : (d.href = l.createObjectURL(e), setTimeout(() => {
                    l.revokeObjectURL(d.href)
                }, 4E4), setTimeout(() => {
                    i(d)
                }, 0)), a
            }

            function o(o, a, n) {
                let l = null;
                if (a = a || o.name || 'download', 'string' != typeof o) navigator.msSaveOrOpenBlob(e(o, n), a);
                else if (s(o)) l = t(o, a, n);
                else {
                    const e = document.createElement('a');
                    e.href = o, e.target = '_blank', setTimeout(() => {
                        i(e)
                    })
                }
                return l
            }

            function n(e, a, s, i) {
                if (i = i || open('', '_blank'), i && (i.document.title = i.document.body.innerText = 'downloading...'), 'string' == typeof e) return t(e, a, s);
                const o = 'application/octet-stream' === e.type,
                    n = /constructor/i.test(r.HTMLElement) || r.safari,
                    l = /CriOS\/[\d]+/.test(navigator.userAgent);
                if ((l || o && n) && 'object' == typeof FileReader) {
                    const t = new FileReader;
                    t.onloadend = function() {
                        let e = t.result;
                        e = l ? e : e.replace(/^data:[^;]*;/, 'data:attachment/file;'), i ? i.location.href = e : location = e, i = null
                    }, t.readAsDataURL(e)
                } else {
                    const t = r.URL || r.webkitURL,
                        a = t.createObjectURL(e);
                    i ? i.location = a : location.href = a, i = null, setTimeout(() => {
                        t.revokeObjectURL(a)
                    }, 4E4)
                }
            }

            function l(e, t, s, i) {
                return 'download' in HTMLAnchorElement.prototype ? a(e, t, s) : 'msSaveOrOpenBlob' in navigator ? o(e, t, s) : n(e, t, s, i)
            }
            const r = window;
            return {
                saveAs: l
            }
        }])
    }(),
    function() {
        angular.module('core').config(['GooglePlusV2Provider', 'constants', (e, t) => {
            e.init({
                clientId: t.CREDENTIALS.GOOGLE.CLIENT_ID,
                apiKey: t.CREDENTIALS.GOOGLE.API_KEY
            })
        }]).factory('GoogleService', ['GooglePlusV2', function(e) {
            return {
                getUserData: function() {
                    return e.getUser()
                },
                login: function() {
                    return e.login()
                },
                logout: function() {
                    return e.logout()
                }
            }
        }])
    }(),
    function(e, t) {
        const a = {},
            s = {
                sdk: !1,
                ready: !1
            };
        t.module('googleplusv2', []).value('settings', a).value('flags', s).provider('GooglePlusV2', [function() {
            a.clientId = null, this.setClientId = function(e) {
                a.clientId = e
            }, this.getClientId = function() {
                return a.clientId
            }, a.apiKey = null, this.setApiKey = function(e) {
                a.apiKey = e
            }, this.getApiKey = function() {
                return a.apiKey
            }, a.scopes = 'email profile', this.setScopes = function(e) {
                a.scopes = e
            }, this.getScopes = function() {
                return a.scopes
            }, this.setInitCustomOption = function(e, s) {
                return !!t.isString(e) && (a[e] = s, a[e])
            }, this.getInitOption = function(e) {
                return t.isString(e) && a.hasOwnProperty(e) && a[e]
            };
            let e = !1,
                i;
            this.init = function(s) {
                t.isObject(s) && t.extend(a, s), i = new Promise((e) => {
                    gapi.load('client:auth2', e)
                }).then(() => (gapi.client.setApiKey(a.apiKey), gapi.auth2.init({
                    client_id: a.clientId,
                    scope: a.scopes
                }).then(() => {
                    e = !0
                })))
            }, this.$get = ['$q', function(t) {
                function a() {}
                return a.prototype.isReady = function() {
                    return s.ready
                }, a.prototype.login = function() {
                    function a() {
                        const e = gapi.auth2.getAuthInstance();
                        let t = e.isSignedIn.get();
                        e.isSignedIn.listen((e) => {
                            if (e && !1 === t) return t = !0, s.resolve(!0)
                        }), t ? s.resolve(!0) : e.grantOfflineAccess({
                            prompt: 'select_account'
                        }).then(null, (e) => {
                            s.reject(e)
                        })
                    }
                    const s = t.defer();
                    return e ? a() : i.then(a), s.promise
                }, a.prototype.getUser = function() {
                    return i.then(() => gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile())
                }, a.prototype.getToken = function() {
                    return gapi.auth.getToken()
                }, a.prototype.setToken = function(e) {
                    return gapi.auth.setToken(e)
                }, a.prototype.logout = function() {
                    return i.then(() => gapi.auth2.getAuthInstance().signOut())
                }, new a
            }]
        }])
    }(window, angular),
    function() {
        angular.module('core').factory('holoLikesService', ['$log', 'Restangular', '_', function(e, t) {
            return {
                postLike: function(e, a, s) {
                    return t.all('reactions/vote/like').post({
                        instanceId: e,
                        instanceType: a,
                        propagate: s
                    }).then((e) => e.plain())
                },
                deleteLike: function(e, a, s) {
                    return t.all('reactions/vote/like').customDELETE('', {
                        instanceId: e,
                        instanceType: a,
                        propagate: s
                    }).then((e) => e)
                },
                listLike: function(e, a) {
                    return t.all('reactions/list/normalized').getList({
                        spaceId: e,
                        type: a
                    }).then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('holoSaveService', ['$log', 'Restangular', '_', function(e, t) {
            return {
                postSave: function(e, a) {
                    return t.all('reactions/instance/save').post({
                        instanceId: e,
                        instanceType: a
                    }).then((e) => e.plain())
                },
                deleteSave: function(e, a) {
                    return t.all('reactions/instance/save/').customDELETE('', {
                        instanceId: e,
                        instanceType: a
                    }).then((e) => e)
                },
                getSaveById: function(e, a) {
                    return t.one('reactions/findOne?filter=' + (' {"where":{"type":"save","spaceId":"' + e + '","instanceId":"' + a + '"},"fields": {"id":"true"}}')).get().then((e) => e).catch(() => {})
                },
                listSaved: function(e, a) {
                    return t.all('reactions/list/normalized').getList({
                        spaceId: e,
                        type: a
                    }).then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('InstagramService', ['$log', '$q', '_', '$http', 'Restangular', function(e, t, a, s) {
            return {
                embed: function() {
                    s({
                        method: 'GET',
                        url: 'https://api.instagram.com/oembed',
                        params: {
                            URL: 'https://instagram.com/p/BDWfDQbjXUA'
                        },
                        headers: {
                            "Content-Type": 'application/json; charset=utf-8'
                        }
                    }).then((e) => e, (e) => e)
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('intro', ['$rootScope', 'users', '$state', function(e, t, a) {
            const s = {},
                i = introJs();
            s.navigation = function() {
                const e = document.querySelector('#intro-search'),
                    t = document.querySelector('#intro-feeds'),
                    a = document.querySelector('#intro-create'),
                    s = document.querySelector('#intro-shop'),
                    o = document.querySelector('#intro-notifications'),
                    n = document.querySelector('#intro-message'),
                    l = document.querySelector('#intro-menu');
                i.setOptions({
                    steps: [{
                        element: e,
                        intro: '<h3>Search Here</h3>Search and explore trending Holospaces, content, products and services.',
                        tooltipClass: 'tooltip-search',
                        highlightClass: 'highlight-search'
                    }, {
                        element: t,
                        intro: '<h3>Browse Your Feed</h3>Discover what the other Holospaces you\u2019re following are sharing.',
                        tooltipClass: 'tooltip-feeds'
                    }, {
                        element: a,
                        intro: '<h3>Create</h3>Here is where you create the content that builds your brand and markets your products or services.'
                    }, {
                        element: s,
                        intro: '<h3>Shop on Holonis</h3>Explore products and services offered by other Holonis users.',
                        tooltipClass: 'tooltip-shop'
                    }, {
                        element: o,
                        intro: '<h3>Check Your Activity</h3>Notifications alert you about new followers, orders, messages, replies, etc.',
                        tooltipClass: 'tooltip-notifications'
                    }, {
                        element: n,
                        intro: '<h3>Direct Messages</h3>View direct messages between you and other Holospaces.',
                        tooltipClass: 'tooltip-message'
                    }, {
                        element: l,
                        intro: '<h3>Navigate Your Menu</h3>Update your settings, add Holospaces, connect your apps, and more.',
                        tooltipClass: 'tooltip-menu'
                    }]
                }), i.start()
            }, s.navigationMobile = function() {
                const e = document.querySelector('#intro-feeds-mobile'),
                    t = document.querySelector('#intro-search-mobile'),
                    s = document.querySelector('#intro-create-mobile'),
                    o = document.querySelector('#intro-shop-mobile'),
                    n = document.querySelector('#intro-notifications-mobile'),
                    l = document.querySelector('#intro-menu-mobile-feeds'),
                    r = document.querySelector('#intro-menu-mobile-holospace');
                i.setOptions({
                    steps: [{
                        element: e,
                        intro: '<h2>Browse Your Feed</h2>Discover what the other Holospaces you\u2019re following are sharing.',
                        tooltipClass: 'tooltip-feeds-mobile'
                    }, {
                        element: o,
                        intro: '<h2>Shop on Holonis</h2>Explore products and services offered by other Holonis users.',
                        tooltipClass: 'tooltip-shop-mobile'
                    }, {
                        element: s,
                        intro: '<h2>Create</h2>Here is where you create the content that builds your brand and markets your products or services.',
                        tooltipClass: 'tooltip-create-mobile'
                    }, {
                        element: t,
                        intro: '<h2>Search and Explore Here</h2>Discover Holospaces, eCommerce Items, Pages, Posts and Channels.',
                        tooltipClass: 'tooltip-search-mobile'
                    }, {
                        element: n,
                        intro: '<h2>Check Your Activity</h2>Notifications alert you about new followers, orders, messages, replies, etc.',
                        tooltipClass: 'tooltip-notification-mobile'
                    }, {
                        element: 'feeds' === a.current.name ? l : r,
                        intro: '<h2>Navigate your Menu</h2> Update your settings, add Holospaces, connect other apps, and more.',
                        tooltipClass: 'tooltip-menu-mobile'
                    }],
                    showBullets: !1
                }), i.onexit(() => {
                    document.querySelector('.slideRoute').style.overflow = 'auto'
                }), document.querySelector('.slideRoute').style.overflow = 'auto', i.start()
            };
            const o = (e) => {
                const t = document.querySelector('#intro-holospace'),
                    a = document.querySelector('#intro-add-holospace'),
                    s = document.querySelector('#intro-messages'),
                    i = document.querySelector('#intro-apps'),
                    o = document.querySelector('#intro-insights'),
                    n = document.querySelector('#intro-team');
                return introJs().setOptions({
                    scrollToElement: !1,
                    steps: [{
                        element: t,
                        intro: '<h3>Here\u2019s Your Holospace</h3>Showcase your personal brand with a bio, images, links to other social profiles, etc.',
                        position: e,
                        tooltipClass: 'intro-menu-tooltip intro-menu-big',
                        highlightClass: 'intro-menu-highlight'
                    }, {
                        element: a,
                        intro: '<h3>Create More Holospaces</h3>Create and manage up to five Holospaces under one account.',
                        position: e,
                        tooltipClass: 'intro-menu-tooltip intro-menu-big',
                        highlightClass: 'intro-menu-highlight'
                    }, {
                        element: s,
                        intro: '<h3>Check Your Messages</h3>View direct messages between you and other Holospaces.',
                        position: e,
                        tooltipClass: 'intro-menu-tooltip intro-menu-med',
                        highlightClass: 'intro-menu-highlight'
                    }, {
                        element: o,
                        intro: '<h3>Insights</h3>Learn from your data to understand what\u2019s working and what\u2019s not for your audience and customers.',
                        position: e,
                        tooltipClass: 'intro-menu-tooltip intro-menu-med',
                        highlightClass: 'intro-menu-highlight'
                    }, {
                        element: i,
                        intro: '<h3>Connect Other Apps</h3>Connect your other apps to your Holospace, like Facebook, Stripe, PayPal, and Twitter.',
                        position: e,
                        tooltipClass: 'intro-menu-tooltip intro-menu-med',
                        highlightClass: 'intro-menu-highlight'
                    }, {
                        element: n,
                        intro: '<h3>Build Your Team of Creators</h3>Invite others to become authors and create content for your Holospace.',
                        position: e,
                        tooltipClass: 'intro-menu-tooltip intro-menu-top',
                        highlightClass: 'intro-menu-highlight'
                    }]
                })
            };
            return s.menu = (e) => {
                const a = document.querySelector('#main-menu'),
                    s = document.querySelector('html'),
                    i = document.querySelector('body'),
                    n = o(e ? 'bottom' : 'left');
                a.scrollTop = 0, n.onbeforechange((e) => {
                    const t = s.offsetHeight,
                        i = e.offsetTop;
                    let o = Math.max(0, i - t);
                    angular.element('#intro-menu-style').remove(), 0 < o && (o += e.clientHeight + 30, angular.element('head').append(`<style id="intro-menu-style">.introjs-fixedTooltip { transform: translateY(-${o}px) }</style>`)), a.scrollTop = o
                }), n.onafterchange(() => {
                    $('.introjs-tooltip').click((e) => {
                        e.preventDefault(), e.stopPropagation()
                    })
                }), n.onexit(() => {
                    t.finishTutorial('optionsMenu'), a.classList.remove('main-menu-noscroll'), i.classList.remove('introjs-visible')
                }), a.classList.add('main-menu-noscroll'), i.classList.add('introjs-visible'), n.start(), $('.introjs-overlay').click((e) => {
                    e.stopPropagation()
                })
            }, s.createType = function() {
                const e = document.querySelector('#intro-post'),
                    a = document.querySelector('#intro-page'),
                    s = document.querySelector('#intro-ecommerce'),
                    o = document.querySelector('#intro-channel');
                i.setOptions({
                    steps: [{
                        element: e,
                        intro: '<h3>Discover Posts</h3> A quick way to share a status, image, video, or link to your followers.'
                    }, {
                        element: a,
                        intro: '<h3>Discover Pages</h3> Create anything from a blog, article, or photo gallery. You can even embed and sell your products directly from your content.'
                    }, {
                        element: s,
                        intro: '<h3>Discover E-Commerce</h3>Want to make money? Get started by selling your products or services here.'
                    }, {
                        element: o,
                        intro: '<h3>Discover Channels</h3>Channels let you organize your Pages and Posts into topics, themes, or categories so users can better navigate your content.'
                    }]
                }), i.onexit(() => {
                    t.finishTutorial('contentCreation')
                }), i.start()
            }, s.createTypeMobile = function() {
                const e = document.querySelector('#intro-post'),
                    a = document.querySelector('#intro-page'),
                    s = document.querySelector('#intro-ecommerce'),
                    o = document.querySelector('#intro-channel');
                i.setOptions({
                    steps: [{
                        element: e,
                        intro: '<h2>Discover Posts</h2> A quick way to share a status, image, video, or link to your followers.',
                        tooltipClass: 'create-type-mobile'
                    }, {
                        element: a,
                        intro: '<h2>Discover Pages</h2> Create anything from a blog, article, or photo gallery. You can even embed and sell your products directly from your content.',
                        tooltipClass: 'create-type-mobile'
                    }, {
                        element: s,
                        intro: '<h2>Discover eCommerce</h2> Want to make money? Get started by selling your products or services here.',
                        tooltipClass: 'create-type-mobile create-type-commerce'
                    }, {
                        element: o,
                        intro: '<h2>Discover Channels</h2>Channels let you organize your Pages and Posts into topics, themes, or categories so users can better navigate your content.',
                        tooltipClass: 'create-type-channel-mobile'
                    }],
                    showBullets: !1
                }), i.onexit(() => {
                    t.finishTutorial('contentCreation')
                }), i.start()
            }, s.editHolospace = function() {
                const s = document.querySelector('#intro-avatar'),
                    o = document.querySelector('#intro-cover'),
                    n = document.querySelector('#holospaceName'),
                    l = document.querySelector('#intro-tagline'),
                    r = document.querySelector('#intro-links'),
                    d = document.querySelector('#intro-about');
                i.setOptions({
                    steps: [{
                        element: s,
                        intro: '<h3>Update Your Profile Picture</h3> Add your logo or a personal photo to be the face of your Holospace.'
                    }, {
                        element: o,
                        intro: '<h3>Add a Cover Image</h3> Showcase your brand by adding a cover image to your Holospace.',
                        tooltipClass: 'tooltip-cover'
                    }, {
                        element: n,
                        intro: '<h3>Edit Your Name</h3> Want to change your name? Edit here. (This will not change the URL associated to your account.)',
                        highlightClass: 'holospace-name-intro'
                    }, {
                        element: l,
                        intro: '<h3>Add a Tagline</h3>Create a tagline to grab people\u2019s attention and let them know what you\u2019re all about.',
                        highlightClass: 'holospace-tagline-intro'
                    }, {
                        element: r,
                        intro: '<h3>Link Your Accounts</h3> Add links to your other profiles so users know where to find out more about you.',
                        highlightClass: 'holospace-links-intro'
                    }, {
                        element: d,
                        intro: '<h3>Add an About Section</h3> Here is where you show the world what you\u2019re all about. Showcase your personal brand with videos, text, images, maps, and more.',
                        highlightClass: 'holospace-about-intro'
                    }]
                }), i.onexit(() => {
                    t.finishTutorial('editHolospace'), a.go('holospace.about', {
                        holospaceName: e.primarySpace.vanityUrl
                    })
                }), i.start()
            }, s.editHolospaceMobile = function() {
                const s = document.querySelector('#intro-avatar'),
                    o = document.querySelector('#intro-cover'),
                    n = document.querySelector('#holospaceName'),
                    l = document.querySelector('#intro-tagline'),
                    r = document.querySelector('#intro-links'),
                    d = document.querySelector('#intro-about');
                i.setOptions({
                    steps: [{
                        element: s,
                        intro: '<h2>Update Your Profile Picture</h2> Add your logo or a personal photo to be the face of your Holospace.',
                        tooltipClass: 'avatar-intro-tooltip-mobile'
                    }, {
                        element: o,
                        intro: '<h2>Add a Cover Image</h2> Showcase your brand by adding a cover image to your Holospace.',
                        tooltipClass: 'cover-intro-tooltip-mobile'
                    }, {
                        element: n,
                        intro: '<h2>Edit Your Name</h2> Want to change your name? Edit here. (This will not change the URL associated to your account.)',
                        highlightClass: 'holospace-name-intro',
                        tooltipClass: 'name-intro-tooltip-mobile'
                    }, {
                        element: l,
                        intro: '<h2>Add a Tagline</h2>Create a tagline to grab people\u2019s attention and let them know what you\u2019re all about.',
                        tooltipClass: 'tagline-intro-tooltip-mobile'
                    }, {
                        element: r,
                        intro: '<h2>Link Your Accounts</h2> Add links to your other profiles so users know where to find out more about you.',
                        highlightClass: 'holospace-links-intro',
                        tooltipClass: 'links-intro-tooltip-mobile'
                    }, {
                        element: d,
                        intro: '<h2>Add an About Section</h2> Here is where you show the world what you\'re all about. Showcase your personal brand with videos, text, images, maps, and more.',
                        tooltipClass: 'about-intro-tooltip-mobile'
                    }],
                    showBullets: !1
                }), i.onexit(() => {
                    t.finishTutorial('editHolospace'), a.go('holospace.home', {
                        holospaceName: e.primarySpace.vanityUrl
                    })
                }), i.start()
            }, s
        }])
    }(),
    function() {
        angular.module('core').factory('isotope', ['$log', '$window', function(e, t) {
            if (t.Isotope) {
                t._thirdParty.Isotope = t.Isotope || {};
                try {
                    delete t.Isotope
                } catch (a) {
                    t.Isotope = void 0
                }
            }
            const a = t._thirdParty.Isotope;
            return a
        }])
    }(),
    function() {
        angular.module('core').factory('jquery', ['$log', '$window', function(e, t) {
            if (t.jQuery) {
                t._thirdParty.jQuery = t.jQuery || {};
                try {
                    delete t.jQuery
                } catch (a) {
                    t.jQuery = void 0
                }
            }
            const a = t._thirdParty.jQuery;
            return a
        }])
    }(),
    function() {
        angular.module('core').factory('LikesService', ['$log', '_', '$timeout', 'Authentication', 'holoLikesService', 'Restangular', 'OnboardingService', function(e, t, a, s, i, o) {
            const n = {};
            return n.like = function(e) {
                const t = s.currentUser();
                return t ? i.postLike(e.id, e.type) : a(s.showLoginPrompt())
            }, n.unlike = function(e) {
                const t = s.currentUser();
                return t ? i.deleteLike(e.id, e.type) : a(s.showLoginPrompt())
            }, n.toggle = function(e, t) {
                const a = {
                    type: e.type,
                    id: e.content.id
                };
                return t ? n.like(a) : n.unlike(a)
            }, n.listSpaces = function(e, t, a, s) {
                return o.all('reactions/' + e + '/spaces').get('', {
                    limit: s || 15,
                    page: t,
                    term: a
                }).then((e) => e.plain())
            }, n
        }])
    }(),
    function() {
        angular.module('core').service('loadScript', ['constants', function(e) {
            return {
                loadScript(e, t) {
                    const a = document.createElement('script');
                    a.type = 'text/javascript', a.readyState ? a.onreadystatechange = function() {
                        ('loaded' === a.readyState || 'complete' === a.readyState) && (a.onreadystatechange = null, t())
                    } : a.onload = function() {
                        t()
                    }, a.src = e, document.getElementsByTagName('head')[0].appendChild(a)
                }, loadAllScripts() {
                    const t = [e.GOOGLE_MAP.URL];
                    t.forEach((e) => {
                        this.loadScript(e, () => {})
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('media', ['$rootScope', '$q', '$log', '$timeout', '$uibModal', 'constants', 'Restangular', 'Content', 'ChannelService', 'PostService', 'Videos', '_', 'holospace', 'AutoSaving', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u) {
            function g(e) {
                return n.all('media/embedly/embed').get('?url=' + e).then((e) => e.plain())
            }

            function v(e) {
                const t = p.assign({}, e);
                return t.source = t.source.replace('https://cdn.filepicker.io/api/file/', 'https://process.fs.holonis.com/'), n.all('media').post(t).then((e) => e.plain())
            }
            const h = filestack.init(o.CREDENTIALS.FILESTACK);
            return {
                createMedia: v,
                getMediaBySpaceId: function(e) {
                    return n.all('media/' + e + '/space').get('').then((e) => e.plain())
                },
                getMediaById: function(e) {
                    return n.all('media/' + e).get('').then((e) => e.plain())
                },
                updateMedia: function(e) {
                    const t = e.id;
                    return n.all('media/' + t).customPUT(e).then((e) => e.plain())
                },
                pickFile: function(a, i, o, n, l) {
                    let r, d, c;
                    const p = t.defer(),
                        m = {
                            fromSources: ['local_file_system', 'facebook', 'instagram', 'gmail', 'googledrive', 'dropbox', 'box', 'evernote', 'imagesearch', 'webcam', 'url'],
                            disableTransformer: !0,
                            modalSize: [720, 550],
                            maxFiles: l ? 20 : 1,
                            accept: 'image/*',
                            onOpen() {
                                l && (r = setInterval(() => {
                                    const e = document.querySelector('.fsp-summary__body > div');
                                    if (!e || e.dataset.hasSortable) return;
                                    e.dataset.hasSortable = !0, c && c.destroy();
                                    const t = $(e).find('.fsp-summary__action--remove'),
                                        a = $(e).find('.fsp-summary__item');
                                    a.map((e) => a[d[e]]).appendTo(e);
                                    t.off('click').on('click', function(t) {
                                        const a = $(t.currentTarget).parents('.fsp-summary__item'),
                                            s = $(e).find('.fsp-summary__item').index(a),
                                            i = d[s];
                                        d.splice(s, 1), d = d.map((e) => e > i ? e - 1 : e)
                                    }), c = Sortable.create(e, {
                                        draggable: '.fsp-summary__item',
                                        animation: 150,
                                        ghostClass: 'image-sortable-ghost',
                                        onUpdate(e) {
                                            const t = d.splice(e.oldIndex, 1);
                                            d.splice(e.newIndex, 0, t[0])
                                        }
                                    })
                                }, 100))
                            },
                            onClose() {
                                clearInterval(r), s(() => {
                                    p.reject('Closed FileStack.'), e.pickMediaFile = !1
                                })
                            }
                        };
                    return a && (m.transformations = {
                        crop: {
                            aspectRatio: a,
                            force: !0
                        },
                        circle: !0
                    }), l && (d = [], m.onFileUploadStarted = function() {
                        d.push(d.length)
                    }), t.resolve(Promise.race([h.pick(m, {
                        location: 'gcs',
                        access: 'public'
                    }), p.promise])).then((e) => t.resolve(n && n(e.filesUploaded)).then(() => e.filesUploaded)).then((e) => {
                        if (!l) return v({
                            source: e[0].url,
                            spaceId: o,
                            type: e[0].mimetype
                        });
                        const a = e.map((e) => v({
                            source: e.url,
                            spaceId: o,
                            type: e.mimetype
                        }));
                        return t.all(a)
                    }).then((t) => (e.pickMediaFile = !1, l ? {
                        result: t,
                        indexes: d
                    } : t)).catch((a) => (e.pickMediaFile = !1, t.reject(a)))
                },
                storeUrl: function(e, s, i) {
                    s || a.error('file: media.service.js, function: pickFile, message: bucketId is not defined. Thus storing it in filestack-default folder');
                    return t.resolve(h.storeURL(e, {
                        location: 'gcs',
                        container: s || 'filestack-default',
                        access: 'public'
                    })).then((e) => v({
                        source: e.url,
                        spaceId: i,
                        type: e.type
                    })).catch((e) => (a.error('Create Media Error: ', e), t.reject(e)))
                },
                embedUrl: g,
                openEmbedModal: function(e, a, o, n, d, m, v) {
                    const h = t.defer();
                    return i.open({
                        templateUrl: 'public/modules/core/templates/embed-modal.template.html',
                        controller: ['$scope', '$uibModalInstance', 'PageService', 'ItemService', function(i, b) {
                            function f() {
                                if (!S.embedResult || 'error' == S.embedResult.type) return !1;
                                S.addButtonDisabled = !0;
                                const e = l.upsertContent({
                                    caption: '',
                                    content: '',
                                    source: S.embedUrl,
                                    thumbnail: S.embedResult.thumbnail_url,
                                    mediaType: S.embedResult.type,
                                    type: 'embedly',
                                    embedlyData: S.embedResult
                                }, o, a).then((e) => (b.dismiss(), h.resolve(e)));
                                u.track(e)
                            }

                            function y(e) {
                                const a = function(e) {
                                        const t = p.pick(e, ['id', 'type']);
                                        return -1 < ['product', 'service'].indexOf(t.type) && (t.type = 'item'), t
                                    },
                                    s = p(n).map(a).value(),
                                    i = p(e).map(a).value(),
                                    l = p.differenceBy(i, s, 'id'),
                                    d = p.differenceBy(s, i, 'id'),
                                    c = [l.length ? r.addContents(o, l) : void 0, d.length ? r.removeContents(o, d) : void 0];
                                return t.all(c).then(() => (n.length = e.length, e.forEach((e, t) => {
                                    n[t] = e
                                }), b.dismiss(), h.resolve(e)))
                            }

                            function w(e) {
                                return s(() => (b.dismiss(), h.resolve(e)))
                            }

                            function k(e) {
                                const s = e.map((e) => {
                                    const t = p.includes(['service', 'product'], e.type) ? 'item' : e.type,
                                        s = {
                                            type: 'embed',
                                            source: t + ':' + e.id,
                                            caption: 'post' === a ? '' : e.name,
                                            content: '',
                                            vanityUrl: e.vanityUrl
                                        };
                                    return l.upsertContent(s, o, a)
                                });
                                return t.all(s).then((e) => (b.dismiss(), h.resolve(e)))
                            }
                            const S = this;
                            if (S.spaceId = e, S.vanity = v, S.selectableType = d ? 'multiple' : 'single', S.tabs = [], S.template = a, 'post' === S.template && S.tabs.push({
                                    title: 'Embed',
                                    url: 'public/modules/core/templates/tab-embed.template.html'
                                }), 'post' !== S.template) {
                                S.tabs.push({
                                    title: 'Posts',
                                    url: 'public/modules/core/templates/posts.template.html'
                                })
                            }
                            S.tabs.push({
                                title: 'Pages',
                                url: 'public/modules/core/templates/pages.template.html'
                            });
                            if (S.tabs.push({
                                    title: 'Items',
                                    url: 'public/modules/core/templates/items.template.html'
                                }), 'channel' !== S.template) {
                                const t = {
                                    title: 'Videos',
                                    url: 'public/modules/core/templates/videos.template.html'
                                };
                                S.tabs.push(t), c.getVideoCountBySpaceId(e).then((e) => {
                                    e && (t.title += ' (' + e + ')')
                                })
                            }
                            S.selectedCards = n ? n.slice(0) : [], S.contentType = a, S.addButtonDisabled = !1, S.embedResult = null, S.embedContent = null, S.embedStatus = null, S.embedSource = null, S.embedUrl = '', S.cancel = function() {
                                return b.dismiss(), h.reject()
                            }, S.enterSubmit = function(t) {
                                13 == t.keyCode && (S.showLoader = !0, S.embedUrlChange())
                            }, setTimeout(() => {
                                $('#embed-paste-link').on('paste', () => {
                                    setTimeout(() => {
                                        S.showLoader = !0, S.embedUrlChange()
                                    }, 100)
                                })
                            }, 100), S.done = function() {
                                const e = S.selectedCards;
                                if (S.embedUrl) return void('valid' === S.embedStatus && f());
                                if (S.selectedCards.length) {
                                    if (m) return w(e);
                                    const t = 'channel' === a ? y(e) : k(e);
                                    u.track(t)
                                }
                            }, S.embedUrlChange = function() {
                                return S.embedResult = null, S.embedContent = null, S.embedSource = null, S.embedUrl ? void g(S.embedUrl).then((e) => (S.embedResult = e, 'error' === e.type ? (S.embedStatus = 'invalid', S.showLoader = !1, !1) : void(S.embedSource = S.embedUrl, S.embedStatus = 'valid', S.showLoader = !1))) : (S.embedStatus = null, !1)
                            }
                        }],
                        controllerAs: 'vm',
                        size: 'sm',
                        windowClass: 'holo-modal-full z-index-max'
                    }), h.promise
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('medium', ['$log', 'collections', '_', '$rootScope', function(e, t, a) {
            function s(e, s, i) {
                s.bindOptions = s.bindOptions || i, s.id = s.id || a.uniqueId(), e && t.updateContentItem(e, s, s.position)
            }
            const i = {
                disableEditing: !0,
                targetBlank: !0,
                toolbar: {
                    allowMultiParagraphSelection: !0,
                    buttons: ['bold', 'italic', 'underline', 'indent', 'outdent', 'justifyLeft', 'justifyCenter', 'justifyRight', 'orderedlist', 'unorderedlist', 'anchor', 'quote', 'subscript', 'superscript'],
                    diffLeft: 0,
                    diffTop: -10,
                    firstButtonClass: 'medium-editor-button-first',
                    lastButtonClass: 'medium-editor-button-last',
                    relativeContainer: null,
                    standardizeSelectionStart: !1,
                    static: !1,
                    align: 'center',
                    sticky: !1,
                    updateOnEmptySelection: !1
                },
                autoLink: !0
            };
            return {
                initMediumContentList: function(e, t, o) {
                    a.each(t, (t) => {
                        t.bindOptions && t.bindOptions.exclude || s(e, t, o || i)
                    })
                },
                changeBindOptionsList: function(e, t) {
                    a.each(e, (i) => {
                        i.bindOptions = a.extend({}, i.bindOptions, t), s(e, i)
                    })
                },
                getMediumContent: function(e, t) {
                    if (!e) throw new Error('Invalid medium content');
                    return e.bindOptions = e.bindOptions || t, e.id = e.id || a.uniqueId(), e
                },
                clean: function(e) {
                    return a(e).omit('bindOptions').defaults({
                        title: '',
                        content: ''
                    }).value()
                }
            }
        }])
    }(),
    function() {
        const e = '@Holonis',
            t = 'website',
            a = [null, 'og', 'twitter'],
            s = ['title', 'description', 'image', 'url'],
            i = {};
        i.title = function(e) {
            return _.get(e, 'meta.title') || e.title || e.name
        }, i.description = function(e) {
            const t = _.get(e, 'meta.description') || e.description || '';
            return t ? t.substring(0, 250) : ''
        }, i.image = function(e) {
            return e.image || 'https://storage.googleapis.com/default-production/Holonis_share_banner-1200x627__02.jpg'
        }, i.url = function(e) {
            const t = e.url;
            return t ? _.replace(t, '#!/', '') : window.location.href
        }, angular.module('core').service('Meta', ['$rootScope', 'constants', function(o, n) {
            function l(e, t) {
                o.metaTags[e] = t
            }

            function r(e, t) {
                o.metaTagsProperties[e] = t
            }

            function d() {
                o.metaTags = {}, r('fb:app_id', n.CREDENTIALS.FACEBOOK.APP_ID), l('og:locale', 'en_US'), l('og:site_name', 'Holonis'), l('og:ttl', 345600), l('twitter:card', 'summary_large_image')
            }

            function c(o, n) {
                d(), a.map((e) => {
                    s.map((t) => {
                        const a = e ? [e, t].join(':') : t,
                            s = i[t],
                            n = s(o);
                        l(a, n)
                    })
                });
                let c = (_.get(o, 'meta.tags') || o.tags || []).join(',');
                if (!c && o.categories && o.categories.length && (c = o.categories.map((e) => e.title).join(',')), l('keywords', c), l('creator', o.creator || e), o.published_time && l('article:published_time', o.published_time), o.modified_time && l('article:modified_time', o.modified_time), o.tag && l('article:tag', o.tag), o.author && r(n ? 'article:publisher' : 'article:author', o.author), o.video && l('og:video', o.video), o.contentDeleted && l('robots', 'noindex,nofollow'), o.author_name && r('article:author_name', o.author_name), !_.isEmpty(o.coverDimensions))
                    if ('object' == typeof o.coverDimensions) o.coverDimensions.width && o.coverDimensions.height ? (l('og:image:width', o.coverDimensions.width), l('og:image:height', o.coverDimensions.height)) : console.warn('Cover Dimensions are not provided');
                    else if ('string' == typeof o.coverDimensions) {
                    const e = o.coverDimensions.split(',');
                    1 <= e.length ? (l('og:image:width', e[0]), l('og:image:height', e[1])) : console.warn('Cover Dimensions are not provided')
                } else console.warn('Cover Dimensions are not provided');
                switch (l('twitter:site', o.tweetHandle || e), l('twitter:creator', o.creator || e), o.geo && (l('geo.position', [location.latitude, location.longitude].join(';')), l('geo.placename', o.name)), o.type) {
                    case 'page':
                    case 'post':
                    case 'channel':
                        {
                            r('og:type', 'article');
                            break
                        }
                    case 'item':
                    case 'product':
                        {
                            r('og:type', 'product'), l('og:price:amount', o.amount), l('og:price:currency', o.currency), l('og:availability', o.availability);
                            break
                        }
                    case 'space':
                        {
                            const e = o.provider && 'localstack' !== o.provider ? t : 'profile';
                            r('og:type', e);
                            break
                        }
                    default:
                        r('og:type', t);
                }
            }
            return o.metaTags || (o.metaTags = {}), o.metaTagsProperties || (o.metaTagsProperties = {}), {
                unset: function(e) {
                    delete o.metaTags[e]
                },
                set: l,
                setByContent: c,
                setPageMetaTags: c,
                AddDefaultMetaObject: c
            }
        }])
    }(),
    function() {
        angular.module('core').factory('moment', ['$log', '$window', function(e, t) {
            if (t.moment) {
                t._thirdParty.moment = t.moment || {};
                try {
                    delete t.moment
                } catch (a) {
                    t.moment = void 0
                }
            }
            const a = t._thirdParty.moment;
            return a
        }])
    }(),
    function() {
        angular.module('core').factory('notifyService', ['toaster', function(e) {
            return {
                error: function(t) {
                    e.pop({
                        type: 'error',
                        title: 'Error',
                        body: t
                    })
                },
                info: function(t) {
                    e.pop({
                        type: 'info',
                        title: 'Info',
                        body: t
                    })
                },
                success: function(t) {
                    e.pop({
                        type: 'success',
                        title: 'Success',
                        body: t
                    })
                },
                warning: function(t) {
                    e.pop({
                        type: 'warning',
                        title: 'Warning',
                        body: t
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('Open', function() {
            function e(e) {
                let o, n;
                t.test(e) && (o = s.exec(e), n = o[2] ? 'fb://' + o[2].slice(0, -1) + '/' + o[3] : 'fb://profile/' + o[1]), a.test(e) && (o = i.exec(e), n = o[2] ? 'twitter://status?id=' + o[2] : 'twitter://user?id=' + o[1]), n && (window.location = n)
            }
            const t = /(?:facebook|fb).com/,
                a = /twitter.com/,
                s = /^(?:http(?:s)?:\/\/)?(?:www\.)?(?:facebook|fb)\.com\/(?:(?:\w)*)?(?:pages\/|profile\.php\?id=)?(?:[\w-]*\/)*?(?:\/)?([\w.-]*)(?:\/(posts|photos|videos)?(?:\/)([\w.-]*)?)?/,
                i = /^(?:http(?:s)?:\/\/)?(?:www\.)?twitter\.com\/(?:(?:\w)*)?(?:[\w-]*\/)*?(?:\/)?([\w.-]*)(?:\/\w*?(?:\/)([\w.-]*)?)?/;
            return {
                external: function(t) {
                    const a = Date.now();
                    setTimeout(() => {
                        100 < Date.now - a || window.open(t, '_system')
                    }, 25), 'ontouchstart' in window && e(t)
                }
            }
        })
    }(),
    function() {
        function e(e, t, a, s) {
            function i(e) {
                const a = t.is('geoCategoryPage') ? 1 : 0;
                if (e < a) return;
                t.params.page && (t.params.page = 1 >= e ? void 0 : e);
                let s = window.location.origin + t.href(t.current.name, t.params);
                return !t.params.page && 1 < e && (s += '/' + e), s.replace(/\/$/, '').replace(/[^:]\/\//g, '/')
            }

            function o(a) {
                s(() => {
                    e.$evalAsync(() => {
                        const e = _.assign({}, t.params);
                        e.page = void 0;
                        const s = window.location.origin + t.href(t.current.name, e);
                        a || (a = 1), t.current.canonical = s.replace(/\/$/, ''), t.current.next = i(+a + 1), t.current.prev = !!(1 < a) && i(a - 1)
                    })
                })
            }
            return {
                cursor: function(e) {
                    let s;
                    e = isNaN(e) ? 0 : e, 1 < e && (s = a.page ? '^.page' : t.current.name + '.page', t.go(s, {
                        page: e
                    }, {
                        notify: !1
                    })), o(e)
                },
                updatePaginationRelLinks: o
            }
        }
        e.$inject = ['$rootScope', '$state', '$stateParams', '$timeout'], angular.module('core').service('PagePagination', e), e.$inject = ['$rootScope', '$state', '$stateParams', '$timeout']
    }(),
    function() {
        angular.module('core').factory('pixels', ['$rootScope', '$stateParams', 'localStorageService', '$log', function(e, t, a, s) {
            e.pixelData || (e.pixelData = {});
            const i = function({
                    trackerName: e
                }) {
                    return s.debug(`Removing GA Tracker named ${e}`), new Promise((t) => {
                        ga(`${e}.remove`), t()
                    })
                },
                o = function({
                    pixelId: e,
                    trackerName: t
                }) {
                    return new Promise((a) => {
                        ga('create', e, 'auto', t), ga((e) => {
                            a(e)
                        })
                    })
                },
                n = ({
                    contents: e
                }) => {
                    let t;
                    return e.forEach((e, a) => {
                        t = _.join([`&ed[line_items][${a}][product_name]=${e.name}`, `&ed[line_items][${a}][product_id]='${e.id}'`, `&ed[line_items][${a}][product_price]=${e.item_price}`, `&ed[line_items][${a}][product_quantity]=${e.quantity}`])
                    }), t
                },
                l = ({
                    eventType: t,
                    params: a,
                    pixelId: s
                }) => {
                    s = _.toString(s);
                    let i = `https://www.facebook.com/tr?id=${s}`;
                    switch (t) {
                        case 'Purchase':
                            i = _.join([i, `&ev=Purchase&cd[contents]=${encodeURIComponent(JSON.stringify(a.contents))}`, `&cd[content_category]=${a.content_category}`, `&cd[content_type]=${a.content_type}`, `&cd[value]=${a.value}`, `&cd[currency]=${_.trim(a.currency)}`, `&dl=${a.pixelLocation}`], '');
                            break;
                        case 'ViewContent':
                            i = _.join([i, `&ev=ViewContent&cd[content_name]=${encodeURIComponent(a.content_name)}`, `&dl=${a.pixelLocation}`], '');
                            break;
                        case 'InitiateCheckout':
                            i = _.join([i, `&ev=InitiateCheckout&cd[content_name]=${encodeURIComponent(a.content_name)}`, `&cd[content_category]=${a.content_category}`, `&cd[content_ids]=${a.content_ids}`, `&cd[content_type]=${a.content_type}`, `&cd[value]=${_.round(a.value*a.num_items,2)}`, `&cd[num_items]=${a.num_items}`, `&cd[currency]=${_.trim(a.currency)}`, `&dl=${a.pixelLocation}`], '');
                            break;
                        default:
                    }
                    e.pixelData.facebook = i
                },
                r = ({
                    eventType: t,
                    params: a,
                    pixelId: s
                }) => {
                    s = _.toString(s);
                    let i = `https://ct.pinterest.com/v3/?tid=${s}`;
                    switch (t) {
                        case 'Purchase':
                            i = _.join([i, '&event=checkout', `&ed[value]=${a.value}`, `&ed[currency]=${_.trim(a.currency)}`, `&ed[order_quantity]=${a.num_items}`, n({
                                contents: a.contents
                            }), '&noscript=1"/>'], '');
                            break;
                        case 'ViewContent':
                            i = _.join([i, '&event=PageVisit'], '');
                            break;
                        case 'InitiateCheckout':
                            i = _.join([i, '&event=AddToCart', `&ed[value]=${_.round(a.value*a.num_items,2)}`, `&ed[currency]='${_.trim(a.currency)}'`, `&ed[order_quantity]=${a.num_items}`, '&noscript=1"/>'], '');
                            break;
                        default:
                    }
                    e.pixelData.pinterest = i
                },
                d = async({
                    eventType: e,
                    params: a,
                    pixelId: n
                }) => {
                    n = _.toString(n);
                    const l = `${t.holospaceName?t.holospaceName:t.space}-tracker`,
                        r = localStorage.getItem('ga_trackerId'),
                        d = _.last(_.split(a.pixelLocation, '/'));
                    if (!ga) return void s.error('ga is not loaded!');
                    r && r !== l && i({
                        trackerName: r
                    });
                    let c = ga.getByName(l);
                    switch (c || (s.debug(`creating GA Tracker named ${l} with pixelId - ${n}`), c = await o({
                        pixelId: n,
                        trackerName: l
                    }), void 0 === c && (s.debug(`Updating ga_trackerId to ${l}`), c = ga.getByName(l), localStorage.setItem('ga_trackerId', l))), e) {
                        case 'Purchase':
                            s.debug(`Sending Purchase to ${l} with label - ${d}`), c.send('event', 'Checkout', 'Purchase', d);
                            break;
                        case 'ViewContent':
                            s.debug(`Sending page view to ${l} with pixelId - ${n}`), c.send({
                                hitType: 'pageview',
                                title: a.content_name,
                                page: a.pixelLocation
                            });
                            break;
                        case 'InitiateCheckout':
                            s.debug(`Sending InitiateCheckout to ${l} with label - ${d}`), c.send('event', 'Checkout', 'InitiateCheckout', d, _.parseInt(a.value));
                            break;
                        default:
                    }
                },
                c = ({
                    eventType: t,
                    params: a,
                    pixelId: s
                }) => {
                    s = _.toString(s);
                    let i = `https://analytics.twitter.com/i/adsct?txn_id=${s}&p_id=Twitter`;
                    switch (t) {
                        case 'Purchase':
                            i = _.join([i, '&events=Purchase', '&tpx_cb=twttr.conversion.loadPixels', `&tw_sale_amount=${a.value}`, `&tw_order_quantity=${a.num_items}`, `&tw_currency=${_.trim(a.currency)}`, `&tw_document_href=${a.pixelLocation}`], '');
                            break;
                        case 'ViewContent':
                            i = _.join([i, '&events=PageView', '&tpx_cb=twttr.conversion.loadPixels', `&tw_document_href=${a.pixelLocation}`], '');
                            break;
                        case 'InitiateCheckout':
                            i = _.join([i, '&events=InitiateCheckout', '&tpx_cb=twttr.conversion.loadPixels', `&tw_sale_amount=${a.value*a.num_items}`, `&tw_order_quantity=${a.num_items}`, `&tw_currency=${_.trim(a.currency)}`, `&tw_document_href=${a.pixelLocation}`], '');
                            break;
                        default:
                    }
                    e.pixelData.twitter = i
                };
            return {
                fire: ({
                    pixelObject: e,
                    eventType: t = 'ViewContent',
                    params: a = {}
                }) => {
                    _.map(e, (e, i) => {
                        const o = _.toString(e.id);
                        if (!o) return void s.error('Invalid Pixel Id');
                        switch (i) {
                            case 'facebook':
                                l({
                                    eventType: t,
                                    params: a,
                                    pixelId: o
                                });
                                break;
                            case 'googleanalytics':
                                d({
                                    eventType: t,
                                    params: a,
                                    pixelId: o
                                });
                                break;
                            case 'twitter':
                                c({
                                    eventType: t,
                                    params: a,
                                    pixelId: o
                                });
                                break;
                            case 'pinterest':
                                r({
                                    eventType: t,
                                    params: a,
                                    pixelId: o
                                });
                                break;
                            default:
                        }
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('Prerender', [function() {
            let e;
            const t = {
                start() {
                    clearTimeout(e), e = setTimeout(t.ready, 2e3)
                }, handleManually() {
                    clearTimeout(e)
                }, ready() {
                    window.prerenderReady = !0
                }
            };
            return t
        }])
    }(), angular.module('core').factory('report', ['$q', '$timeout', 'Restangular', 'Authentication', 'OnboardingService', function(e, t, a, s) {
        return {
            send: function(e, t, s) {
                return 'share' === e && (e = 'post'), a.all('reports/save').post({
                    instanceType: e,
                    instanceId: t,
                    reason: s
                })
            },
            getReasons: function() {
                return e.resolve([{
                    value: 0,
                    type: 'spam',
                    label: 'Spam'
                }, {
                    value: 1,
                    type: 'inappropriate',
                    label: 'Self injury'
                }, {
                    value: 2,
                    type: 'inappropriate',
                    label: 'Harassment or bullying'
                }, {
                    value: 3,
                    type: 'inappropriate',
                    label: 'Sale or promotion of drugs'
                }, {
                    value: 4,
                    type: 'inappropriate',
                    label: 'Sale or promotion of firearms'
                }, {
                    value: 5,
                    type: 'inappropriate',
                    label: 'Nudity or pornography'
                }, {
                    value: 6,
                    type: 'inappropriate',
                    label: 'Violence or harm'
                }, {
                    value: 7,
                    type: 'inappropriate',
                    label: 'Hate speech or symbols'
                }, {
                    value: 8,
                    type: 'inappropriate',
                    label: 'Intellectual property violation'
                }, {
                    value: 9,
                    type: 'inappropriate',
                    label: 'I just don\u2019t like it'
                }])
            },
            getActionSheetAction: function(e, a) {
                return {
                    text: 'Report',
                    callback() {
                        return s.isLoggedOut() ? s.showLoginPrompt() : void t(() => {
                            $('.ras-' + e + '-' + a + ' .report-action-sheet').click()
                        }, 100)
                    }
                }
            }
        }
    }]),
    function() {
        function e(e, t) {
            return {
                resetPasswordRequest: function(e) {
                    return t.all('/users/reset-password-request').post({
                        email: e
                    }).then((e) => e.plain())
                },
                resetPassword: function(e, a) {
                    return t.all('/users/reset-password').post({
                        password: e,
                        confirmation: a
                    }).then((e) => e.plain())
                }
            }
        }
        e.$inject = ['$q', 'Restangular', 'holospace'], angular.module('core').factory('ResetPassword', e)
    }(),
    function() {
        angular.module('core').factory('ResizeSensorService', [function() {
            function e(e, t) {
                const a = Object.prototype.toString.call(e),
                    s = '[object Array]' === a || '[object NodeList]' === a || '[object HTMLCollection]' === a || '[object Object]' === a || 'undefined' != typeof jQuery && e instanceof jQuery || 'undefined' != typeof Elements && e instanceof Elements;
                let o = 0;
                const i = e.length;
                if (s)
                    for (; o < i; o++) t(e[o]);
                else t(e)
            }
            if ('undefined' == typeof window) return null;
            const t = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(e) {
                    return window.setTimeout(e, 20)
                },
                a = function(s, i) {
                    function o() {
                        let e = [];
                        this.add = function(t) {
                            e.push(t)
                        };
                        let t, a;
                        this.call = function() {
                            for (t = 0, a = e.length; t < a; t++) e[t].call()
                        }, this.remove = function(s) {
                            const i = [];
                            for (t = 0, a = e.length; t < a; t++) e[t] !== s && i.push(e[t]);
                            e = i
                        }, this.length = function() {
                            return e.length
                        }
                    }

                    function n(e, t) {
                        return e.currentStyle ? e.currentStyle[t] : window.getComputedStyle ? window.getComputedStyle(e, null).getPropertyValue(t) : e.style[t]
                    }

                    function l(e, a) {
                        if (!e.resizedAttached) e.resizedAttached = new o, e.resizedAttached.add(a);
                        else if (e.resizedAttached) return void e.resizedAttached.add(a);
                        e.resizeSensor = document.createElement('div'), e.resizeSensor.className = 'resize-sensor';
                        const s = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;',
                            i = 'position: absolute; left: 0; top: 0; transition: 0s;';
                        e.resizeSensor.style.cssText = s, e.resizeSensor.innerHTML = '<div class="resize-sensor-expand" style="' + s + '"><div style="' + i + '"></div></div><div class="resize-sensor-shrink" style="' + s + '"><div style="' + i + ' width: 200%; height: 200%"></div></div>', e.appendChild(e.resizeSensor), 'static' == n(e, 'position') && (e.style.position = 'relative');
                        const l = e.resizeSensor.childNodes[0],
                            r = l.childNodes[0],
                            d = e.resizeSensor.childNodes[1];
                        let c = e.offsetWidth,
                            p = e.offsetHeight,
                            m, u, g, v;
                        const h = function() {
                            r.style.width = '100000px', r.style.height = '100000px', l.scrollLeft = 1e5, l.scrollTop = 1e5, d.scrollLeft = 1e5, d.scrollTop = 1e5
                        };
                        h();
                        const b = function() {
                                u = 0, m && (c = g, p = v, e.resizedAttached && e.resizedAttached.call())
                            },
                            f = function() {
                                g = e.offsetWidth, v = e.offsetHeight, m = g != c || v != p, m && !u && (u = t(b)), h()
                            },
                            y = function(e, t, a) {
                                e.attachEvent ? e.attachEvent('on' + t, a) : e.addEventListener(t, a)
                            };
                        y(l, 'scroll', f), y(d, 'scroll', f)
                    }
                    e(s, (e) => {
                        l(e, i)
                    }), this.detach = function(e) {
                        a.detach(s, e)
                    }
                };
            return a.detach = function(t, a) {
                e(t, (e) => {
                    e.resizedAttached && 'function' == typeof a && (e.resizedAttached.remove(a), e.resizedAttached.length()) || e.resizeSensor && (e.contains(e.resizeSensor) && e.removeChild(e.resizeSensor), delete e.resizeSensor, delete e.resizedAttached)
                })
            }, a
        }])
    }(),
    function() {
        angular.module('core').provider('dynamicRouteProvider', function() {
            this.$get = function() {
                return {
                    excludedRouteRedirect(e) {
                        let t = !1;
                        switch (e) {
                            case 'signin':
                            case 'logout':
                            case 'signup':
                            case 'password-settings':
                            case 'account-settings':
                            case 'reset-password-invalid':
                            case 'reset-password-success':
                            case 'directory':
                            case 'edit-profile':
                                t = e;
                                break;
                            case 'content-creation':
                        }
                        return t
                    }
                }
            }
        })
    }(),
    function() {
        angular.module('core').factory('Search', ['$log', 'Restangular', 'collections', function(e, t) {
            return {
                history() {
                    return t.all('/v2/search/history').get('').then((e) => ({
                        history: _.uniq(e.history)
                    }))
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('SharesService', ['$log', '_', 'Restangular', function(e, t, a) {
            return {
                listSpaces: function(e, t, s, i) {
                    return a.all('/v2/posts/shares/' + e + '/spaces').get('', {
                        limit: i || 15,
                        page: t,
                        term: s
                    }).then((e) => e.plain())
                },
                whoShared: function(e, s) {
                    const i = -1 < ['service', 'product'].indexOf(e.type) ? 'item' : e.type;
                    return a.all(`/v2/${i}s/${e.id}/shares`).get('', t.pick(s.next, ['limit', 'skip'])).then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('core').service('Socket', ['$log', '$q', function(e, t) {
            const a = this;
            window.io && (this.socket = window.io(), this.connect = function(e) {
                return t((t) => {
                    e && 'function' == typeof e && a.socket.on('message', (t) => {
                        e(t)
                    }), t(a)
                })
            }, this.emit = function(e, t) {
                this.socket.emit('sendToContext', {
                    room: e,
                    message: t
                })
            }, this.join = function(e) {
                this.socket.emit('joinContext', {
                    room: e
                })
            })
        }])
    }(),
    function() {
        angular.module('core').factory('StripeService', ['stripe', function(e) {
            return {
                createToken: function(t) {
                    const a = t.billing,
                        s = a.paymentProvider,
                        i = {
                            name: a.name,
                            number: s.card.number,
                            cvc: s.card.cvv,
                            exp_month: s.card.expMonth,
                            exp_year: s.card.expYear,
                            address_zip: a.postCode
                        };
                    return delete s.card, e.card.createToken(i)
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('svgSprite', ['jquery', '$rootScope', 'constants', function(e, t, a) {
            return {
                load() {
                    return e.ajax({
                        url: `${t.cdnBaseUrl}/images/svg/icons-${a.VERSION}.svg`,
                        dataType: 'text',
                        cache: !0
                    }).then((t) => {
                        e('<aside>').hide().append(t).appendTo('body')
                    })
                }
            }
        }])
    }(),
    function() {
        function e(e, t, a) {
            return {
                contributing: function(t) {
                    return e({
                        method: 'POST',
                        url: '/api/spaces/' + t + '/teams'
                    }).then((e) => {
                        const t = e.data,
                            a = [];
                        for (let s = 0; s < t.length; s++) t[s].space.relationships = {
                            followers: {
                                length: t[s].followersCount
                            }
                        }, t[s].space.postsCount = t[s].postsCount, a.push(t[s].space);
                        return a
                    })
                },
                members: function(e) {
                    return a.all('spaces/' + e + '/team/members').post().then((e) => e.plain())
                },
                acceptInvite: function(e, t) {
                    return a.one('spaces/team/' + e + '/accept/' + t).post().then((e) => e.plain())
                },
                getTeamOwnerSpace: function(e) {
                    return a.one('spaces/team/' + e + '/space').get().then((e) => e.plain())
                }
            }
        }
        e.$inject = ['$http', '$q', 'Restangular', 'holospace'], angular.module('core').factory('Team', e), e.$inject = ['$http', '$q', 'Restangular', 'holospace']
    }(),
    function() {
        angular.module('core').service('TermsConditionsService', ['Restangular', '$uibModal', '$rootScope', function(e, t, a) {
            const s = (t, a) => e.one('/term-and-condition-acceptances/user/' + t).customPUT(a);
            return {
                generateKeys: (e) => {
                    const t = {
                            PRODUCT: 'product',
                            OFFER: 'offer',
                            SERVICE: 'service',
                            VIDEO: 'video',
                            SERVICE_PUBLISH: 'service-publish',
                            PRODUCT_PUBLISH: 'product-publish',
                            VIDEO_DELIVERY: 'service-delivery-with-video',
                            OFFER_ON_SERVICE: 'service-publish-with-offer',
                            OFFER_ON_PRODUCTS: 'product-publish-with-offer'
                        },
                        a = [];
                    return e.type === t.PRODUCT && (a.push(t.PRODUCT_PUBLISH), e.pricingModel === t.OFFER && a.push(t.OFFER_ON_PRODUCTS)), e.type === t.SERVICE && (a.push(t.SERVICE_PUBLISH), e.pricingModel === t.OFFER && a.push(t.OFFER_ON_SERVICE), e.delivery === t.VIDEO && a.push(t.VIDEO_DELIVERY)), a
                },
                getTerms: (t) => e.one('/term-and-condition-groups?actionKeys=' + t).get(),
                showTerms: (e, i) => {
                    t.open({
                        templateUrl: 'public/modules/items/templates/terms-and-conditions.template.html',
                        controller: ['$uibModalInstance', '$rootScope', '$scope', 'itemType', 'userId', function(t, a, i, o, n) {
                            const l = o.videoDelivery ? 'video service' : o.type;
                            i.termsCondition = e, i.title = 'This is important!', i.subTitle = `By Publishing this ${l} you:`, i.button_title_confirm = 'Accept & Publish', i.button_title_cancel = 'Cancel', i.confirm = function(e) {
                                const i = [];
                                for (const t of e) i.push({
                                    termAndConditionId: t.id
                                });
                                t.dismiss(), s(n, i).then(() => {
                                    a.$broadcast('callPublish')
                                })
                            }, i.cancel = function() {
                                t.dismiss()
                            }
                        }],
                        resolve: {
                            itemType() {
                                return i
                            }, userId() {
                                return a.primarySpace.userId
                            }
                        },
                        controllerAs: 'vm',
                        size: 'lg',
                        windowClass: 'confirm-modal holonis-modal'
                    })
                },
                acceptTerms: s
            }
        }])
    }(),
    function() {
        angular.module('core').factory('textManipulation', ['$log', function() {
            return {
                stripHtmlTags: function(e) {
                    if (!e || 0 === e.length) return e;
                    const t = e.replace(/&nbsp;/g, ' ');
                    return t.replace(/(<([^>]+)>)/ig, '')
                },
                StringToSlug: function(e) {
                    e = e.replace(/^\s+|\s+$/g, ''), e = e.toLowerCase();
                    const t = '\xE0\xE1\xE4\xE2\xE8\xE9\xEB\xEA\xEC\xED\xEF\xEE\xF2\xF3\xF6\xF4\xF9\xFA\xFC\xFB\xF1\xE7\xB7/_,:;';
                    for (let a = 0, s = t.length; a < s; a++) e = e.replace(new RegExp(t.charAt(a), 'g'), 'aaaaeeeeiiiioooouuuunc------'.charAt(a));
                    return e = e.replace(/[^a-z0-9 -]/g, '').replace(/\s+/g, '-').replace(/-+/g, '-'), e
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('TileCache', ['$log', '_', '$rootScope', function(e, t, a) {
            const s = {},
                i = {};
            return a._tileCache = a._tileCache || {}, s.set = function(e, t) {
                a._tileCache[e] = t
            }, s.assign = function(e, i) {
                const o = a._tileCache[e];
                return o ? void t.merge(o, i) : s.set(e, i)
            }, s.increment = function(e, s, i) {
                const o = a._tileCache[e],
                    n = t.get(o, s);
                t.set(o, s, n ? n + i : i)
            }, s.get = function(e, t) {
                if (!s.isTile(t)) return t;
                const i = a._tileCache[e];
                return i ? i : (s.set(e, t), a._tileCache[e])
            }, s.watchCollection = function(e, s, o, n) {
                const l = a.$watchCollection(`_tileCache.${s}.${o}`, n);
                t.set(i, `${e}.${s}`, l)
            }, s.clearWatch = function(e, a) {
                const s = t.get(i, `${e}.${a}`);
                s && s()
            }, s.clearWatchers = function(e) {
                t.forEach(i[e], (e) => {
                    e()
                })
            }, s.flush = function() {
                t.forEach(i, s.clearWatchers), a._tileCache = {}
            }, s.getKey = function(e) {
                return `${e.type}_${e.id}`
            }, s.isTile = function(e) {
                return e.type && e.id
            }, s
        }])
    }(), angular.module('core').factory('uid', [function() {
        let e = 0;
        return {
            generateUid() {
                return e++
            }
        }
    }]),
    function() {
        angular.module('core').factory('uri', ['$rootScope', function() {
            function e() {
                return document.baseURI
            }

            function t(e) {
                return /^(?:[a-z]+:)?\/\//i.test(e)
            }
            return {
                getBase: e,
                isAbsolute: t,
                isRelative: function(e) {
                    return !t(e)
                },
                resolve: function(a) {
                    return t(a) ? ('//' === a.slice(0, 2) ? location.protocol : '') + a : e() + a
                }
            }
        }])
    }(),
    function() {
        angular.module('core').service('view', [function() {
            return {
                isElementInView(e, t, a) {
                    const s = $(e),
                        i = $(window),
                        o = t && t.offset ? t.offset : 0,
                        n = Math.max(0, i.scrollTop() - o),
                        l = i.scrollTop() + i.height() + o,
                        r = s.offset().top,
                        d = r + s.height();
                    return !0 === a ? n < r && l > d : n >= r && l <= d || l > r && n < r || l > d && n < d
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('waitTrackerPromises', ['$rootScope', '$q', function(e, t) {
            return function(a) {
                return a.tracking() ? t((t) => {
                    const s = e.$watch(a.tracking, (e) => {
                        e || (s(), t())
                    })
                }) : t.resolve()
            }
        }])
    }(),
    function() {
        angular.module('core').factory('windowSizeService', () => {
            const e = 768;
            return {
                isMobile() {
                    return $(window).width() <= e
                }, isDesktop() {
                    return $(window).width() > e
                }
            }
        })
    }(),
    function() {
        angular.module('core').factory('ScrollbarUtils', ['$rootScope', 'constants', function(e, t) {
            function a() {
                const e = document.createElement('div');
                e.style.visibility = 'hidden', e.style.width = '100px', e.style.msOverflowStyle = 'scrollbar', document.body.appendChild(e);
                const t = e.offsetWidth;
                e.style.overflow = 'scroll';
                const a = document.createElement('div');
                a.style.width = '100%', e.appendChild(a);
                const s = a.offsetWidth;
                return e.parentNode.removeChild(e), t - s
            }
            return {
                setScrollbarWidth: function() {
                    const e = a(),
                        s = t.OVERFLOW_CLASSNAME + '{ margin-right:' + e + 'px; }',
                        i = t.OVERFLOW_CLASSNAME + ' ' + t.HEADER_OVERFLOW_CLASSNAME + '{ width: calc(100% - ' + e + 'px); }',
                        o = document.head,
                        n = document.createElement('style');
                    n.appendChild(document.createTextNode(s + i)), o.appendChild(n)
                }
            }
        }])
    }(),
    function() {
        function e(e, t, a, s, i, o, n, l) {
            function r() {
                c.callToAction = !c.deck || !c.deck.length, i.authoredByFilter.results = c.settings.facets['createdBy.id'], i.authoredToFilter.results = c.settings.facets['space.id'], i.categoryFilter.results = c.settings.facets['category.id'], i.typeFilter.results = c.settings.facets.type, v.parent().addClass('preloader-hidden')
            }

            function d() {
                t.go('drafts.page', {
                    page: 1
                }), c.query = {
                    query: c.searchFilter,
                    facets: JSON.stringify(c.facetFilters),
                    sort: c.sortFilter
                }
            }
            const c = this,
                p = s.primarySpace;
            let m = {},
                u = !0,
                g = null,
                v;
            c.pageContent = {}, c.callToAction = !1, c.spaceId = p.id, v = $('.tile-group-wrapper'), a.debug('Loading Drafts Controller'), i.$watch('[vm.facetFilters, vm.searchFilter, vm.sortFilter]', (t, a) => {
                if (t[0] !== void 0 || t[1] !== void 0 || t[2] !== void 0) {
                    g && e.cancel(g);
                    const s = o.TYPING_DEBOUNCE_DELAY;
                    g = e(d, t[1] !== a[1] || t[2] !== a[2] ? s : 0)
                }
            }, !0), c.filterCallback = function(e, t) {
                c.facetFilters || (c.facetFilters = {}), c.facetFilters[t] || (c.facetFilters[t] = []), e.selected ? c.facetFilters[t].push(e.value) : l.pull(c.facetFilters[t], e.value), c.facetFilters[t].length || delete c.facetFilters[t]
            }, c.sortCallback = function(e) {
                c.sortFilter = e.value
            }, i.$watch('vm.settings', () => {
                u && c.settings && (r(), u = !1)
            }, !0), c.previousState = function() {
                window.history.back()
            }, c.clearFilters = function() {
                $('.holonis-checkbox:checked').prop('checked', !1), c.facetFilters = {}, c.searchFilter = '', d()
            }, c.init = function() {
                c.deck = {
                    collection: []
                }, i.authoredByFilter = {
                    name: 'author',
                    results: []
                }, i.authoredToFilter = {
                    name: 'space',
                    results: []
                }, i.categoryFilter = {
                    name: 'category',
                    results: []
                }, i.typeFilter = {
                    name: 'type',
                    results: []
                }, i.sortByFilter = {
                    name: 'sort',
                    results: [{
                        text: 'Date Created (Old - New)',
                        value: 1
                    }, {
                        text: 'Date Created (New - Old)',
                        value: -1
                    }]
                }, m = {
                    meta: {
                        title: s.primarySpace.name + ' | Drafts',
                        description: s.primarySpace.name + ' | Drafts'
                    },
                    tags: [],
                    type: 'website',
                    image: i.primarySpace && s.primarySpace.name ? s.primarySpace.headerMediaUrl : '',
                    url: s.primarySpace && s.primarySpace.vanityUrl ? s.primarySpace.vanityUrl : 'https://www.holonis.com/',
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, n.setPageMetaTags(m)
            }, c.init()
        }
        e.$inject = ['$timeout', '$state', '$log', '$rootScope', '$scope', 'constants', 'Meta', '_', 'Team'], angular.module('drafts').controller('DraftsController', e), e.$inject = ['$timeout', '$state', '$log', '$rootScope', '$scope', 'constants', 'Meta', '_', 'Team']
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.action-group', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.actions', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.add', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.address', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.avatar', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.channel-mosaic', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.chart', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.code', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.comments', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.confirm', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.cover', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.cropper', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.ngCurrencyMask', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.dynamic.input', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.embed', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.engagement', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.form', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.gallery', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.header', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.holospace', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.holospace.follow', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.image.uploader', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.karot', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.mentions', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.modal', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.nav', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.password', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.player', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.post.text', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.product.listing', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.rating', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.recommendations', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.search', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.seo', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.share', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.show.hide', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.space.name', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.story', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.tags', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.tile.header', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.title', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.tooltip', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.user.selection', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.variants', [])
    }(),
    function() {
        ApplicationConfiguration.registerModule('ds.video.uploader', [])
    }(),
    function() {
        angular.module('ecommerce').config(['$stateProvider', function(e) {
            e.state('ecommerce', {
                abstract: !0,
                url: '/:holospaceName/ecommerce',
                views: {
                    main: {
                        template: '<ui-view/>'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                }
            }).state('ecommerce.buyers', {
                abstract: !0,
                url: '/buyer',
                params: {
                    type: 'buyers'
                },
                template: '<ui-view/>'
            }).state('ecommerce.sellers', {
                abstract: !0,
                url: '/seller',
                params: {
                    type: 'sellers'
                },
                template: '<ui-view/>'
            }).state('ecommerce.inventory', {
                title: 'Inventory',
                url: '/inventory',
                controller: 'InventoryItemsController',
                templateUrl: 'public/modules/inventory/views/items.view.html',
                resolve: {
                    items: ['userSpaces', 'InventoryService', function(e, t) {
                        return t.getItems()
                    }]
                }
            }).state('ecommerce.buyers.orders', {
                url: '/orders',
                title: 'Holospace Buyers - Orders list',
                controller: 'EcommerceOrdersController',
                templateUrl: 'public/modules/ecommerce/views/buyers.view.html',
                params: {
                    config: {
                        actor: 'seller',
                        customerHeader: 'Seller',
                        noOrdersMessage: 'Transactions is where you review and manage sales to your customers and purchases you\u2019ve made on Holonis.',
                        params: {
                            type: 'purchases'
                        }
                    }
                }
            }).state('ecommerce.sellers.orders', {
                url: '/orders',
                title: 'Holospace Sellers - Orders list',
                controller: 'EcommerceOrdersController',
                templateUrl: 'public/modules/ecommerce/views/sellers.view.html',
                params: {
                    config: {
                        actor: 'buyer',
                        customerHeader: 'Customer',
                        noOrdersMessage: 'Transactions is where you review and manage sales to your customers and purchases you\u2019ve made on Holonis.',
                        params: {
                            type: 'sales'
                        }
                    }
                }
            }).state('ecommerce.buyers.order', {
                url: '/orders/:id',
                title: 'Holospace Buyers - Order Details',
                controller: 'EcommerceOrderDetailsBuyerController',
                templateUrl: 'public/modules/ecommerce/views/order-details-buyer.view.html'
            }).state('ecommerce.sellers.order', {
                url: '/orders/:id',
                title: 'Holospace Sellers - Order Details',
                controller: 'EcommerceOrderDetailsSellerController',
                templateUrl: 'public/modules/ecommerce/views/order-details-seller.view.html'
            })
        }])
    }(),
    function() {
        angular.module('ecommerce').controller('EcommerceOrderDetailsBuyerController', ['$scope', '$state', '$stateParams', '$q', '$timeout', 'notifyService', '$overlay', 'MessagesAsync', 'OrdersService', 'dsForm', 'ItemService', function(e, t, a, s, i, o, n, l, r, d, c) {
            const p = a.id || e.orderId;
            e.state = {}, e.data = {}, e.state.order = null, e.state.isBuyer = !0, e.loaded = !1, e.state.holospaceVanityUrl = a.holospaceName, e.state.orderStatus = [], e.state.downloading = !1, e.state.downloadPercent = 0, e.state.downloadButtonText = 'Download Video', e.state.centerTitle = 'Order', e.state.paymentMethods = {
                card: 'Credit Card',
                paypal: 'PayPal'
            }, e.overlays = {
                message: 'public/modules/ecommerce/views/modals/order-message.view.html'
            }, _.has(t.params, 'type') && (e.state.backLink = t.href(`ecommerce.${t.params.type}.orders`));
            const m = {
                    reviewRating: {
                        required: !0
                    },
                    reviewText: {
                        required: !0,
                        custom() {
                            return _.get(e.data, 'reviewText', '').length <= e.inputs.review.maxCharacters
                        }
                    }
                },
                u = d.instance(e, m);
            e.$watch('state.order.reviews', (t) => {
                e.state.reviewed = 0 < _.size(t)
            }), e.review = function() {
                return u.validate() ? c.review(e.state.item.id, e.data.reviewRating, e.data.reviewText).then(() => {
                    e.state.reviewed = !0, o.success('Item was rated successfully.')
                }).catch((t) => {
                    o.error(t.message), e.loaded = !0
                }) : i(() => {
                    u.showError()
                })
            }, e.back = function() {
                t.go(`ecommerce.${t.params.type}.orders`)
            }, e.sendNewMessage = function(t) {
                const a = e.state.order['buyer' === e.state.actor ? 'seller' : 'buyer'];
                return l.then((e) => {
                    o.success('Your message was sent to ' + a.name);
                    const s = {
                        body: t,
                        recipientId: a.id
                    };
                    return e.create(s)
                })
            }, e.message = function() {
                const t = _.get(e, 'state.order.number');
                e.newMessage = `Message about order #${t}\n\n`, n.show(e, 'message')
            }, e.$on('ds.modal.close', () => {
                e.orderModal = !1
            });
            const g = {
                status: r.getAvailableStatus(),
                order: r.getOne(p)
            };
            (async() => {
                const t = await g.order,
                    a = _.get(t.uiElements, 'actionModule');
                switch (e.state.offerStatus = _.get(t.contract, 'status'), e.state.offeredPrice = _.get(t.contract, 'offer.price.formatted'), e.state.isOffer = 'offer' === _.get(t, 'pricingModel'), e.state.pricingModel = _.get(t, 'pricingModel'), e.state.offerActionModuleTitle = a.title, e.state.offerActionModuleSubtitle = a.subTitle, t.pricingModel && 'submitted' === e.state.offerStatus && (e.state.showOffer = !0), e.state.offerActorTitle = 'You Offered', e.state.offerActorSubTitle = 'Pending acceptance from seller', e.loaded = !0, e.state.pricingModel) {
                    case 'offer':
                        e.state.orderTitle = 'Offer Summary';
                        break;
                    default:
                        e.state.orderTitle = 'Order Summary';
                }
            })(), e.updateOrder = (a) => {
                e.state.order = a, e.state.serviceLocation = e.state.order.lineItems[0].serviceLocation, e.state.isVideoService = 'video' === a.deliveryType, e.state.showQuantity = !e.state.isVideoService, 'offer' === a.pricingModel && (e.state.showOffer = !0), e.state.isVideoService && (e.state.centerTitle = 'Video Service'), e.data.reviewRating = e.state.order.rating, e.state.billing = _.get(a, 'billing'), e.state.lineItem = _.first(a.lineItems), e.state.item = r.getFirstItem(a);
                const s = a.buyer ? a.buyer.name : a.billing.name;
                e.state.orderItemName = e.state.isVideoService ? 'Video service from ' + e.state.order.seller.name + ' to ' + s : e.state.item.name, e.state.itemLink = t.href('item.detail', {
                    space: a.seller.vanityUrl,
                    vanityUrl: e.state.item.vanityUrl
                }), e.state.onlyContactInfo = _.includes(['pickup', 'online', 'delivered', 'video'], a.deliveryType), e.state.actor = 'buyer', e.state.to = 'seller'
            };
            s.all(g).then((t) => {
                const {
                    status: a,
                    order: s
                } = t;
                e.state.orderStatus = a.availableDisplayStatus, e.updateOrder(s)
            }).catch((e) => {
                switch (e.status) {
                    case 404:
                        o.error('This product has been deleted or is no longer available.');
                        break;
                    default:
                        {
                            o.error('An error occurred. Please try again.');
                            break
                        }
                }
            }), a.message && e.message()
        }])
    }(),
    function() {
        angular.module('ecommerce').controller('EcommerceOrderDetailsSellerController', ['$scope', '$state', '$stateParams', '$q', '$timeout', 'notifyService', '$overlay', 'MessagesAsync', 'OrdersService', 'dsModal', 'dsForm', 'ItemService', function(e, t, a, s, i, o, n, l, r, d, c, p) {
            const m = a.id || e.orderId;
            e.state = {}, e.data = {}, e.state.order = null, e.state.isSeller = !0, e.loaded = !1, e.state.holospaceVanityUrl = a.holospaceName, e.state.orderStatus = [], e.state.downloading = !1, e.state.downloadPercent = 0, e.state.downloadButtonText = 'Download Video', e.state.centerTitle = 'Order', e.state.paymentMethods = {
                card: 'Credit Card',
                paypal: 'PayPal'
            }, e.overlays = {
                message: 'public/modules/ecommerce/views/modals/order-message.view.html'
            }, _.has(t.params, 'type') && (e.state.backLink = t.href(`ecommerce.${t.params.type}.orders`)), e.inputs = {
                review: {
                    maxCharacters: 1e3,
                    error: {
                        custom: 'Maximum review length is 1000 characters.'
                    }
                }
            };
            const u = {
                    reviewRating: {
                        required: !0
                    },
                    reviewText: {
                        required: !0,
                        custom() {
                            return _.get(e.data, 'reviewText', '').length <= e.inputs.review.maxCharacters
                        }
                    }
                },
                g = c.instance(e, u);
            e.$watch('state.order.reviews', (t) => {
                e.state.reviewed = 0 < _.size(t)
            }), e.review = function() {
                return g.validate() ? p.review(e.state.item.id, e.data.reviewRating, e.data.reviewText).then(() => {
                    e.state.reviewed = !0, o.success('Item was rated successfully.')
                }).catch((t) => {
                    o.error(t.message), e.loaded = !0
                }) : i(() => {
                    g.showError()
                })
            }, e.back = function() {
                t.go(`ecommerce.${t.params.type}.orders`)
            }, e.sendNewMessage = function(t) {
                const a = e.state.order['buyer' === e.state.actor ? 'seller' : 'buyer'];
                return l.then((e) => {
                    o.success('Your message was sent to ' + a.name);
                    const s = {
                        body: t,
                        recipientId: a.id
                    };
                    return e.create(s)
                })
            }, e.message = function() {
                const t = _.get(e, 'state.order.number');
                e.newMessage = `Message about order #${t}\n\n`, n.show(e, 'message')
            }, e.$on('ds.modal.close', () => {
                e.orderModal = !1
            }), e.videoUploadBus = e.$new(), e.videoUploadBus.$on('error', (e, t) => 0 === t.status ? o.warning('Video upload canceled.') : void i(() => o.error(t.message))), e.videoUploadBus.$on('file-selected', () => {
                e.state.uploadVideoModal && e.state.uploadVideoModal.isVisible() || d.create({
                    template: 'public/modules/ecommerce/templates/modal/order-upload-video.template.html',
                    controller: 'ModalOrderUploadVideoController',
                    close: !1,
                    scope: {
                        overflow: !0,
                        minWidth: 750,
                        noHeader: !0,
                        additionalClass: 'ds-modal-order-upload-video',
                        videoUploadBus: e.videoUploadBus,
                        order: e.state.order,
                        $orderScope: e
                    }
                }).then((t) => {
                    e.state.uploadVideoModal = t, t.show(), e.videoUploadBus.$emit('file-parsed', e.videoUploadBus.file)
                })
            });
            const v = {
                status: r.getAvailableStatus(),
                order: r.getOne(m)
            };
            (async() => {
                const t = await v.order,
                    a = _.get(t.uiElements, 'actionModule');
                switch (e.state.orderStatus = _.get(t, 'displayStatus'), e.state.offerStatus = _.get(t.contract, 'status'), e.state.offeredPrice = _.get(t.contract, 'offer.price.formatted'), e.state.isOffer = 'offer' === _.get(t, 'pricingModel'), e.state.pricingModel = _.get(t, 'pricingModel'), e.state.offerActionModuleTitle = a.title, e.state.offerActionModuleSubtitle = a.subTitle, e.state.isOffer && 'submitted' === e.state.offerStatus && (e.state.showOffer = !0), e.state.offerActorTitle = 'Buyer Offered', e.state.offerActorSubTitle = 'Pending your acceptance', e.loaded = !0, e.state.pricingModel) {
                    case 'offer':
                        e.state.orderTitle = 'Offer Summary';
                        break;
                    default:
                        e.state.orderTitle = 'Order Summary';
                }
            })(), e.updateOrder = (a) => {
                e.state.order = a, e.state.serviceLocation = e.state.order.lineItems[0].serviceLocation, e.state.isVideoService = 'video' === a.deliveryType, e.state.showQuantity = !e.state.isVideoService, 'offer' === a.pricingModel && (e.state.showOffer = !0), e.state.isVideoService && (e.state.centerTitle = 'Video Service'), e.data.reviewRating = e.state.order.rating, e.state.billing = _.get(a, 'billing'), e.state.lineItem = _.first(a.lineItems), e.state.item = r.getFirstItem(a);
                const s = a.buyer ? a.buyer.name : a.billing.name;
                e.state.orderItemName = e.state.isVideoService ? 'Video service from ' + e.state.order.seller.name + ' to ' + s : e.state.item.name, e.state.itemLink = t.href('item.detail', {
                    space: a.seller.vanityUrl,
                    vanityUrl: e.state.item.vanityUrl
                }), e.state.onlyContactInfo = _.includes(['pickup', 'online', 'delivered', 'video'], a.deliveryType), e.state.actor = 'seller', e.state.to = 'buyer'
            };
            s.all(v).then((t) => {
                const {
                    status: a,
                    order: s
                } = t;
                e.state.orderStatus = a.availableDisplayStatus, e.updateOrder(s)
            }).catch((e) => {
                switch (e.status) {
                    case 404:
                        o.error('This product has been deleted or is no longer available.');
                        break;
                    default:
                        {
                            o.error('An error occurred. Please try again.');
                            break
                        }
                }
            }), a.message && e.message()
        }])
    }(),
    function() {
        angular.module('ecommerce').controller('EcommerceOrdersController', ['$log', 'moment', '$scope', '$state', '$stateParams', '$q', 'OrdersService', 'notifyService', 'dsModal', function(e, t, a, s, i, o, n, l, r) {
            e.debug('Loading Orders Holospace');
            const d = 'order.input.filter',
                c = 'order.input.search',
                p = 'order.choose.label',
                m = 'order.type',
                u = 'track.filter.status',
                g = 'track.filter.query',
                v = t(t().format()),
                h = i.config;
            a.state = {}, a.state.orders = [], a.state.customerHeader = h.customerHeader, a.state.noOrdersMessage = h.noOrdersMessage, a.state.actor = h.actor, a.state.params = h.params, a.state.orderStatus = [], a.state.loading = !0, a.state.infiniteScrollLoading = !1, a.state.pagination = {}, a.state.isActorBuyer = 'buyer' === a.state.actor, a.state.isSales = 'sales' === a.state.params.type, a.state.orderListTitle = 'sales' === a.state.params.type ? 'Orders Received' : 'Orders Placed', a.state.getDateDiffFromTodayAsDays = (e) => parseInt(t.duration(v.diff(t(e))).asDays()), a.state.isFilterOpen = !1, a.state.filterStatus = sessionStorage.getItem(g), a.standardCsv = !0, a.state.filterOverlay = () => {
                document.getElementById('select-order-filter').click(), a.state.isFilterOpen = !1
            };
            const b = async() => {
                const e = await n.getCsv('sales', a.state.filterStatus),
                    s = `Holonis - Orders Received - ${t().format('L')}`,
                    i = new Blob([e], {
                        type: 'text/csv'
                    }),
                    o = document.createElement('a');
                o.download = s, o.href = window.URL.createObjectURL(i), o.style.display = 'none', document.body.appendChild(o), o.click()
            };
            a.state.importCSV = () => {
                b(), a.close()
            }, a.state.appBackFn = function() {
                window.history.back()
            }, a.state.searchBuyerOrSeller = 'sales' === a.state.params.type ? 'customer name' : 'seller name';
            const f = (e) => {
                switch (e.status) {
                    case 404:
                        l.error('This product has been deleted or is no longer available.');
                        break;
                    default:
                        {
                            l.error('An error occurred. Please try again.');
                            break
                        }
                }
            };
            a.state.exportCsv = () => r.create({
                template: 'public/modules/ecommerce/templates/order-export-csv.template.html',
                controller: 'EcommerceOrdersController',
                close: !0,
                scope: {
                    additionalClass: 'export-csv'
                }
            }).then((e) => {
                e.show()
            });
            const y = (e) => {
                a.state.orders = a.state.orders.concat(e.orders), a.state.pagination = _.get(e, 'links.paging', {})
            };
            a.saveUserSearch = () => {
                a.state.selectedStatus && sessionStorage.setItem(p, a.state.selectedStatus), a.state.statusName && sessionStorage.setItem(d, a.state.statusName), a.orderSearchInput && sessionStorage.setItem(c, a.orderSearchInput), sessionStorage.setItem(m, a.state.params.type)
            };
            const w = (e) => e ? n.getByLink(e) : n.getAll(a.state.params);
            a.getOrderLink = (e) => {
                const t = `ecommerce.${s.params.type}.order`;
                return s.href(t, {
                    id: e.id
                })
            }, a.infiniteScroll = () => {
                a.state.infiniteScrollLoading = !0;
                const e = _.get(a.state, 'pagination.next.href');
                w(e).then((e) => {
                    y(e), a.state.infiniteScrollLoading = !1
                }).catch(f)
            }, a.getAll = () => (a.state.loading = !0, a.state.isFilterOpen = !1, sessionStorage.removeItem(u), sessionStorage.removeItem(g), a.state.selectedStatus = 'all', n.getOrderByStatus(a.state.params.type, '', a.orderSearchInput).then((e) => {
                a.state.orders = [], y(e), a.state.loading = !1
            })), a.getOrderByStatus = (e, t) => {
                a.state.loading = !0, a.state.isFilterOpen = !1;
                const s = _.get(e, 'displayName') || sessionStorage.getItem(u, a.state.selectedStatus) || 'all',
                    i = _.get(e, 'name') || sessionStorage.getItem(g, a.state.statusName) || '';
                return a.state.selectedStatus = s, a.state.statusName = i, a.orderSearchInput = t, n.getOrderByStatus(a.state.params.type, i, t).then((e) => {
                    a.state.orders = [], y(e), sessionStorage.setItem(u, a.state.selectedStatus), sessionStorage.setItem(g, a.state.statusName), a.state.loading = !1
                })
            }, sessionStorage.removeItem(u), sessionStorage.removeItem(g), a.getFilterFromStorage = (e, t) => {
                a.state.loading = !0, n.getOrderByStatus(a.state.params.type, e, t).then((e) => {
                    a.state.orders = [], y(e), sessionStorage.removeItem(p), sessionStorage.removeItem(c), sessionStorage.removeItem(d), sessionStorage.removeItem(m)
                })
            }, a.getOrdersByStatusOnSearch = _.debounce(a.getOrderByStatus, 400);
            const k = {
                status: n.getAvailableStatus(),
                data: n.getAll(a.state.params)
            };
            o.all(k).then((e) => {
                const {
                    status: t,
                    data: s
                } = e;
                a.state.orderStatus = t.availableDisplayStatus, (sessionStorage.getItem(d) || sessionStorage.getItem(c) || sessionStorage.getItem(p)) && a.state.params.type === sessionStorage.getItem(m) ? (a.state.selectedStatus = sessionStorage.getItem(p), a.state.statusName = sessionStorage.getItem(d), a.orderSearchInput = sessionStorage.getItem(c), a.getFilterFromStorage(a.state.statusName, a.orderSearchInput)) : (y(s), a.state.loading = !1), setTimeout(() => {
                    a.state.loading = !1
                })
            }).catch(f)
        }])
    }(),
    function() {
        angular.module('holospace').controller('RateTransactionController', ['$log', '$scope', 'OrdersService', 'dsForm', '$timeout', 'notifyService', 'ItemService', function(e, t, a, s, i, o, n) {
            t.data.reviewRating = t.data.rating, t.state = {}, t.state.lineItem = _.first(t.data.lineItems), t.state.item = a.getFirstItem(t.data), t.inputs = {
                review: {
                    maxCharacters: 1e3,
                    error: {
                        custom: 'Maximum review length is 1000 characters.'
                    }
                }
            };
            const l = {
                    reviewRating: {
                        required: !0
                    },
                    reviewText: {
                        required: !0,
                        custom() {
                            return _.get(t.data, 'reviewText', '').length <= t.inputs.review.maxCharacters
                        }
                    }
                },
                r = s.instance(t, l);
            t.review = function() {
                return r.validate() ? (t.loaded = !1, n.review(t.state.item.id, t.data.reviewRating, t.data.reviewText).then((e) => {
                    t.data.review = e, o.success('Item was rated successfully.'), t.close(), t.onReview && t.onReview(e)
                }).catch((e) => {
                    o.error(e.message), t.loaded = !0
                })) : i(() => {
                    r.showError()
                })
            }
        }])
    }(),
    function() {
        angular.module('ecommerce').directive('ecommerceHeader', [function() {
            return {
                replace: !0,
                transclude: !0,
                restrict: 'E',
                scope: {
                    activeTab: '@'
                },
                compile: function() {
                    return {
                        pre: function(e, t) {
                            angular.element(t).removeAttr('active-tab')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ecommerce/templates/header.template.html'
            }
        }])
    }(),
    function() {
        angular.module('ecommerce').directive('itemReviews', ['_', 'notifyService', 'ItemService', function(e, t, a) {
            return {
                replace: !0,
                transclude: !0,
                restrict: 'E',
                scope: {
                    item: '='
                },
                controller: ['$scope', '$rootScope', function(s) {
                    s.state = {
                        loading: !0,
                        updating: !1,
                        showReviews: !1,
                        reviews: []
                    };
                    s.isHidden = function() {
                        return !s.state.showReviews && !s.state.loading
                    }, a.getReviews(s.item.id).then((e) => {
                        const t = e.items;
                        s.state.reviews = t, s.state.showReviews = t.length
                    }).catch((a) => {
                        s.state.showReviews = !1, t.error(e.get(a, 'message', 'An error occurred. Please try again.'))
                    }).finally(() => {
                        s.state.loading = !1
                    })
                }],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            angular.element(t).removeAttr('item')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ecommerce/templates/item-reviews.template.html'
            }
        }])
    }(),
    function() {
        angular.module('ecommerce').directive('orderReview', ['_', 'OrdersService', 'dsModal', 'notifyService', 'ItemService', function(e, t, a, s, i) {
            return {
                replace: !0,
                transclude: !0,
                restrict: 'E',
                scope: {
                    order: '=',
                    actor: '=',
                    onlyList: '='
                },
                controller: ['$scope', '$rootScope', function(o) {
                    const n = t.getFirstItem(o.order);
                    o.state = {
                        loading: !0,
                        updating: !1,
                        showRateButton: !o.onlyList && 'buyer' === o.actor && 'fulfilled' === o.order.displayStatus,
                        showReviews: !1,
                        itemId: n.id,
                        reviews: []
                    };
                    const l = (e) => {
                            o.state.reviews = e, o.state.showReviews = e.length, o.state.showReviews && (o.state.showRateButton = !1)
                        },
                        r = (t) => {
                            const a = e.compact([t]);
                            l(a)
                        };
                    o.isHidden = function() {
                        return !o.state.showReviews && !o.state.showRateButton && !o.state.loading
                    }, o.rate = function() {
                        return a.create({
                            template: 'public/modules/ecommerce/views/modals/rate.view.html',
                            controller: 'RateTransactionController',
                            title: 'Transaction review',
                            close: !0,
                            fullscreenMobile: !0,
                            scope: {
                                minWidth: 373,
                                overflow: !0,
                                additionalClass: 'ds-rate-modal animated fadeInUp',
                                data: o.order,
                                onReview: r
                            }
                        }).then((e) => {
                            e.show()
                        })
                    };
                    const d = e.get(o.order, 'buyer.id');
                    i.getReviews(n.id, d).then((e) => {
                        const t = e.items;
                        o.order.reviews = t, l(t)
                    }).catch((t) => {
                        o.state.showReviews = !1, o.state.showRateButton = !1, s.error(e.get(t, 'message', 'An error occurred. Please try again.'))
                    }).finally(() => {
                        o.state.loading = !1
                    })
                }],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            angular.element(t).removeAttr('order')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ecommerce/templates/order-review.template.html'
            }
        }])
    }(),
    function() {
        angular.module('ecommerce').directive('orderStatus', ['_', 'OrdersService', 'notifyService', 'ResponseOfferModal', '$window', '$state', function(e, t, a, s, i, o) {
            return {
                replace: !0,
                transclude: !0,
                restrict: 'E',
                scope: {
                    order: '=',
                    options: '=',
                    changeable: '=?',
                    modal: '='
                },
                controller: ['$scope', '$rootScope', 'dsModal', function(n, l, r) {
                    n.state = {
                        showOptions: !1,
                        selected: null,
                        invalid: !1,
                        updating: !1
                    };
                    const d = {},
                        c = (t) => e.find(n.options, {
                            name: t
                        });
                    n.state.isMobile = 768 >= i.innerWidth, ('ecommerce.buyers.orders' === o.current.name || 'ecommerce.sellers.orders' === o.current.name) && (n.state.orderListPage = !0), n.state.isOffer = 'offer' === n.order.pricingModel;
                    const p = () => {
                            d.orderStatusClose = n.$on('order-status.close', () => {
                                n.hideOptions()
                            }), d.windowClick = n.$on('holonis_clicked', (e, t) => {
                                const a = angular.element(t.target);
                                a.parents('.order-status').length || n.$apply(n.hideOptions)
                            })
                        },
                        m = () => {
                            d.orderStatusClose && d.orderStatusClose(), d.windowClick && d.windowClick()
                        },
                        u = () => {
                            const t = e.get(n.order, 'links.actions');
                            n.actions = t.map((t) => (t.color = e.get(c(t.name), 'color', '#efefef'), t)), n.changeable = 0 < e.size(t)
                        },
                        g = () => {
                            const a = e.get(n, 'order.displayStatus');
                            t.getAvailableStatus().then((t) => {
                                n.options = t.availableDisplayStatus, n.order.links && 0 < n.order.links.actions.length ? n.state.showDropdownOptions = !0 : (n.state.showDropdownOptions = !1, n.state.cursor = 'default'), n.state.selected = c(a), n.state.offerActionButtonName = e.get(n.order, 'uiElements.actionButton.longName'), u()
                            })
                        };
                    n.$watch('order.displayStatus', (e, t) => {
                        e === t || g()
                    }), g(), n.toggleOptions = () => {
                        if (0 !== n.actions.length)
                            if (n.state.isMobile) r.create({
                                template: 'public/modules/ecommerce/templates/modal/order-details-options-mobile.html',
                                controller: ['$scope', function(e) {
                                    e.closeModal = () => {
                                        r.closeAll()
                                    };
                                    const t = e.actions.find((e) => 'acceptOffer' === e.name);
                                    e.title = t ? 'offer' === e.order.pricingModel ? 'Respond to Offer' : 'Mark as' : 'Mark as'
                                }],
                                scope: {
                                    overflow: !0,
                                    minWidth: 750,
                                    noHeader: !0,
                                    containerAdditionalClass: 'holonis-modal no-background',
                                    actions: n.actions,
                                    order: n.order,
                                    selectAction: n.selectAction
                                }
                            }).then((e) => {
                                e.show()
                            });
                            else {
                                if (!n.changeable) return;
                                if (n.state.showOptions) return n.hideOptions();
                                l.$broadcast('order-status.close'), n.state.showOptions = !n.state.showOptions, p()
                            }
                    }, n.hideOptions = () => {
                        n.state.showOptions = !1, m()
                    }, n.selectAction = (i, o) => {
                        const l = o.links.actions.find((e) => 'acceptOffer' === e.name);
                        if ('offer' === o.pricingModel && l) {
                            const e = i.name;
                            return void s.showModal(e, o, {
                                onChange: (a) => {
                                    t.getAvailableStatus().then((t) => {
                                        n.options = t.availableDisplayStatus, n.state.selected = c(e), n.order = a, u()
                                    })
                                }
                            })
                        }
                        n.state.updating || (n.state.updating = !0, n.hideOptions(), t.customOperation(i).then((e) => {
                            n.order.displayStatus = i.name, t.getAvailableStatus().then((t) => {
                                n.options = t.availableDisplayStatus, n.state.selected = c(i.name), n.order = e, u()
                            })
                        }).catch((t) => {
                            t.data ? a.error(t.data.message) : a.error(e.get(t, 'message', 'An error occurred. Please try again.'))
                        }).finally(() => {
                            n.state.updating = !1
                        }))
                    }, n.$on('$destroy', () => {
                        m()
                    })
                }],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            angular.element(t).removeAttr('data')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ecommerce/templates/order-status.template.html'
            }
        }])
    }(),
    function() {
        angular.module('ecommerce').factory('CommerceRestangular', ['constants', 'Restangular', function(e, t) {
            return t.withConfig((t) => {
                t.setBaseUrl(e.COMMERCE.URL)
            })
        }])
    }(),
    function() {
        angular.module('ecommerce').factory('OrdersService', ['CommerceRestangular', '$q', 'notifyService', function(e, t, a) {
            function s(t, a, s, i) {
                return e.one(`/commerce/orders/${t}`).patch([{
                    op: a,
                    path: s,
                    value: i
                }])
            }
            const i = {};
            return {
                getCsv: function(t, a) {
                    return e.one('/commerce/orders').customGET('', {
                        type: t,
                        displayStatus: a
                    }, {
                        "Content-Type": 'text/csv; charset=utf-8',
                        Accept: 'text/csv'
                    })
                },
                getAll: function(t) {
                    return e.one('/commerce/orders').get(t).then((e) => e.plain())
                },
                getByLink: function(t) {
                    return e.one(t).get().then((e) => e.plain())
                },
                getOne: function(t) {
                    return e.one('/commerce/orders', t).get().then((e) => e.plain())
                },
                getAvailableStatus: function(a) {
                    return i.availableStatus ? t.resolve(i.availableStatus) : e.one('/commerce/orders/status').get({
                        orderId: a
                    }).then((e) => {
                        const t = e.plain();
                        return i.availableStatus = t, t
                    })
                },
                customOperation: function(a) {
                    const s = (a.method + '').toLocaleLowerCase();
                    return s ? e.one(a.href).customOperation(s, null, {}, {}, a.body).then((e) => e.plain()) : t.reject('Request method is required.')
                },
                create: function(t) {
                    return e.all('/commerce/orders').post(t)
                },
                getOrderByStatus: function(t, a, s) {
                    return e.one('/commerce/orders').get({
                        type: t,
                        term: s,
                        displayStatus: a
                    }).then((e) => e.plain())
                },
                getFirstItem: function(e) {
                    const t = _.first(e.lineItems);
                    return _.get(t, 'item')
                },
                fulfillOrderVideo: function(e, t, a) {
                    const i = a ? 'replace' : 'add';
                    return s(e, i, '/fulfillment/videoId', t)
                },
                updateStatus: function(e, t) {
                    return s(e, 'replace', '/displayStatus', t)
                },
                patchOrder: function(t) {
                    return e.one(t.href).patch(t.body).then((e) => e.plain()).catch((e) => {
                        a.error(e.statusText)
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('ecommerce').service('ResponseOfferModal', ['OrdersService', 'dsModal', function(e, t) {
            const a = (t) => e.patchOrder(t);
            return {
                updateOrder: a,
                showModal: (e, s, {
                    onChange: i
                }) => {
                    t.create({
                        template: 'public/modules/ecommerce/templates/modal/offer-modal.template.html',
                        controller: ['$scope', 'notifyService', function(o) {
                            const n = s.grandTotal ? s.grandTotal.formatted : '';
                            e === {
                                ACCEPT: 'acceptOffer',
                                DECLINE: 'declineOffer'
                            }.ACCEPT ? (o.modalTitle = 'Respond to Offer', o.pimaryBtnLabel = 'Yes, Accept', o.modalBody = '<p>By accepting this Video Service offer you commit to deliver to your Buyer within 48 hours as per our <b> <a href=\'' + 'https://www.holonis.com/holonis/p/terms-of-service' + '\' target="_blank">Terms & Conditions.</a></b></p>') : (o.modalTitle = 'Are you sure?', o.pimaryBtnLabel = 'Yes, Decline', o.modalBody = '<p>By declining this offer you will miss out on making <b>' + n + '.</b> If you feel like you\u2019d like to counter the offer or discuss it in more detail, you can Message the Buyer.</p>'), o.updateOrderAction = () => {
                                const o = s.links.actions.find((t) => t.name === e);
                                a(o).then((e) => {
                                    e && e.status && (s = e, i && i(e))
                                }), t.closeLast()
                            }
                        }],
                        close: !1,
                        scope: {
                            overflow: !0,
                            minWidth: 750,
                            noHeader: !0,
                            containerAdditionalClass: 'confirm-modal holonis-modal'
                        }
                    }).then((e) => {
                        e.show()
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('ecommerce').factory('TransactionsService', ['Restangular', 'dsModal', 'OrdersService', '$rootScope', function(e, t, a, s) {
            return {
                getTransactionsByType: function(t, a, s = 10) {
                    return e.one('/v2/commerce/transactions/' + t).customGET(null, {
                        limit: s,
                        id_lt: a
                    }).then((e) => e.plain()).catch((e) => (console.error(e), e))
                },
                getTransactionById: function(t) {
                    return e.one('/v2/commerce/transactions/' + t).get().then((e) => e.plain()).catch((e) => (console.error(e), e))
                },
                orderDetailModal: function(e) {
                    a.getOne(e).then((a) => {
                        const i = s.primarySpace.id;
                        let o, n;
                        i === _.get(a, 'seller.id') && (n = 'seller', o = 'Seller'), i === _.get(a, 'buyer.id') && (n = 'buyer', o = 'Buyer'), t.create({
                            template: `public/modules/ecommerce/views/order-details-${n}.view.html`,
                            controller: `EcommerceOrderDetails${o}Controller`,
                            allowClose: !0,
                            scope: {
                                orderId: e,
                                overflow: !0,
                                orderModal: !0,
                                noHeader: !0,
                                orderDetailModal: !0,
                                additionalClass: 'order-details-modal animated fadeInUp'
                            }
                        }).then((e) => {
                            e.show()
                        })
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('explore').config(['$stateProvider', '$urlRouterProvider', function(e) {
            e.state('holospace.explore', {
                url: '/explore',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    holotab: {
                        controller: 'ExploreController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/explore/views/explore.view.html'
                    }
                }
            }).state('geoCategoryPage', {
                url: '/:holospaceName/cat/:categoryName',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'DirectoryPageController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/explore/views/directory-page.view.html'
                    }
                }
            }).state('geoCategoryPage.pagination', {
                url: '/:page',
                params: {
                    page: null
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'DirectoryPageController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/explore/views/directory-page.view.html'
                    }
                }
            }).state('geoNeighborhoodPage', {
                url: '/:holospaceName/:neighborhoodName/cat/:categoryName',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'DirectoryPageController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/explore/views/directory-page.view.html'
                    }
                }
            }).state('geoNeighborhoodPage.pagination', {
                url: '/:holospaceName/:neighborhoodName/cat/:categoryName/:page',
                params: {
                    page: null
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'DirectoryPageController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/explore/views/directory-page.view.html'
                    }
                }
            }).state('directory', {
                url: '/directory',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'DirectoryMainController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/explore/views/directory-main.view.html'
                    }
                }
            }).state('directoryHolospaces', {
                url: '/directory/:holospaceType',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'DirectoryMainController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/explore/views/directory-main.view.html'
                    }
                }
            }).state('directoryHolospacesAlpha', {
                url: '/directory/:holospaceType/:index',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'DirectoryMainController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/explore/views/directory-main.view.html'
                    }
                }
            })
        }])
    }(),
    function() {
        angular.module('explore').controller('DirectoryMainController', ['$log', 'Places', '$rootScope', '$scope', '$stateParams', 'holospace', 'Meta', '$state', '$location', function(e, t, a, s, i, o, n, l, r) {
            e.debug('Loading DirectoryMainController');
            const d = this;
            d.alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'], d.digit = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'], d.businesses = '', d.busy = !0, d.directoryType = i.directoryType ? i.directoryType : 'holospaces';
            const c = i.index ? i.index : 'A';
            d.holospaces = [];
            let p = {};
            d.init = function() {
                null != c && t.getHolospacesByChar(c).then((e) => {
                    e = e || {
                        data: []
                    }, d.buisnesesType = e.type, d.businesses = e.data, d.busy = !1;
                    let a = '';
                    const s = t.randomArr(e.data.length);
                    'groups' === e.type ? s.forEach((t) => {
                        a = a + ' | ' + (Math.round(Math.random()) ? e.data[t].first.name : e.data[t].last.name)
                    }) : 'holospaces' === e.type && s.forEach((t) => {
                        a = a + ' | ' + e.data[t].name
                    }), p = {
                        meta: {
                            title: '' + 'Discover HoloSpaces starting with the ' + (isNaN(c[0]) ? 'letter' : 'number') + ' ' + c[0] + a,
                            description: 'Discover HoloSpaces starting with the ' + (isNaN(c[0]) ? 'letter' : 'number') + ' ' + c[0] + a.replace('|', '-').replace(/ \|/g, ',') + '.'
                        },
                        tags: ['People', 'Brands', 'Spaces', 'Local Business', 'Influencers', 'Artists', 'blogs', 'ecommerce', 'publishing platform'],
                        type: 'Website',
                        url: 'https://www.holonis.com/directory/holospaces/' + c,
                        tweetHandle: '@Holonis',
                        creator: '@Holonis'
                    }, n.setPageMetaTags(p)
                }).catch((t) => {
                    e.error(t)
                }), l.current.canonical = r.absUrl()
            }, d.init()
        }])
    }(),
    function() {
        angular.module('explore').controller('DirectoryPageController', ['$log', 'Places', '$rootScope', '$scope', '$stateParams', '_', 'constants', 'NgMap', 'Meta', '$state', 'PagePagination', 'jquery', '$timeout', function(e, t, a, s, i, o, n, l, r, d, c, p, u) {
            function g() {
                window.google && google.maps ? v.mapIsReady = !0 : (window.initializeMap = function() {}, p.getScript(h).done(() => {
                    u(() => {
                        v.mapIsReady = !0
                    })
                }))
            }
            e.debug('Loading DirectoryPageController');
            const v = this;
            v.ads = !0, v.fieldTitle = 'Dynamic Directory', v.holospaces = [], v.holospaceName = i.holospaceName, v.stateParams = i;
            const m = v.holospaceName.split('-');
            v.cityName = o.startCase(o.join(o.slice(m, 0, m.length - 1), ' ')), v.stateAbbr = o.upperCase(m[m.length - 1]), v.itemsPerPage = 10, v.currentPage = +i.page || 1;
            const h = 'https://maps.google.com/maps/api/js?libraries=places&js&key=' + n.CREDENTIALS.GOOGLE.MAP_API_KEY;
            v.neighborhoods = [], v.mapIsReady = !1, v.init = function() {
                v.type = i.neighborhoodName ? 'geoNeighborhoodPage' : 'geoCategoryPage', v.holospaceName = i.holospaceName, v.categoryName = i.categoryName, v.categoryName = o.startCase(o.replace(i.categoryName, '-', ' ')), v.neighborhoodName = i.neighborhoodName, v.neighborhoodName = o.startCase(o.replace(i.neighborhoodName, '-', ' ')), v.getHolospaces(), t.getCategories(v.cityName, v.neighborhoodName, v.stateAbbr, 0, 50).then((e) => {
                    v.categories = e.map((e) => (e.parsedName = e.name.replace(/\s+/g, '-').toLowerCase(), e));
                    const t = e.filter((e) => o.startCase(e.name).toLowerCase() === v.categoryName.toLowerCase())[0];
                    v.categoryLength = t && t.count
                })
            }, v.getHolospaces = function() {
                const e = {
                    location: !0,
                    inherit: !0,
                    relative: d.$current,
                    notify: !1
                };
                if (1 < v.currentPage) {
                    let t = d.current.name;
                    'geoCategoryPage' === d.current.name ? t = 'geoCategoryPage.pagination' : 'geoNeighborhoodPage' === d.current.name && (t = 'geoNeighborhoodPage.pagination'), d.transitionTo(t, {
                        page: v.currentPage
                    }, e)
                } else {
                    let t = d.current.name;
                    'geoCategoryPage.pagination' === t ? t = 'geoCategoryPage' : 'geoNeighborhoodPage.pagination' === t && (t = 'geoNeighborhoodPage'), d.go(t, e)
                }
                p('html, body').animate({
                    scrollTop: 0
                }, 'fast'), v.state = {
                    name: v.stateAbbr,
                    vanityUrl: v.holospaceName
                }, t.getHolospacesByCategory(v.cityName, v.categoryName, v.neighborhoodName, v.stateAbbr, (v.currentPage - 1) * v.itemsPerPage, v.itemsPerPage).then((e) => {
                    const t = e.data;
                    t.length && v.ads && t.splice(5, 0, {
                        type: 'ads'
                    }), v.holospaces = t, v.holospacesCount = e.count, g(), c.updatePaginationRelLinks(v.currentPage);
                    const a = o.get(v, 'holospaces[0].location[0].state');
                    v.state = {
                        name: a,
                        vanityUrl: o.toLower(a).replace(/ /g, '-')
                    };
                    const s = {
                        categories: []
                    };
                    s.categories.push({
                        title: 'Holonis Recommendations for ' + v.categoryName + ' in ' + v.cityName + ', ' + v.state.name
                    }), s.name = 'Discover What the ' + v.categoryName + ' in ' + v.cityName + ', ' + v.state.name + ' has to offer', s.description = 'Top ' + v.categoryName + ' in ' + v.cityName + ', ' + v.state.name + ' ' + o.map(t, 'name').join(' , '), s.type = 'Website', s.vanityUrl = 'www.holonis.com/' + v.holospaceName + '/cat/' + v.categoryName, s.headerMediaUrl = '', r.AddDefaultMetaObject(s), u(() => {
                        r.set('robots', 'noindex')
                    })
                })
            }, v.toggleLimit = function() {
                v.limit = v.limit[v.limit.number ? 'less' : 'more']
            }, v.init()
        }])
    }(),
    function() {
        angular.module('explore').controller('ExploreController', ['$log', 'Places', '$timeout', '$rootScope', '$scope', '$state', 'textManipulation', 'Meta', '$location', 'holospace', function(e, t, a, s, i, o, n, l, r, d) {
            e.debug('Loading Explore Controller');
            const c = this;
            c.fieldTitle = 'Explore Directory', c.space = i.$parent.vm.space;
            let p = {},
                m = '',
                u = '';
            const g = 250;
            let v = 0;
            c.limit = {
                more: {
                    number: 20,
                    text: 'all'
                },
                less: {
                    number: !1,
                    text: 'less'
                }
            }, i.categories = [], i.cities = [], i.hideSeeMore = !1;
            const h = c.space.location[0];
            c.fillCities = function(e) {
                const a = g * v;
                0 == v && (i.cities = []), t.getCities(e, a, g).then((e) => {
                    e.map((e) => {
                        i.cities.push(e)
                    }), e.length < g && (i.hideSeeMore = !0)
                })
            }, c.dynamicDirPages = function(e) {
                o.go('geoCategoryPage', {
                    holospaceName: c.space.vanityUrl,
                    categoryName: e
                })
            }, c.fillCategories = function(e) {
                const a = g * v;
                0 == v && (i.categories = []), t.getCategories(e, null, h.stateAbbr.toUpperCase(), a, g).then((e) => {
                    _.map(e, (e) => {
                        e && e.name ? e.vanityUrl = e.name.replace(/\s+/g, '-').toLowerCase() : (console.log('category is not defined'), e.vanityUrl = ''), i.categories.push(e)
                    }), e.length < g && (i.hideSeeMore = !0)
                })
            }, c.seeMore = function() {
                v++, 'state' === c.space.subType ? c.fillCities(h.stateAbbr) : c.space.subType === 'city' && c.fillCategories(h.city)
            }, c.init = function() {
                v = 0, i.stateName = h.state, 'state' === c.space.subType ? (m = 'Discover What the Business & Services ' + c.space.name + ' has to Offer', u = 'Top Businesses & Services in ' + c.space.name, c.fillCities(h.stateAbbr)) : c.space.subType === 'city' && (m = 'Discover What the Business & Services in ' + c.space.name + ', ' + h.state + ' has to Offer', u = 'Top Businesses & Services in ' + c.space.name + ', ' + h.state, c.fillCategories(h.city)), p = {
                    meta: {
                        title: m + ' | People | Places | Business | Products | Cities',
                        description: u
                    },
                    tags: [c.space.name, 'Places', 'People', 'Brands', 'Spaces', 'Local Business', 'Influencers', 'Artists', 'blogs', 'ecommerce', 'publishing platform'],
                    type: 'space',
                    url: 'https://www.holonis.com/' + c.space.vanityUrl,
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, a(() => {
                    l.setPageMetaTags(p), d.isIndexable(c.space) || l.set('robots', 'noindex')
                }, 150), o.current.canonical = r.absUrl()
            }, c.init()
        }])
    }(),
    function() {
        angular.module('home').controller('ReviewsController', ['$rootScope', '$scope', '$log', 'Authentication', 'medium', 'holospace', '_', 'users', '$state', 'PageService', 'Meta', '$location', '$http', '$q', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u) {
            function g() {
                const e = {};
                return !y && void(y = !0, !v.foursquare && (e.foursquare = v.addFoursquare(v.space)), !v.yelp && (e.yelp = v.addYelp(v.space)), u.all(e).then(() => {
                    v.getHolospaceLinks()
                }))
            }
            a.debug('Loading Reviews Controller');
            const v = this,
                h = t.$parent,
                b = {
                    space: h.primarySpace
                };
            let f = {};
            v.contentData = b, v.currentSpace = e.primarySpace, v.callToAction = !1, v.tabs = [], v.editing = !1, v.network = !0, v.myInterval = 1e4, v.parent = t.$parent, v.space = v.parent.vm.space, v.foursquare = null, v.yelp = null, v.networks = [], v.init = function() {
                v.isMySpace = !1, h.$watch('vm.space', (e) => {
                    $('body').toggleClass('unclaimed-holospace', !!e.location), v.space = e, v.getHolospaceLinks(), e.homePageId ? d.v1.getPagesWithContentById(e.homePageId).then((e) => {
                        e.length ? e[0].title === void 0 && e[0].description === void 0 || (v.contentBlocks = e[0].content, f = {
                            tags: e[0].tags,
                            type: e[0].type,
                            image: e[0].headerMediaUrl,
                            url: e[0].url
                        }, e[0].type = 'space', c.setPageMetaTags(f)) : v.callToAction = !0
                    }) : (e.meta = {
                        title: e.name + ' | @' + e.vanityUrl + ' | Reviews & Testimonials',
                        description: '@' + e.vanityUrl + ': ' + (e.information && e.information.tagline ? e.information.tagline : '')
                    }, c.AddDefaultMetaObject(e))
                }), r.current.canonical = p.absUrl()
            }, v.init();
            let y = !1;
            v.getHolospaceLinks = function() {
                o.getSocialLinksBySpaceIdForUnclaimed(v.space.id).then((e) => {
                    n.forEach(e, (e) => {
                        e.active == void 0 && (e.active = !0), 'yelp' === e.provider ? v.yelp = e : 'foursquare' === e.provider && (v.foursquare = e)
                    }), v.yelp && v.foursquare || g()
                })
            }, v.addFoursquare = function(t) {
                return n.get(t, 'location[0]') ? m({
                    url: '/link/foursquare',
                    method: 'GET',
                    params: {
                        spaceId: t.id,
                        q: t.name,
                        ll: t.location[0].latitude + ',' + t.location[0].longitude,
                        a: t.location[0].address,
                        c: t.location[0].city,
                        s: t.location[0].state,
                        z: t.location[0].zipCode,
                        p: t.phoneNumber
                    }
                }).then((t) => (e.spaces && (e.spaces[r.params.holospaceName].links = t.data), !0)).catch((e) => {
                    console.warn('Foursquare error: ', e)
                }) : u.resolve(!1)
            }, v.addYelp = function(t) {
                let a = 'phoneSearch';
                const s = {};
                return t.location && t.location[0] || t.phoneNumber ? (t.phoneNumber ? (s.phone = t.phoneNumber, s.term = t.name) : (a = 'search', s.term = t.name, s.location = t.location[0].city, s.limit = 1, s.cll = t.location[0].latitude + ',' + t.location[0].longitude), m({
                    url: '/link/yelp',
                    method: 'GET',
                    params: {
                        spaceId: t.id,
                        url: v.yelpUrl,
                        type: a,
                        searchObj: s
                    }
                }).then((t) => (e.spaces && (e.spaces[r.params.holospaceName].links = t.data), !0)).catch((e) => {
                    console.warn('Yelp error:', e)
                })) : u.resolve(!1)
            }
        }])
    }(), angular.module('explore').directive('dirCategory', ['$timeout', '$q', '_', function() {
        return {
            restrict: 'E',
            scope: {},
            controller: ['$scope', '$http', function(e) {
                e.categories = [{
                    name: 'Advertising Services',
                    url: 'advertising-services'
                }, {
                    name: 'Commercial Printing',
                    url: 'commercial-printing'
                }, {
                    name: 'Digital Consultants',
                    url: '#'
                }, {
                    name: 'Advertising Services',
                    url: '#'
                }, {
                    name: 'Commercial Printing',
                    url: '#'
                }, {
                    name: 'Digital Consultants',
                    url: '#'
                }, {
                    name: 'Advertising Services',
                    url: '#'
                }, {
                    name: 'Commercial Printing',
                    url: '#'
                }, {
                    name: 'Digital Consultants',
                    url: '#'
                }, {
                    name: 'Advertising Services',
                    url: '#'
                }, {
                    name: 'Commercial Printing',
                    url: '#'
                }, {
                    name: 'Digital Consultants',
                    url: '#'
                }, {
                    name: 'Advertising Services',
                    url: '#'
                }, {
                    name: 'Commercial Printing',
                    url: '#'
                }, {
                    name: 'Digital Consultants',
                    url: '#'
                }, {
                    name: 'Advertising Services',
                    url: '#'
                }, {
                    name: 'Commercial Printing',
                    url: '#'
                }, {
                    name: 'Digital Consultants',
                    url: '#'
                }, {
                    name: 'Advertising Services',
                    url: '#'
                }, {
                    name: 'Commercial Printing',
                    url: '#'
                }, {
                    name: 'Digital Consultants',
                    url: '#'
                }, {
                    name: 'Advertising Services',
                    url: '#'
                }, {
                    name: 'Commercial Printing',
                    url: '#'
                }, {
                    name: 'Digital Consultants',
                    url: '#'
                }, {
                    name: 'Advertising Services',
                    url: '#'
                }, {
                    name: 'Commercial Printing',
                    url: '#'
                }, {
                    name: 'Digital Consultants',
                    url: '#'
                }]
            }],
            templateUrl: 'public/modules/explore/views/dir-category-links.html'
        }
    }]),
    function() {
        function e(e, a, s, i, o) {
            function n(e, t, s, i) {
                const o = a.defer(),
                    n = i || 0;
                let l = 0;
                const r = [],
                    d = 1 < e.length / s ? parseInt(e.length / s) + 1 : parseInt(e.length / s);
                for (; l < e.length;) {
                    const a = {
                        first: '',
                        last: '',
                        vanityUrl: ''
                    };
                    a.first = e[l], a.vanityUrl = t + '-' + (n + l + 1), l + d >= e.length ? l = e.length : l += d, a.last = e[l - 1], a.vanityUrl += '-' + (n + l), r.push(a)
                }
                return o.resolve(r), o.promise
            }
            return {
                getCities: function(e, t, a) {
                    return function(e) {
                        return s.all('spaces/dir/' + e).get('').then((e) => i.collectify(e.plain())).catch(() => {})
                    }(e + '?subType=state&skip=' + t + '&limit=' + a)
                },
                getCategories: function(e, t, o, n, l) {
                    void 0 === l && (l = n, n = t);
                    const r = a.defer();
                    let d = e + '?subType=city&stateAbbr=' + o + '&skip=' + n + '&limit=' + l;
                    return t && (d += '&neighborhood=' + t), s.all('spaces/dir/' + d).get('').then((e) => {
                        const t = i.collectify(e.plain());
                        r.resolve(t)
                    }).catch(() => {}), r.promise
                },
                getNeighborhoods: function(e) {
                    const t = ['spaces', e, 'neighborhoods'].join('/');
                    return s.all(t).get('').then((e) => i.collectify(e ? e.plain() : []))
                },
                getHolospacesByCategory: function(e, t, a, i, o, n) {
                    let l = e + '?subType=category&category=' + t + '&stateAbbr=' + i + '&skip=' + o + '&limit=' + n;
                    return a && (l += '&neighborhood=' + a), s.all('spaces/dir/' + l).get('').then((e) => e.plain())
                },
                getHolospacesByChar: function(e) {
                    const t = a.defer(),
                        o = {
                            data: '',
                            type: '',
                            count: 0
                        };
                    let l = '',
                        r = e,
                        d;
                    const c = function(e) {
                        return s.all('spaces/dir/' + e).get('').then((e) => {
                            const a = i.collectify(e.plain()),
                                s = 50;
                            e.length > s ? n(a, r, s, d).then((e) => {
                                o.data = e, o.type = 'groups', o.count = e.length, t.resolve(o)
                            }) : (o.data = a, o.type = 'holospaces', o.count = a.length, o.vanityUrl = a.vanityUrl, t.resolve(o))
                        }).catch(() => {}), t.promise
                    };
                    if (1 < e.length) {
                        const t = e.split('-'),
                            a = parseInt(t[2]) - parseInt(t[1]) + 1;
                        return d = parseInt(t[1]) - 1, r = t[0], l = r + '?subType=default&category=&skip=' + d + '&limit=' + a, c(l)
                    }
                    return a.resolve(s.all('directories').get(e)).then((e) => e && e.plain()).catch((t) => (console.error(t), l = e + '?subType=default&skip=0&limit=0', c(l)))
                },
                randomArr: function(e) {
                    let a = [];
                    if (6 > e) a = o.range(0, e);
                    else {
                        for (a.push(t(Math.random() * e)); 5 > a.length;) {
                            const s = t(Math.random() * e); - 1 == a.indexOf(s) && a.push(s)
                        }
                        a.sort((e, t) => e - t)
                    }
                    return a
                }
            }
        }
        var t = Math.floor;
        e.$inject = ['$rootScope', '$q', 'Restangular', '_c', '_'], angular.module('explore').factory('Places', e), e.$inject = ['$rootScope', '$q', 'Restangular', 'collections', '_']
    }(),
    function() {
        angular.module('feeds').config(['$stateProvider', '$urlRouterProvider', function() {}])
    }(),
    function() {
        angular.module('feeds').controller('FeedsController', ['$rootScope', '$scope', '_', '$state', 'Meta', '$uibModal', 'holospace', 'users', 'intro', function(e, t, a, s, i, o, n, l, r) {
            const d = this;
            let c = {};
            d.pageContent = [], d.paginationSettings = {}, d.mySpace = e.primarySpace, d.fieldTitle = 'Feeds', s.params.backgroundFetch && (d.backgroundFetch = {
                limit: 10,
                interval: 1e3
            }), setTimeout(() => {
                new Swiper('.swiper-container', {
                    loop: !1,
                    navigation: {
                        nextEl: '.swiper-button-next',
                        prevEl: '.swiper-button-prev'
                    }
                })
            }, 1e3), d.toggleEdit = function() {
                s.go('edit', {
                    holospaceName: d.mySpace.vanityUrl
                })
            }, e.primarySpace && (d.spaceId = e.primarySpace.id), d.space = e.primarySpace, d.dataFeeds = [];
            let p = !0;
            t.$watch('vm.dataFeeds', () => p ? void(p = !1) : void(d.showMessageFeed = !d.dataFeeds.length)), e.primarySpace && e.primarySpace.email && window.Intercom && window.Intercom('update', {
                user_id: e.primarySpace.userId
            }), d.init = function() {
                return e.primarySpace ? void(c = {
                    meta: {
                        title: e.primarySpace.name + ' | feeds',
                        description: e.primarySpace.name + ' | feeds'
                    },
                    tags: [],
                    type: 'website',
                    image: e.primarySpace && e.primarySpace.headerMediaUrl ? e.primarySpace.headerMediaUrl : '',
                    url: e.primarySpace && e.primarySpace.vanityUrl ? e.primarySpace.vanityUrl : 'https://www.holonis.com/',
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, i.setPageMetaTags(c)) : (s.go('homescreen'), e.Authentication.softLogout())
            }, d.init();
            const m = n.getPrimarySpace();
            if (!m.tutorials.firstLogin) {
                const e = o.open({
                    templateUrl: 'public/modules/core/templates/modal/welcome-auto-follow.template.html',
                    controller: ['$uibModalInstance', '$scope', '$state', '$rootScope', '$timeout', 'windowSizeService', function(t, s, i, o, n, c) {
                        s.title = 'What would you like to do next?', s.subTitleRight = 'Explore Your Feed', s.subTitleLeft = 'Personalize Your Holospace', s.bodyRight = 'Start exploring content from the Holospaces you\u2019ve followed. See how others are building their personal brands on Holonis!', s.bodyLeft = 'Create your own Holospace to start building your personal brand. Your Holospace is your home for achieving any goal on Holonis!', s.button_titleRight = 'Explore Your Feed', s.button_titleLeft = 'Personalize Your Holospace', s.note = 'Don\u2019t forget, Holonis is here for you. For help, type \u201CHolonis Support\u201D in the search bar to find tutorials on how to use the platform to succeed at your goal';
                        let p;
                        s.goToFeeds = function() {
                            t.dismiss(), p = 'feeds'
                        }, s.goToProfile = function() {
                            i.go('edit', {
                                holospaceName: d.mySpace.vanityUrl
                            }), p = 'profile'
                        };
                        e.result.then(null, () => {
                            l.finishTutorial('firstLogin'), a.set(o.userSpaces, '[0].tutorials.firstLogin', !0);
                            const e = c.isMobile();
                            switch (p = p || 'backdrop', p) {
                                case 'profile':
                                    n(e ? r.editHolospaceMobile : r.editHolospace, 500), document.documentElement.scrollTop = 0;
                                    break;
                                default:
                                    n(e ? r.navigationMobile : r.navigation, 500), document.documentElement.scrollTop = 0;
                            }(({
                                state: e
                            }) => {
                                let t = '',
                                    a = '',
                                    s = '';
                                switch (s = o.Authentication.getProvider() ? o.Authentication.getProvider() : 'Email', e) {
                                    case 'feeds':
                                        t = 'Go to Feeds', a = 'GoFeed';
                                        break;
                                    case 'profile':
                                        t = 'Go to Profile', a = 'GoEdit';
                                        break;
                                    case 'backdrop':
                                        t = 'Close Modal', a = 'Feed';
                                        break;
                                    default:
                                        return;
                                }
                                dataLayer.push({
                                    eventCategory: 'Sign Up',
                                    event: t,
                                    eventAction: s,
                                    eventLabel: a
                                })
                            })({
                                state: p
                            })
                        })
                    }],
                    controllerAs: 'vm',
                    size: 'lg',
                    windowClass: 'confirm-modal holonis-modal'
                })
            }
        }])
    }(),
    function() {
        angular.module('feeds').factory('Feeds', ['$log', '$rootScope', '$http', '$q', 'Restangular', 'collections', 'Authentication', function(e, t, a, s, i) {
            function o(e) {
                return e.forEach((e) => {
                    e.type = 'feed';
                    const a = e.actor_object || e.owner_object;
                    e.verb && /^published_/.test(e.verb) ? (e.normalized = {
                        isPublishAction: !0,
                        objectType: e.object.split(':')[0],
                        user: {
                            name: a.name,
                            photo: a.profilePhoto || a.profile_photo,
                            vanityUrl: a.vanityUrl
                        },
                        picture: e.target_object.media,
                        name: e.target_object.name,
                        description: e.target_object.description,
                        provider: 'holonis',
                        created: e.created
                    }, 'product' === e.normalized.objectType && (e.normalized.value = e.target_object.price), e.comments = 0, e.hearts = 0) : 'facebook' === e.provider ? e.normalized = {
                        embed: e.url,
                        user: {
                            name: e.from.name,
                            photo: 'https://graph.facebook.com/v2.10/' + e.from.id + '/picture',
                            vanityUrl: a ? a.vanityUrl : t.primarySpace.vanityUrl
                        },
                        picture: e.picture,
                        pictureRatio: e.pictureRatio,
                        name: e.name,
                        description: e.description,
                        provider: e.provider,
                        created: e.created
                    } : 'twitter' === e.provider ? e.normalized = {
                        embed: 'https://twitter.com/' + e.user.name + '/status/' + e.id_str,
                        user: {
                            name: e.user.name,
                            photo: e.user.profile_image_url_https,
                            vanityUrl: a ? a.vanityUrl : t.primarySpace.vanityUrl
                        },
                        picture: e.picture,
                        pictureRatio: e.pictureRatio,
                        name: e.name,
                        description: e.description,
                        provider: e.provider
                    } : 'instagram' === e.provider ? e.normalized = {
                        embed: e.url,
                        user: {
                            name: e.user ? e.user.username : null,
                            photo: e.user ? e.user.profile_picture : null
                        },
                        picture: e.images ? e.images.standard_resolution.url : null,
                        pictureRatio: e.images.standard_resolution.width / e.images.standard_resolution.height,
                        description: e.caption ? e.caption.text : null,
                        provider: e.provider
                    } : 'isVideo' === e.provider && (e.normalized = {
                        source: 'http://www.sample-videos.com/video/mp4/720/big_buck_bunny_720p_1mb.mp4',
                        user: {
                            name: e.from.name,
                            photo: e.picture
                        },
                        picture: e.picture,
                        name: e.name,
                        description: e.description,
                        provider: e.provider
                    })
                }), e
            }
            return {
                getActivities(e, t) {
                    return i.all('/feeds/' + e + '/all').post('', {
                        query: {
                            facebook: t.facebook,
                            twitter: t.twitter,
                            instagram: t.instagram,
                            streamIo: t.streamIo,
                            limit: t.limit || 6
                        }
                    }).then((e) => o(e))
                }, getActivitiesV2(e, t) {
                    return i.all('/feeds/v2/normalized').post('', {
                        query: {
                            facebook: t.facebook,
                            twitter: t.twitter,
                            instagram: t.instagram,
                            streamIo: t.streamIo,
                            limit: t.limit || 6
                        }
                    }).then((e) => o(e))
                }
            }
        }])
    }(),
    function() {
        angular.module('followers').config(['$stateProvider', '$urlRouterProvider', function(e) {
            e.state('holospace.followers', {
                url: '/holospace/followers',
                views: {
                    holotab: {
                        controller: 'FollowersController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/followers/views/followers.view.html'
                    }
                }
            })
        }])
    }(),
    function() {
        angular.module('followers').controller('FollowersController', ['$scope', '$log', '$uibModalInstance', '$location', '$overlay', 'holospace', 'Authentication', 'Followers', 'thisSpace', '$rootScope', 'MessagesAsync', '$state', '$timeout', function(e, t, a, s, i, o, n, l, r, d, c, p, m) {
            function u(e, t) {
                c.then((a) => {
                    a.createAndRedirect({
                        body: t,
                        recipientId: e
                    }, v.mySpace.vanityUrl, p).then(() => {
                        v.closeModal()
                    })
                })
            }

            function g(e) {
                v.relationships[e].loading = !1, v.relationships[e].next = {
                    limit: 50,
                    term: v.searchUsers
                }, v.relationships[e].items = [], v.loadMore(e)
            }
            t.debug('Loading Followers Controller');
            const v = this;
            v.loading = !0, v.thisSpace = r, v.mySpace = d.primarySpace, r && (v.isOwnSpace = v.mySpace && v.thisSpace.id === v.mySpace.id), v.currentTab = 'followers', v.closeModal = function() {
                a && a.close()
            }, v.closeModalFocusSearch = function() {
                a && (a.close(), 769 < window.innerWidth ? $('#input-search').trigger('focus') : setTimeout(() => {
                    $('#itemSearch').trigger('click'), setTimeout(() => {
                        $('#input-search').trigger('focus')
                    }, 100)
                }, 100))
            }, e.overlays = {
                message: 'public/modules/holospace/views/followers-message.view.html'
            }, v.handleSendMessage = function(t) {
                const a = this.mySpace;
                if (!a) {
                    const a = {
                        url: s.absUrl(),
                        timestamp: Date.now()
                    };
                    sessionStorage.setItem('redirectToUrlAfterLogin', JSON.stringify(a));
                    const i = {
                        overlay: 'message',
                        overlays: e.overlays,
                        relationship: t
                    };
                    Object.assign(a, i), sessionStorage.setItem('showOverlayAfterLoginRedirect', JSON.stringify(a)), this.openAccessModal()
                } else {
                    const a = d.$new();
                    a.overlays = e.overlays, a.relationship = t, i.show(a, 'message'), this.closeModal()
                }
            }, v.openAccessModal = function() {
                a.close(), setTimeout(n.showLoginPrompt(), 170)
            }, v.follow = function(e) {
                v.feedbackFollow = !0, l.toggleFollow(v.mySpace, e, v.relationshipsFollowing)
            }, v.feedbackFollowFunc = function() {
                v.feedbackFollow = !1
            }, v.holospaceUrlModalClose = function() {
                setTimeout(() => {
                    a.close()
                }, 100)
            };
            let h;
            e.$watch('vm.searchUsers', () => {
                v.loading || (h && clearTimeout(h), h = setTimeout(() => {
                    g(v.currentTab)
                }, 1e3))
            }, !0), v.relationships = {
                followers: {
                    service: o.getFollowersBySpaceId
                },
                following: {
                    service: o.getFollowingBySpaceId
                }
            }, v.loadMore = function(t) {
                const a = v.relationships[t];
                if (a && a.next && !a.loading) {
                    a.loading = !0;
                    const s = r ? r.id : v.mySpace.id;
                    a.service(s, a.next).then((s) => {
                        s.items.forEach((e) => {
                            e.sendNewMessage = u.bind(null, e.spaceId)
                        }), a.items = a.items.concat(s.items), a.total = s.pagination.total, a.next = s.pagination.next || null, a.loading = !1, v.loading = !1, a.loadedInitial = !0, m(() => {
                            e.$emit('loaded' + t)
                        })
                    })
                }
            }, g('following'), g('followers'), v.onClickTab = function(e, t) {
                const a = $(e.target).closest('li').position().left;
                $(e.target).closest('.tabs-wrap').animate({
                    scrollLeft: a
                }, 500), v.currentTab = t
            }
        }])
    }(),
    function() {
        angular.module('followers').factory('Followers', ['$q', '$log', '$rootScope', 'Restangular', 'localStorageService', 'notifyService', '$timeout', '$uibModal', function(e, t, a, s, i, o, n, l) {
            function r(e) {
                return s.all('relationships/').post(e).then((e) => e).catch((e) => {
                    throw 400 <= e.status && 500 > e.status ? o.error(_.get(e, 'data.message')) : o.error('An error occurred. Try again.'), e
                })
            }

            function d(e) {
                return s.one('relationships/', e).remove().then((e) => e)
            }

            function c(e, t) {
                const a = {};
                return e && (a.where = e), t && (a.include = t), s.one('relationships/findOne').get({
                    filter: a
                }).then((e) => e)
            }

            function p(a, s, i) {
                const o = a.id,
                    n = s.spaceId || s.id;
                return o === n ? e((e) => {
                    e(null)
                }) : i ? c({
                    fromSpaceId: o,
                    toSpaceId: n
                }).then((e) => d(e.id).then(() => a).catch((e) => {
                    t.error('Remove Relationship Error: ', e)
                })).catch((e) => 404 === e.status && e.data && e.data.error && 'MODEL_NOT_FOUND' === e.data.error.code ? a : void t.error('Get Relationship ID Error: ', e)) : r({
                    fromSpaceId: o,
                    toSpaceId: n
                }).then(() => a).catch((e) => {
                    t.error('Add Relationship Error: ', e)
                })
            }
            return {
                getRelationshipId: c,
                addRelationship: r,
                removeRelationship: d,
                follow: p,
                toggleFollow: function(e, t, s) {
                    return p(e, t, t.isFollowing).then(() => {
                        if (t.isFollowing = !t.isFollowing, t.isFollowing) e.id === a.primarySpace.id && (t.followerCount++, s && s.push(t)), n(() => {
                            dataLayer.push({
                                eventCategory: 'Holospace Followed',
                                event: 'Followed a Holospace',
                                eventAction: 'Follow',
                                eventLabel: e.vanityUrl + ' Followed ' + (t.vanityUrl || t.space.vanityUrl)
                            })
                        });
                        else {
                            if (t.followerCount--, s) {
                                const e = _.findIndex(s, {
                                    id: t.spaceId || t.id
                                }); - 1 !== e && s.splice(e, 1)
                            }
                            n(() => {
                                dataLayer.push({
                                    eventCategory: 'Holospace Unfollowed',
                                    event: 'Unfollowed a Holospace',
                                    eventAction: 'Unfollow',
                                    eventLabel: e.vanityUrl + ' Unfollowed ' + (t.vanityUrl || t.space.vanityUrl)
                                })
                            })
                        }
                    })
                },
                openFollowModal: function(e, t) {
                    l.open({
                        templateUrl: 'public/modules/followers/views/followers.view.html',
                        controller: 'FollowersController',
                        controllerAs: 'vm',
                        size: t,
                        resolve: {
                            thisSpace() {
                                return e
                            }, toggleFollow() {
                                return function(t) {
                                    e.isfollowing = t
                                }
                            }
                        },
                        windowClass: 'holo-modal-medium wrapper-modal-follow',
                        openedClass: 'modal-open modal-open--fixed',
                        backdropClass: 'backdrop-modal-follow'
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('holospace').config(['$stateProvider', '$urlRouterProvider', function(e, t) {
            t.when('/search/:content', ['$match', '$state', (e, t) => t.go('search', {
                searchString: e.content
            }, !1)]), e.state('homescreen', {
                url: '/?invited&auth_error&token',
                resolve: {
                    userSpaces: ['$state', '$stateParams', 'Authentication', 'holospace', function(e, t, a, s) {
                        return t.redirectToHolospace && !a.isLoggedOut() ? s.getCurrentUserSpaces().then(() => {
                            e.go('holospace.home')
                        }) : []
                    }]
                },
                views: {
                    main: {
                        controller: 'LandingPageController',
                        templateUrl: 'public/modules/landingpage/views/landingpage.view.html'
                    }
                }
            }).state('verify', {
                url: '/verify?token',
                resolve: {
                    userSpaces: ['$state', '$stateParams', 'Authentication', 'holospace', function(e, t, a, s) {
                        return t.redirectToHolospace && !a.isLoggedOut() ? s.getCurrentUserSpaces().then(() => {
                            e.go('holospace.home')
                        }) : []
                    }]
                },
                views: {
                    main: {
                        controller: 'LandingPageController',
                        templateUrl: 'public/modules/landingpage/views/landingpage.view.html'
                    }
                }
            }).state('reset-password', {
                url: '/reset-password?access_token',
                views: {
                    main: {
                        controller: 'PasswordController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/users/views/password/forgot-password.view.html'
                    }
                }
            }).state('places', {
                url: '/places',
                title: 'Places',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'PlacesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/places/views/places.view.html'
                    }
                }
            }).state('topics', {
                title: 'My Topics',
                url: '/:vanityUrl/topics',
                views: {
                    main: {
                        controller: 'OnboardingPreferencesController',
                        templateUrl: 'public/modules/onboarding/templates/preferences.view.html'
                    }
                },
                params: {
                    edit: !0
                },
                resolve: {
                    topics: ['holospace', 'OnboardingService', '$rootScope', '$stateParams', '$state', 'OnboardingUtils', function(e, t, a, s, i, o) {
                        return e.getCurrentUserSpaces().then(() => t.getTopicsAll().then((e) => {
                            const t = o.getSpacesIndexByVanity(s.vanityUrl);
                            return isNaN(t) ? i.go('404', void 0, {
                                location: 'replace'
                            }) : (e.categories.map((e) => {
                                const s = _.get(a, 'userSpaces[' + t + '].interestIds', []);
                                return -1 !== s.indexOf(e.id) && (e.checked = !0), e
                            }), e)
                        }))
                    }],
                    categories() {
                        return []
                    }
                }
            }).state('feeds', {
                url: '/feeds',
                params: {
                    backgroundFetch: !1
                },
                views: {
                    main: {
                        controller: 'FeedsController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/feeds/views/feeds.view.html'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                requiresLoggedIn: !0
            }).state('drafts', {
                url: '/:holospaceName/drafts',
                title: 'Drafts',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'DraftsController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/drafts/views/drafts.view.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('drafts.page', {
                url: '/:page',
                title: 'Drafts',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'DraftsController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/drafts/views/drafts.view.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('videos', {
                url: '/:holospaceName/videos',
                title: 'Videos',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'VideosController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/videos/views/videos.view.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('videos.page', {
                url: '/:page',
                title: 'Videos',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'VideosController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/videos/views/videos.view.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('tiles', {
                url: '/tiles',
                views: {
                    main: {
                        controller: 'TilesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/tiles/views/tiles.view.html'
                    }
                }
            }).state('new', {
                url: '/:holospaceName/new',
                title: 'New Holospace',
                views: {
                    main: {
                        controller: 'HolospaceNewController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/holospace-new.view.html'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                requiresLoggedIn: !0
            }).state('firstHolospace', {
                url: '/holospace/new',
                title: 'New Holospace',
                views: {
                    main: {
                        controller: 'HolospaceNewController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/holospace-new.view.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('selectSpace', {
                url: '/:holospaceName/select-space',
                title: 'Select a Holospace',
                views: {
                    main: {
                        controller: 'SelectSpaceController',
                        controllerAs: 'vm'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                requiresLoggedIn: !0
            }).state('edit', {
                url: '/:holospaceName/edit',
                title: 'Holospace Edit View',
                views: {
                    main: {
                        controller: 'HolospaceEditController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/holospace-edit.view.html'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }],
                    spaceData: ['$stateParams', 'dsHolospaceService', 'holospace', function(e, t, a) {
                        return t.getEditSpaceDetail(e.holospaceName).then((t) => t.cover.originalUrl ? t : a.getSpaceDetails(e.holospaceName).then((e) => (t.cover = {
                            originalUrl: e.headerMediaUrl,
                            url: e.headerMediaUrl,
                            crop: [0, 0, 1]
                        }, t)))
                    }]
                },
                requiresLoggedIn: !0
            }).state('settings', {
                url: '/:holospaceName/settings',
                title: 'Holospace Settings',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'HolospaceSettingsController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/holospace-settings.view.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('likes', {
                url: '/:holospaceName/likes',
                title: 'Holospace Likes',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'HolospaceLikesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/holospace-likes.view.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('saved', {
                url: '/:holospaceName/saved',
                title: 'Holospace Saved',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'HolospaceSavedController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/holospace-saved.view.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('apps', {
                url: '/:holospaceName/apps',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        controller: 'HolospaceAppsController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/holospace-apps.view.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('apps.facebook', {
                url: '/facebook',
                views: {
                    social: {
                        controller: 'HolospaceAppsRoutesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/app.view.facebook.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('apps.twitter', {
                url: '/twitter',
                views: {
                    social: {
                        controller: 'HolospaceAppsRoutesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/app.view.twitter.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('apps.instagram', {
                url: '/instagram',
                views: {
                    social: {
                        controller: 'HolospaceAppsRoutesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/app.view.instagram.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('apps.paypal', {
                url: '/paypal',
                views: {
                    social: {
                        controller: 'HolospaceAppsPaypalController',
                        templateUrl: 'public/modules/holospace/views/app.view.paypal.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('apps.stripe', {
                url: '/stripe',
                views: {
                    social: {
                        controller: 'HolospaceAppsRoutesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/app.view.stripe.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('apps.yelp', {
                url: '/yelp',
                views: {
                    social: {
                        controller: 'HolospaceAppsRoutesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/app.view.yelp.html'
                    }
                },
                requiresLoggedIn: !0
            }).state('apps.foursquare', {
                url: '/foursquare',
                views: {
                    social: {
                        controller: 'HolospaceAppsRoutesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/app.view.foursquare.html'
                    }
                },
                requiresLoggedIn: !0
            })
        }])
    }(),
    function() {
        angular.module('holospace').config(['$stateProvider', function(e) {
            e.state('holospace.space', {
                url: '/space',
                views: {
                    holotab: {
                        controller: 'HolospaceTabController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/space-tab.view.html'
                    }
                }
            }).state('holospace.reviews', {
                url: '/reviews',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    holotab: {
                        controller: 'ReviewsController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/explore/views/reviews.view.html'
                    }
                }
            }).state('holospace.widgets', {
                url: '/w/:network',
                title: 'Social Wall',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    holotab: {
                        controller: 'HolospaceWidgetController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/holospace-widgets.view.html'
                    }
                }
            }).state('holospace.posts', {
                url: '/posts',
                views: {
                    holotab: {
                        controller: 'PostTabController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/posts/views/tab.view.html'
                    }
                }
            }).state('holospace.posts.page', {
                url: '/:page',
                views: {
                    holotab: {
                        controller: 'PostTabController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/posts/views/tab.view.html'
                    }
                }
            }).state('holospace.pages', {
                url: '/pages',
                views: {
                    holotab: {
                        controller: 'PageTabController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/pages/views/tab.view.html'
                    }
                }
            }).state('holospace.pages.page', {
                url: '/:page',
                views: {
                    holotab: {
                        controller: 'PageTabController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/pages/views/tab.view.html'
                    }
                }
            }).state('holospace.channels', {
                url: '/channels',
                views: {
                    holotab: {
                        controller: 'ChannelTabController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/channels/views/tab.view.html'
                    }
                }
            }).state('holospace.channels.page', {
                url: '/:page',
                views: {
                    holotab: {
                        controller: 'ChannelTabController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/channels/views/tab.view.html'
                    }
                }
            }).state('holospace.shop', {
                url: '/shop',
                views: {
                    holotab: {
                        controller: 'ItemTabController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/items/views/tab.view.html'
                    }
                }
            }).state('holospace.shop.page', {
                url: '/:page',
                views: {
                    holotab: {
                        controller: 'ItemTabController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/items/views/tab.view.html'
                    }
                }
            })
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceAppsPaypalController', ['dsConfirm', '$rootScope', '$scope', 'Authentication', 'holospace', 'PaypalService', '$timeout', 'notifyService', '_', function(e, t, a, s, i, o, n, l, r) {
            function d() {
                a.state.connecting = !0, o.connect().then((e) => {
                    location.href = e.url
                }).catch((e) => e && 400 <= e.status && 500 > e.status ? (l.error(r.get(e, 'data.message') || 'An error occurred, please try again.'), e) : void(a.state.connecting = !1))
            }
            const c = 'paypal.email.reminder',
                p = localStorage.getItem(c);
            a.data = {}, a.state = {
                disconnecting: !1,
                connecting: !1,
                connected: !1,
                confirmed: !1,
                loading: !0
            }, dataLayer.push({
                eventCategory: 'Accessed App Section',
                event: 'What App Accessed',
                eventAction: 'Paypal Accessed',
                eventLabel: 'Paypal'
            }), a.data.space = t.primarySpace, a.data.spaceToken = s.spaceAccessToken().id, a.setPaypalEmailReminder = () => localStorage.setItem(c, !0), a.cancelPaypalEmailReminder = () => localStorage.removeItem(c), a.connect = () => a.state.hasAnotherPaymentAppConnected ? e.show({
                title: 'Switching payment app',
                message: 'You\'re already connected to a payment provider. Are you sure you want to switch?',
                confirm: {
                    text: 'Yes',
                    action() {
                        d()
                    }
                },
                cancel: {
                    text: 'Cancel'
                }
            }) : d(), a.disconnect = () => {
                if (!a.state.disconnecting) return a.data.link.active = !1, n(() => {
                    a.state.connected = !1
                }, 200), o.disconnect().catch((e) => {
                    if (e && 400 <= e.status && 500 > e.status) return l.error(r.get(e, 'data.message') || 'An error occurred, please try again.'), e
                })
            }, $('.apps-view-nav').removeClass('active'), $('[ui-view=\'social\']').toggleClass('active'), a.state.loading = !0, i.getSocialLinksBySpaceId(t.primarySpace.id).then((e) => {
                const t = r.find(e, {
                        provider: 'paypal'
                    }, null),
                    s = r.find(e, {
                        provider: 'stripe'
                    }, null);
                a.data.link = t, a.state.hasAnotherPaymentAppConnected = r.get(s, 'active');
                const i = r.get(t, 'active'),
                    o = r.get(t, 'profile.primary_email_confirmed');
                a.data.link && a.data.link.active && (a.state.connected = !0, a.state.confirmed = r.get(a.data.link, 'profile.primary_email_confirmed')), o && i && p && (l.success('Please verify your email to begin accepting payments.'), localStorage.removeItem(c)), a.state.loading = !1
            }).catch((e) => e && 400 <= e.status && 500 > e.status ? (l.error(r.get(e, 'data.message') || 'An error occurred, please try again.'), e) : void(a.state.loading = !1))
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceAppsController', ['$log', '$scope', 'Authentication', 'jquery', '$state', 'media', 'holospace', '_', '$rootScope', 'Meta', function(e, t, a, s, i, o, n, l, r, d) {
            e.debug('Loading Apps Holospace Controller');
            const c = this;
            let p = {};
            c.init = function() {
                function e(e) {
                    i.go(`apps.${e}`)
                }
                c.spaceId = r.primarySpace.id, c.spaceVanity = r.primarySpace.vanityUrl, c.paypalIsEnabled = !0, t.paypalIsEnabled = !0, c.appActiveFn = function(t) {
                    const a = $(t.currentTarget).data('name');
                    e(a)
                }, p = {
                    meta: {
                        title: `${r.primarySpace.name} | Apps `,
                        description: `${r.primarySpace.name} | Apps`
                    },
                    tags: [],
                    type: 'website',
                    image: t.primarySpace && r.primarySpace.name ? r.primarySpace.headerMediaUrl : '',
                    url: r.primarySpace && r.primarySpace.vanityUrl ? r.primarySpace.vanityUrl : 'https://www.holonis.com',
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, d.setPageMetaTags(p)
            }, c.init()
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceAppsRoutesController', ['$log', '$scope', '$http', 'Authentication', 'jquery', '$state', 'media', 'holospace', '_', '$rootScope', 'Meta', '$timeout', 'notifyService', 'dsModal', 'Restangular', 'dsConfirm', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v) {
            e.debug('Loading Apps Routes Holospace Controller');
            const h = this;
            h.init = function() {
                function e() {
                    window.location.href = `/link/stripe?spaceId=${h.spaceId}&space_token=${h.spaceToken}`
                }

                function i() {
                    return l.getSocialLinksBySpaceId(h.spaceId).then((e) => {
                        h.isAppConnected = {}, h.availableNetworks = [], h.availableNetworksConnected = {}, h.networks = {}, r.forEach(e, (e) => {
                            h.availableNetworks.push(e.provider), e.active == void 0 && (e.active = !0), h.availableNetworksConnected[e.provider] = e.active, h.networks[e.provider] = e
                        }), h.availableNetworks.forEach((e) => {
                            h.isAppConnected[e] = h.availableNetworksConnected[e]
                        })
                    })
                }
                const n = ['facebook', 'twitter', 'stripe', 'foursquare', 'yelp'],
                    c = o.current && o.current.name.split('.')[1] || '';
                dataLayer.push({
                    eventCategory: 'Accessed App Section',
                    event: 'What App Accessed',
                    eventAction: c + ' Accessed',
                    eventLabel: c
                }), h.spaceId = d.primarySpace.id, h.spaceVanity = d.primarySpace.vanityUrl, h.spaceToken = s.spaceAccessToken().id, h.disconnectStripe = () => {
                    h.isAppConnected.stripe = !1
                }, h.connectStripe = () => h.isAppConnected.paypal ? v.show({
                    title: 'Switching payment app',
                    message: 'You\'re already connected to a payment provider. Are you sure you want to switch?',
                    confirm: {
                        text: 'Yes',
                        action() {
                            e()
                        }
                    },
                    cancel: {
                        text: 'Cancel'
                    }
                }) : e(), h.yelpUrl = '', t.$watch('vm.yelpUrl', (e, t) => {
                    e === t || (h.yelpUrl = h.yelpUrl.trim().replace(/\s+/g, '-'))
                }), h.scanYelp = function(e) {
                    e.preventDefault(), $('.view-connecting').toggleClass('hide'), $('#input-yelp').prop('readOnly', !0), a({
                        url: '/link/yelp',
                        method: 'GET',
                        params: {
                            spaceId: h.spaceId,
                            url: h.yelpUrl
                        }
                    }).then((e) => (d.primarySpace.links = e.data, d.spaces && d.spaces[d.primarySpace.vanityUrl] && (d.spaces[d.primarySpace.vanityUrl].links = e.data), i())).catch((e) => {
                        console.warn('error: ', e), m.error(e && e.data && e.data.data && e.data.data.indexOf('"BUSINESS_UNAVAILABLE"') ? 'Business information is unavailable. Please double check the Yelp business name.' : 'Something went wrong, please try again.')
                    }).finally(() => {
                        $('.view-connecting').toggleClass('hide'), $('#input-yelp').prop('readOnly', !1)
                    })
                };
                let g;
                p(() => {
                    const e = document.querySelector('#form-address');
                    if (e) {
                        const e = places({
                            container: document.querySelector('#form-address'),
                            type: 'address',
                            templates: {
                                value(e) {
                                    return e.name
                                }
                            }
                        });
                        e.on('change', (t) => {
                            p(() => {
                                h.foursquareCity = t.suggestion.city || '', h.foursquareZip = t.suggestion.postcode || '', h.foursquareState = t.suggestion.administrative || '', g = t.suggestion.latlng.lat + ',' + t.suggestion.latlng.lng
                            })
                        })
                    }
                }, 100), h.scanFoursquare = function(t) {
                    t.preventDefault(), $('.view-connecting').toggleClass('hide'), a({
                        url: '/link/foursquare',
                        method: 'GET',
                        params: {
                            spaceId: h.spaceId,
                            q: h.foursquareName,
                            ll: g,
                            a: h.foursquareAddress,
                            c: h.foursquareCity,
                            s: h.foursquareState,
                            z: h.foursquareZip,
                            p: h.foursquarePhone
                        }
                    }).then((e) => (d.primarySpace.links = e.data, d.spaces && d.spaces[d.primarySpace.vanityUrl] && (d.spaces[d.primarySpace.vanityUrl].links = e.data), i())).catch((e) => {
                        m.error(e && e.data && e.data.message || 'Something went wrong, please try again.')
                    }).finally(() => {
                        $('.view-connecting').toggleClass('hide')
                    })
                };
                const b = d.fromState,
                    f = o.current.name;
                $('.apps-view-nav').removeClass('active'), setTimeout(() => {
                    $('[ui-view=\'social\']').toggleClass('active')
                }, 0), h.checkLinkedNetwork = function(e) {
                    const t = -1 < h.availableNetworks.indexOf(e);
                    return t
                }, h.learnMore = function() {
                    u.create({
                        template: 'public/modules/holospace/views/learn.view.html',
                        close: !0,
                        scope: {
                            noHeader: !0,
                            additionalClass: 'ds-confirm'
                        }
                    }).then((e) => {
                        e.show()
                    })
                }, h.reActivateAccount = function(e) {
                    h.isAppConnected[e] = !h.isAppConnected[e]
                }, i().catch((e) => {
                    console.warn('error: ', e)
                }).then(() => {
                    n.forEach((e) => {
                        t.$watch(() => h.isAppConnected[e], (t, a) => {
                            void 0 === a || void 0 === t || t === a || t && r.includes(['foursquare', 'yelp'], e) || l.updateSocialLinksBySpaceId(h.spaceId, e).then(() => {
                                h.isAppConnected[e] = t
                            })
                        })
                    }), $('.app-display').toggleClass('hidden'), $('.loader-apps').toggleClass('hidden')
                }), h.appBackFn = function() {
                    o.go('apps')
                }
            }, h.init()
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceDraftController', ['$log', function(e) {
            e.debug('Loading Draft Holospace');
            this
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceEditController', ['$log', '$window', '$scope', '$state', '$stateParams', '$rootScope', 'media', 'holospace', 'medium', '_', 'PageService', '$uibModal', 'PagePagination', 'Meta', '$q', 'dsHolospaceService', 'spaceData', 'notifyService', 'intro', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v, h, b, f) {
            function y(e) {
                const t = ['holospace', e || 'home'].join('.');
                s.go(t, {
                    holospaceName: w.space.vanityUrl
                })
            }
            e.debug('Loading Edit Holospace Creation Controller');
            const w = this;
            let k = {};
            w.space = h, w.holospaceTabs = [], w.tabsEdit = !0, w.holospaceTabs.push({
                tabText: 'Home',
                routeState: 'home',
                weight: 0,
                sref: null
            }), w.holospaceTabs.push({
                tabText: 'Shop',
                routeState: 'shop',
                weight: 1
            }), w.holospaceTabs.push({
                tabText: 'Posts',
                routeState: 'posts',
                weight: 2
            }), w.holospaceTabs.push({
                tabText: 'Pages',
                routeState: 'pages',
                weight: 3
            }), w.holospaceTabs.push({
                tabText: 'Channels',
                routeState: 'channels',
                weight: 4
            }), w.holospaceTabs.push({
                tabText: 'About',
                routeState: 'about',
                weight: 5
            }), w.showLinks = !1, w.modalLinks = function() {
                w.showLinks = !w.showLinks, o.isOverflow = !o.isOverflow
            }, a.header = {
                title: 'edit profile',
                params: {
                    cancel: !1,
                    discard: 'Cancel',
                    publish: !1,
                    save: 'Save',
                    seo: {
                        hideChannels: !0,
                        hideShare: !0,
                        left: -440,
                        arrow: 15
                    },
                    user: !1
                }
            }, a.params = !1, a.save = function() {
                const e = d.get(w.space, 'meta.tags');
                return w.space.tags = e || w.space.tags, v.update(w.space, w.space.id).then(() => {
                    o.primarySpace.profilePhoto = w.space.profilePhoto, y('about')
                }).catch(() => {
                    b.error('An error occurred. Please, try again.')
                })
            }, a.discard = function() {
                return c.discard(w.space.homePageId, {}).then(() => {
                    y('home')
                })
            }, w.arrowActive = !0, w.callTextActive = !0, w.toggleArrow = function() {
                w.arrowActive = !w.arrowActive
            }, w.updatePosition = function(e) {
                w.contentData.space.headerMediaPosition = e
            }, w.addSpaceLink = function() {
                p.open({
                    templateUrl: 'spaceLinks.html',
                    controller: ['$scope', '$timeout', '$uibModalInstance', 'spaceLinks', 'getSocialLinks', function(e, t, a, s, i) {
                        function o() {
                            r.disableBtn = !0, r.isDisabled = 'is-disabled'
                        }

                        function n() {
                            r.disableBtn = !1, r.isDisabled = ''
                        }
                        const r = this;
                        r.providers = i.items, r.spaceLinks = s || [], t(() => {
                            Stretchy.resizeAll()
                        }), r.getProviderIcon = l.getProviderIcon, e.overlays = {
                            providers: 'providers.html'
                        }, r.selectProvider = function(e) {
                            r.spaceLinks.push({
                                link: '',
                                name: e.name,
                                placeholder: e.placeholder,
                                pattern: e.pattern
                            }), t(() => {
                                Stretchy.resizeAll()
                            })
                        }, r.removeLink = function(e) {
                            r.spaceLinks.splice(e, 1), r.validateDone()
                        }, r.checkUrl = function(e) {
                            r.spaceLinks[e].error = !1, r.validateDone()
                        }, r.cancel = function() {
                            return r.spaceLinks = d.filter(r.spaceLinks, (e) => e && e.href), w.space.links = r.spaceLinks, l.saveSocialLinks(w.space.id, r.spaceLinks).then(() => a.dismiss()).catch((e) => {
                                const t = d.get(e, 'data.links');
                                t ? (t.forEach((e) => {
                                    r.spaceLinks[e.pos].error = !0
                                }), o()) : console.error(e)
                            })
                        }, r.validateDone = () => {
                            for (let e = 0; e < r.spaceLinks.length; e++) {
                                const t = r.spaceLinks[e];
                                if (t.error) return void o();
                                n()
                            }
                        }
                    }],
                    resolve: {
                        spaceLinks() {
                            return w.space.links
                        }, getSocialLinks() {
                            return l.getSocialLinks()
                        }
                    },
                    controllerAs: 'vm',
                    windowClass: 'holo-modal-full z-index-max wrapper-modal-links',
                    backdrop: !1
                })
            }, w.getProviderIcon = l.getProviderIcon, w.init = function() {
                w.space.isEdit = !0, w.space.links = w.space.links || [], a.tracker = o.promiseTracker, a.params = {
                    contentId: w.space.homePageId,
                    spaceId: w.space.id,
                    template: 'page',
                    story: w.space.body.story,
                    single: !1,
                    bucket: '',
                    storyVersion: w.space.storyVersion,
                    tracker: a.tracker
                }, w.limitTagline = 50, w.countTagline = w.limitTagline, a.$watch('vm.space.information.tagline', (e) => {
                    w.countTagline = w.limitTagline - (e || '').length
                });
                const e = {
                    space: w.space
                };
                w.contentData = e, w.contentBlocks = [], window.Intercom && window.Intercom('update', {
                    user_id: w.space.userId
                }), w.bucket = w.space.bucket, w.spaceId = w.space.id, m.updatePaginationRelLinks(0), k = {
                    meta: {
                        title: o.primarySpace.name + ' | Edit Profile',
                        description: o.primarySpace.name + ' | Edit Profile'
                    },
                    tags: [],
                    type: 'website',
                    image: '',
                    url: 'https://www.holonis.com/',
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, u.setPageMetaTags(k)
            };
            const S = l.getPrimarySpace();
            S.tutorials.editHolospace || (S.tutorials.editHolospace = !0, 768 < $(window).width() ? setTimeout(f.editHolospace, 500) : setTimeout(f.editHolospaceMobile, 500)), w.init()
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceFeedController', ['$log', function(e) {
            e.debug('Loading Apps Holospace');
            this
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceHeaderController', ['$rootScope', '$scope', '$log', '$stateParams', '$uibModal', '$overlay', 'Followers', 'Authentication', 'MessagesAsync', 'holospace', '_', 'collections', 'media', '$state', '$location', 'jquery', 'users', 'constants', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v, h, b) {
            function f() {
                c.remove(w.holospaceOptions.actions, (e) => 'Block' === e.text)
            }

            function y() {
                w.holospaceOptions.actions.push({
                    text: 'Block',
                    callback() {
                        return w.mySpace ? void w.block() : void l.showLoginPrompt()
                    }
                })
            }
            a.debug('Loading Holospace Header Controller');
            const w = this,
                k = e.primarySpace;
            w.userId = l.currentUser(), w.isBlocked = !1, w.isfollowing = !1, w.currentSpace = null, w.mySpace = null, w.flagIsMySpace = !1, w.mapApiKey = b.CREDENTIALS.GOOGLE.MAP_API_KEY, w.analyticData = null, w.headerTitle = '', w.getProviderIcon = d.getProviderIcon, w.followLoading = !1, w.holospaceOptions = {
                    actions: []
                }, t.overlays = {
                    message: 'public/modules/holospace/views/holospace-message.view.html'
                }, w.showLinks = !1, w.modalLinks = function() {
                    w.showLinks = !w.showLinks, e.isOverflow = !e.isOverflow
                }, t.sendNewMessage = function(e) {
                    r.then((t) => {
                        const a = {
                            body: e,
                            recipientId: w.currentSpace.id
                        };
                        t.createAndRedirect(a, k.vanityUrl, u)
                    })
                }, w.editImage = function(e) {
                    const t = {};
                    m.pickFile({
                        cropRatio: '[5/2]'
                    }, w.currentSpace.bucket, w.currentSpace.id).then((a) => {
                        t[e] = a.source, d.updateSpace(w.currentSpace.id, t).then(() => {
                            w.currentSpace[e] = a.source
                        })
                    })
                }, w.socialClick = function() {}, w.dynamicPopover = {
                    templateUrl: 'public/modules/holospace/views/options.view.html'
                }, w.openMessageModal = function(e) {
                    i.open({
                        templateUrl: 'public/modules/messaging/views/message.view.html',
                        controller: 'MessagingController',
                        controllerAs: 'vm',
                        size: e,
                        resolve: {
                            toSpace() {
                                return w.currentSpace
                            }, fromSpace() {
                                return w.mySpace
                            }
                        },
                        windowClass: 'holo-modal-medium'
                    })
                }, w.openFollowModal = function(e) {
                    n.openFollowModal(t.data, e)
                }, w.shareModal = function() {
                    i.open({
                        templateUrl: 'public/modules/core/templates/sharethis.modal.template.html',
                        controller: ['$uibModalInstance', 'title', function(e, t) {
                            const a = this;
                            a.permalink = g.absUrl(), a.title = t || 'Holonis Inc.', a.cancel = function() {
                                e.dismiss()
                            }
                        }],
                        resolve: {
                            title() {
                                return w.currentSpace.name
                            }
                        },
                        controllerAs: 'vm',
                        size: 'sm',
                        windowClass: 'confirm-modal w-modal-share modal-share modal-mobile-full'
                    })
                }, w.unblock = function() {
                    d.unblock(w.currentSpace.id).then(() => {
                        w.isBlocked = !1, w.followLoading = !1, w.isfollowing = !1, y()
                    })
                }, w.block = function() {
                    d.block(w.currentSpace.id).then(() => {
                        w.isBlocked = !0, w.followLoading = !1, w.isfollowing = !1, f()
                    })
                }, w.toggleFollow = function() {
                    return w.followLoading = !0, w.isBlocked ? w.unblock() : void n.follow(w.mySpace, w.currentSpace, w.isfollowing).then((e) => {
                        let t = w.currentSpace.followersCount;
                        w.isfollowing ? (t--, w.analyticData.space.followersCount = t) : (t++, w.analyticData.space.followersCount = t), w.isfollowing = !w.isfollowing, e && !w.isMySpace && (w.followLoading = !1)
                    })
                }, w.toggleEdit = function() {
                    a.debug('this is called!'), u.go('edit', {
                        holospaceName: w.currentSpace.vanityUrl
                    })
                },
                function() {
                    function a(e) {
                        return e.charAt(0).toUpperCase() + e.slice(1)
                    }
                    u.current.canonical = g.absUrl(), w.flagFollowText = !1, e.primarySpace && (w.mySpace = e.primarySpace), w.holospaceName = void 0 !== s.holospaceName && 0 < s.holospaceName.length ? s.holospaceName : w.mySpace.vanityUrl, t.$watch('$parent.vm.currentSpace', (s) => {
                        function i(e) {
                            -1 === n.indexOf(e) ? 'shop' === e ? w.headerTitle = 'All Items' : (e = 'page' == e.toLowerCase() ? 'pages' : e, w.headerTitle = 'All ' + a(e)) : w.headerTitle = w.currentSpace.vanityUrl
                        }
                        if (!s) return;
                        w.currentSpace = s, w.currentSpace.mainLocation = w.currentSpace.location ? w.currentSpace.location[0] : {}, w.currentSpaceLoaded = !0, w.currentSpace.profilePhoto || (w.currentSpace.profilePhoto = e.cdnBaseUrl + (w.currentSpace.isBusiness ? '/images/default-business.png?1' : '/images/default-user.png?1')), w.isMySpace = w.currentSpace.isMySpace, w.flagIsMySpace = !0, w.isfollowing = w.currentSpace.isFollowing, w.isBlocked = w.currentSpace.isBlocked, w.ownerHasBlocked = w.currentSpace.ownerHasBlocked, w.flagFollowText = !0, w.analyticData = {
                            space: s
                        }, w.ownerHasBlocked || (w.isMySpace && w.holospaceOptions.actions.push({
                            text: 'Edit',
                            callback: w.toggleEdit
                        }), w.holospaceOptions.actions.push({
                            text: 'Share',
                            callback: w.shareModal
                        })), w.isMySpace || w.isBlocked || (!w.ownerHasBlocked && w.holospaceOptions.actions.unshift({
                            text: 'Send Message',
                            callback() {
                                return w.mySpace ? void o.show(t, 'message') : void l.showLoginPrompt()
                            }
                        }), y());
                        const n = ['home', 'about', 'activity'];
                        i(u.current.name.split('.').pop()), t.$on('$stateChangeSuccess', (e, t) => {
                            if (u.includes('holospace')) {
                                const e = t.name.split('.').pop();
                                i(e)
                            }
                        })
                    }), t.heading = 90, t.pitch = 0
                }()
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceLikesController', ['$log', '$scope', 'Authentication', '_', '$rootScope', 'Meta', 'holoLikesService', function(e, t, a, s, i, o, n) {
            e.debug('Loading Likes Holospace-likes Controller');
            const l = this;
            let r = {};
            l.userId = a.currentUser(), l.mySpace = null, l.searchingResultTeam = [], l.listTeams = [], l.space = i.primarySpace, l.currentSpace = i.primarySpace, l.emptyContent = null, l.spaceId = i.primarySpace.id, l.query = {}, t.$watchCollection('items', (e) => {
                e && (l.emptyContent = 1 > e.length)
            }), e.debug('Holospace details', l.space), l.init = function() {
                l.tabsArray = [{
                    title: 'All likes',
                    url: 'public/modules/holospace/views/likes-all.view.html'
                }, {
                    title: 'Shop',
                    url: 'public/modules/holospace/views/likes-item.view.html'
                }, {
                    title: 'Pages',
                    url: 'public/modules/holospace/views/likes-pages.view.html'
                }, {
                    title: 'Posts',
                    url: 'public/modules/holospace/views/likes-posts.view.html'
                }, {
                    title: 'Channels',
                    url: 'public/modules/holospace/views/likes-channels.view.html'
                }], l.hasResult, l.listLikes = function() {
                    n.listLike(l.currentSpace.id, l.reactionTypeLike).then(() => {})
                }, r = {
                    meta: {
                        title: l.currentSpace.name + ' | Likes',
                        description: l.currentSpace.name + ' | Likes'
                    },
                    tags: [],
                    type: 'website',
                    image: l.currentSpace && l.currentSpace.name ? l.currentSpace.headerMediaUrl : '',
                    url: l.currentSpace && l.currentSpace.vanityUrl ? l.currentSpace.vanityUrl : 'https://www.holonis.com',
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, o.setPageMetaTags(r)
            }, l.likesOptions = {
                actions: [{
                    text: 'Likes option 1'
                }, {
                    text: 'Likes option 2'
                }]
            }, l.init()
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceMessageController', ['$log', '$scope', 'Authentication', 'jquery', '$state', 'media', 'holospace', '_', '$rootScope', function(e) {
            e.debug('Loading HolospaceMessageController ');
            this
        }])
    }(),
    function() {
        function e(e, t, a, s, i, o, n, l, r, d, c, p, m) {
            function u() {
                let e = !0;
                return a.validation.email = !0, a.selected.email && h.email.test(a.selected.email) || (a.validation.email = !1, e = !1), a.validation.name = !0, (!a.selected.name || 3 > a.selected.name.length) && (a.validation.name = !1, e = !1), a.validation.slug = !!a.selected.valid, (!a.selected.slug || 3 > a.selected.slug.length) && (a.validation.slug = !1, a.selected.valid = void 0), a.validation.slug || (e = !1), e
            }
            const g = this;
            let v = !1;
            const h = {};
            h.email = p.VALIDATION.EMAIL_PATTERN, e.debug('Loading New Holospace Controller'), a.rawSpace = {
                name: '',
                profilePhoto: t.cdnBaseUrl + '/images/default-user.png?1',
                slug: '',
                type: 'Space',
                email: ''
            }, a.selected = {}, a.validation = {}, a.links = [];
            const b = n.get('socialuserdata'),
                f = n.get('provider');
            let y = {};
            g.step1Skiped = !1, g.firstHolospace = !t.primarySpace, g.space = t.primarySpace, g.hideCloseButton = !!g.space, g.provider = f || b.provider, g.data = b, g.loaded = !1, g.states = {
                profiles: 'public/modules/holospace/views/holospace-new-profiles.view.html',
                info: 'public/modules/holospace/views/holospace-new-info.view.html'
            }, g.currentState = 'facebook' !== g.provider && g.firstHolospace ? g.states.info : g.states.profiles, a.applyUsernameRules = function() {
                return !a.selected.slug || void(a.selected.slug = a.selected.slug.replace(/[^\w.-]/g, '-'))
            };
            let w;
            g.select = function(e) {
                w = e.type, g.hasSelected = e !== a.selected, a.selected = 'space' !== e.type && g.hasSelected ? e : angular.copy(a.rawSpace), a.selected.slug || (a.selected.slug = g.slugify(a.selected.name)), b && b.email && !a.selected.email && (a.selected.email = b.email)
            }, g.createHolospace = function() {
                const e = n.get('userId') || r.getUserIdFromHolospaceCreation(),
                    c = {
                        userId: e,
                        type: 'space',
                        email: a.selected.email,
                        name: a.selected.name,
                        vanityUrl: a.selected.slug,
                        primary: g.firstHolospace,
                        allowMultiple: !0
                    };
                'facebook' === g.provider && (c.profilePhoto = a.selected.profilePhoto, c.headerMediaUrl = a.selected.cover, c.links = [], a.selected.link && c.links.push(a.selected.link)), 'Page' === a.selected.type ? c._meta = {
                    facebookPageId: a.selected.id
                } : 'Profile' === a.selected.type && (c._meta = {
                    facebookProfileId: a.selected.id
                }), a.creating = !0, o.createHolospace(c).then((e) => (g.firstHolospace ? (r.setUserAuthAfterHolospaceCreation(), t.primarySpace = e) : dataLayer.push({
                    eventCategory: 'Sub-HoloSpace Creation',
                    event: 'Sub-HoloSpace Creation',
                    eventAction: 'Create',
                    eventLabel: c.vanityUrl
                }), 'facebook' === g.provider && e.headerMediaUrl ? d.storeUrl(e.headerMediaUrl, e.bucket, e.id).then((t) => (e.headerMediaUrl = t.source, o.updateSpace(e.id, e))) : e)).then((e) => {
                    t.userSpaces.push(e), s.go('edit', {
                        holospaceName: e.vanityUrl
                    })
                }).catch((e) => {
                    a.creating = !1, t.loadingFeedback('remove'), 'MAX_SPACES_EXCEEDED' === i.get(e, 'data.code') ? m.show({
                        title: 'Holospace creation',
                        message: 'You\'ve reached the max number of Holospaces that can be created by this account.',
                        confirm: {
                            text: 'Ok',
                            action() {
                                s.go('holospace.home', {
                                    holospaceName: t.primarySpace.vanityUrl
                                })
                            }
                        },
                        cancel: {
                            hide: !0
                        },
                        close: {
                            action() {
                                s.go('holospace.home', {
                                    holospaceName: t.primarySpace.vanityUrl
                                })
                            }
                        }
                    }) : l.error('An error occurred, please try again later.')
                })
            }, g.fillLinksFromLocalStorage = function() {
                const e = n.get('socialuserdata');
                return !!e && void(e.accounts.provider = e.provider, g.addProfileToLinks(e), g.addPagesToLinks(e.accounts))
            }, g.fillLinks = function() {
                o.getSocialLinksBySpaceId(g.space.id).then((e) => {
                    if (g.step1Skiped = !0, g.providers = {}, g.providers.facebook = i.find(e, {
                            provider: 'facebook',
                            active: !0
                        }), g.providers.facebook) {
                        g.step1Skiped = !1;
                        const {
                            facebook: e
                        } = g.providers;
                        g.addProfileToLinks(e), e.pages && (i.forEach(e.pages, (t) => i.assign(t, {
                            provider: e.provider
                        })), g.addPagesToLinks(e.pages))
                    }
                    g.step1Skiped && (g.select(angular.copy(a.rawSpace)), g.currentState = g.states.info), a.creating = !1
                })
            }, g.addProfileToLinks = function(e) {
                a.links.push({
                    id: e.id,
                    name: e.displayName,
                    profilePhoto: e.picture,
                    cover: e.cover,
                    spaceId: e.spaceId,
                    provider: e.provider,
                    link: e.link,
                    type: 'Profile'
                })
            }, g.addPagesToLinks = function(e) {
                for (let s = 0; s < e.length; s++) a.links.push({
                    id: e[s].id,
                    spaceId: e[s].spaceId || null,
                    name: e[s].name,
                    profilePhoto: e[s].profilePhoto || e[s].picture || (e[s].pictures ? e[s].pictures.picture.data.url : t.cdnBaseUrl + '/images/default-user.png?1'),
                    cover: e[s].cover,
                    slug: g.slugify(e[s].name),
                    provider: e[s].provider,
                    type: 'Page'
                })
            }, g.randomUsername = function() {
                const e = a.selected.name.replace(/(^\w+\b)(.+)(\b\w+$)/g, '$1$3').toLowerCase(),
                    t = Math.floor(9999 * Math.random() + 1e3);
                e && (a.selected.slug = [e, t].join(''))
            }, g.checkAddress = function(e) {
                return e ? !a.selected.slug || 3 > a.selected.slug.length ? (a.selected.valid = void 0, !1) : void(a.selected && a.selected.slug && !1 == v && (v = !0, o.checkSpace(a.selected.slug).then((e) => {
                    v = !1, a.selected.valid = e.success
                }))) : (a.selected.valid = void 0, !1)
            }, g.checkNameLength = function(e, t) {
                e && 100 < e.length && (a.rawSpace.name = t)
            }, g.slugify = function(e) {
                return e.toString().toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '')
            }, g.newAccount = !0, g.next = function() {
                g.newAccount = 'Space' === w, g.currentState === g.states.profiles ? g.currentState = g.states.info : u() && (g.loaded = !0, t.loadingFeedback('add'), g.createHolospace())
            }, g.cancel = function() {
                'facebook' !== g.provider && g.firstHolospace || g.currentState !== g.states.info || g.step1Skiped ? 'holospace' === s.params.holospaceName ? s.go('homescreen') : s.go('holospace.home', {
                    holospaceName: t.primarySpace.vanityUrl
                }) : g.currentState = g.states.profiles
            }, g.init = function() {
                a.creating = !0, g.space = t.primarySpace, g.hideCloseButton = !!g.space, t.primarySpace ? g.fillLinks() : g.data && ('google' === g.provider ? a.selected = {
                    email: b.email,
                    name: b.displayName,
                    slug: g.slugify(b.displayName)
                } : g.data && 'facebook' === g.data.provider && g.fillLinksFromLocalStorage(), a.creating = !1), a.$watch('selected.slug', i.debounce(g.checkAddress, 200)), a.$watch('rawSpace.name', g.checkNameLength)
            }, g.setupMetaTags = function() {
                y = {
                    meta: {
                        title: 'Create a Holospace',
                        description: 'Create a Holospace'
                    },
                    tags: [],
                    type: 'website',
                    image: '',
                    url: 'https://www.holonis.com/',
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, c.setPageMetaTags(y)
            }, g.init(), g.setupMetaTags()
        }
        e.$inject = ['$log', '$rootScope', '$scope', '$state', '_', 'holospace', 'localStorageService', 'notifyService', 'Authentication', 'media', 'Meta', 'constants', 'dsConfirm', '$q'], angular.module('holospace').controller('HolospaceNewController', e), e.$inject = ['$log', '$rootScope', '$scope', '$state', '_', 'holospace', 'localStorageService', 'notifyService', 'Authentication', 'media', 'Meta', 'constants', 'dsConfirm', '$q']
    }(),
    function() {
        angular.module('holospace').controller('HolospaceSavedController', ['$log', '$scope', 'Authentication', '_', '$rootScope', 'Meta', function(e, t, a, s, i, o) {
            e.debug('Loading Saved HolospaceSavedController');
            const n = this;
            let l = {};
            n.userId = a.currentUser(), n.mySpace = null, n.searchingResultTeam = [], n.listTeams = [], n.space = i.primarySpace, n.currentSpace = i.primarySpace, n.emptyContent = null, n.spaceId = i.primarySpace.id, n.query = {}, t.$watchCollection('items', (e) => {
                e && (n.emptyContent = 1 > e.length)
            }), e.debug('Holospace details', n.space), n.init = function() {
                n.tabsArray = [{
                    title: 'All',
                    url: 'public/modules/holospace/views/saved-all.view.html'
                }, {
                    title: 'Shop',
                    url: 'public/modules/holospace/views/saved-item.view.html'
                }, {
                    title: 'Pages',
                    url: 'public/modules/holospace/views/saved-pages.view.html'
                }, {
                    title: 'Posts',
                    url: 'public/modules/holospace/views/saved-posts.view.html'
                }, {
                    title: 'Channels',
                    url: 'public/modules/holospace/views/saved-channels.view.html'
                }], n.hasResult, n.spaceId = i.primarySpace.id, l = {
                    meta: {
                        title: n.currentSpace.name + ' | Saved',
                        description: n.currentSpace.name + ' | Saved'
                    },
                    tags: [],
                    type: 'website',
                    image: n.currentSpace && n.currentSpace.name ? n.currentSpace.headerMediaUrl : '',
                    url: n.currentSpace && n.currentSpace.vanityUrl ? n.currentSpace.vanityUrl : 'https://www.holonis.com',
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, o.setPageMetaTags(l)
            }, n.savedOptions = {
                actions: [{
                    text: 'Saved option 1'
                }, {
                    text: 'Saved option 2'
                }]
            }, n.init()
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceSettingsAccountController', ['$timeout', '$log', 'Authentication', 'holospace', '_', 'users', '$state', 'dsConfirm', '$rootScope', 'Meta', '$uibModal', 'notifyService', 'OnboardingService', function(e, t, a, s, i, o, n, l, r, d, c, p, m) {
            const u = this;
            let g = {};
            t.debug('Loading Holospace-settings-account Controller'), u.userId = a.currentUser(), u.mySpace = null, u.searchingResultTeam = [], u.listTeams = [], u.space = r.primarySpace, u.currentSpace = r.primarySpace, u.relationships = u.currentSpace, u.state = {}, u.data = {
                email: u.space.email
            }, u.provider = s.getPrimarySpace().authProvider, u.canUpdateEmail = 'email' === u.provider || 'phone' === u.provider || !u.space.primary, u.canUpdatePassword = 'email' === u.provider && u.space.primary, u.inputs = {
                password: {
                    errorMessage: 'Your password must match the requirements'
                },
                confirm: {
                    errorMessage: 'Passwords do not match',
                    iconValidator: {
                        className: 'check'
                    }
                }
            }, u.init = function() {
                let e;
                u.currentSpace || (e = i.get(u.currentSpace, 'name') + ' | Settings', g = {
                    meta: {
                        title: e,
                        description: e
                    },
                    tags: [],
                    type: 'website',
                    image: i.get(u.currentSpace, 'headerMediaUrl', ''),
                    url: i.get(u.currentSpace, 'vanityUrl', 'https://www.holonis.com'),
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, d.setPageMetaTags(g))
            }, u.init(), u.saving = !1, u.matchPasswords = function() {
                e(() => {
                    const e = isNaN(u.data.newPassword) && !!u.data.newPassword && u.data.newPassword === u.data.confirmNewPassword && 4 === u.state.passwordLevel;
                    u.inputs.confirm.iconValidator.valid = e
                })
            }, u.saveAccountSettings = function() {
                u.saving || (u.saving = !0, s.updateSpace(u.space.id, u.space).then(() => {
                    const e = u.space.primary ? 'Your account\'s email setting has been updated' : 'Your communication email setting has been updated';
                    u.saving = !1, p.success(e)
                }).catch(() => {
                    u.saving = !1
                }))
            }, u.reset = function() {
                l.show({
                    title: 'Reset password',
                    message: 'Clicking confirm will send an email to assist in resetting your password.',
                    confirm: {
                        text: 'Confirm',
                        action() {
                            m.askPasswordReset(u.data.email).then(() => {
                                p.success('An email has been sent with instructions!')
                            }).catch(() => {
                                p.error('An error occurred. Try again.')
                            })
                        }
                    },
                    cancel: {
                        text: 'Cancel'
                    }
                })
            }, u.changePassword = function() {
                return m.changePassword(u.data.currentPassword, u.data.newPassword, u.data.confirmNewPassword).then(() => {
                    p.success('Password changed successfully.'), u.data.currentPassword = '', u.data.newPassword = '', u.data.confirmNewPassword = ''
                }).catch((e) => {
                    p.error(e.data.message)
                })
            }
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceSettingsFollowersController', ['$timeout', '$log', '$q', '$scope', 'Authentication', 'jquery', '$state', 'media', 'holospace', '_', '$rootScope', '$stateParams', 'Meta', 'users', 'FacebookService', '$uibModal', '$location', 'collections', 'Followers', 'MessagesAsync', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v, h, b, f, y) {
            function w(e, t) {
                y.then((a) => {
                    a.createAndRedirect({
                        body: t,
                        recipientId: e
                    }, k.space.vanityUrl, n)
                })
            }
            t.debug('Loading Holospace-settings-followers Controller');
            const k = this;
            let S = {};
            k.userId = i.currentUser(), k.mySpace = null, k.searchingResultTeam = [], k.listTeams = [], k.space = c.primarySpace, k.currentSpace = c.primarySpace, k.currentSpace.followers = [], k.relationships = k.currentSpace, k.pagination = {}, s.state = {}, k.loadMore = function(t) {
                const a = d.assign({
                    limit: 50,
                    term: k.searchUsers
                }, k.pagination.next);
                return !s.state.loaded || k.pagination.next || t ? r.getFollowersBySpaceId(k.currentSpace.id, a).then((a) => (k.pagination = a.pagination, s.state.error = !1, a.items.forEach((e) => {
                    e.sendNewMessage = w.bind(null, e.spaceId)
                }), k.currentSpace.followers = t ? a.items : k.currentSpace.followers.concat(a.items), s.state.loading = !1, e(() => {
                    s.$emit('loadedfollowers')
                }), a)).catch(() => {
                    s.state.error = !0
                }).then(() => {
                    s.state.loaded = !0
                }) : void 0
            }, s.search = function() {
                s.state.loading = !0, s.timeout && (e.cancel(s.timeout), s.timeout = null), s.timeout = e(() => {
                    k.loadMore(!0)
                }, 300)
            }, k.init = function() {
                k.shareModal = function() {
                    v.open({
                        templateUrl: 'public/modules/core/templates/sharethis.modal.template.html',
                        controller: ['$uibModalInstance', 'title', function(e, t) {
                            const a = this;
                            a.permalink = h.absUrl(), a.title = t || 'Holonis Inc.', a.cancel = function() {
                                e.dismiss()
                            }
                        }],
                        resolve: {
                            title() {
                                return k.currentSpace.name
                            }
                        },
                        controllerAs: 'vm',
                        size: 'sm',
                        windowClass: 'confirm-modal w-modal-share modal-share modal-mobile-full'
                    })
                }, s.overlays = {
                    message: 'public/modules/holospace/views/followers-message.view.html'
                }, k.toggleFollow = function(e) {
                    f.toggleFollow(k.currentSpace, e).catch(console.error)
                }, S = {
                    meta: {
                        title: k.currentSpace.name + ' | Settings',
                        description: k.currentSpace.name + ' | Settings'
                    },
                    tags: [],
                    type: 'website',
                    image: k.currentSpace && k.currentSpace.name ? k.currentSpace.headerMediaUrl : '',
                    url: k.currentSpace && k.currentSpace.vanityUrl ? k.currentSpace.vanityUrl : 'https://www.holonis.com',
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, m.setPageMetaTags(S)
            }, k.init()
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceSettingsPrivacyController', ['$log', '$rootScope', '$scope', 'holospace', '_', 'dsModal', 'notifyService', function(e, t, a, s, i, o, n) {
            e.debug('Loading Holospace-settings-privacy Controller'), a.primarySpace = t.primarySpace, a.state = {
                messagingPermissionRequired: a.primarySpace.messagingPermissionRequired,
                isPrivate: a.primarySpace.isPrivate,
                isProcessing: !1,
                isUpdating: !1
            };
            const l = (e) => {
                e.$on('ds.modal.close', () => {
                    a.state.isPrivate = !a.state.isPrivate
                }), e.cancel = () => {
                    e.close()
                }, e.setPrivate = (t) => {
                    a.state.isProcessing = !0, a.state.isPrivate = t, s.setIsPrivate(a.primarySpace.id, t).then(() => {
                        a.primarySpace.isUpdatingPrivacyStatus = !0, a.primarySpace.isPrivate = t
                    }).catch((e) => (a.state.isProcessing = !1, a.state.isPrivate = !t, e && 400 <= e.status && 500 > e.status ? (n.error(i.get(e, 'data.message')), e) : void n.error('An error occurred, please try again.'))), e.silentClose()
                }
            };
            a.changePrivateStatus = () => {
                const e = a.state.isPrivate ? 'private' : 'public',
                    t = `public/modules/core/templates/modal/${e}-account.template.html`;
                return o.create({
                    template: t,
                    controller: ['$scope', l],
                    scope: {
                        additionalClass: 'ds-modal-account-private animated fadeInUp',
                        noHeader: !0,
                        overlayAdditionalClass: 'ds-modal-overlay--white',
                        overflow: !0,
                        containerAdditionalClass: 'ds-modal-overlay--white'
                    }
                }).then((e) => {
                    e.show()
                })
            };
            const r = (e) => {
                e.$on('ds.modal.close', () => {
                    a.state.messagingPermissionRequired = !a.state.messagingPermissionRequired
                }), e.cancel = () => {
                    e.close()
                }, e.setMessagingPermission = (t) => {
                    a.state.isUpdating = !0, a.state.messagingPermissionRequired = t, s.setMessagingPermission(a.primarySpace.id, t).then(() => {
                        a.primarySpace.messagingPermissionRequired = t
                    }).catch((e) => (a.state.messagingPermissionRequired = !t, e && 400 <= e.status && 500 > e.status ? (n.error(i.get(e, 'data.message')), e) : void n.error('An error occurred, please try again.'))).finally(() => {
                        a.state.isUpdating = !1
                    }), e.silentClose()
                }
            };
            a.changeMessagingRequestStatus = () => {
                const e = a.state.messagingPermissionRequired ? 'activate' : 'deactivate',
                    t = `public/modules/core/templates/modal/${e}-message-request.template.html`;
                return o.create({
                    template: t,
                    controller: ['$scope', r],
                    scope: {
                        overflow: !1,
                        additionalClass: 'ds-modal-account-private animated fadeInUp',
                        noHeader: !0,
                        overlayAdditionalClass: 'ds-modal-overlay--white'
                    }
                }).then((e) => {
                    e.show()
                })
            }
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceSettingsTeamController', ['$timeout', '$log', '$q', '$scope', 'Authentication', 'jquery', '$state', 'media', 'holospace', '_', '$rootScope', '$stateParams', 'Meta', 'users', 'FacebookService', '$uibModal', '$location', 'collections', 'Followers', 'MessagesAsync', 'notifyService', 'constants', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v, h, b, f, y, w, k) {
            t.debug('Loading Holospace-settings-team Controller'), s.searchDelay = k.TYPING_DEBOUNCE_DELAY;
            const S = this;
            let C = {};
            S.isLoading = !0, S.userId = i.currentUser(), S.mySpace = null, S.searchingResultTeam = [], S.listTeams = [], S.space = c.primarySpace, S.currentSpace = c.primarySpace, S.relationships = S.currentSpace, S.init = function() {
                S.addTeamItemFn = function(e) {
                    const t = d.find(S.listTeams, (t) => t.spaceId == e.spaceId);
                    t || r.addTeamMember(S.space.id, e.spaceId).then(() => {
                        w.success('Invite sent successfully!'), S.listTeams.push(e), s.addItem = ''
                    })
                }, s.$watch('addItem', (e) => {
                    r.search(e).then((e) => {
                        S.searchingResultTeam = [], e && e.forEach((e) => {
                            e.id = e.id || e.spaceId, e.userId == S.space.userId || d.some(S.listTeams, {
                                vanityUrl: e.vanityUrl
                            }) || S.searchingResultTeam.push({
                                name: e.name,
                                spaceId: e.id,
                                profilePhoto: e.profilePhoto,
                                vanityUrl: e.vanityUrl
                            })
                        })
                    })
                }), S.listTeamsFn = function(e) {
                    r.getTeamMembers(e).then((e) => {
                        const t = [];
                        e.forEach((e) => {
                            e.memberId ? e = angular.extend(e, e.memberSpace) : (e.name = e.invitationEmail, e.profilePhoto = null, e.status = e.status, e.vanityUrl = null, e.id = null, e.pageViews = 0, e.postCount = 0, e.followers = 0), t.push(e)
                        }), S.isLoading = !1, S.listTeams = t
                    })
                }, e(() => {
                    S.listTeamsFn(S.space.id)
                }), S.shareModal = function() {
                    v.open({
                        templateUrl: 'public/modules/core/templates/sharethis.modal.template.html',
                        controller: ['$uibModalInstance', 'title', function(e, t) {
                            const a = this;
                            a.permalink = h.absUrl(), a.title = t || 'Holonis Inc.', a.cancel = function() {
                                e.dismiss()
                            }
                        }],
                        resolve: {
                            title() {
                                return S.currentSpace.name
                            }
                        },
                        controllerAs: 'vm',
                        size: 'sm',
                        windowClass: 'confirm-modal w-modal-share modal-share modal-mobile-full'
                    })
                }, s.overlays = {
                    message: 'public/modules/holospace/views/teams-message.view.html'
                }, s.sendNewMessage = function(e, t) {
                    y.then((a) => {
                        a.createAndRedirect({
                            body: t,
                            recipientId: e
                        }, S.space.vanityUrl, n)
                    })
                }, S.teamPage = 'members', S.pageTeams = function(e, t) {
                    $('.w-teams-pages').find('li').removeClass('active'), $(t.target).addClass('active'), S.teamPage = e, S.inviteBy = null
                }, S.inviteBy = null, S.inviteByModal = function(t, a) {
                    a.stopPropagation(), S.inviteBy = t
                };
                const t = {
                        email: k.VALIDATION.EMAIL_PATTERN
                    },
                    i = function(e, t) {
                        return t.every((t) => e.test(t))
                    };
                S.emails = '', S.sendEmailInvite = function() {
                    const e = S.emails.split(',').map((e) => e.trim()),
                        o = i(t.email, e);
                    o ? a.all(e.map((e) => r.addTeamMember(S.space.id, void 0, e))).then(() => {
                        w.success('Invite sent successfully!'), S.inviteBy = null, s.emails = ''
                    }).catch((e) => {
                        console.error(e), w.error('An error occurred, please try again later.')
                    }) : w.error('Check if all your e-mails are valid.')
                }, C = {
                    meta: {
                        title: S.currentSpace.name + ' | Settings',
                        description: S.currentSpace.name + ' | Settings'
                    },
                    tags: [],
                    type: 'website',
                    image: S.currentSpace && S.currentSpace.name ? S.currentSpace.headerMediaUrl : '',
                    url: S.currentSpace && S.currentSpace.vanityUrl ? S.currentSpace.vanityUrl : 'https://www.holonis.com',
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, m.setPageMetaTags(C)
            }, S.init()
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceSettingsController', ['$timeout', '$log', '$q', '$scope', 'Authentication', 'jquery', '$state', 'media', 'holospace', '_', '$rootScope', '$stateParams', 'Meta', function(e, t, a, s, i, o, n, l, r, d, c, p, m) {
            const u = this;
            let g = {},
                v;
            t.debug('Loading Holospace-settings Controller'), u.userId = i.currentUser(), u.mySpace = null, u.searchingResultTeam = [], u.listTeams = [], u.space = c.primarySpace, u.currentSpace = c.primarySpace, u.relationships = u.currentSpace, u.init = function() {
                u.tabsArray = [{
                    title: 'Account',
                    url: 'public/modules/holospace/views/settings-account.view.html'
                }, {
                    title: 'Followers',
                    url: 'public/modules/holospace/views/settings-followers.view.html'
                }, {
                    title: 'Team',
                    url: 'public/modules/holospace/views/settings-team.view.html'
                }, {
                    title: 'Privacy',
                    url: 'public/modules/holospace/views/settings-privacy.view.html'
                }], v = d.get(u.currentSpace, 'name') + ' | Settings', g = {
                    meta: {
                        title: v,
                        description: v
                    },
                    tags: [],
                    type: 'website',
                    image: d.get(u.currentSpace, 'headerMediaUrl', ''),
                    url: d.get(u.currentSpace, 'vanityUrl', 'https://www.holonis.com'),
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, m.setPageMetaTags(g)
            }, u.init(), u.saveAccountSettings = function() {
                r.updateSpace(u.space.id, u.space)
            }
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceTransactionsPurchasesController', ['$log', '$scope', 'Authentication', 'jquery', '$state', 'media', 'holospace', '_', '$rootScope', 'Transactions', 'Meta', function(e, t, a, s, i, o, n, l, r) {
            e.debug('Loading Transactions  Purchase Holospace');
            const d = this,
                c = r.primarySpace.id;
            d.fillTransactions = function() {
                let e = [];
                d.datesToFilter = function() {
                    return e = [], d.sales
                }, d.filterDates = function(t) {
                    const a = -1 == e.indexOf(t.date);
                    return a && e.push(t.date), a
                }, n.getPurchaseTransactions().then((e) => {
                    d.purchases = e, d.loaded = !0
                })
            }, d.init = function() {
                d.loaded = !1, d.fillTransactions()
            }, d.init()
        }])
    }(),
    function() {
        angular.module('explore').controller('HolospaceWidgetController', ['$log', 'Places', '$rootScope', '$scope', '$stateParams', '_', 'constants', 'InstagramService', 'jquery', function(e, t, a, s, i, o, n, l) {
            e.debug('Loading HolospaceWidgetController');
            const r = this;
            r.holospaceName = i.holospaceName, r.networkName = i.network, r.getTweetId = function(e) {
                return o.last(o.split(e, '/'))
            }, r.init = function() {
                l.embed()
            }, r.init()
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceController', ['$log', '$rootScope', '$scope', '$state', '$stateParams', '$timeout', 'Authentication', 'Meta', 'holospace', 'users', '_', 'currentSpaceDetail', '$location', 'PostModalService', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u) {
            e.debug('Loading Holospace Controller');
            const g = this;
            s.current.openPost && u.openModal(s.params.vanityUrl), s.params.post && (u.openModal(s.params.post.vanityUrl), s.params.post = null), g.userId = n.currentUser(), g.accessToken = null, g.holospaceName = null, g.currentSpace = p, g.space = g.currentSpace, g.space.body = g.currentSpace.body, g.isPrivate = g.space.isPrivate, g.isFollowing = g.space.isFollowing, g.followers = [], g.following = [], g.followersCount = 0, g.holospaceTabs = [], g.isMySpace = !1, g.mySpace = null, t.state.main = g.currentSpace, a.$on('destroy', () => {
                t.state.main = null
            });
            const v = () => {
                const e = document.querySelector('body');
                e.style.overflow = 'hidden', window.scrollTo(0, 0)
            };
            a.$watch('vm.space.isFollowing', () => {
                g.isPrivate && !g.space.isFollowing && !g.space.isMySpace && 850 < $(window).height() && o(() => {
                    v()
                })
            }), g.logout = function() {
                d.logout()
            }, s.current.canonical = m.absUrl(), g.holospaceName = i.holospaceName, g && g.userId && g.space && g.space.userId && (g.space.isMySpace = g.space.userId === g.userId), g.holospaceTabs = [], 'city' === g.space.subType || 'state' === g.space.subType || 'neighborhood' === g.space.subType ? g.holospaceTabs.push({
                tabText: 'Explore',
                routeState: 'explore',
                weight: 0
            }) : (g.holospaceTabs.push({
                tabText: 'Home',
                routeState: 'home',
                weight: 0
            }), 'default' === g.space.subType && 'localstack' === g.space.provider && g.holospaceTabs.push({
                tabText: 'Reviews',
                routeState: 'reviews',
                weight: 1
            })), g.space && g.space.location && (g.space.location[0].state && (g.space.location[0].stateVanityUrl = g.space.location[0].state.toLowerCase().replace(/ /g, '-')), g.space.location[0].city && (g.space.location[0].cityVanityUrl = g.space.location[0].city.toLowerCase().replace(/ /g, '-') + '-' + g.space.location[0].stateAbbr.toLowerCase())), r.isIndexable(g.space) || o(() => {
                l.set('robots', 'noindex')
            }), g.space && g.space.categories && (g.space.categories = g.space.categories.map((e) => (e.slug = (e.title || '').toLowerCase().replace(/ /g, '-'), e))), a.$on('pageMetaData', (e, t) => {
                t && (!r.isIndexable(g.space) && (t.robots = 'noindex'), p.coverDimensions && (t['og:image:width'] = p.coverDimensions.width, t['og:image:height'] = p.coverDimensions.height))
            }), g.currentSpace.headerMediaPosition || (g.currentSpace.headerMediaPosition = 0), p.isMySpace ? (g.holospaceTabs.push({
                tabText: 'Shop',
                routeState: 'shop',
                weight: 1
            }), g.holospaceTabs.push({
                tabText: 'Posts',
                routeState: 'posts',
                weight: 2
            }), g.holospaceTabs.push({
                tabText: 'Pages',
                routeState: 'pages',
                weight: 3
            }), g.holospaceTabs.push({
                tabText: 'Channels',
                routeState: 'channels',
                weight: 4
            }), g.holospaceTabs.push({
                tabText: 'About',
                routeState: 'about',
                weight: 5
            })) : (-1 !== p.contentTypesAvailable.indexOf('shop') && g.holospaceTabs.push({
                tabText: 'Shop',
                routeState: 'shop',
                weight: 1
            }), -1 !== p.contentTypesAvailable.indexOf('posts') && g.holospaceTabs.push({
                tabText: 'Posts',
                routeState: 'posts',
                weight: 2
            }), -1 !== p.contentTypesAvailable.indexOf('pages') && g.holospaceTabs.push({
                tabText: 'Pages',
                routeState: 'pages',
                weight: 3
            }), -1 !== p.contentTypesAvailable.indexOf('channels') && g.holospaceTabs.push({
                tabText: 'Channels',
                routeState: 'channels',
                weight: 4
            }), -1 !== p.contentTypesAvailable.indexOf('about') && g.holospaceTabs.push({
                tabText: 'About',
                routeState: 'about',
                weight: 5
            })), ('city' === g.space.subType || 'state' === g.space.subType || 'neighborhood' === g.space.subType) && s.go('holospace.explore')
        }])
    }(),
    function() {
        angular.module('holospace').controller('HolospaceTabController', ['$log', '$rootScope', '$scope', 'holospace', '_', 'collections', 'dsModal', function(e, t) {
            e.debug('Loading HolospaceTab Controller');
            const a = this;
            a.fieldTitle = 'Spaces', a.pageContent = {}, a.callToAction = !1;
            const s = t.primarySpace.id;
            a.spaceId = s
        }])
    }(),
    function() {
        angular.module('holospace').controller('SelectSpaceController', ['$rootScope', '$log', '$state', 'holospace', function(e, t, a, s) {
            t.debug('Loading Select Space');
            const i = this;
            i.tooltipTemplate = 'public/modules/tooltips/tooltip-select-space.view.html', i.selectSpace = s.swapSpace, i.userSpaces = e.userSpaces, i.userSpaces.forEach((e) => {
                e.hidePost = 'default' !== e.subType
            })
        }])
    }(), angular.module('holospace').directive('holospaceAnalytics', ['_', 'holospace', function() {
        return {
            restrict: 'E',
            scope: {
                analyticData: '='
            },
            templateUrl: 'public/modules/holospace/views/holospace-analytics-directive.view.html',
            controllerAs: 'vm',
            bindToController: !0,
            controller: ['$scope', function(e) {
                const t = this;
                t.pageViews = 0, t.pageViewsLoaded = !1, e.$watch('vm.analyticData', (e, a) => {
                    e !== a && e && (t.pageViews = e.space.views, t.pageViewsLoaded = !0)
                })
            }]
        }
    }]), (() => {
        const e = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || ((e) => window.setTimeout(e, 1e3 / 60));
        angular.module('holospace').directive('holTabSwitcher', ['$filter', '$document', function() {
            return {
                restrict: 'E',
                templateUrl: 'public/modules/holospace/views/tab-switcher.view.html',
                scope: {
                    tabs: '=',
                    holospacename: '=?',
                    opt: '=?'
                },
                bindToController: !0,
                controllerAs: 'vm',
                controller: ['$scope', '$element', '$attrs', '$document', '$stateParams', 'holospace', function() {
                    function t(e, t, a, s) {
                        return 1 > (e /= s / 2) ? a / 2 * e * * 5 + t : a / 2 * ((e - 2) * * 5 + 2) + t
                    }

                    function a(a, s, i) {
                        function o() {
                            a.scrollLeft = t(l, s, i - s, n), l < n ? (l++, e(o)) : l = 0
                        }
                        const n = 60 * 1;
                        let l = 0;
                        o()
                    }
                    const s = this;
                    s.scrollTo = function(e) {
                        const t = window.innerWidth,
                            s = $('.tabs-wrap')[0],
                            i = -(t / 2) + (e.target.offsetLeft + e.target.offsetWidth / 2);
                        a(s, s.scrollLeft, i)
                    }
                }]
            }
        }])
    })(), angular.module('holospace').directive('unclaimedHolospace', ['$log', '_', 'Authentication', function(e, t) {
        function a(e) {
            const a = function() {
                    const e = $(this);
                    e.on('click', s), e.off('mouseleave', a), e.find('iframe').css('pointer-events', 'none')
                },
                s = function() {
                    const e = $(this);
                    e.off('click', s), e.find('iframe').css('pointer-events', 'auto'), e.on('mouseleave', a)
                };
            $('.map').on('click', s),
                function() {
                    e.space = e.space, e.category = t.map(e.space.categories, 'title').join(' | ')
                }()
        }
        return a.$inject = ['$scope'], {
            restrict: 'E',
            scope: {
                space: '='
            },
            templateUrl: 'public/modules/holospace/views/unclaimed-holospace.view.html',
            controller: a
        }
    }]),
    function() {
        angular.module('holospace').factory('GuestService', ['localStorageService', 'uuid', function(e, t) {
            const a = () => t.v4();
            return {
                getBuyerId: () => {
                    let t = e.get('guest_buyer_id');
                    return t || (t = a(), e.set('guest_buyer_id', t)), t
                },
                generateBuyerId: a
            }
        }])
    }(),
    function() {
        angular.module('holospace').factory('holospace', ['$rootScope', '$q', '$state', 'Restangular', '_', 'jquery', 'collections', 'localStorageService', function(e, t, a, s, i, o, n, l) {
            function r() {
                const t = e.Authentication.currentUser();
                return d(t)
            }

            function d(o) {
                return u ? u : e.Authentication.isLoggedOut() ? (e.userSpaces = [], t.resolve(e.userSpaces)) : (u = s.one('users', o).one('spaces').get().then((e) => c(e.plain())).then((s) => {
                    if (e.userSpaces = s, e.userSpaces.length) {
                        const t = l.get('currentSpace'),
                            a = t && i.find(e.userSpaces, {
                                id: t
                            });
                        e.primarySpace = a || i.find(e.userSpaces, 'primary') || e.userSpaces[0];
                        const s = e.Authentication.spaceAccessToken();
                        if (!s || s.spaceId !== e.primarySpace.id) return p(e.primarySpace.id).then(() => e.userSpaces)
                    } else u = void 0, (a.transition || t.resolve()).catch(() => {}).then(() => {});
                    return e.userSpaces
                }).catch(() => {
                    e.Authentication.softLogout(), location.pathname = '/'
                }), u)
            }

            function c(e) {
                return e ? Array.isArray(e) ? (e.forEach(c), e) : (e.links = e.links || [], e.channelsFollowed = e.channelsFollowed || [], e) : e
            }

            function p(t) {
                e.Authentication.setSpaceAccessToken(void 0);
                const a = l.get('_rpq');
                return s.one('spaces/login').customPOST({
                    id: t,
                    referer: a
                }).then((e) => e.plain()).then((t) => {
                    e.Authentication.setSpaceAccessToken(t)
                })
            }

            function m() {
                return s.one('spaces/logout').post().then((e) => e.plain())
            }
            let u;
            return {
                search: function(e) {
                    return s.one('/mentions/lookup').get({
                        term: e
                    }).then((e) => e.plain())
                },
                getFollowersBySpaceId: function(e, t) {
                    return s.one('spaces/' + e + '/followers').get(t).then((e) => e.plain())
                },
                getFollowingBySpaceId: function(e, t) {
                    return s.one('spaces/' + e + '/following').get(t).then((e) => e.plain())
                },
                getSpace: function(i, o) {
                    let n = '',
                        l = '';
                    if (e.spaces || (e.spaces = {}), i) {
                        if (e.spaces[i]) return t((t) => {
                            t(e.spaces[i])
                        });
                        n = '?filter[where][vanityUrl]=' + i
                    }
                    return l = o ? 'spaces' : 'spaces/findOne', s.one(l + n).get({}).then((t) => (i = t.vanityUrl, e.spaces[i] = c(t.plain()), e.spaces[i])).catch((e) => e && 404 == e.status ? void a.go('404', void 0, {
                        location: 'replace'
                    }) : e)
                },
                getSpaceById: function(e) {
                    return s.one('spaces/' + e).get({}).then((e) => c(e))
                },
                getSpaceDetails: function(e) {
                    return s.one('spaces/' + e + '/details').get().then((e) => e.plain())
                },
                getStates: function(e) {
                    return s.one('spaces/states/' + e).get().then((e) => e.plain())
                },
                getConversationKeys: function(e, t) {
                    return s.one('spaces/' + e + '/keys').get({
                        conversationId: t
                    }).then((e) => e)
                },
                getRelationshipsBySpaceId: function(e) {
                    return s.one('spaces', e).one('relationships').get().then((e) => e.plain())
                },
                updateSpace: function(t, a) {
                    return s.one('spaces', t).customPUT(a).then((t) => (e.spaces || (e.spaces = {}), e.spaces[t.vanityUrl] = c(t.plain())))
                },
                pageView: function(e, a, i) {
                    return i ? t((e) => {
                        e({
                            pageViews: null
                        })
                    }) : s.one('spaces/page-view').get({
                        options: {
                            vanityUrl: e,
                            spaceId: a
                        }
                    }).then((e) => e.plain()).catch(() => {})
                },
                getChannelsBySpaceId: function(e) {
                    return s.one('spaces', e).one('channels').get().then((e) => e.plain())
                },
                getUserSpaces: d,
                getSocialLinksBySpaceId: function(e) {
                    return s.one('spaces', e).one('links').get().then((e) => e.plain())
                },
                getSocialLinksBySpaceIdForUnclaimed: function(e) {
                    return s.one('spaces/unclaimed', e).one('links').get().then((e) => e.plain())
                },
                updateSocialLinksBySpaceId: function(e, t) {
                    return s.one('spaces', e).one('links').one(t).put().then((e) => e.plain())
                },
                getCredentials: function() {
                    return s.one('spaces/me/credentials').get().then((e) => e.plain())
                },
                createHolospace: function(e) {
                    return s.one('spaces').customPOST(e).then((e) => e.plain())
                },
                checkIfSpaceExists: function(e) {
                    return s.one('spaces', e).one('exists').get().then((e) => e.plain())
                },
                getCurrentUserSpaces: r,
                getSpaces: function(e, t) {
                    let a = '';
                    return (e || 0 === e) && t && (a += '?filter[limit]=' + t + '&filter[skip]=' + e), s.all('spaces').get(a).then((e) => n.collectify(c(e.plain())))
                },
                getPurchaseTransactions: function() {
                    return s.one('spaces').one('purchases').get().then((e) => e.plain())
                },
                getSalesTransactions: function() {
                    return s.one('spaces').one('sales').get().then((e) => e.plain())
                },
                getTeamsBelongingTo: function(e) {
                    return s.one('spaces', e).one('teams').post().then((e) => e.plain()).catch(() => {})
                },
                getTeamMembers: function(e) {
                    return s.one('spaces', e).one('team').one('members').post().then((e) => e.plain()).catch(() => {})
                },
                addTeamMember: function(e, t, a) {
                    return s.one('spaces', e).one('team').one('add').customPOST({
                        spaceId: e,
                        memberId: t,
                        email: a
                    }).then((e) => e.plain()).catch(() => {})
                },
                swapSpace: function(t) {
                    return t.id === e.primarySpace.id ? void a.go('holospace.home', {
                        holospaceName: t.vanityUrl
                    }) : void m().catch(() => {}).then(() => p(t.id)).then(() => {
                        l.set('currentSpace', t.id), location = `/${t.vanityUrl}`
                    })
                },
                normalizeSpace: c,
                isIndexable: function(e) {
                    return !e.isBusiness && !i.includes(['state', 'city'], e.subType)
                },
                getProviderIcon: function(e) {
                    return 'logo-' + e.replace(/\s/g, '').toLowerCase() + '-bw'
                },
                login: p,
                logout: m,
                block: function(e) {
                    return s.one('spaces', e).one('block').post().then((e) => e.plain())
                },
                unblock: function(e) {
                    return s.one('spaces', e).one('unblock').post().then((e) => e.plain())
                },
                deactivate: function() {
                    return s.one('spaces').one('deactivate').post().then((e) => e.plain())
                },
                recache: function(e) {
                    return s.one('spaces', e).one('recache').get().then((e) => e.plain())
                },
                checkSpace: function(e) {
                    return s.one(['spaces', e, 'check'].join('/')).get()
                },
                getPrimarySpace: function() {
                    return i.find(e.userSpaces, 'primary') || e.userSpaces[0]
                },
                getSocialLinks: function() {
                    return s.one('v2/spaces/links?fields=name,icon,href,pattern,active').get().then((e) => e.plain())
                },
                saveSocialLinks: function(e, t) {
                    return s.one(`v2/spaces/${e}`).patch([{
                        op: 'replace',
                        path: '/links',
                        value: t
                    }]).then((e) => e.plain())
                },
                setIsPrivate: function(e, t) {
                    return s.all(`v2/spaces/${e}`).patch([{
                        op: 'replace',
                        path: '/isPrivate',
                        value: t
                    }])
                },
                setMessagingPermission: function(e, t) {
                    return s.all(`v2/spaces/${e}`).patch([{
                        op: 'replace',
                        path: '/messagingPermissionRequired',
                        value: t
                    }])
                },
                getMessagingRequests: function() {
                    return s.one('v2/messagingRequests').get().then((e) => e.plain())
                },
                getFollowersRequest: function(e, t) {
                    return s.one(`spaces/${e}/followers?limit=50&status=${t}`).get().then((e) => c(e))
                },
                updateFollowersRequestStatus: function(e, t, a) {
                    return s.all(`spaces/${e}/followers/${t}`).patch([{
                        op: 'replace',
                        path: '/status',
                        value: a
                    }])
                },
                approveAllMessagingRequests: function() {
                    return s.one('v2/messagingRequests').patch([{
                        op: 'replace',
                        path: '/status',
                        value: 'approved'
                    }])
                },
                approveMessagingRequest: function(e) {
                    return s.one(`v2/messagingRequests/${e}`).patch([{
                        op: 'replace',
                        path: '/status',
                        value: 'approved'
                    }])
                },
                getContentCreationSpaces: function() {
                    return r().then(() => {
                        const t = e.primarySpace.id;
                        return s.one('spaces', t).one('content-creation-spaces').post().then((e) => e.plain())
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('home').config(['$stateProvider', '$urlRouterProvider', function(e) {
            e.state('holospace.about', {
                url: '/about',
                views: {
                    holotab: {
                        controller: 'HomeController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/home/views/home.view.html'
                    }
                }
            })
        }])
    }(),
    function() {
        angular.module('home').controller('HomeController', ['$rootScope', '$scope', '$log', 'Authentication', 'medium', 'holospace', '_', 'users', '$state', 'Meta', '$timeout', 'Prerender', 'PageService', 'contentCreationService', 'pixels', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g) {
            function v(e) {
                d.AddDefaultMetaObject(e), setTimeout(p.ready, 100)
            }

            function h() {
                $('.holospace-about .wrapper-preloader').hide(), b.loading = !1
            }
            a.debug('Loading Home Controller'), p.handleManually();
            const b = this,
                f = t.$parent,
                y = {
                    space: f.primarySpace
                };
            b.contentData = y, b.currentSpace = e.primarySpace, b.callToAction = !0, b.tabs = [], b.editing = !1, b.network = !0, b.myInterval = 1e4, b.parent = t.$parent, b.directions = null, b.loading = !0, t.params = !1, b.toggleEdit = function() {
                r.go('edit', {
                    holospaceName: b.currentSpace.vanityUrl
                })
            }, b.isMySpace = !1, f.$watch('vm.space', (e) => {
                if (e.location && $('body').toggleClass('unclaimed-holospace', !!e.location.length), b.isMySpace = !s.isLoggedOut() && b.currentSpace.id === e.id, !e.homePageId) return h(), v(e);
                h(), b.callToAction = !0, n.get(e, 'body.story', []).length && (t.params = {
                    contentId: e.homePageId,
                    spaceId: e.id,
                    template: 'page',
                    story: e.body.story
                }, b.callToAction = !1), e.pixels && g.fire({
                    pixelObject: e.pixels,
                    eventType: 'ViewContent',
                    params: {
                        content_name: e.name,
                        pixelLocation: [window.location.origin, e.vanityUrl, 'about'].join('/')
                    }
                });
                const a = {},
                    i = n.get(e, 'meta.description') || e.description;
                return a.meta = {}, a.meta.title = [n.get(e, 'meta.title') || e.name, 'About', 'Holonis'].join(' | '), a.meta.description = n.get(e, 'meta.description') || 'Learn more about ' + e.name + '.' + (i ? ' ' + i : ''), a.tags = n.get(e, 'meta.tags'), a.type = e.type, a.image = e.headerMediaUrl, a.url = u.getCurrentUrl(e.vanityUrl) + '/about', v(a)
            })
        }])
    }(),
    function() {
        angular.module('home').controller('inviteModalController', ['$rootScope', '$scope', '$log', 'notifyService', 'Team', function(e, t, a, s, i) {
            a.debug('Invite Modal Controller'), i.getTeamOwnerSpace(e.invitedTeamId).then((e) => {
                t.teamOwnerSpace = e
            }), t.confirm = function() {
                t.submitting = !0, i.acceptInvite(e.invitedTeamId, t.code).then((e) => {
                    t.submitting = !1, e.accepted ? (s.success('Alright, you are all set up! Start creating new content.'), angular.element('[overlay-close]').click()) : s.error('Invalid confirmation code, please try again.')
                }).catch((e) => {
                    t.submitting = !1, console.error(e), s.error(e.message || 'Invalid code, please try again.')
                })
            }
        }])
    }(),
    function() {
        angular.module('insights').config([function() {
            Chart.defaults.global.elements.point.hitRadius = 10, Chart.defaults.global.tooltips.backgroundColor = 'rgba(222, 222, 222, 1)', Chart.defaults.global.tooltips.borderColor = '#595A5B', Chart.defaults.global.tooltips.borderWidth = 1, Chart.defaults.global.tooltips.displayColors = !0, Chart.defaults.global.tooltips.cornerRadius = 5, Chart.defaults.global.tooltips.xPadding = 15, Chart.defaults.global.tooltips.titleFontColor = '#8C8E90', Chart.defaults.global.tooltips.titleFontSize = 12, Chart.defaults.global.tooltips.titleFontFamily = 'ProximaNovaRegular', Chart.defaults.global.tooltips.bodyFontSize = 12, Chart.defaults.global.tooltips.bodyFontColor = '#272A2D', Chart.defaults.global.tooltips.bodyFontFamily = 'ProximaNovaRegular', Chart.defaults.global.elements.line.tension = 0
        }])
    }();
const insightsConstants = {
    CHART_COLORS: [{
        backgroundColor: '#4A90E2',
        fillColor: '#4A90E2',
        borderColor: '#4A90E2',
        strokeColor: '#4A90E2',
        hoverBackgroundColor: '#4A90E2',
        hoverBorderColor: '#4A90E2'
    }, {
        backgroundColor: '#2ECC71',
        fillColor: '#2ECC71',
        borderColor: '#2ECC71',
        strokeColor: '#2ECC71',
        hoverBackgroundColor: '#2ECC71',
        hoverBorderColor: '#2ECC71'
    }, {
        backgroundColor: '#F39C12',
        fillColor: '#F39C12',
        borderColor: '#F39C12',
        strokeColor: '#F39C12',
        hoverBackgroundColor: '#F39C12',
        hoverBorderColor: '#F39C12'
    }, {
        backgroundColor: '#9B59B6',
        fillColor: '#9B59B6',
        borderColor: '#9B59B6',
        strokeColor: '#9B59B6',
        hoverBackgroundColor: '#9B59B6',
        hoverBorderColor: '#9B59B6'
    }]
};
'undefined' != typeof angular && angular.module('core').constant('insightsConstants', insightsConstants), 'object' == typeof module && module.exports && (module.exports = insightsConstants),
    function() {
        angular.module('insights').config(['$stateProvider', function(e) {
            e.state('insights', {
                abstract: !0,
                url: '/insights',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        template: '<ui-view/>'
                    }
                }
            }).state('insights.publications', {
                url: '/publications',
                title: 'Insights - Publications',
                controller: 'InsightsPublicationsController',
                templateUrl: 'public/modules/insights/views/publications.view.html',
                resolve: {}
            }).state('insights.commerce', {
                url: '/commerce',
                title: 'Insights - Commerce',
                controller: 'InsightsCommerceController',
                templateUrl: 'public/modules/insights/views/commerce.view.html',
                resolve: {}
            }).state('insights.followers', {
                url: '/followers',
                title: 'Insights - Followers',
                controller: 'InsightsFollowersController',
                templateUrl: 'public/modules/insights/views/followers.view.html',
                resolve: {}
            }).state('insights.videos', {
                url: '/video',
                title: 'Insights - Videos',
                controller: 'InsightsVideosController',
                templateUrl: 'public/modules/insights/views/videos.view.html',
                resolve: {}
            })
        }])
    }(),
    function() {
        angular.module('insights').controller('InsightsCommerceController', ['$log', '$state', '$scope', '$rootScope', 'localStorageService', 'InsightsService', 'dsModal', 'promiseTracker', 'ChartJs', 'jquery', '$timeout', '$q', 'insightsConstants', function(e, t, a, s, i, o, n, l, r, d) {
            function c(e) {
                const t = e.adRevenueNew;
                a.adRevenue = {
                    new: _.get(_.last(t), 'y', 0) / 100,
                    total: _.get(e, 'totals.adRevenueNew', 0) / 100
                }, a.adRevenueData = t.map((e) => (e.y / 100).toFixed(2)), a.adRevenueLabels = t.map((e) => o.toDateLabel(e.t)), a.adRevenueOptions = {
                    maintainAspectRatio: !1,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: !1
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                suggestedMin: 0,
                                stepSize: 10 > _.max(a.adRevenueData) ? 1 : void 0
                            }
                        }]
                    }
                }
            }

            function p(e) {
                a.sellingRevenue = {
                    gross: _.get(e, 'totals.ordersGrossValue', 0),
                    cancelled: _.get(e, 'totals.ordersCancelledValue', 0),
                    net: _.get(e, 'totals.ordersNetRevenue', 0)
                };
                const t = [];
                t.push(e.ordersGrossValue.map((e) => e.y.toFixed(2))), t.push(e.ordersCancelledValue.map((e) => e.y.toFixed(2))), t.push(e.ordersNetRevenue.map((e) => e.y.toFixed(2))), a.revenueData = t, a.revenueLabels = e.ordersGrossValue.map((e) => o.toDateLabel(e.t)), a.revenueOptions = {
                    maintainAspectRatio: !1,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: !1
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                suggestedMin: 0,
                                stepSize: 10 > _.max(a.revenueData) ? 1 : void 0
                            }
                        }]
                    }
                }
            }

            function m(e) {
                a.customers = {
                    total: _.get(e, 'totals.ordersUniqueBuyers', 0)
                };
                const t = [];
                t.push(e.ordersUniqueBuyers.map((e) => e.y)), a.customersData = t, a.customersLabels = e.ordersUniqueBuyers.map((e) => o.toDateLabel(e.t)), a.customersOptions = {
                    maintainAspectRatio: !1,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: !1
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                suggestedMin: 0,
                                stepSize: 10 > _.max(a.customersData) ? 1 : void 0
                            }
                        }]
                    }
                }
            }

            function u(e) {
                const t = [];
                t.push(e.inventoryAvailable.map((e) => e.y)), a.inventoryData = t, a.inventoryLabels = e.inventoryAvailable.map((e) => o.toDateLabel(e.t)), a.inventory = {
                    current: _.last(t[0])
                }, a.inventoryOptions = {
                    maintainAspectRatio: !1,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: !1
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                suggestedMin: 0,
                                stepSize: 10 > _.max(a.inventoryData) ? 1 : void 0
                            }
                        }]
                    }
                }
            }

            function g() {
                const e = 769 > h.width();
                if (a.swiper && a.swiper.destroy(), e) {
                    const e = d('.insights-content-block-swiper'),
                        t = e.find('.swiper-pagination');
                    a.swiper = e.swiper({
                        slidesPerView: 1,
                        paginationType: 'bullets',
                        pagination: t,
                        paginationClickable: !0,
                        spaceBetween: 20
                    })
                }
            }

            function v(e) {
                return e = e.filter((e) => e.activity), e.forEach((e) => {
                    e.title = e.activity.body.name, e.rating = e.activity.body.rating
                }), e
            }
            const h = angular.element(window);
            a.tracker = l(), a.itemsLoading = l(), a.state = {}, a.spaceId = t.params.spaceId || _.get(s.primarySpace, 'id'), a.isSharingAdRevenue = _.get(s.primarySpace.adRevenueSharing, 'enabled'), a.banner = {}, a.banner.visible = !1 !== i.get('insights.banner.items'), a.banner.close = function() {
                a.banner.visible = !1, i.set('insights.banner.items', !1)
            }, a.colors = ['#3498DB', '#2ECC71', '#F39C12'];
            const b = () => {
                const e = o.getSpaceData(a.spaceId, {
                    lastDays: a.selectGroup.items.period.selected,
                    fields: 'adRevenueNew,ordersGrossValue,ordersCancelledValue,ordersNetRevenue,ordersUniqueBuyers,inventoryAvailable'
                }).then((e) => {
                    const t = e.contents[0];
                    a.lastUpdated = moment.utc(t.lastModified).fromNow(), c(t), p(t), m(t), u(t)
                }).catch(() => {
                    a.state.error = !0
                });
                a.tracker.addPromise(e)
            };
            a.updateData = function() {
                b(), a.updatePublications(0)
            }, a.selectGroup = {
                items: {
                    period: {
                        selected: '14',
                        select: {
                            options: [{
                                name: 'Last 2 weeks',
                                value: '14'
                            }, {
                                name: 'Last 30 days',
                                value: '30'
                            }, {
                                name: 'Last 90 days',
                                value: '90'
                            }]
                        }
                    }
                }
            }, a.showPublication = function(e) {
                n.create({
                    template: 'public/modules/insights/templates/modal/item.template.html',
                    controller: 'InsightsItemDetailController',
                    title: 'Item Details',
                    close: !0,
                    scope: {
                        overflow: !0,
                        noPadding: !0,
                        additionalClass: 'insights-publication-detail-modal',
                        data: e
                    }
                }).then((e) => {
                    e.show()
                })
            }, a.updatePublications = function(e) {
                0 === e && (a.publications = []);
                const t = o.getContentTypeData(a.spaceId, 'item', {
                    sortBy: 'ordersNetRevenue',
                    lastDays: a.selectGroup.items.period.selected,
                    fields: 'ordersQuantitySold,ordersNetRevenue,viewsNew',
                    limit: '15',
                    skip: `${15*e}`,
                    metadata: 'true'
                }).then((t) => {
                    a.publicationsPagination = {
                        hasMorePages: 15 === t.contents.length,
                        page: e
                    }, a.publications = a.publications.concat(v(t.contents))
                });
                a.itemsLoading.addPromise(t)
            }, h.on('resize', g), a.$on('$destroy', () => {
                h.off('resize', g)
            })
        }])
    }(),
    function() {
        angular.module('insights').controller('InsightsFollowersController', ['$log', '$state', 'localStorageService', '$rootScope', '$scope', 'InsightsService', 'promiseTracker', 'ChartJs', '_', 'jquery', function(e, t, a, s, i, o, n, l, r) {
            function d(e) {
                const t = [];
                t.push(e.followersNew.map((e) => e.y)), t.push(e.followersTotal.map((e) => e.y)), i.lastUpdated = moment.utc(e.lastModified).fromNow(), i.followersData = t, i.followersLabels = e.followersNew.map((e) => o.toDateLabel(e.t)), i.followersOverride = [{
                    label: 'New',
                    type: 'bar',
                    yAxisID: 'left-y-axis',
                    data: t[0]
                }, {
                    label: 'Total',
                    type: 'line',
                    yAxisID: 'right-y-axis',
                    data: t[1]
                }];
                let a = r.max(t[0]),
                    s = r.max(t[1]);
                a = a || 1;
                const n = Math.round(s / (2 * a));
                a = Math.ceil(s / n), s = a * n, i.followersOptions = {
                    maintainAspectRatio: !1,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: !1
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                min: 0,
                                max: a,
                                stepSize: 5 > a ? 1 : void 0
                            },
                            gridLines: {
                                display: !1
                            },
                            scaleLabel: {
                                display: !0,
                                labelString: 'New'
                            },
                            id: 'left-y-axis',
                            type: 'linear',
                            position: 'left'
                        }, {
                            ticks: {
                                min: 0,
                                max: s,
                                stepSize: 5 > s ? 1 : void 0
                            },
                            scaleLabel: {
                                display: !0,
                                labelString: 'Total'
                            },
                            id: 'right-y-axis',
                            type: 'linear',
                            position: 'right'
                        }]
                    }
                }
            }
            i.tracker = n(), i.lastUpdated = '', i.state = {}, i.spaceId = t.params.spaceId || r.get(s.primarySpace, 'id'), i.banner = {}, i.banner.visible = !1 !== a.get('insights.banner.followers'), i.banner.close = function() {
                i.banner.visible = !1, a.set('insights.banner.followers', !1)
            }, i.filterPeriod = function() {
                const e = o.getSpaceData(i.spaceId, {
                    lastDays: i.selectGroup.followers.period.selected,
                    fields: 'followersNew,followersTotal'
                }).then((e) => {
                    i.data = e, r.get(e, 'contents[0].followersNew.length') ? (i.spaceData = e.contents[0], d(i.spaceData), i.state.noData = !1, i.state.error = !1) : i.state.noData = !0
                }).catch((e) => {
                    console.log(e), i.state.error = !0
                });
                i.tracker.addPromise(e)
            }, i.selectGroup = {
                followers: {
                    period: {
                        selected: '14',
                        select: {
                            options: [{
                                name: 'Last 2 weeks',
                                value: '14'
                            }, {
                                name: 'Last 30 days',
                                value: '30'
                            }, {
                                name: 'Last 90 days',
                                value: '90'
                            }]
                        }
                    }
                }
            }
        }])
    }(),
    function() {
        angular.module('insights').controller('InsightsFollowersListController', ['$log', '$scope', '$rootScope', '$controller', function(e, t, a, s) {
            t.notParent = !0, s('FollowersController as vm', {
                $scope: t,
                thisSpace: {
                    id: t.$parent.spaceId
                },
                openMessageModal: null,
                $uibModalInstance: null,
                notParent: !0
            })
        }])
    }(), angular.module('insights').controller('InsightsItemDetailController', ['$log', '$scope', '$timeout', 'TilesService', 'Content', 'dsModal', 'PostModalService', 'PageService', 'ChannelService', 'ItemService', function(e, t, a, s, i, o, n, l, r, d) {
        t.time = {
            selected: 'all-time',
            select: {
                options: [{
                    name: 'All-time',
                    value: 'all-time'
                }]
            }
        }, t.state = {
            loaded: !1
        };
        const c = {
            item: function(e) {
                return function(t) {
                    return e.detail(t).then((e) => i.toV1(e))
                }
            }(d)
        };
        c.item(t.data.activity.vanityUrl).then((e) => (t.tile = s.normalizeItem(e), o.repositionAll(), e)).catch((e) => (t.state.error = !0, e)).then(() => {
            t.state.loaded = !0
        })
    }]), angular.module('insights').controller('InsightsPublicationDetailController', ['$log', '$scope', '$timeout', 'TilesService', 'Content', 'dsModal', 'PostModalService', 'PageService', 'ChannelService', 'ItemService', function(e, t, a, s, i, o, n, l, r, d) {
        function c(e) {
            return function(t) {
                return e.detail(t).then((e) => i.toV1(e))
            }
        }
        t.time = {
            selected: 'all-time',
            select: {
                options: [{
                    name: 'All time',
                    value: 'all-time'
                }]
            }
        }, t.state = {
            loaded: !1
        };
        const p = {
            post: n.getDetailsByVanityUrl,
            page: c(l),
            channel: c(r),
            item: c(d)
        };
        p[t.data.type](t.data.vanityUrl).then((e) => (t.tile = s.normalizeItem(e), o.repositionAll(), e)).catch((e) => (t.state.error = !0, e)).then(() => {
            t.state.loaded = !0
        })
    }]),
    function() {
        angular.module('insights').controller('InsightsPublicationsController', ['$log', '$state', '$scope', '$rootScope', 'localStorageService', 'InsightsService', 'dsModal', 'promiseTracker', 'ChartJs', 'jquery', function(e, t, a, s, i, o, n, l, r, d) {
            function c(e) {
                const t = [];
                t.push(e.likesNew.map((e) => e.y)), t.push(e.sharesNew.map((e) => e.y)), t.push(e.commentsNew.map((e) => e.y)), a.engagementData = t, a.engagementLabels = e.likesNew.map((e) => o.toDateLabel(e.t));
                const s = _.max([_.max(t[0]), _.max(t[1]), _.max(t[2])]);
                a.engagementOptions = {
                    maintainAspectRatio: !1,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: !1
                            },
                            stacked: !0
                        }],
                        yAxes: [{
                            ticks: {
                                suggestedMin: 0,
                                stepSize: 10 > s ? 1 : void 0
                            }
                        }],
                        stacked: !0
                    }
                }, a.engagementOverride = [{
                    label: 'Likes',
                    type: 'bar',
                    stack: 1
                }, {
                    label: 'Shares',
                    type: 'bar',
                    stack: 1
                }, {
                    label: 'Comments',
                    type: 'bar',
                    stack: 1
                }]
            }

            function p(e) {
                const t = [];
                t.push(e.uniqueViewsNew.map((e) => e.y)), t.push(e.refererMediumSocial.map((e) => e.y)), a.viewsData = t, a.viewsLabels = e.uniqueViewsNew.map((e) => o.toDateLabel(e.t)), a.viewsOptions = {
                    maintainAspectRatio: !1,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: !1
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                suggestedMin: 0,
                                stepSize: 10 > _.max(a.viewsData) ? 1 : void 0
                            }
                        }]
                    }
                }
            }

            function m() {
                const e = 769 > g.width();
                if (e) try {
                    const e = d('.insights-content-block-swiper'),
                        t = e.find('.swiper-pagination');
                    a.swiper = e.swiper({
                        slidesPerView: '1',
                        paginationType: 'bullets',
                        pagination: t,
                        paginationClickable: !0,
                        spaceBetween: 20
                    })
                } catch (e) {
                    console.log(e)
                } else a.swiper && (a.swiper.destroy(), a.swiper = null)
            }

            function u(e) {
                return e = e.filter((e) => e.activity), e.forEach((e) => {
                    e.title = 'post' === e.activity.type ? e.activity.body.description : e.activity.body.name
                }), e
            }
            const g = angular.element(window);
            a.tracker = l(), a.publicationsLoading = l(), a.state = {}, a.spaceId = t.params.spaceId || _.get(s.primarySpace, 'id'), a.publications = [], a.banner = {}, a.banner.visible = !1 !== i.get('insights.banner.publications'), a.banner.close = function() {
                a.banner.visible = !1, i.set('insights.banner.publications', !1)
            }, a.filterPeriod = function() {
                const e = o.getSpaceData(a.spaceId, {
                    lastDays: a.selectGroup.publications.period.selected,
                    fields: 'refererMediumSocial,uniqueViewsNew,likesNew,sharesNew,commentsNew'
                }).then((e) => {
                    a.data = e, _.get(e, 'contents[0].uniqueViewsNew.length') ? (a.state.noData = !1, a.state.error = !1, a.spaceData = e.contents[0], c(a.spaceData), p(a.spaceData), m()) : a.state.noData = !0
                }).catch(() => {
                    a.state.error = !0
                });
                a.tracker.addPromise(e), a.getTop3Publications(), a.updatePublications(0)
            }, a.selectGroup = {
                publications: {
                    period: {
                        selected: '14',
                        select: {
                            options: [{
                                name: 'Last 2 weeks',
                                value: '14'
                            }, {
                                name: 'Last 30 days',
                                value: '30'
                            }, {
                                name: 'Last 90 days',
                                value: '90'
                            }]
                        }
                    }
                }
            }, a.colors = ['#3498DB', '#2ECC71', '#F39C12'], a.showPublication = function(e) {
                n.create({
                    template: 'public/modules/insights/templates/modal/publication.template.html',
                    controller: 'InsightsPublicationDetailController',
                    title: 'Publication Details',
                    close: !0,
                    scope: {
                        overflow: !0,
                        noPadding: !0,
                        additionalClass: 'insights-publication-detail-modal',
                        data: {
                            type: e.activity.type,
                            vanityUrl: e.activity.vanityUrl,
                            likes: e.activity.engagement.likes,
                            shares: e.activity.engagement.shares,
                            views: e.activity.engagement.views,
                            comments: e.activity.engagement.comments
                        }
                    }
                }).then((e) => {
                    e.show()
                })
            }, a.getTop3Publications = function() {
                const e = o.getContentListData(a.spaceId, {
                    sortBy: 'uniqueViewsNew',
                    fields: 'uniqueViewsNew,likesNew,sharesNew,commentsNew',
                    lastDays: a.selectGroup.publications.period.selected,
                    limit: '3',
                    metadata: 'true'
                }).then((e) => {
                    a.top3publications = u(e.contents)
                });
                a.publicationsLoading.addPromise(e)
            }, a.updatePublications = function(e) {
                0 === e && (a.publications = []);
                const t = o.getContentListData(a.spaceId, {
                    sortBy: 'uniqueViewsNew',
                    fields: 'uniqueViewsNew,likesNew,sharesNew,commentsNew',
                    lastDays: a.selectGroup.publications.period.selected,
                    limit: '15',
                    skip: `${15*e}`,
                    metadata: 'true'
                }).then((t) => {
                    a.publicationsPagination = {
                        hasMorePages: 15 === t.contents.length,
                        page: e
                    }, a.publications = a.publications.concat(u(t.contents))
                });
                a.publicationsLoading.addPromise(t)
            }, g.on('resize', m), a.$on('$destroy', () => {
                g.off('resize', m)
            })
        }])
    }(), angular.module('insights').controller('InsightsVideoDetailController', ['$log', '$scope', '$timeout', 'TilesService', 'Content', 'dsModal', 'PostModalService', 'PageService', 'ChannelService', 'ItemService', function(e, t, a, s, i, o, n, l, r, d) {
        function c(e) {
            return function(t) {
                return e.detail(t).then((e) => i.toV1(e))
            }
        }
        t.state = {
            loaded: !1
        };
        const p = {
            post: n.getDetailsByVanityUrl,
            page: c(l),
            channel: c(r),
            item: c(d)
        };
        p[t.data.type](t.data.vanityUrl).then((e) => (t.tile = s.normalizeItem(e), o.repositionAll(), e)).catch((e) => (t.state.error = !0, e)).then(() => {
            t.state.loaded = !0
        })
    }]),
    function() {
        angular.module('insights').controller('InsightsVideosController', ['$log', '$state', '$scope', '$rootScope', 'localStorageService', 'InsightsService', 'dsModal', 'promiseTracker', 'ChartJs', 'jquery', function(e, t, a, s, i, o, n, l, r, d) {
            function c() {
                const e = o.getSpaceData(a.spaceId, {
                    fields: 'videoVideoStarts',
                    lastDays: a.selectGroup.publications.period.selected
                }).then((e) => {
                    a.data = e, _.get(e, 'contents[0].videoVideoStarts.length') ? (a.spaceData = e.contents[0], p(a.spaceData), m(), a.state.noData = !1, a.state.error = !1) : a.state.noData = !0
                }).catch((e) => {
                    console.error(e), a.state.error = !0, a.state.noData = !0
                });
                a.tracker.addPromise(e)
            }

            function p(e) {
                const t = [],
                    s = [];
                e.videoVideoStarts.forEach((e) => {
                    t.push(o.toDateLabel(e.t)), s.push(e.y)
                }), a.lineLabels = t, a.videoStartsData = s, a.videoOptions = {
                    maintainAspectRatio: !1,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: !1
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                suggestedMin: 0,
                                stepSize: 10 > _.max(s) ? 1 : void 0
                            }
                        }]
                    }
                }
            }

            function m() {
                const e = 769 > g.width();
                if (a.swiper && a.swiper.destroy(), e) try {
                    const e = d('.insights-content-block-swiper'),
                        t = e.find('.swiper-pagination');
                    a.swiper = e.swiper({
                        slidesPerView: '1',
                        paginationType: 'bullets',
                        pagination: t,
                        paginationClickable: !0,
                        spaceBetween: 20
                    })
                } catch (e) {
                    console.log(e)
                }
            }

            function u(e) {
                return e = e.filter((e) => e.activity), e.forEach((e) => {
                    e.title = 'post' === e.activity.type ? e.activity.body.description : e.activity.body.name;
                    const t = e.totals;
                    e.averageTime = 0 < t.viewsNew ? t.videoTimeWatched / t.viewsNew : 0
                }), e
            }
            const g = angular.element(window);
            a.tracker = l(), a.videosLoading = l(), a.state = {}, a.spaceId = t.params.spaceId || _.get(s.primarySpace, 'id'), a.banner = {}, a.banner.visible = !1 !== i.get('insights.banner.video'), a.banner.close = function() {
                a.banner.visible = !1, i.set('insights.banner.video', !1)
            }, a.filterPeriod = function() {
                c(), a.getTop3Videos(), a.updateVideos(0)
            }, a.selectGroup = {
                publications: {
                    period: {
                        selected: '14',
                        select: {
                            options: [{
                                name: 'Last 2 weeks',
                                value: '14'
                            }, {
                                name: 'Last 30 days',
                                value: '30'
                            }, {
                                name: 'Last 90 days',
                                value: '90'
                            }]
                        }
                    }
                }
            }, a.lineLabels = [], a.lineData = [], a.showVideo = function(e) {
                n.create({
                    template: 'public/modules/insights/templates/modal/video.template.html',
                    controller: 'InsightsVideoDetailController',
                    title: 'Video Details',
                    close: !0,
                    scope: {
                        overflow: !0,
                        noPadding: !0,
                        additionalClass: 'insights-publication-detail-modal',
                        data: {
                            type: e.activity.type,
                            vanityUrl: e.activity.vanityUrl,
                            averageTime: e.averageTime,
                            totalWatched: e.totals.videoTimeWatched,
                            views: e.activity.engagement.views
                        }
                    }
                }).then((e) => {
                    e.show()
                })
            }, a.updateVideos = function(e) {
                const t = o.getMediaTypeData(a.spaceId, 'video', {
                    sortBy: 'contentId',
                    fields: 'viewsNew,videoDisplays,videoPlaythrough25,videoPlaythrough50,videoPlaythrough75,videoPlaythrough100,videoReplays,videoTimeWatched,videoUniquePlaysRequested,videoVideoStarts',
                    lastDays: a.selectGroup.publications.period.selected,
                    limit: '15',
                    skip: `${15*e}`,
                    metadata: 'true'
                }).then((t) => {
                    a.videosPagination = {
                        hasMorePages: 15 === t.contents.length,
                        page: e
                    }, a.videos = (0 === e ? [] : a.videos).concat(u(t.contents))
                });
                a.videosLoading.addPromise(t)
            }, a.getTop3Videos = function() {
                const e = o.getMediaTypeData(a.spaceId, 'video', {
                    sortBy: 'viewsNew',
                    fields: 'viewsNew,videoDisplays,videoTimeWatched',
                    lastDays: a.selectGroup.publications.period.selected,
                    limit: '3',
                    metadata: 'true'
                }).then((e) => {
                    a.top3videos = u(e.contents)
                });
                a.videosLoading.addPromise(e)
            }, g.on('resize', m), a.$on('$destroy', () => {
                g.off('resize', m)
            })
        }])
    }(),
    function() {
        angular.module('insights').factory('InsightsService', ['$rootScope', '$http', 'jquery', '$q', 'constants', function(e, t, a, s, i) {
            const o = {};
            return o.get = function(a, o) {
                const n = e.Authentication,
                    l = n.spaceAccessToken();
                let r = {};
                l && (r = {
                    "X-Space-Token": l.id
                });
                const d = {
                    headers: r,
                    params: o
                };
                return t.get(i.INSIGHTS.URL + '/reporting-api' + a, d).then((e) => e.data).catch((e) => s.reject(e))
            }, o.getSpaceData = function(e, t) {
                return o.get(`/space/${e}`, t)
            }, o.getContentListData = function(e, t) {
                return o.get(`/space/${e}/content`, t)
            }, o.getContentData = function(e, t, a) {
                return o.get(`/space/${e}/content/${t}`, a)
            }, o.getContentTypeData = function(e, t, a) {
                return o.get(`/space/${e}/contenttype/${t}`, a)
            }, o.getMediaTypeData = function(e, t, a) {
                return o.get(`/space/${e}/contenttype/post/${t}`, a)
            }, o.toDateLabel = function(e) {
                let t = '';
                if (e) {
                    const a = e.split('-');
                    t = `${a[1]}/${a[2]}`
                }
                return t
            }, o
        }])
    }(),
    function() {
        angular.module('items').config(['$stateProvider', function(e) {
            e.state('inventory', {
                abstract: !0,
                url: '/:holospaceName/inventory',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        template: '<ui-view/>'
                    }
                }
            }).state('inventory.items', {
                title: 'Inventory',
                url: '/items',
                controller: 'InventoryItemsController',
                templateUrl: 'public/modules/inventory/views/items.view.html',
                resolve: {
                    items: ['userSpaces', 'InventoryService', function(e, t) {
                        return t.getItems()
                    }]
                },
                requiresLoggedIn: !0
            }).state('inventory.variants', {
                title: 'Inventory',
                url: '/:id/variants',
                controller: 'InventoryVariantsController',
                templateUrl: 'public/modules/inventory/views/variants.view.html',
                resolve: {
                    variants: ['userSpaces', 'InventoryService', '$stateParams', function(e, t, a) {
                        return t.getItemDetail(a.id)
                    }]
                },
                requiresLoggedIn: !0
            })
        }])
    }(),
    function() {
        angular.module('inventory').controller('AddVariantModalController', ['$scope', '$log', 'dsModal', function(e, t) {
            t.debug('Loading Item Detail Controller Controller'), e.newVariant = {}, e.add = function() {
                e.data = e.data || {}, e.loaded = !1;
                const t = !!(e.data.changes || []).filter((t) => t.name === e.newVariant.name).length;
                return t ? (e.state.error = 'custom', void(e.loaded = !0)) : (e.state.error = !1, e.data.changes.push(e.newVariant), e.close())
            }
        }])
    }(),
    function() {
        angular.module('inventory').controller('EditVariantsController', ['$scope', '$log', 'dsModal', '_', function(e, t, a, s) {
            t.debug('Loading Item Detail Controller Controller'), e.data.changes = JSON.parse(JSON.stringify(s.get(e.data, 'body.item.variantOptions', []))), e.delete = function(t) {
                return e.data.changes.splice(t, 1)
            }, e.add = function() {
                a.create({
                    template: 'public/modules/ds/variants/templates/add.html',
                    controller: 'AddVariantModalController',
                    title: 'Add variants',
                    close: !0,
                    scope: {
                        minWidth: 320,
                        additionalClass: 'ds-variants-add-modal',
                        data: e.data
                    }
                }).then((e) => {
                    e.show()
                })
            }
        }])
    }(),
    function() {
        angular.module('inventory').controller('InventoryItemsController', ['$scope', '$log', 'items', 'InventoryService', '$timeout', function(e, t, a, s, i) {
            t.debug('Loading Item Detail Controller Controller'), e.items = a && a.items, e.next = a && a.settings.next, e.state = {}, e.search = {
                params: {
                    combo: !0,
                    icon: 'glass',
                    key: 'name'
                }
            }, e.filters = [{
                name: 'All items',
                value: ''
            }, {
                name: 'Products',
                value: 'product'
            }, {
                name: 'Services',
                value: 'service'
            }], e.state.type = e.filters[0].value, e.getItemType = (e) => _.get(e.body, 'item.videoDelivery.enabled') ? 'Video Service' : e.body.item.type, e.query = function() {
                e.state.loading = !0, e.timeout && i.cancel(e.timeout), e.timeout = i(() => {
                    e.loadMore(!0)
                }, 300)
            }, e.type = function() {
                e.state.loading = !0, e.loadMore(!0)
            }, e.loadMore = function(t) {
                if (e.next = t ? {} : e.next, !e.state.loadingMore && e.next) return e.timeout && (e.timeout = i.cancel(e.timeout)), e.state.loadingMore = !0, s.getItems(e.next.page, e.next.limit, e.state.query, e.state.type).then((a) => {
                    e.state.loading = !1, e.state.loadingMore = !1, a && (e.next = a.settings.next, e.items = t ? a.items : e.items.concat(a.items))
                }).catch((t) => {
                    console.error(t), e.state.loading = !1, e.state.loadingMore = !1
                })
            }
        }])
    }(),
    function() {
        angular.module('inventory').controller('InventoryVariantsController', ['$scope', '$log', 'variants', 'dsModal', 'InventoryService', 'dsConfirm', 'VariantsService', 'notifyService', 'dsForm', 'ItemService', '$timeout', function(e, t, a, s, i, o, n, l, r, d, c) {
            function p() {
                !!_.get(e.item, 'changes', []).length;
                return o.show({
                    title: 'Update variants',
                    message: 'Updating your variants may cause SKU changes. Proceed?',
                    confirm: {
                        text: 'Ok',
                        action() {
                            return e.updateVariants(e.item.changes)
                        }
                    },
                    cancel: {
                        text: 'Cancel'
                    }
                })
            }
            t.debug('Loading Inventory Variants Controller Controller'), e.item = a, e.isVariantOptions = 0 < e.item.body.item.variantOptions.length, e.isOffer = 'offer' === _.get(e.item.body, 'item.pricingModel'), e.isVideoService = _.get(e.item.body, 'item.videoDelivery.enabled'), e.item.body.item.variants.forEach((e) => {
                const t = e.price;
                t && 2 > t.toString().split('.').length && (e.price = e.price.toFixed(2))
            });
            const m = r.instance(e, {
                "item.body.item.variants[]": {
                    price: {
                        requiredIf: function(t, a, s) {
                            return e.data.item.variants[s].enabled
                        }
                    }
                }
            });
            e.query = {
                sku: ''
            }, e.state = {
                loading: !1
            }, e.params = {
                search: {
                    combo: !0,
                    icon: 'glass',
                    key: 'sku'
                },
                edit: {
                    primaryButton: {
                        text: 'Save',
                        onClick() {
                            return p()
                        }
                    },
                    secondaryButton: {
                        text: 'Cancel'
                    }
                }
            }, e.edit = function(t) {
                const a = e.item.body.item.variants[t];
                a.editing = !0, a.oldEnabled = a.enabled, a.oldPrice = a.price, a.oldQuantity = a.quantity
            }, e.discard = function(t) {
                const a = e.item.body.item.variants[t];
                a.editing = !1, a.enabled = a.oldEnabled, a.price = a.oldPrice, a.quantity = a.oldQuantity
            }, e.save = function(t) {
                if (!m.validate()) return c(() => {
                    m.showError()
                });
                const a = e.item.body.item.variants[t];
                return a.changedPrice = a.oldPrice === a.price ? null : a.oldPrice, a.editing = !1, e.state.loading = !0, n.update(e.item.id, {
                    index: t,
                    price: d.parsePrice(a.price),
                    enabled: a.enabled
                }).then(() => i.updateQuantity({
                    id: e.item.id,
                    sku: a.sku,
                    difference: a.quantity - a.oldQuantity || 0
                })).then((t) => {
                    e.state.loading = !1, a.quantity !== t.quantity || t.exhausted ? (l.success('Variant successfully updated, some items were already sold or the stock has been updated for another reason.'), a.quantity = t.quantity) : l.success('Variant successfully updated.')
                }).catch((t) => {
                    t && 400 <= t.status && 500 > t.status ? (e.state.loading = !1, a.quantity = a.oldQuantity, a.price = a.oldPrice, l.error(t.data.fields[0] || t.data.message)) : l.error('An error occurred when trying to save your product. Please try again.')
                })
            }, e.updateVariants = function(t) {
                return i.updateVariants(e.item.id, t).then((t) => {
                    s.closeAll(), e.item.body.item = t.item
                }).catch((e) => {
                    console.error(e)
                })
            }, e.editVariants = function() {
                e.variantsBeforeEdit = e.item.body.item.variants, s.create({
                    template: 'public/modules/inventory/modals/edit.modal.html',
                    controller: 'EditVariantsController',
                    title: 'Edit variants',
                    scope: {
                        close: !1,
                        minWidth: 738,
                        data: e.item,
                        params: e.params.edit
                    }
                }).then((e) => {
                    e.show()
                })
            }
        }])
    }(),
    function() {
        angular.module('items').factory('InventoryService', ['$rootScope', 'DefaultContentService', 'Restangular', 'CommerceRestangular', '_', function(e, t, a, s) {
            const i = {
                route: 'v2/items/'
            };
            return i.getItems = function(e, t, s, i) {
                return a.one('/v2/search/my/item').get({
                    limit: t,
                    page: e,
                    query: s,
                    itemtype: i
                }).then((e) => e.plain()).catch((e) => {
                    console.error(e, 'Couldn\'t fetch items')
                })
            }, i.getItemDetail = function(e) {
                return a.one(i.route + 'draft/' + e).get().then((e) => e.plain()).catch((e) => {
                    console.error(e, 'Couldn\'t fetch item detail')
                })
            }, i.updateVariants = function(e, t) {
                return a.all(i.route + e + '/variants').customPUT(t).then((e) => e.plain())
            }, i.updateQuantity = function(e) {
                return s.one('/commerce/inventory/' + e.id).post(null, {
                    variant: e.sku,
                    increment: e.difference
                })
            }, i
        }])
    }(),
    function() {
        angular.module('items').config(['$stateProvider', function(e) {
            e.state('item', {
                abstract: !0,
                url: '',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        template: '<ui-view/>'
                    }
                }
            }).state('item.create', {
                abstract: !0,
                url: '/create',
                template: '<ui-view/>'
            }).state('item.edit', {
                abstract: !0,
                url: '/edit',
                template: '<ui-view/>'
            }).state('item.detail', {
                url: '/:space/i/:vanityUrl',
                title: 'Item detail',
                controller: 'ItemDetailController',
                templateUrl: 'public/modules/items/views/detail.view.html',
                params: {
                    draft: !1
                }
            }).state('item.draft', {
                url: '/:space/id/:id',
                title: 'Item draft',
                controller: 'ItemDetailController',
                templateUrl: 'public/modules/items/views/detail.view.html',
                params: {
                    draft: !0
                }
            }).state('item.selection', {
                url: '/create/item-selection',
                title: 'Select item type',
                controller: 'ItemSelectionController',
                templateUrl: 'public/modules/items/views/selection.view.html'
            }).state('item.create.product', {
                url: '/product',
                title: 'New product',
                controller: 'ItemFormController',
                templateUrl: 'public/modules/items/views/form.view.html',
                resolve: {
                    item: ['userSpaces', 'ItemService', function(e, t) {
                        return t.getOrCreate({
                            type: 'product'
                        })
                    }]
                }
            }).state('item.edit.product', {
                url: '/product/:id',
                params: {
                    edit: !0
                },
                title: 'Edit product',
                controller: 'ItemFormController',
                templateUrl: 'public/modules/items/views/form.view.html',
                resolve: {
                    item: ['userSpaces', 'ItemService', '$stateParams', function(e, t, a) {
                        return t.draft(a.id, t.FORMAT.PLAIN)
                    }]
                }
            }).state('item.create.service', {
                url: '/service',
                title: 'New service',
                controller: 'ItemFormController',
                templateUrl: 'public/modules/items/views/form.view.html',
                resolve: {
                    item: ['userSpaces', 'ItemService', function(e, t) {
                        return t.getOrCreate({
                            type: 'service'
                        })
                    }]
                }
            }).state('item.edit.service', {
                url: '/service/:id',
                params: {
                    edit: !0
                },
                title: 'Edit service',
                controller: 'ItemFormController',
                templateUrl: 'public/modules/items/views/form.view.html',
                resolve: {
                    item: ['userSpaces', 'ItemService', '$stateParams', function(e, t, a) {
                        return t.draft(a.id, t.FORMAT.PLAIN)
                    }]
                }
            })
        }])
    }(),
    function() {
        angular.module('items').controller('ItemDetailController', ['$timeout', '$q', '$stateParams', '$state', '$location', '$log', '$scope', '_', 'dsTooltip', 'ItemService', 'TilesService', 'Content', 'promiseTracker', 'Meta', 'Prerender', 'pixels', 'dsForm', 'CheckoutService', '$rootScope', 'ConstractsService', '$interval', '$window', 'GuestService', 'constants', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v, h, b, f, y, w, k, S, C) {
            o.debug('Loading Item Detail Controller Controller');
            const x = {
                    PAYPAL: 'paypal',
                    STRIPE: 'stripe'
                },
                T = {
                    NO_INPUT: 'no-input',
                    HAS_INPUT: 'has-input',
                    VALID_INPUT: 'ds-offer-price__button--valid'
                };
            n.state = {}, $(document).ready(() => {
                k.scrollTo(0, 0)
            }), s.current.canonical = i.absUrl(), n.state.offerButtonClass = T.NO_INPUT;
            const I = {
                offerPrice: {
                    mask: {
                        custom: '$9?9?9?9'
                    }
                }
            };
            let A = null,
                P = null;
            n.buyParams = {
                variant: null,
                quantity: 0,
                loadingTracker: m(),
                offerPrice: ''
            }, n.$validators = {}, n.$on('$destroy', () => {
                clearInterval(A)
            });
            const U = (e) => {
                    n.state.offerCountdown = {
                        hours: l.padStart(e.hours(), 2, 0),
                        minutes: l.padStart(e.minutes(), 2, 0),
                        seconds: l.padStart(e.seconds(), 2, 0)
                    }
                },
                E = (e) => {
                    const t = moment.utc(),
                        a = moment.duration(e.diff(t));
                    return a
                },
                L = (e) => {
                    w.cancel(A);
                    const t = moment(e).utc();
                    let a = E(t);
                    U(a), A = w(() => {
                        if (a = E(t), U(a), 0 >= a.asSeconds()) return w.cancel(A), n.tryOfferAgain()
                    }, 500)
                };
            f.isLoggedOut() ? P = S.getBuyerId() : (async() => {
                try {
                    const e = await b.getUserInformation();
                    return l.assign(n.buyParams, e)
                } catch (e) {
                    o.debug(e)
                }
            })(), n.tryOfferAgain = function() {
                n.updateState({
                    showOfferForm: !0,
                    showOfferAttempts: !1,
                    showOfferCountdown: !1
                });
                const e = angular.element('.ds-offer-price-attempts');
                e.removeClass('ds-offer-animated')
            }, n.updateState = (e) => {
                l.assign(n.state, e), e.showOfferCountdown && (n.state.showOfferCountdown = !0, L(e.moreAttemptsAvailableDate))
            }, n.PAMNext = () => {
                if (!n.form.validate()) return !1;
                const e = {
                    itemId: n.data.id,
                    offer: {
                        price: {
                            amount: d.parsePrice(n.buyParams.offerPrice),
                            currency: 'USD'
                        }
                    }
                };
                return f.isLoggedOut() ? e.guestBuyerId = P : e.buyerId = f.primarySpace.id, n.state.isVideoService && (e.service = {
                    instructions: n.buyParams.instructions
                }), n.buyParams.contract = e, b.checkout(n.data, {
                    params: n.buyParams,
                    onClose: n.onCheckoutClose,
                    onUpdate: n.updateState
                })
            }, n.onCheckout = () => n.state.isVideoService || n.state.isOffer ? n.form.validate() : !0, n.onCheckoutClose = () => {
                const e = l.get(n.buyParams, 'contract.status');
                n.buyParams.offerPrice = '', n.state.offerButtonClass = T.HAS_INPUT, ('pending' === e || 'submitted' === e) && n.getBuyerOfferedContract()
            };
            const M = {};
            n.onInputChange = (t) => {
                e.cancel(M[t]), M[t] = e(() => {
                    const e = n.form.validate(!0);
                    n.state.offerButtonClass = e ? T.VALID_INPUT : T.HAS_INPUT;
                    const a = l.get(n.inputs, t),
                        s = n.form.validateInput(t);
                    a.iconValidator && (a.iconValidator.valid = s)
                }, 200)
            }, n.show = function(e) {
                r.create({
                    template: 'public/modules/items/views/certified.tooltip.html',
                    element: e,
                    scope: {
                        position: 'center'
                    },
                    data: n.data,
                    offset: {
                        left: -2,
                        top: 20
                    }
                }).then((e) => {
                    e.show()
                })
            };
            const D = (e) => {
                e && (n.state.offerActorTitle = 'You offered', n.state.offerActorSubTitle = 'Pending acceptance from seller', n.state.offeredPrice = l.get(e.offer, 'price.formatted'), n.state.contractVideoInstructions = l.get(e, 'service.instructions'), e.offer.minimumPriceMet && 'submitted' === e.status && (n.state.showBuyerOfferedModule = !0))
            };
            t.resolve().then(() => a.draft ? d.draft(a.id) : d.detail(a.vanityUrl)).then((e) => {
                n.data = e, n.normalizedData = c.normalizeItem(p.toV1(e));
                const t = 'offer' === l.get(e.body, 'item.pricingModel');
                return n.state.promoVideo = l.get(e, 'body.item.videoDelivery.promoVideo'), n.state.isVideoService = l.get(e, 'body.item.videoDelivery.enabled'), n.buyParams.soldOut = !l.size(l.get(e, 'body.item.variants')), t && (l.assign(I.offerPrice, {
                    validators: {
                        custom: () => 0 < n.buyParams.offerPrice
                    }
                }), n.getBuyerOfferedContract = async() => {
                    const t = await y.getByItemId(e.id, P),
                        a = l.last(t);
                    D(a)
                }), n.state.isVideoService && l.assign(I, {
                    instructions: {
                        errorMessage: '',
                        iconValidator: {
                            className: 'check'
                        },
                        validators: {
                            required: !0
                        }
                    },
                    name: {
                        errorMessage: '',
                        iconValidator: {
                            className: 'check'
                        },
                        validators: {
                            required: !0
                        }
                    },
                    email: {
                        errorMessage: '',
                        iconValidator: {
                            className: 'check'
                        },
                        validators: {
                            required: !0,
                            email: !0
                        }
                    },
                    phone: {
                        iconValidator: {
                            className: 'check'
                        },
                        mask: {
                            custom: '( 999 ) 999 - 9999'
                        },
                        validators: {
                            required: !0
                        }
                    }
                }), n.state.isDraft = 'draft' === n.data.status, n.form = new h(n.buyParams, I, n.$validators), n.inputs = n.form.getInputs(), t && !n.buyParams.soldOut ? y.getByItemId(e.id, P).then((e) => {
                    const t = l.last(e),
                        a = l.get(t, 'offer'),
                        s = !l.isEmpty(t) && 'submitted' === t.status;
                    s && D(t), n.updateState({
                        isOffer: !0
                    }), a && !1 === a.minimumPriceMet && 3 > a.attemptsRemaining ? (n.buyParams.contract = t, 0 === a.attemptsRemaining ? n.updateState({
                        showOfferCountdown: !0,
                        moreAttemptsAvailableDate: a.moreAttemptsAvailableDate
                    }) : n.updateState({
                        showOfferAttempts: !0
                    })) : n.updateState({
                        showOfferForm: !0
                    })
                }) : void(n.state.isOffer = !1)
            }).then(() => {
                n.state.showPrice = !0, n.state.showQuantity = !0, n.state.showPurchaseActionModule = !0, n.state.itemType = l.get(n.data, 'body.item.type'), n.state.paypalPayment = l.get(n.data.body, 'item.preferredPaymentMethod') === x.PAYPAL, n.state.stripePayment = l.get(n.data.body, 'item.preferredPaymentMethod') === x.STRIPE, (n.state.isVideoService || n.state.isOffer) && (n.state.showQuantity = !1, n.buyParams.quantity = 1), n.state.isVideoService && (n.state.itemType = 'Video Service', n.state.showPurchaseActionModule = !1, n.state.showPurchaseActionModuleForm = !0), n.buyParams.soldOut && (n.state.showQuantity = !1), n.state.isOffer && (n.state.showQuantity = !1, n.buyParams.quantity = 1, n.state.showPrice = !1, n.state.showPurchaseActionModule = !1, n.state.showPurchaseActionModuleForm = !1), $(document).keypress((t) => {
                    if (t.which === C.keyCode.ENTER) {
                        if (n.state.offerButtonClass === T.VALID_INPUT && l.isEmpty(f.dsModals)) return n.PAMNext();
                        n.state.showOfferAttempts && $('#pamTryAgain').click()
                    }
                });
                const e = n.normalizedData,
                    t = e.header.authoredBy || e.header.author;
                n.isFree = () => l.get(n.data.body, 'item.isFree'), n.dontValidateCC = () => n.isFree() || n.buyParams.ccCard, t.pixels && v.fire({
                    pixelObject: t.pixels,
                    eventType: 'ViewContent',
                    params: {
                        content_name: l.get(e, 'content.title', ''),
                        pixelLocation: i.absUrl()
                    }
                }), e.meta = e.meta || {};
                const a = {
                    meta: {
                        title: l.get(n.data, 'meta.title') || n.data.body.name,
                        description: l.get(n.data, 'meta.description') || n.data.body.description
                    },
                    tags: n.data.meta.tags,
                    type: n.data.type,
                    image: l.get(n.data, 'cover.url'),
                    coverDimensions: l.pick(n.data.cover, ['height', 'width']),
                    amount: n.data.body.item.price,
                    currency: e.currency || 'USD',
                    availability: 0 < n.data.body.item.quantity ? 'instock' : 'oos',
                    author: l.get(n.data, 'author.link', t.name),
                    author_name: t.name,
                    published_time: n.data.published || n.data.created,
                    modified_time: n.data.modified,
                    tag: n.data.meta.tags
                };
                setTimeout(() => {
                    u.setPageMetaTags(a), setTimeout(g.ready, 100)
                }, 100)
            }).catch((e) => d.handleError(e))
        }])
    }(),
    function() {
        angular.module('items').controller('ItemFormController', ['$state', 'item', '$log', '$rootScope', '$scope', '_', '$timeout', 'ItemService', 'dsModal', 'notifyService', 'dsForm', 'MetaContentService', 'ConversionTrackingService', 'TermsConditionsService', 'constants', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g) {
            function v(e) {
                const t = o.cloneDeep(e);
                return i.state.shipping || (t.item.shippingOptions = []), i.state.pickup || (t.item.pickup = null), i.state.discount || (t.item.discount = 0), t.item.discount && (t.item.discount = +t.item.discount.toString().replace('%', '')), t.item.price && (t.item.price = l.parsePrice(t.item.price)), t.item.shippingOptions instanceof Array && (t.item.shippingOptions = t.item.shippingOptions.map((e) => ({
                    method: e.method,
                    additionalPrice: l.parsePrice(e.additionalPrice),
                    price: l.parsePrice(e.price)
                }))), t.item.pricingModel = i.state.makeOfferChecked ? k.OFFER : k.FIXED, i.state.minimumPriceCheckbox && !o.isEmpty(i.state.minimumAcceptedOffer) ? t.item.minimumAcceptedOffer = {
                    amount: l.parsePrice(i.state.minimumAcceptedOffer),
                    currency: 'USD'
                } : !i.state.minimumPriceCheckbox && (t.item.minimumAcceptedOffer = {
                    amount: 0,
                    currency: 'USD'
                }), delete t.item.variants, delete t.item.variantOptions, t.item.videoDelivery && delete t.item.videoDelivery.promoVideo, o.get(t.item, 'minimumAcceptedOffer.formatted') && i.state.minimumPriceCheckbox && delete t.item.minimumAcceptedOffer.formatted, t
            }

            function h() {
                clearTimeout(i.state.drafting)
            }

            function b() {
                return i.state.shipping
            }

            function f() {
                sessionStorage.getItem(g.SELECTED.VIDEO_SERVICE_TAB) && !i.data.item.videoDelivery && (i.data.item.videoDelivery = {
                    enabled: !0
                });
                const t = v(i.data);
                return h(), l.publish(t.id, t, t.item.type).then((a) => {
                    return dataLayer.push({
                        event: {
                            product: 'PublishProduct',
                            service: 'PublishService'
                        }[t.item.type],
                        publish: {
                            description: t.description,
                            name: t.name,
                            spaceId: t.spaceId,
                            storyVersion: t.storyVersion,
                            id: t.id,
                            item: t.item
                        }
                    }), e.go('item.detail', {
                        space: a.header.space.vanityUrl,
                        vanityUrl: a.vanityUrl
                    }), d.success('Item created succesfully.'), a
                }).catch((e) => {
                    d.error(e.data.message || 'An error occurred. Please try again.')
                }).finally(() => {
                    i.state.loading = !1
                })
            }

            function y() {
                n(() => {
                    i.state.variantsVisible = 0 < o.get(i.data, 'item.variantOptions', []).length, i.state.variantsVisible && w()
                })
            }

            function w() {
                const e = o.get(i.data, 'item.variants', []).filter((e) => e.enabled),
                    t = e.length,
                    a = o.minBy(e, (e) => +e.price);
                return a ? void(i.state.variantsValue = 'From $' + a.price + ' / ' + t + ' variant' + (1 < t ? 's' : '')) : void(i.state.variantsValue = 'No variants selected')
            }
            a.debug('Loading Item Create Controller Controller'), i.data = t, i.tracker = s.promiseTracker, n(() => {
                Stretchy.resizeAll()
            }), o.isNil(i.data.item.price) || (i.data.item.price = (i.data.item.price || 0).toFixed(2), i.data.item.quantity = (i.data.item.quantity || 0).toString()), i.data.item.variants.map((e) => {
                o.isNil(e.price) || (e.price = e.price.toFixed(2)), e.quantity = (e.quantity || 0).toString()
            }), y(), i.isService = 'service' === i.data.item.type;
            const k = {
                    OFFER: 'offer',
                    FIXED: 'fixed'
                },
                S = i.data.item.type,
                C = o.get(i.data.item, 'videoDelivery.enabled');
            switch (i.state = {
                edit: e.params.edit,
                pickup: !!i.data.item.pickup,
                shipping: 0 < o.get(i.data, 'item.shippingOptions', []).length,
                discount: !!o.get(i.data, 'item.discount'),
                loading: !1,
                conversionTracking: !!o.get(i.data, 'item.conversionTrackingUrl'),
                conversionTrackingUrlEnabled: m.isEnabled(),
                showPromoVideoPlayer: o.has(i.data.item, 'videoDelivery.promoVideo'),
                videoServiceTab: !1,
                uploadingVideo: !1,
                promoVideo: o.get(i.data.item, 'videoDelivery.promoVideo'),
                videoButtonLabel: 'Upload Video',
                isOffer: o.get(i.data.item, 'pricingModel') === k.OFFER
            }, S) {
                case 'service':
                    i.state.makeOfferSubtitle = 'Open your Service up for offers from your customers', i.state.sectionTitle = 'How will you deliver your service?';
                    break;
                case 'product':
                    i.state.makeOfferSubtitle = 'Open your Product up for offers from your customers', i.state.sectionTitle = 'Product';
                    break;
                default:
            }(sessionStorage.getItem(g.SELECTED.VIDEO_SERVICE_TAB) || i.state.showPromoVideoPlayer || C) && n(() => document.querySelector('#videoServiceTab a').click()), sessionStorage.getItem(g.SELECTED.MINIMUM_OFFER_PRICE_CHECKBOX) && (i.state.minimumPriceCheckbox = !0), i.data.item.pricingModel === k.OFFER && (i.state.makeOfferChecked = !0), i.$watch('state.minimumPriceCheckbox', (e) => {
                e && i.state.makeOfferChecked ? sessionStorage.setItem(g.SELECTED.MINIMUM_OFFER_PRICE_CHECKBOX, !0) : sessionStorage.removeItem(g.SELECTED.MINIMUM_OFFER_PRICE_CHECKBOX)
            }), i.$watch('state.makeOfferChecked', (e) => {
                e ? (i.disabled = !1, sessionStorage.setItem(g.SELECTED.MAKE_OFFER_CHECKBOX, !0), sessionStorage.getItem(g.SELECTED.MINIMUM_OFFER_PRICE_CHECKBOX) && (i.state.minimumPriceCheckbox = !0)) : (sessionStorage.removeItem(g.SELECTED.MAKE_OFFER_CHECKBOX), i.state.minimumPriceCheckbox = !1, sessionStorage.removeItem(g.SELECTED.MINIMUM_OFFER_PRICE_CHECKBOX))
            }), i.state.promoVideo && (i.state.reUploadVideo = !0, i.state.videoButtonLabel = 'Re-upload'), i.state.serviceTabSelected = (e) => {
                switch (e) {
                    case 'videoService':
                        i.state.videoServiceTab = !0, i.data.item.collectAddress = !1, i.state.pickup = !1, sessionStorage.setItem(g.SELECTED.VIDEO_SERVICE_TAB, !0);
                        break;
                    case 'standardService':
                        i.state.videoServiceTab = !1, sessionStorage.removeItem(g.SELECTED.VIDEO_SERVICE_TAB);
                        break;
                    default:
                }
            }, i.videoUploadBus = i.$new(), i.videoUploadBus.$on('error', (e, t) => {
                n(() => d.error(t.message))
            }), i.videoUploadBus.$on('upload-started', () => {
                i.state.showPromoVideoPlayer = !0, i.state.reUploadVideo = !1, i.state.uploadingVideo = !0, i.state.videoButtonLabel = 'Uploading...'
            }), i.videoUploadBus.$on('upload-finished', (e, t) => {
                i.state.videoId = t.model.id, i.state.reUploadVideo = !0, i.state.uploadingVideo = !1, n(() => {
                    i.state.videoButtonLabel = 'Re-upload'
                }), i.data.item.videoDelivery = {
                    enabled: !0,
                    promoVideoId: t.model.id
                }
            });
            const x = {
                    name: {
                        required: !0
                    },
                    description: {
                        required: !0
                    },
                    "item.price_and_quantity": {
                        custom() {
                            const e = i.data.item;
                            if (i.state.variantsVisible) {
                                const t = e.variants.find((e) => {
                                    const t = e.unlimited || 0 < e.quantity,
                                        a = e.free || 0 < e.price;
                                    return a && t && e.enabled
                                });
                                return t
                            }
                            const t = e.unlimited || 0 < e.quantity,
                                a = e.free || 0 < e.price || i.state.makeOfferChecked;
                            return a && t
                        }
                    },
                    "item.previews": {
                        custom() {
                            return o.get(i.data, 'item.previews', []).length
                        }
                    },
                    delivery: {
                        custom() {
                            if ('service' === i.data.item.type) return !0;
                            const e = i.state.shipping && 0 < o.get(i.data, 'item.shippingOptions', []).length,
                                t = i.state.pickup && !!o.get(i.data, 'item.pickup.address'),
                                a = !!i.data.item.collectAddress;
                            return e || t || a
                        }
                    },
                    "item.shippingOptions[]": {
                        method: {
                            requiredIf: b
                        },
                        price: {
                            requiredIf: b
                        },
                        additionalPrice: {
                            requiredIf: b
                        }
                    }
                },
                T = c.instance(i, x);
            p.generate(i.data), i.params = {
                contentId: i.data.id,
                spaceId: i.data.spaceId,
                template: 'item',
                story: i.data.story,
                single: !1,
                bucket: '',
                storyVersion: i.data.storyVersion,
                tracker: i.tracker
            }, i.header = {
                title: '',
                tracker: i.tracker,
                params: {}
            }, i.state.edit && (i.header.params.cancel = {
                label: 'Close',
                menu: {
                    draft: 'Save as draft',
                    discard: 'Discard'
                }
            }), y(), i.state.edit && o.get(i.data.item, 'pricingModel') === k.OFFER && (i.state.makeOfferChecked = !0, o.get(i.data.item, 'minimumAcceptedOffer.amount') && (i.state.minimumPriceCheckbox = !0), n(() => {
                document.querySelector('#make-offer-price-checkbox input').value = `${i.data.item.minimumAcceptedOffer.formatted}`
            }, 100)), i.publish = () => {
                if (!T.validate()) return i.state.loading = !1, n(() => {
                    T.showError()
                });
                const {
                    item: e
                } = i.data;
                e.pricingModel = i.state.makeOfferChecked ? k.OFFER : k.FIXED, e.delivery = i.state.videoServiceTab ? 'video' : 'service';
                const t = u.generateKeys(e);
                u.getTerms(t).then((e) => {
                    const t = !e.termsAndConditions.length;
                    if (t) return (document.querySelector('.icon-preloader').style.marginTop = `calc(200px + ${window.scrollY}px)`, i.state.loading) ? n() : (i.state.loading = !0, f());
                    const a = e.termsAndConditions,
                        s = i.data.item;
                    u.showTerms(a, s)
                })
            };
            const I = i.$on('callPublish', () => (document.querySelector('.icon-preloader').style.marginTop = `calc(200px + ${window.scrollY}px)`, i.state.loading) ? n() : (i.state.loading = !0, f()));
            i.$on('$destroy', I), i.delete = function() {
                const t = i.data;
                return h(), l.delete(t.id, t.item.type).then(() => (e.go('holospace.home'), d.success('Item deleted successfully.'))).catch(() => d.error('Couldn\'t delete the item.'))
            }, i.discard = function() {
                const t = i.data;
                return h(), l.discard(t.id, t.item.type).then(() => (e.go('holospace.home'), d.success('Changes discarded successfully.'))).catch(() => d.error('Couldn\'t discard the changes.'))
            }, i.draft = function() {
                const t = v(i.data);
                return h(), l.saveAsDraft(t.id, t, t.item.type).then((t) => (e.go('item.draft', {
                    space: t.header.space.vanityUrl,
                    id: t.id
                }), d.success('Item drafted successfully.'))).catch(() => d.error('Couldn\'t draft the item.'))
            }, i.save = function() {
                return !i.tracker.active() && void(i.state.drafting && clearTimeout(i.state.drafting), i.header.title = 'Saving in drafts', i.state.drafting = setTimeout(() => {
                    const e = v(i.data),
                        t = l.save(e.id, e, l.DRAFT.NOTHING, e.item.type).then(() => {
                            i.header.title = 'Saved in drafts'
                        }).catch(() => {
                            i.header.title = 'Fail to save'
                        });
                    i.tracker.addPromise(t)
                }, 300))
            }, i.addVariants = function() {
                r.create({
                    template: 'public/modules/ds/variants/templates/variants.html',
                    controller: 'VariantsController',
                    title: 'Pricing and variants',
                    close: !0,
                    scope: {
                        overflow: !0,
                        minWidth: 768,
                        data: i.data,
                        status: 'saved',
                        additionalClass: 'ds-variants-table-modal',
                        tracker: i.tracker
                    }
                }).then((e) => {
                    e.show()
                })
            };
            i.$watch(`[${['data.name','data.description','data.item.price','data.item.quantity','data.item.free','data.item.unlimited','data.item.previews','data.item.shippingOptions','data.item.pickup','state.shipping','state.pickup','state.discount','data.item.conversionTrackingUrl','data.item.videoDelivery.enable','data.item.videoDelivery.promoVideoId','state.makeOfferChecked','state.minimumAcceptedOffer','state.minimumPriceCheckbox']}]`, () => {
                i.data.item.quantity = parseInt(i.data.item.quantity || 0).toString(), i.data.item.price = l.parsePrice(i.data.item.price), i.save()
            }, !0), i.$watch('data.item.variantOptions', y)
        }])
    }(),
    function() {
        angular.module('items').controller('ItemSelectionController', ['$log', '$scope', '$rootScope', '$state', 'dsModal', 'CheckoutService', 'notifyService', 'constants', function(e, t, a, s, i, o, n, l) {
            e.debug('Loading Item Detail Controller Controller'), t.paypalIsEnabled = _.includes(a.primarySpace._features, 'paypal-app');
            const r = 'paypal.email.reminder',
                d = localStorage.getItem(r);
            t.selectItemType = (e) => {
                sessionStorage.removeItem(l.SELECTED.VIDEO_SERVICE_TAB), sessionStorage.removeItem(l.SELECTED.MAKE_OFFER_CHECKBOX), sessionStorage.removeItem(l.SELECTED.MINIMUM_OFFER_PRICE_CHECKBOX);
                const t = `item.create.${e}`;
                o.getLink().then((a) => {
                    const n = o.isEnabled(a);
                    return n ? s.go(t) : void(i.create({
                        template: 'public/modules/core/templates/modal/service-provider.template.html',
                        controller: 'ItemSelectionController',
                        full: !0,
                        close: !0,
                        scope: {
                            additionalClass: 'show-create-header animated fadeInUp',
                            modal: !0,
                            noHeader: !0
                        }
                    }).then((e) => {
                        e.show()
                    }), localStorage.setItem('paypal.link.source', e))
                }).catch((e) => {
                    if (e && 400 <= e.status && 500 > e.status) return n.error(_.get(e, 'data.message') || 'An error occurred, please try again.'), e
                })
            }, o.getLink().then((e) => {
                const t = _.get(e, 'paypal.active'),
                    a = _.get(e, 'paypal.profile.primary_email_confirmed');
                d && t && a && (n.success('Please verify your email to begin accepting payments.'), localStorage.removeItem(r))
            }), t.paypalProvider = () => i.create({
                template: 'public/modules/holospace/views/app.view.paypal.html',
                controller: 'HolospaceAppsPaypalController',
                full: !0,
                close: !0,
                scope: {
                    additionalClass: 'show-create-header animated fadeIn',
                    modal: !0,
                    noHeader: !0
                }
            }).then((e) => {
                e.show()
            }), t.stripeProvider = () => i.create({
                template: 'public/modules/core/templates/modal/stripe.connect.template.html',
                controller: 'StripeConnectController',
                full: !0,
                close: !0,
                scope: {
                    additionalClass: 'show-create-header animated fadeIn',
                    modal: !0,
                    noHeader: !0
                }
            }).then((e) => {
                e.show()
            })
        }])
    }(),
    function() {
        angular.module('pages').controller('ItemTabController', ['$log', '$scope', '_', 'PagePagination', 'Meta', '$location', 'contentCreationService', 'pixels', function(e, t, a, s, i, o, n, l) {
            e.debug('Loading Pages Controller');
            const r = this,
                d = t.$parent;
            let c = {};
            r.fieldTitle = 'Shop', r.pageContent = {}, r.callToAction = !1;
            const p = t.$parent.vm.space.id,
                m = t.$parent.vm.space.vanityUrl;
            r.showAds = !1, r.spaceId = p, r.vanity = m, t.items, t.$watchCollection('items', (e) => {
                e && (r.callToAction = 1 > e.length)
            }), r.init = function() {
                r.isMySpace = !1, d.$watch('vm.space', (e) => {
                    e.pixels && l.fire({
                        pixelObject: e.pixels,
                        eventType: 'ViewContent',
                        params: {
                            content_name: e.name,
                            pixelLocation: o.absUrl()
                        }
                    }), c = {
                        meta: {
                            title: (a.get(e, 'meta.title') || e.name) + ' | @' + e.vanityUrl + ' | Shop items on Holonis',
                            description: 'Shop unique items from ' + e.name + ' on Holonis. Browse through all products and services created by @' + e.vanityUrl
                        },
                        tags: a.get(e, 'meta.tags'),
                        type: e.type,
                        image: e.headerMediaUrl,
                        url: n.getCurrentUrl(e.vanityUrl) + '/shop'
                    }, i.setPageMetaTags(c)
                }), s.updatePaginationRelLinks(0)
            }, r.init()
        }])
    }(),
    function() {
        angular.module('items').directive('itemPrice', ['$rootScope', '$log', function(e, t) {
            function a(e) {
                return e.totalAvailable ? e.isFree || e.free ? 'free' : 'default' : 'sold-out'
            }
            return t.debug('Loading itemPrice directive'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '='
                },
                controller: ['$scope', function(e) {
                    e.data && (e.type = a(e.data), e.interval = e.data.maxPrice !== e.data.minPrice)
                }],
                templateUrl: 'public/modules/items/templates/item-price.html'
            }
        }])
    }(),
    function() {
        angular.module('items').factory('ItemService', ['DefaultContentService', 'Restangular', '_', 'Content', 'TilesService', function(e, t, a, s) {
            const i = new e('items', {
                plain: function(e) {
                    const t = a.pick(e.body, ['description', 'item', 'name', 'story', 'variants', 'status']);
                    return t.header = e.header, t.spaceId = e.header.space.id, t.id = e.id, t.status = e.status, t.meta = e.meta, t.channels = e.channels, t.termsAndConditions = e.body.termsAndConditions, t.storyVersion = e.storyVersion, t.published = e.published, t
                },
                save: function(e) {
                    return e
                }
            });
            return i.parsePrice = function(e) {
                const t = a.isNil(e) || '' === e || a.isNaN(e);
                return t ? 0 : a.isNumber(e) ? e : parseFloat(e.toString().replace(/,\s*/g, '').replace('$', '').trim())
            }, i.getVariants = function(e, a) {
                return t.one(i.route + '/' + e + '/variant').get({
                    values: JSON.stringify(a)
                }).then((e) => e.plain()).catch((e) => {
                    console.error(e)
                })
            }, i.review = function(e, a, s) {
                return t.all(`/reviews/item/${e}`).post({
                    rating: a,
                    body: s
                })
            }, i.getReviews = function(e, a) {
                return t.one(`/reviews/item/${e}`).get({
                    buyerSpaceId: a
                }).then((e) => e.plain())
            }, i.v1 = {}, i.v1.get = function(e) {
                return i.detail(e).then((e) => s.toV1(e))
            }, i
        }])
    }(),
    function() {
        angular.module('landingpage').config(['$stateProvider', '$urlRouterProvider', function() {}])
    }(),
    function() {
        angular.module('landingpage').controller('LandingPageController', ['$log', '$rootScope', '$scope', 'CollectionsService', '$timeout', 'Meta', '$state', 'Authentication', '$window', '$stateParams', 'OnboardingService', 'notifyService', function(e, t, a, s, i, o, n, l, r, d, c, p) {
            d.token && l.isLoggedOut() ? c.showLogin({
                token: d.token
            }) : d.token && p.error('You should be logged out to create a new account.'), document.querySelector('#year').innerHTML = moment().format('YYYY'), a.searchString = '', a.searchEnter = function(e) {
                13 === e.which && a.searchString && (e.target.blur(), n.go('search', {
                    searchString: a.searchString
                }, {
                    reload: !0
                }))
            }, a.setFocus = function() {
                const e = r.document.getElementById('showSearch');
                e.focus()
            }, a.showLogin = function() {
                l.showLoginPrompt()
            }, a.logoUrl = l.isLoggedOut() ? '/' : '/feeds', a.activities = [];
            const m = [],
                u = s.home();
            document.addEventListener('touchstart', () => {}, {
                passive: !0
            });
            const g = {},
                v = (e) => {
                    const t = 'space' === e ? g.spaces : _.find(g.tiles, (t) => t.$el.hasClass(`${e}-tiles`));
                    t.update()
                },
                h = (e) => {
                    const t = _.get(e, 'dataset.section');
                    e.classList.remove('section-loading'), u.load(t, 'Default').then((s) => {
                        e.classList.remove('section-loading'), e.classList.add('section-loaded'), m[t] = s.paging, a.activities[t] = s.activities, i(() => v(t))
                    })
                },
                b = function() {
                    const e = this.$el.data('type'),
                        t = _.get(m[e], 'next');
                    t && u.next(t).then((t) => {
                        m[e] = t.paging, a.activities[e] = a.activities[e].concat(t.activities), i(() => v(e))
                    })
                };
            document.querySelectorAll('[data-section]').forEach((e) => h(e)), g.tiles = [], ['.section-item', '.section-post', '.section-page', '.section-channel'].forEach((e) => {
                const t = new Swiper(`${e} .swiper-container-small-tile`, {
                    navigation: {
                        nextEl: `${e} .swiper-button-next`,
                        prevEl: `${e} .swiper-button-prev`
                    },
                    slidesPerView: 4,
                    slidesPerGroup: 4,
                    spaceBetween: 15,
                    breakpoints: {
                        768: {
                            slidesPerView: 2,
                            spaceBetween: 10,
                            freeMode: !0
                        },
                        321: {
                            slidesPerView: 2,
                            spaceBetween: 60,
                            freeMode: !0
                        }
                    }
                });
                t.on('reachEnd', b), g.tiles.push(t)
            }), g.header = new Swiper('.swiper-container-main-slide', {
                speed: 1300,
                waitForTransition: !0,
                parallax: !0,
                grabCursor: !0,
                autoplay: !0,
                simulateTouch: !0,
                pagination: {
                    el: '.swiper-pagination',
                    clickable: !0
                }
            }), g.spaces = new Swiper('.swiper-container-popular-holospace', {
                navigation: {
                    nextEl: '.section-holospaces .swiper-button-next',
                    prevEl: '.section-holospaces .swiper-button-prev'
                },
                slidesPerView: 5,
                slidesPerGroup: 5,
                spaceBetween: 15,
                breakpoints: {
                    850: {
                        grabCursor: !0,
                        slidesPerView: 4,
                        spaceBetween: 0,
                        freeMode: !0
                    },
                    768: {
                        slidesPerView: 3,
                        spaceBetween: 10,
                        freeMode: !0
                    }
                }
            }), g.footer = new Swiper('.swiper-container-footer', {});
            o.setPageMetaTags({
                meta: {
                    title: 'Holonis | Build Your Personal Brand | Make Money',
                    description: 'Thrive in the digital economy. Holonis combines everything to build your personal brand, make money, or achieve your personal goal into one space.'
                },
                tags: ['Holonis platform', 'blogs', 'ecommerce', 'business directory', 'publishing platform', 'Buy and Sell'],
                type: 'Home',
                url: 'https://www.holonis.com',
                tweetHandle: '@Holonis',
                creator: '@Holonis'
            })
        }])
    }(),
    function() {
        angular.module('landingpage').directive('tileChannel', ['$log', function() {
            return {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '='
                },
                controller: ['$scope', function(e) {
                    const t = _.get(e.data, 'body.contents'),
                        a = _.findLast(t, (e) => e.cover);
                    e.cover = _.get(a, 'cover')
                }],
                templateUrl: 'public/modules/landingpage/templates/tile.channel.template.html'
            }
        }])
    }(),
    function() {
        angular.module('landingpage').directive('tileItem', ['$log', function() {
            return {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '='
                },
                controller: ['$scope', function(e) {
                    e.rating = _.range(0, e.data.body.rating)
                }],
                templateUrl: 'public/modules/landingpage/templates/tile.item.template.html'
            }
        }])
    }(),
    function() {
        angular.module('landingpage').directive('tilePage', ['$log', function() {
            return {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '='
                },
                controller: ['$scope', function() {}],
                templateUrl: 'public/modules/landingpage/templates/tile.page.template.html'
            }
        }])
    }(),
    function() {
        angular.module('landingpage').directive('tilePost', ['$log', function() {
            return {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '='
                },
                controller: ['$scope', '$state', function(e, t) {
                    e.open = (a) => (a.preventDefault(), a.stopPropagation(), t.go('holospace.home', {
                        holospaceName: e.data.header.space.vanityUrl,
                        post: e.data
                    }), !1)
                }],
                templateUrl: 'public/modules/landingpage/templates/tile.post.template.html'
            }
        }])
    }(),
    function() {
        angular.module('landingpage').factory('CollectionsService', ['$rootScope', 'promiseTracker', 'waitTrackerPromises', 'Restangular', function(e, t, a, s) {
            const i = {},
                o = s.withConfig((t) => {
                    t.setBaseUrl(e.API_DOMAIN)
                });
            o.setRestangularFields({
                post: null
            });
            class n {
                constructor(e) {
                    this.tracker = t(), this.collections = {};
                    const a = o.all(`/api/collections/${e}`).customGET(null).then((e) => {
                        this.collections = e.plain()
                    });
                    this.tracker.addPromise(a)
                }
                load(e, t) {
                    return a(this.tracker).then(() => {
                        const a = this.collections[e];
                        if (!a) throw new Error(`Invalid collection type: ${e}`);
                        const s = _.find(a, {
                            name: t
                        });
                        if (!s) throw new Error(`Invalid endpoint name: ${t}`);
                        return o.all(s.url).customGET(null).then((e) => e.plain())
                    })
                }
                next(e) {
                    return o.all(e).customGET(null).then((e) => e.plain())
                }
            }
            return i.discover = function() {
                return new n('discover')
            }, i.home = function() {
                return new n('home')
            }, i
        }])
    }(),
    function() {
        function e(e) {
            e.state('messages', {
                url: '/:holospaceName/messages',
                views: {
                    main: {
                        controller: 'MessagesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/messages/views/messages.view.html'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }],
                    Messages: ['MessagesAsync', function(e) {
                        return e
                    }]
                }
            }).state('messages.conversation', {
                url: '/:id/{name:.*}',
                views: {
                    main: {
                        controller: 'MessagesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/messages/views/messages.view.html'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }],
                    Messages: ['MessagesAsync', function(e) {
                        return e
                    }]
                },
                params: {
                    id: null,
                    name: null,
                    url: null
                }
            })
        }
        e.$inject = ['$stateProvider'], angular.module('messages').config(e), e.$inject = ['$stateProvider']
    }(),
    function() {
        angular.module('messages').controller('MessagesController', ['$rootScope', '$scope', '$log', 'Messages', 'holospace', '_', '$http', '$state', '$stateParams', '$timeout', 'Meta', '$filter', 'media', 'Videos', 'dsVideoUploaderUtils', '$element', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v) {
            function h(a) {
                const s = t.messages;
                a.visible = !0, a.sender = t.selected.actors[a.senderId], t.messages = o.sortBy(s, 'created'), a.senderId !== e.primarySpace.id && t.messages.push(a), d(() => {
                    A()
                })
            }

            function b(e) {
                const a = t.channels[e];
                return a ? s.changeChannel(a) : (s.subscribe(e, (e) => {
                    const t = e.data,
                        a = $('#message-' + t.id);
                    0 === a.length && h(t)
                }).then((a) => {
                    t.channels[e] = a
                }), !0)
            }

            function f(e) {
                return e.body && '{' === e.body[0] && 'spaceId' in JSON.parse(e.body)
            }

            function y(t) {
                return !t.isInvite || t.isInvite && t.recipientId === e.primarySpace.id
            }

            function w(e) {
                return t.selected && t.selected.actors ? (e.sender = t.selected.actors[e.senderId], e.isInvite = f(e), e.visible = y(e), e) : e
            }

            function k(a) {
                const s = {
                    conversationId: t.selected.conversationId,
                    sender: t.selected.actors[e.primarySpace.id],
                    recipientId: t.selected.to._id,
                    created: moment().format(),
                    isInvite: !1,
                    visible: !0,
                    sending: !0
                };
                return o.assign(s, a), t.messages.push(s), s
            }
            async function S(e) {
                const a = o.pick(e, ['conversationId', 'body', 'recipientId', 'type', 'source']),
                    i = await s.send(a),
                    n = i.plain();
                if (o.assign(e, n, {
                        sending: !1
                    }), !e.sending) switch (e.type) {
                    case 'video':
                        t.videoLoading = !1, A();
                        break;
                    case 'image':
                        A(), t.imageLoading = !1;
                        break;
                    default:
                        A();
                }
            }

            function C(a) {
                t.suggestions = o.reject(a, {
                    id: e.primarySpace.id
                })
            }

            function x() {
                d(() => {
                    t.showMessage = !!l.params.id || 768 < $(window).width(), t.showMessage && !t.selected && T.openConversation(!0)
                })
            }
            a.debug('Loading Messages Controller');
            const T = this;
            let I = {};
            t.messages = [], t.suggestions = [], t.conversations = [], t.channels = {}, t.selected = null, t.loading = !0, t.videoLoading = !1, t.noConversations = !1, t.overlays = {
                compose: 'public/modules/messages/views/overlay-compose.view.html'
            }, t.hasMediaMessageAction = o.includes(e.primarySpace._features, 'media-messages');
            const A = () => {
                const e = document.querySelector('.message-view-detail'),
                    a = document.querySelector('.container-message-detail');
                768 < $(window).width() && e ? e.scrollTo(0, e.scrollHeight) : a && d(() => {
                    a.scrollTo(0, a.scrollHeight)
                }, 1800), d(() => {
                    t.loading = !1
                })
            };
            t.downloadFile = (e) => {
                document.getElementById('imageIframe').src = e
            }, T.appBackFn = function() {
                'messages' !== l.current.name && 'messages.conversation' !== l.current.name ? l.go('messages') : window.history.back()
            }, t.createConversation = function(e) {
                const a = t.selected[0],
                    i = {
                        body: e,
                        recipientId: a.id
                    };
                s.create(i).then((e) => {
                    T.syncConversations().then(() => {
                        l.go('messages.conversation', {
                            id: e.conversationId,
                            name: a.name
                        })
                    })
                })
            };
            const P = () => {
                const e = document.getElementById('media-toggle'),
                    t = document.getElementById('media-toggle-mobile');
                768 < $(window).width() ? e.checked = !1 : t.checked = !1
            };
            t.uploadImage = async() => {
                P();
                const e = await m.pickFile(),
                    a = k({
                        body: 'image',
                        type: 'image',
                        source: e.source
                    });
                return t.imageLoading = !0, d(() => {
                    A()
                }), S(a)
            }, t.uploadVideo = async(e) => {
                P();
                const a = e.target,
                    s = a.files[0],
                    i = await g.loadVideoData(s),
                    o = await u.createInstance({
                        title: i.input.name
                    });
                i.model = o, k({
                    body: 'video',
                    type: 'video',
                    source: o.id,
                    file: i
                }), t.videoLoading = !0, d(() => {
                    A()
                })
            }, t.$on('video-upload-finished', (e, t) => S(t)), t.sendMessage = function() {
                let e;
                if (t.body && (e = t.body.trim()), '' === e) return !1;
                const a = k({
                        body: e
                    }),
                    s = $('textarea');
                return t.body = '', s.val(''), S(a)
            }, t.enterSubmit = function(a) {
                13 === a.keyCode && !a.shiftKey && t.body && (t.sendMessage(), a.preventDefault())
            }, t.acceptInvite = function(e) {
                n({
                    method: 'GET',
                    url: JSON.parse(e.body).accept
                }).then(() => {
                    e.accepted = !0
                })
            }, t.declineInvite = function(e) {
                n({
                    method: 'GET',
                    url: JSON.parse(e.body).decline
                }).then(() => {
                    e.accepted = !1
                })
            }, t.showMessage = !1, T.openConversation = function(e) {
                if (t.messages = [], t.selected = null, l.params.id) t.selected = o.find(t.conversations, {
                    conversationId: l.params.id
                });
                else {
                    const e = p('orderBy')(t.conversations, '-modified');
                    t.selected = e[0]
                }
                return !0 !== e && x(), t.selected ? void(t.loading = !0, t.selected.selected = !0, t.selected.actors = {}, t.selected.actors[t.selected.recipient._id] = t.selected.recipient, t.selected.actors[t.selected.sender._id] = t.selected.sender, t.body = '', s.getHistory(t.selected.conversationId).then((e) => {
                    t.messages = e.map(w), t.$broadcast('holonisAutofocus.refocus'), d(() => {
                        A()
                    }, 200)
                }), b(t.selected.conversationId)) : !0 !== e && T.syncConversations().then(() => T.openConversation(!0))
            }, T.syncConversations = function() {
                return s.getConversations().then((a) => {
                    let s = a || [];
                    return s = s.plain().map((t) => (t.to = e.primarySpace.id === t.sender._id ? t.recipient : t.sender, t)), t.conversations = s.map((e) => (e.recipientId = e.recipient._id, e.selected = !1, e.isInvite = f(e), e.visible = y(e), e.info = e.visible ? 'You\'re Invited' : 'You sent an invitation', e)), t.$watch('conversations', () => {
                        t.noConversations = 0 === t.conversations.length
                    }), t.conversations
                })
            }, T.init = function() {
                let a;
                a = 768 <= $(window).width() ? 'message-video' : 'message-video-mobile', d(() => {
                    const e = v.find(`#${a}`);
                    e.on('change', (a) => {
                        t.uploadVideo(a), e.val('')
                    })
                }), e.windowResizeBindForMessages || ($(window).on('resize', () => {
                    x()
                }), e.windowResizeBindForMessages = !0), T.composeSpaceSearch = '', t.$watch('vm.composeSpaceSearch', (e) => e ? void i.search(e).then(C) : C([])), T.syncConversations().then(() => (t.$on('$stateChangeSuccess', T.openConversation), T.openConversation())), I = {
                    meta: {
                        title: e.primarySpace.name + ' | Messages',
                        description: e.primarySpace.name + ' | Messages'
                    },
                    tags: [],
                    type: 'website',
                    image: t.primarySpace && e.primarySpace.name ? e.primarySpace.headerMediaUrl : '',
                    url: e.primarySpace && e.primarySpace.vanityUrl ? e.primarySpace.vanityUrl : 'https://www.holonis.com/',
                    tweetHandle: '@Holonis',
                    creator: '@Holonis'
                }, c.setPageMetaTags(I)
            }, T.init()
        }])
    }(),
    function() {
        angular.module('messages').directive('messagesView', function() {
            return {
                transclude: !0,
                replace: !0,
                restrict: 'E',
                scope: {
                    selected: '=',
                    messages: '=',
                    conversations: '=',
                    showMessage: '='
                },
                templateUrl: 'public/modules/messages/views/messages-view.view.html'
            }
        })
    }(),
    function() {
        angular.module('ds.embed').directive('videoMessage', ['$timeout', '$q', '$rootScope', '$log', '_', 'AutoSaving', 'Videos', 'notifyService', 'constants', function(e, t, a, s, i, o, n, l, r) {
            return s.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                require: 'dsEmbed',
                scope: {
                    message: '=',
                    hideVideo: '=',
                    file: '='
                },
                controller: ['$scope', '$document', function(s) {
                    async function d(e) {
                        const t = await n.uploadVideo(e, s, (e) => p(0.9 * e));
                        return p(100), s.videoUplaodSuccess = !0, e.model = t, e
                    }
                    async function c(e) {
                        const t = await n.uploadThumb(e);
                        s.thumb = t;
                        const a = await n.publishVideo(s.message.source, {
                            thumb: s.thumb.url
                        });
                        return s.thumbUplaodSuccess = !0, a
                    }

                    function p(t, a) {
                        e(() => {
                            s.progressCallback && s.progressCallback(t, a)
                        }, 10)
                    }
                    s.processUpload = async function() {
                        const n = s.file,
                            m = i.get(a, 'primarySpace.isVerified');
                        if (!n) return e(() => {
                            p(100, !0)
                        }, 0), s.thumbUplaodSuccess = !0, s.videoUplaodSuccess = !0, void(s.finished = !0);
                        if (!m && n.info.duration > r.VIDEO.DURATION.MAX_DURATION_NORMAL_USER) return void l.error('You can only upload videos up to 3 minutes.');
                        if (m && n.info.duration > r.VIDEO.DURATION.MAX_DURATION_VERIFIED_USER) return void l.error('You can only upload videos up to 15 minutes.');
                        s.error = !1, p(0, !0);
                        const u = [];
                        s.thumbUplaodSuccess || u.push(c(n)), s.videoUplaodSuccess ? p(100) : u.push(d(n));
                        let g;
                        try {
                            g = await t.all(u), s.finished = !0, s.$emit('video-upload-finished', s.message)
                        } catch (e) {
                            p(0, !0), s.canceledByTheUser || (s.error = !0, l.error('Whoops, something went wrong, please try selecting the file again.'))
                        }
                        return o.track(g), g
                    }, s.playVideo = function(t) {
                        return s.error ? s.processUpload() : s.finished && (s.playing = !0, e()), t.preventDefault(), t.stopPropagation(), !1
                    }, s.thumb = i.get(s, 'message.data.cover'), e(s.processUpload, 0)
                }],
                templateUrl: '/public/modules/messages/views/video-message.view.html'
            }
        }])
    }(),
    function() {
        angular.module('messages').factory('MessagesAsync', ['$q', '$log', '$rootScope', '$http', 'Restangular', 'holospace', 'AblyAsync', '_', function(e, t, a, s, i, o, n, l) {
            function r(e) {
                return i.one('messages', e).customGET('conversation')
            }

            function d() {
                return i.one('messages').customGET('conversations')
            }

            function c(e) {
                return i.one('messages', e).customGET('history')
            }

            function p(e) {
                return i.one('messages', e).customGET('key')
            }

            function m(e) {
                return !!y && (y.publish(e.conversationId, e), !0)
            }

            function u(e) {
                const t = i.all('messages').all('send');
                return !!e.conversationId && t.post(e).then((e) => (m(e.plain()), e))
            }

            function g(e) {
                return r(e.recipientId).then((t) => {
                    const a = t.plain(),
                        s = 0 < a.length ? a[0].conversationId : null;
                    if (s) return u(l.assign({}, e, {
                        conversationId: s
                    }));
                    const o = i.all('messages').all('send');
                    return o.post(e).then((e) => e.plain())
                })
            }

            function v(e, t, a) {
                return g(e).then((e) => {
                    a.go('messages.conversation', {
                        id: e.conversationId,
                        holospaceName: t
                    })
                })
            }

            function h(e) {
                y = e
            }

            function b(e, t) {
                return p(e).then((a) => {
                    const s = new w.Realtime(a.token);
                    return y = s.channels.get(e), y.subscribe(t), y
                })
            }

            function f(e, t) {
                y && y.unsubscribe(t)
            }
            let y = null,
                w;
            return n.then((e) => {
                w = e
            }).then(() => ({
                getConversations: d,
                getHistory: c,
                send: u,
                create: g,
                createAndRedirect: v,
                changeChannel: h,
                subscribe: b,
                unsubscribe: f
            }))
        }])
    }(),
    function() {
        angular.module('messaging').config(['$stateProvider', '$urlRouterProvider', function(e) {
            e.state('messaging', {
                url: '/:holospaceName/messaging',
                views: {
                    main: {
                        controller: 'MessagingController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/messaging/views/message.view.html'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                }
            })
        }])
    }(),
    function() {
        angular.module('messaging').controller('MessagingController', ['$scope', '$log', 'Messages', 'collections', function(e, t) {
            t.debug('Loading Messaging Controller');
            this;
            e.messages = [], e.openedMessage = null, e.overlays = {
                compose: 'public/modules/messaging/views/overlay-compose.view.html',
                test: 'public/modules/messaging/views/overlay-test.view.html'
            }
        }])
    }(), angular.module('core').directive('messagesViewOld', () => {
        function e() {}
        return e.$inject = ['$scope'], {
            restrict: 'E',
            scope: {
                openedMessage: '=',
                messages: '='
            },
            controller: e,
            templateUrl: 'public/modules/messaging/templates/messages-view.template.html',
            transclude: !0,
            replace: !0
        }
    }),
    function() {
        angular.module('core').factory('Messages', ['$log', 'Restangular', 'Socket', 'collections', function(e, t, a, s) {
            return {
                getMessages(e) {
                    return t.all('messages/space/' + e).get('').then((e) => s.collectify(e.plain().message))
                }, sendMessage(e, a) {
                    return t.all('messages/send').post(a).then((e) => {
                        const t = e.plain();
                        return t
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('notifications').config(['$stateProvider', '$urlRouterProvider', function() {}])
    }(),
    function() {
        angular.module('notifications').controller('NotificationsListController', ['$log', '$rootScope', '$scope', '$state', '$q', 'Notifications', 'holospace', '$timeout', '_', 'Followers', 'notifyService', 'TransactionsService', function(e, t, a, s, i, o, n, l, r, d, c, p) {
            function m(e) {
                const t = {},
                    s = e.activities[0],
                    i = e.verb;
                if (t.isGuestNotification = 'guest' === r.get(e, 'actor.type'), t.verb = a.state.notifications.verbs[e.verb], t.time = e.updated_at || e.created_at, t.read = e.is_read, t.id = e.id, t.media = {
                        title: null,
                        picture: null,
                        url: null
                    }, t.actors = e.actors || [e.actor], t.otherActors = e.otherActors, s.target_object && s.target_object.message) {
                    let a = s.target_object.message;
                    if ('string' == typeof a) {
                        a = r.split(a, ':');
                        const i = a[0],
                            o = a[1] || void 0,
                            n = a[2] || void 0;
                        if ('content' !== i || ((e) => {
                                return ['order_fulfilled', 'order_fulfilled_video', 'order_fulfilled_offer', 'offer_reminder', 'offer_cancelled', 'order_reminder_video', 'order_cancelled_video', 'order_shipped', 'order_delivery_ready', 'order_pickup_ready', 'order_cancelled', 'order_declined'].includes(e)
                            })(e.verb)) 'author' === i && ('author_create' === e.verb && (t.author = !0), t.verb += ' ' + o + (n ? ' "' + n + '".' : '.'));
                        else if ('mention' === e.verb) t.verb += ' ' + s.foreign_id.split(':')[0];
                        else {
                            t.verb += ((e) => {
                                return ['commerce_purchase', 'commerce_free', 'commerce_v2_purchase', 'commerce_v2_free', 'offer_accepted', 'offer_declined', 'offer_new'].includes(e)
                            })(e.verb) ? ' ' + ('post' !== o && n ? n : '') : ' ' + o + ' ' + ('post' !== o && n ? n : '')
                        }
                        return t
                    }
                    if (a.body) {
                        if (r.includes(['image_sent', 'video_sent'], i) && (a.body = ''), t.verb && t.verb.includes('invited you')) return t;
                        if (t.verb) return t.verb = t.verb, 2 > t.actors.length && (t.verb += ' ' + a.body), t
                    } else;
                } else return t
            }
            e.debug('Loading Notifications List'), a.state = {
                main: {},
                notifications: {},
                followerRequests: {},
                directMessageRequests: {}
            };
            const u = t.primarySpace,
                g = {},
                v = {},
                h = {},
                b = {},
                f = {};
            a.state.main.title = 'Activity', a.state.main.tab = 'notifications', g.updateSpaceDetails = () => n.getSpaceDetails(u.vanityUrl).then((e) => {
                a.state.followerRequests.info = e.pendingFollowRequests, a.state.followerRequests.enabled = e.isPrivate, a.state.directMessageRequests.info = e.pendingMessagingRequests, a.state.directMessageRequests.enabled = e.messagingPermissionRequired, a.state.directMessageRequests.info && (a.state.directMessageRequests.title = a.state.directMessageRequests.info.total ? 'You have unread direct messages requests.' : 'You have no unread direct messages requests.'), a.state.followerRequests.info && (a.state.followerRequests.title = a.state.followerRequests.info.total ? 'You have unread follower requests.' : 'You have no unread follower requests.')
            }).catch(g.handleError), g.init = () => v.init(), g.handleError = (e) => e && 400 <= e.status && 500 > e.status ? (c.error(r.get(e, 'data.message') || 'An error occurred, please try again.'), e) : void c.error('An error occurred, please try again.'), a.main = {}, a.main.to = (e) => {
                a.state.main.tab = 'loading', l(() => 'message-requests' === e ? h.init() : 'message-request-detail' === e ? b.init() : 'follower-requests' === e ? f.init() : g.init()).then(() => {
                    a.state.main.tab = e
                })
            }, a.main.close = () => {
                a.state.main.tab = 'notifications'
            }, a.main.openFollowModal = () => d.openFollowModal(t.primarySpace), a.main.showBodyScroll = () => {
                const e = document.querySelector('body');
                e.style.overflow = 'scroll'
            }, a.main.closeActivity = () => {
                t.$emit('close:activity'), $('.drop-notifications-overlay').click()
            }, a.state.notifications.loading = !1, a.state.notifications.data = [], v.getAll = () => {
                a.state.notifications.loading = !0, o.getNotifications().then((e) => {
                    a.state.notifications.loading = !1, $('.activity-notifications .loaderInline').hide();
                    const t = r.map(r.reject(e.results, {
                        verb: 'join'
                    }), m);
                    a.state.notifications.data = r.uniqBy(t, 'id'), v.updateUnseenCount(!0)
                }).catch(g.handleError)
            }, v.updateUnseenCount = (e) => o.getUnseenCount().then((a) => {
                t.unseenNotifications = a, s.is('notifications') && !e && v.getAll()
            }), v.init = () => (a.state.main.title = 'Activity', i.all([g.updateSpaceDetails(), v.getAll()])), a.notifications = {}, a.state.followerRequests.enabled = u.isPrivate, a.state.followerRequests.title = 'You have no unread follower requests.', a.state.followerRequests.data = [], f.getAll = () => n.getFollowersRequest(u.id, 'pending').then((e) => {
                a.state.followerRequests.data = e.items
            }).catch(g.handleError), f.init = () => (a.state.main.title = 'Follower Requests', f.getAll()), a.followerRequests = {}, a.followerRequests.back = () => {
                a.main.to('notifications')
            }, a.followerRequests.updateStatus = (e, t) => n.updateFollowersRequestStatus(u.id, e, t).then(() => {
                a.state.followerRequests.info.total--;
                const t = document.getElementById(`follower-request-${e}`);
                t.classList.add('animated', 'fadeOut'), f.getAll()
            }).catch(g.handleError), a.state.directMessageRequests.enabled = u.messagingPermissionRequired, a.state.directMessageRequests.title = 'You have no unread direct messages requests.', a.state.directMessageRequests.data = [], h.getAll = () => n.getMessagingRequests().then((e) => {
                a.state.directMessageRequests.data = e.messagingRequests
            }).catch(g.handleError), h.init = () => (a.state.main.title = 'DM Requests', h.getAll()), a.directMessageRequests = {}, a.directMessageRequests.select = (e) => {
                a.state.directMessageRequests.selected = e, a.main.to('message-request-detail')
            }, a.directMessageRequests.back = () => {
                a.main.to('notifications')
            }, a.directMessageRequests.approveAll = () => {
                n.approveAllMessagingRequests().then(() => {
                    t.$emit('close:activity'), s.go('messages', {
                        holospaceName: u.vanityUrl
                    })
                }).catch(g.handleError)
            }, b.init = () => {
                a.state.main.title = ''
            }, a.directMessageRequestDetail = {}, a.directMessageRequestDetail.back = () => {
                a.main.to('message-requests')
            }, a.directMessageRequestDetail.approve = () => {
                const e = a.state.directMessageRequests.selected.message,
                    i = a.state.directMessageRequests.selected.space;
                n.approveMessagingRequest(e.id).then(() => {
                    t.$emit('close:activity'), s.go('messages.conversation', {
                        holospaceName: u.vanityUrl,
                        id: e.conversationId,
                        name: i.name
                    })
                }).catch(g.handleError)
            }, a.directMessageRequestDetail.block = () => {
                const e = a.state.directMessageRequests.selected.space.id;
                n.block(e).then(() => {
                    a.state.directMessageRequests.info.total--, a.main.to('message-requests'), c.warning('The user was blocked successfully!')
                }).catch(g.handleError)
            }, a.state.notifications.verbs = {
                join: 'joined Holonis',
                like: 'liked your',
                content_share: 'shared your',
                follow_space: 'started following you',
                follow_channel: 'started following your channel',
                follow_request_space: 'requested to follow you',
                message_sent: 'sent a message',
                message_reply: 'replied',
                image_sent: 'sent you an image',
                video_sent: 'sent you a video',
                dm_request: 'requested to sent a message to you',
                team_invite: 'invited you to be an author',
                team_accept: 'accepted your author invitation',
                team_decline: 'declined your author invitation',
                author_create: 'created a',
                author_publish: 'published your',
                commerce_purchase: 'purchased',
                commerce_free: 'grabbed a free',
                commerce_v2_purchase: 'purchased',
                commerce_v2_free: 'grabbed a free',
                order_fulfilled: 'has fulfilled your order',
                order_shipped: 'has shipped your order',
                order_delivery_ready: 'is ready to deliver your order',
                order_pickup_ready: 'is ready for you to pick up your order',
                order_cancelled: 'cancelled your order',
                order_declined: 'payment declined for',
                order_cancelled_video: 'Your order has been cancelled due to missing fulfillment deadline',
                order_fulfilled_video: 'has delivered your Video service order!',
                order_fulfilled_offer: 'has fulfilled your order!',
                offer_new: 'made you an offer on',
                offer_accepted: 'accepted your offer on',
                offer_declined: 'declined your offer on',
                offer_reminder: 'Reminder: Please respond to your offer',
                offer_cancelled: 'Your offer has been cancelled',
                order_reminder_video: 'Reminder: Please fulfill your video order',
                mention: 'mentioned you in a',
                comment_content: 'commented on your',
                item_review: 'reviewed your'
            }, a.notifications.markAsRead = function(e, i) {
                o.getNotifications({
                    mark_read: [e.id]
                }).then((o) => {
                    dataLayer.push({
                        eventCategory: 'Notifications',
                        event: 'Notifications Clicked',
                        eventAction: 'Click ' + e.verb,
                        eventLabel: e.verb
                    });
                    const l = r.filter(o.results, (t) => e.id === t.id)[0];
                    if (l) {
                        const e = l.activities[0].target_object.message,
                            o = l.activities[0].foreign_id;
                        switch (l.verb) {
                            case 'dm_request':
                                a.main.to('message-requests');
                                break;
                            case 'follow_request_space':
                                a.main.to('follower-requests');
                                break;
                            case 'message_sent':
                            case 'message_reply':
                            case 'team_invite':
                            case 'image_sent':
                            case 'video_sent':
                                {
                                    s.go('messages.conversation', {
                                        id: e.conversationId,
                                        name: t.primarySpace.vanityUrl
                                    });
                                    break
                                }
                            case 'like':
                            case 'content_share':
                            case 'author_create':
                            case 'author_publish':
                            case 'commerce_purchase':
                            case 'commerce_free':
                            case 'commerce_v2_purchase':
                            case 'commerce_v2_free':
                            case 'order_fulfilled':
                            case 'order_fulfilled_video':
                            case 'order_fulfilled_offer':
                            case 'order_shipped':
                            case 'order_delivery_ready':
                            case 'order_pickup_ready':
                            case 'order_cancelled':
                            case 'order_declined':
                            case 'offer_accepted':
                            case 'offer_declined':
                            case 'offer_new':
                            case 'mention':
                            case 'comment_content':
                            case 'item_review':
                                {
                                    if ($(i.target).closest('a').length) break;
                                    const t = r.split(e, ':');
                                    if (t) {
                                        const e = t[0],
                                            i = t[1],
                                            n = r.split(r.last(t), '/');
                                        if (r.includes(['commerce_v2_purchase', 'commerce_v2_free', 'order_fulfilled', 'order_fulfilled_video', 'order_fulfilled_offer', 'order_shipped', 'order_delivery_ready', 'order_pickup_ready', 'order_cancelled', 'order_declined', 'offer_accepted', 'offer_declined', 'offer_new'], l.verb)) a.main.closeActivity(), p.orderDetailModal(n[1]);
                                        else if ('author' === e) {
                                            const e = 'author_create' === l.verb ? 'draft' : 'detail';
                                            switch (i) {
                                                case 'page':
                                                    s.go('page.' + e, {
                                                        space: n[0],
                                                        id: n[1],
                                                        vanityUrl: n[1]
                                                    });
                                                    break;
                                                case 'item':
                                                case 'product':
                                                case 'service':
                                                case 'commerce':
                                                    s.go('item.' + e, {
                                                        space: n[0],
                                                        id: n[1],
                                                        vanityUrl: n[1]
                                                    });
                                                    break;
                                                case 'channel':
                                                    s.go('channel.' + e, {
                                                        space: n[0],
                                                        id: n[1],
                                                        vanityUrl: n[1]
                                                    });
                                                    break;
                                                default:
                                            }
                                        } else switch (i) {
                                            case 'page':
                                                s.go('page.detail', {
                                                    space: n[0],
                                                    vanityUrl: n[1],
                                                    highlight: o
                                                });
                                                break;
                                            case 'item':
                                            case 'product':
                                            case 'service':
                                            case 'commerce':
                                                s.go('item.detail', {
                                                    space: n[0],
                                                    vanityUrl: n[1],
                                                    highlight: o
                                                });
                                                break;
                                            case 'channel':
                                                s.go('channel.detail', {
                                                    space: n[0],
                                                    vanityUrl: n[1],
                                                    highlight: o
                                                });
                                                break;
                                            case 'post':
                                                s.go('post.detail', {
                                                    space: n[0],
                                                    vanityUrl: n[1],
                                                    highlight: o
                                                });
                                                break;
                                            case 'share':
                                                s.go('post.detail', {
                                                    space: n[0],
                                                    vanityUrl: n[1],
                                                    highlight: o
                                                });
                                                break;
                                            default:
                                        }
                                    }
                                    break
                                }
                            case 'follow_channel':
                                break;
                            default:
                        }
                        v.getAll()
                    }
                })
            }, o.subscribe(v.updateUnseenCount), t.notificationsOpenListener && t.notificationsOpenListener(), t.notificationsOpenListener = t.$on('activity:open', () => {
                a.main.to('notifications')
            }), t.notificationsCloseListener && t.notificationsCloseListener(), t.notificationsCloseListener = t.$on('activity:close', () => {
                a.main.close()
            })
        }])
    }(),
    function() {
        angular.module('notifications').controller('NotificationsController', ['$log', '$rootScope', '$scope', function(e, t) {
            const a = this;
            e.debug('Loading Notifications'), a.init = function() {
                t.primarySpace && t.primarySpace.email && window.Intercom && window.Intercom('update', {
                    user_id: t.primarySpace.userId
                })
            }, a.appBackFn = function() {
                window.history.back()
            }, a.init()
        }])
    }(),
    function() {
        angular.module('notifications').factory('Notifications', ['$log', '$q', 'constants', '$rootScope', 'Restangular', function(e, t, a, s, i) {
            function o() {
                return s.primarySpace ? d ? d : d = i.one('feeds', s.primarySpace.id).one('feedToken').get().then((e) => e.token) : t.reject()
            }

            function n() {
                return c ? c : s.primarySpace ? c = o().then((e) => {
                    const t = r.feed('notification', s.primarySpace.id, e);
                    return t.subscribe(() => {}), t
                }) : t.reject()
            }

            function l(e) {
                return e = e || {}, void 0 === e.mark_seen && (e.mark_seen = !0), e.limit = 100, i.one('feeds/notifications').get(e).then((e) => e.plain())
            }
            const r = stream.connect(a.CREDENTIALS.GETSTREAM.API_KEY, null, a.CREDENTIALS.GETSTREAM.APPLICATION_ID);
            let d, c;
            return {
                getNotifications: l,
                getUnseenCount: function() {
                    return l({
                        limit: 0,
                        mark_seen: !1
                    }).then((e) => e.unseen)
                },
                markAllAsSeen: function() {
                    return l({
                        mark_seen: !0
                    })
                },
                subscribe: function(e) {
                    return n().then((t) => t.subscribe(e).then(null, () => {}))
                }
            }
        }])
    }(),
    function() {
        angular.module('onboarding').config(['$stateProvider', function(e) {
            e.state('signup', {
                url: '/signup?ref',
                title: 'Sign up',
                views: {
                    main: {
                        controller: 'signupController',
                        controllerAs: 'vm',
                        template: '<div></div>'
                    }
                }
            }).state('signup.step', {
                url: '/:step?ref',
                title: 'Sign up',
                views: {
                    main: {
                        controller: 'signupController',
                        controllerAs: 'vm',
                        template: '<div></div>'
                    }
                }
            }).state('onboarding', {
                abstract: !0,
                url: '/onboarding',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        template: '<ui-view/>'
                    }
                }
            }).state('onboarding.new', {
                title: 'Choose your username',
                url: '/new/:username',
                controller: 'OnboardingNewController',
                templateUrl: 'public/modules/onboarding/templates/new.view.html',
                resolve: {
                    identities: ['holospace', 'Authentication', 'users', 'identityService', '$state', function(e, t, a, s, i) {
                        return e.getCurrentUserSpaces().then(() => {
                            const e = t.currentUser();
                            return a.getIdentities(e).then((e) => {
                                let t = !1;
                                return e = e.map((e) => (e.provider = e.provider.replace('-login', ''), e.active = !0, 'facebook' == e.provider && (t = !0), e)), t ? s.getFacebookIdentities(e) : e
                            })
                        }).catch((e) => {
                            console.error(e), i.go('homescreen')
                        })
                    }]
                }
            }).state('onboarding.preferences', {
                title: 'Onboarding',
                url: '/preferences',
                controller: 'OnboardingPreferencesController',
                templateUrl: 'public/modules/onboarding/templates/preferences.view.html',
                params: {
                    skipCategories: !1,
                    redirectToUrl: null
                },
                resolve: {
                    categories: ['holospace', 'OnboardingService', function(e, t) {
                        return e.getCurrentUserSpaces().then(() => t.getCategories().then((e) => e.categories))
                    }],
                    topics() {
                        return []
                    }
                }
            })
        }])
    }(),
    function() {
        angular.module('onboarding').controller('OnboardingLoginController', ['$state', '$location', '$log', '$rootScope', '$scope', '$timeout', 'dsForm', 'GoogleService', '$q', 'notifyService', 'constants', 'OnboardingService', '$cookies', function(e, t, a, s, i, o, n, l, r, d, c, p, m) {
            function u(e) {
                return _.assign({
                    iconValidator: {
                        className: 'check'
                    }
                }, e)
            }

            function g() {
                i.data.password = '', i.data.confirm = ''
            }

            function v() {
                o(() => {
                    i.state.loading = !1, i.state.changing = !1
                }, 300)
            }

            function h(e) {
                const t = _.get(e, 'identity.providers') || _.get(e, 'providers'),
                    a = _.includes(t, 'email-login');
                return i.user = e, 'banned' === e.status ? (i.$validators.email = 'custom', void(i.state.loading = !1)) : 'pending' === e.status ? (T({
                    state: 'confirmCode'
                }), void i.switch('confirmCode')) : a ? (i.switch('hasAccount', !0), void o(() => {
                    i.user.loaded = !0
                }, 350)) : void(d.error('Please try again using your social login.'), i.back())
            }

            function b() {
                return o(() => {
                    x.showError()
                }), i.state.loading = !1, !1
            }
            a.debug('Loading Onboarding Login Controller Controller');
            const f = [],
                y = t.search(),
                w = {},
                k = 'LastCountyCode';
            i.categories = [], i.user = {}, i.data = i.data || {}, i.data.interestIds = i.data.interestIds || [], i.onboarding = {}, i.onboarding.active = 'selection', i.state = {}, i.CODELENGTH = 4, f.push('selection'), s.signupModalVisible = !0, i.$on('$destroy', () => {
                s.signupModalVisible = !1
            });
            const S = {
                email: {
                    route: 'email',
                    key: 'email.1'
                },
                password: {
                    route: 'password',
                    key: 'email.2'
                },
                name: {
                    route: 'name',
                    key: 'email.3'
                },
                username: {
                    route: 'username',
                    key: 'username'
                },
                sms: {
                    route: 'sms',
                    key: 'sms.1'
                },
                confirmCode: {
                    route: 'email-code',
                    key: 'confirmCode'
                },
                confirmCodeSms: {
                    route: 'sms-code',
                    key: 'confirmCodeSms'
                },
                signin: {
                    route: 'existing-account',
                    key: 'hasAccount'
                }
            };
            if (y.auth_error) switch (y.auth_error) {
                case 'signup_email_exists':
                    i.authError = 'Email already registered. Continue with another method.';
                    break;
                default:
                    i.authError = 'An error ocurred when logging you in.';
            }
            const C = {
                email: {
                    validateIf() {
                        return 'email.1' === i.onboarding.active
                    }, required: !0, email: !0
                },
                confirmCode: {
                    validateIf() {
                        return 'confirmCode' === i.onboarding.active
                    }, required: !0, custom() {
                        return i.data.confirmCode.length === i.CODELENGTH
                    }
                },
                password: {
                    required: !0,
                    validateIf() {
                        return 'email.2' === i.onboarding.active
                    },
                    custom() {
                        return 4 === i.state.passwordLevel
                    }
                },
                passwordLogin: {
                    required: !0,
                    validateIf() {
                        return 'hasAccount' === i.onboarding.active
                    }
                },
                confirm: {
                    required: !0,
                    custom() {
                        return i.inputs.confirm.iconValidator.valid
                    },
                    validateIf() {
                        return 'email.2' === i.onboarding.active
                    }
                },
                name: {
                    required: !0,
                    custom() {
                        return i.inputs.name.iconValidator.valid
                    },
                    validateIf() {
                        return 'email.3' === i.onboarding.active
                    }
                },
                username: {
                    required: !0,
                    custom() {
                        return i.inputs.username.iconValidator.valid
                    },
                    validateIf() {
                        return 'username' === i.onboarding.active
                    }
                },
                resetEmail: {
                    required: !0,
                    email: !0,
                    validateIf() {
                        return 'reset' === i.onboarding.active
                    }
                }
            };
            i.$watch('data.password', () => {
                i.data && (i.hasNumber = /\d+/g.test(i.data.password), i.hasSpecialChar = /^[a-zA-Z0-9- ]*$/.test(i.data.password))
            });
            const x = n.instance(i, C);
            i.loginDifferentEmail = function() {
                i.data.email = '', i.switch('email.1', !0)
            }, i.inputs = {
                username: new u({
                    prefix: 'holonis.com/',
                    errorMessage: 'This user name is already being used, please try another combination.'
                }),
                email: new u({
                    errorMessage: 'This email address is no longer allowed on Holonis. Try another email.'
                }),
                resetEmail: new u({
                    errorMessage: 'Invalid e-mail'
                }),
                confirm: new u({
                    errorMessage: 'Passwords do not match'
                }),
                password: {
                    errorMessage: 'Your password must match the requirements'
                },
                loginPassword: {
                    errorMessage: 'Double check your password'
                },
                name: new u({
                    errorMessage: 'Try another name'
                }),
                confirmCode: {
                    errorMessage: 'Invalid validation code'
                }
            }, i.back = function() {
                i.data.confirmCode = '', i.switch(f.pop(), !0)
            };
            const T = ({
                state: e
            }) => {
                let t = '';
                let a = '';
                switch (e) {
                    case 'confirmCode':
                        t = 'Step - Confirm Code', a = 'Confirm Code';
                        break;
                    case 'email.2':
                        t = 'Step - Create Password', a = 'Create Password';
                        break;
                    case 'email.3':
                        t = 'Step - Select Name', a = 'Your Name';
                        break;
                    case 'username':
                        t = 'Step - Select Username', a = 'Your Username';
                        break;
                    case 'signup':
                        t = 'Step - Holospace Created', a = 'Holospace Created';
                        break;
                    default:
                        return;
                }
                dataLayer.push({
                    eventCategory: 'Sign Up',
                    event: t,
                    eventAction: 'Email',
                    eventLabel: a
                })
            };
            i.switch = function(t, a, s) {
                if (!i.state.changing) {
                    if (!s && !a && !x.validate()) return b();
                    if (a || f.push(i.onboarding.active), 'selection' === t) e.go('signup', void 0, {
                        notify: !1
                    });
                    else {
                        const a = _.get(_.find(S, {
                            key: t
                        }), 'route');
                        a && e.go('signup.step', {
                            step: a
                        }, {
                            notify: !1
                        })
                    }
                    i.state.changing = !0, i.onboarding.active = t, $(':focus').blur(), v()
                }
            };
            const I = (e) => {
                const t = _.find(S, {
                    route: e
                }).key;
                t && i.switch(t, !0, !0)
            };
            'signup.step' === e.current.name && e.params.step && I(e.params.step), s.$on('signup.state.change', (e, {
                toParams: t
            }) => {
                t.step ? I(t.step) : i.switch('selection', !0)
            }), i.loginEmail = function() {
                f.push('selection'), i.switch('email.1')
            }, i.signin = function() {
                return x.validate() ? i.lastTry === i.data.passwordLogin ? d.error('Try another password.') : (i.state.loading = !0, i.lastTry = i.data.passwordLogin, p.signin(i.data.email, i.data.passwordLogin).then((e) => {
                    window.location = e.data.success.redirectUrl
                }).catch(() => {
                    i.$validators.passwordLogin = 'custom', d.error('Something went wrong. Please try again.'), i.state.loading = !1
                })) : b()
            }, i.signup = function() {
                return x.validate() ? i.data.phoneNumber ? (i.smsData = {
                    phoneNumber: i.data.phoneNumber,
                    confirmCode: i.data.confirmSmsCode,
                    countryCode: i.smsContryCode,
                    name: i.data.name,
                    username: i.data.username,
                    signupToken: i.token
                }, i.state.loading = !0, p.smsSignup(i.smsData).then((e) => {
                    T({
                        state: 'signup'
                    }), window.location = e.redirectUrl
                }).catch((e) => (i.state.loading = !1, i.validateSpaceName(), 400 <= e.status && 500 > e.status ? d.error(_.get(e, 'data.message') || 'An error occurred. Please try again.') : d.error('Something went wrong, please try again.')))) : i.data.phoneNumber ? void 0 : p.signup(i.data).then((e) => {
                    i.state.loading = !0, T({
                        state: 'signup'
                    }), window.location = e.redirectUrl
                }).catch((e) => (i.state.loading = !1, i.validateSpaceName(), 400 <= e.status && 500 > e.status ? d.error(_.get(e, 'data.message') || 'An error occurred. Please try again.') : d.error('Something went wrong, please try again.'))) : b()
            }, i.goToChooseName = function() {
                T({
                    state: 'email.3'
                }), i.switch('email.3')
            }, i.goToUsername = function() {
                return x.validate() ? (i.state.loading = !0, i.data.username = p.parseUsername(i.data.name), p.checkSpaceName(i.data.username).then((e) => (i.inputs.username.iconValidator.valid = !0, !e.success && e.suggestions && (i.data.username = e.suggestions[0]), i.validateSpaceName(), T({
                    state: 'username'
                }), i.switch('username')))) : b()
            }, i.isValid = function(e) {
                return e ? 229 === e.which ? (e.preventDefault(), e.stopPropagation(), void(e.cancelBubble = !0)) : void(!p.isValid(e.key) && e.preventDefault()) : void 0
            }, i.validateSpaceName = function() {
                i.timeout && o.cancel(i.timeout), o(() => {
                    i.inputs.username.iconValidator.valid = !1, i.inputs.username.iconValidator.error = !1, i.inputs.username.iconValidator.loading = !0, i.timeout = o(() => p.checkSpaceName(i.data.username).then((e) => {
                        o(() => (i.inputs.username.iconValidator.loading = !1, e.success ? void(i.inputs.username.iconValidator.error = !1, i.inputs.username.iconValidator.valid = !0) : (i.inputs.username.iconValidator.error = !0, void x.validate())))
                    }).catch(() => {
                        i.inputs.username.iconValidator.error = !0
                    }), 300)
                })
            }, i.sendCode = function(e) {
                return x.validate() ? (e ? w.token = e : (w.email = i.data.email, w.code = i.data.confirmCode), i.state.loading = !0, p.verifyCode(w.token, w.email, w.code).then((e) => ('valid' !== e.status && (i.data.confirmCode = ''), 'invalid' === e.status ? (i.$validators.confirmCode = 'custom', void d.error('Double check your confirmation code.')) : 'blocked' === e.status ? void d.error('You tried too many times. We sent you a new code.') : 'expired' === e.status ? (i.data.email = e.email, void i.switch('expiredEmail')) : 'valid' === e.status ? (i.data.email = e.email, i.data.signupToken = e.signupToken, T({
                    state: 'email.2'
                }), void i.switch('email.2')) : void('registered' === e.status && (h(e.identity), d.error('Email was already registered.'))))).catch(() => {
                    d.error('An error occurred. Please, try again.')
                }).then(() => {
                    i.state.loading = !1
                })) : b()
            }, i.loginGoogle = function() {
                i.state.loading = !0, l.login().then((e) => e ? void(window.location.href = s.API_DOMAIN + '/auth/google') : r.reject(new Error('Not logged in'))).catch(() => {
                    i.state.loading = !1, d.error('Sign in failed, please try again.')
                })
            }, i.loginFacebook = function() {
                const e = `fblo_${c.CREDENTIALS.FACEBOOK.APP_ID}`;
                m.remove(e), window.location.href = s.API_DOMAIN + '/auth/facebook'
            };
            const A = (e) => (i.user = e, 'pending' === e.status ? void i.switch('confirmCodeSms') : e ? (i.switch('loginCodeSms', !0), void o(() => {
                    i.user.loaded = !0
                }, 350)) : void(d.error('Please try again using your social login.'), i.back())),
                P = async() => {
                    try {
                        const e = [],
                            t = await $.getJSON('public/modules/onboarding/services/country-codes.json');
                        JSON.parse(t.forEach((t) => {
                            e.push(t), i.countriesDialCode = e
                        }))
                    } catch (e) {
                        console.log(e)
                    }
                };
            if (i.LastCountyCode = localStorage.getItem(k) || 'US +1', i.loginSms = () => {
                    f.push('selection'), i.switch('sms.1'), P()
                }, i.smsExists = () => (i.smsContryCode = _.head(i.data.smsContryCode.split(' ')), i.countryNumber = _.last(i.data.smsContryCode.split(' ')), i.phoneNumber = i.data.phoneNumber, p.smsExists(i.smsContryCode, i.phoneNumber).then((e) => {
                    localStorage.setItem(k, i.data.smsContryCode), A(e)
                }).catch((e) => 400 <= e.status && 500 > e.status ? d.error('Please check your country code or phone number.') : d.error('Something went wrong, please try again.'))), i.resendSmsCode = () => p.smsExists(i.smsContryCode, i.phoneNumber).then(() => d.success('Verification code was resent to your phone.')).catch((e) => 400 <= e.status && 500 > e.status ? d.error(_.get(e, 'data.message') || 'An error occurred. Please try again.') : d.error('Something went wrong, please try again.')), i.loginWithPhoneNumber = () => (i.state.loading = !0, p.smsSignin(i.phoneNumber, i.smsContryCode, i.data.confirmSmsCode).then((e) => {
                    window.location = e.redirectUrl
                }).catch((e) => (i.state.loading = !1, 400 <= e.status && 500 > e.status ? d.error(_.get(e, 'data.message') || 'An error occurred. Please try again.') : d.error('Something went wrong, please try again.')))), i.sendSmsCode = () => p.verifySmsCode(i.smsContryCode, i.phoneNumber, i.data.confirmSmsCode).then((e) => {
                    i.token = e.signupToken, 'valid' === e.status && i.switch('email.3')
                }).catch((e) => 400 <= e.status && 500 > e.status ? d.error(_.get(e, 'data.message') || 'An error occurred. Please try again.') : d.error('Something went wrong, please try again.')), i.emailExists = function() {
                    return x.validate() ? (i.state.loading = !0, p.emailExists(i.data.email).then((e) => h(e)).catch(() => d.error('An unexpected error occurred. Please try again.'))) : b()
                }, i.matchPasswords = function() {
                    o(() => {
                        const e = isNaN(i.data.password) && !!i.data.password && i.data.password === i.data.confirm && 4 === i.state.passwordLevel;
                        i.inputs.confirm.iconValidator.valid = e
                    })
                }, i.verifyEmail = function(e) {
                    o(() => {
                        const t = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
                            a = t.test(e ? i.data.resetEmail : i.data.email);
                        i.inputs[e ? 'resetEmail' : 'email'].iconValidator.valid = a
                    })
                }, i.validateName = function() {
                    o(() => {
                        i.inputs.name.iconValidator.valid = !0
                    })
                }, i.goToReset = function() {
                    i.data.resetEmail = i.data.email, i.verifyEmail(!0), i.switch('reset', null, !0)
                }, i.askPasswordReset = function() {
                    return x.validate() ? (i.state.loading = !0, p.askPasswordReset(i.data.email).then(() => {
                        i.switch('reset.success')
                    }).catch((e) => {
                        console.error(e), i.state.loading = !1, d.error('Something went wrong.')
                    })) : b()
                }, i.goToCreatePassword = function() {
                    return g(), i.switch('email.2')
                }, i.resendCode = function() {
                    return p.resendCode(i.data.email).then((e) => 'registered' === e.status ? h(e) : d.success('Verification code was resent to your email.')).catch(() => {
                        d.error('Something went wrong. Try again.')
                    })
                }, i.$on('ds.modal.close', () => {
                    p.isSignupState(i.refState) || i.refState.abstract ? e.go('homescreen') : e.go(i.refState, i.refStateParams, {
                        notify: !1
                    })
                }), i.data.token) return function(e) {
                return i.sendCode(e)
            }(i.data.token)
        }])
    }(),
    function() {
        angular.module('onboarding').controller('OnboardingNewController', ['$state', '$log', '$rootScope', '$scope', '$timeout', 'OnboardingService', 'identities', 'notifyService', 'dsForm', '_', 'Authentication', 'holospace', 'identityService', function(e, t, a, s, i, o, n, l, r, d, c, p) {
            t.debug('Loading Onboarding New Account Controller'), s.onboarding = {}, s.onboarding.identities = n, s.onboarding.active = 1 < s.onboarding.identities.length ? 'multipleAccounts' : '', s.state = {}, s.identity = d.get(a, 'userIdentities[0].profile', {}), s.data = {
                allowMultiple: !0,
                email: d.get(s.identity, 'emails[0].value'),
                name: s.identity.displayName,
                primary: !0,
                provider: d.get(a, 'userIdentities[0].provider', 'Email'),
                type: 'space',
                userId: c.currentUser(),
                vanityUrl: o.parseUsername(d.get(s.identity, 'displayName', ''))
            }, s.state.loading = !0;
            const m = {
                vanityUrl: {
                    required: !0,
                    custom() {
                        return s.inputs.vanityUrl.iconValidator.valid
                    }
                }
            };
            s.inputs = {
                vanityUrl: new function(e) {
                    return d.assign({
                        iconValidator: {
                            className: 'check'
                        }
                    }, e)
                }({
                    prefix: 'holonis.com/'
                })
            };
            const u = r.instance(s, m);
            s.validateSpaceName = function() {
                return i(() => (s.inputs.vanityUrl.iconValidator.valid = !1, s.inputs.vanityUrl.iconValidator.loading = !0, o.checkSpaceName(s.data.vanityUrl).then((e) => (i(() => (s.inputs.vanityUrl.iconValidator.loading = !1, e.success ? void(s.inputs.vanityUrl.iconValidator.error = !1, s.inputs.vanityUrl.iconValidator.valid = !0) : void(s.inputs.vanityUrl.iconValidator.error = !0))), e))))
            }, s.validateSpaceName().then((e) => {
                s.state.loading = !1, e.success || (s.data.vanityUrl = e.suggestions[0])
            }).catch(() => {
                s.state.loading = !1
            }), s.signup = function() {
                return u.validate() ? (s.state.loading = !0, o.createHolospace(s.data).then((t) => p.login(t.id).then(() => {
                    dataLayer.push({
                        eventCategory: 'Sign Up',
                        event: 'Sign Up',
                        eventAction: s.data.provider,
                        eventLabel: 'Holospace Created'
                    }), e.go('onboarding.preferences')
                })).catch((e) => {
                    console.error(e), l.error('An error occurred when trying to create your Holospace.'), s.state.loading = !1
                })) : (i(() => {
                    u.showError()
                }), s.state.loading = !1, !1)
            }, s.switch = function(e) {
                s.state.changing = !0, i(() => {
                    s.onboarding.active = e, s.state.loading = !1, s.state.changing = !1
                }, 300)
            }, s.selectAccount = function() {
                return s.state.loading = !0, s.data.name = s.onboarding.selected.displayName, s.data.vanityUrl = o.parseUsername(s.data.name), s._meta = {}, s._meta['profile' === s.onboarding.selected.type ? 'facebookProfileId' : 'facebookPageId'] = s.onboarding.selected.id, s.validateSpaceName().then((e) => {
                    e.success || (s.data.vanityUrl = e.suggestions[0]), s.switch('')
                }).catch((e) => 404 === e.status ? void s.switch('') : void(l.error('An error occurred.'), s.state.loading = !1))
            }
        }])
    }(),
    function() {
        angular.module('onboarding').controller('OnboardingPreferencesController', ['$state', '$log', '$rootScope', '$scope', 'categories', '$timeout', '$q', 'OnboardingService', 'notifyService', '$stateParams', 'topics', 'dsConfirm', '$uibModal', 'holospace', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u) {
            function g() {
                return l.getRecommended(50).then((t) => (s.state.loading = !1, s.recommendations = t.items, s.data.spaces = _(s.recommendations).map((e) => {
                    if (e.autofollow) return e.following = !0, e.id
                }).compact().value(), s.recommendations.length ? 'hasRecommended' : e.go('feeds'))).catch((e) => (r.error('An error occurred. Try again.'), s.state.loading = !1, console.error(e), n.reject()))
            }

            function v() {
                return s.state.loading = !0, l.setCategory(s.data).then(() => s.isEdit ? (r.success('Preferences saved.'), s.state.loading = !1, w = _.clone(s.data.interestIds), void(s.preferencesChanges = h())) : g().then((e) => 'hasRecommended' === e && s.switch('recommended'))).catch((e) => {
                    r.error('An error occurred. Try again.'), s.state.loading = !1, console.error(e)
                })
            }

            function h() {
                const e = _.differenceBy(s.data.interestIds, w).length,
                    t = _.differenceBy(w, s.data.interestIds).length;
                return e + t
            }

            function b() {
                o(() => {
                    s.buttons = angular.element('.onboarding-step-floating'), f()
                })
            }

            function f() {
                if (s.buttons) {
                    const e = angular.element(window),
                        t = angular.element(document),
                        a = e.scrollTop();
                    e.height() + a + 20 >= t.height() ? s.buttons.removeClass('onboarding-step-floating--active') : s.buttons.addClass('onboarding-step-floating--active')
                }
            }
            t.debug('Loading Onboarding Login Controller Controller');
            const y = u.getPrimarySpace();
            if (!y.tutorials.firstLogin) {
                m.open({
                    templateUrl: 'public/modules/core/templates/modal/welcome-intro.template.html',
                    controller: ['$uibModalInstance', '$scope', function(e, t) {
                        t.title = 'Welcome to Holonis!', t.subTitle = 'Get ready to start personalizing your Holospace.', t.body = 'The first step is to select people, brands, or causes to follow. You\u2019ll see their recent pages, posts, & products in your feed. You can make changes and add more Holospaces to follow at any time.', t.button_title = 'Get Started!', t.cancel = function() {
                            e.dismiss()
                        }
                    }],
                    controllerAs: 'vm',
                    size: 'lg',
                    windowClass: 'confirm-modal holonis-modal'
                })
            }
            let w;
            s.categories = i, s.onboarding = {}, s.data = s.data || {}, s.data.interestIds = s.data.interestIds || [], s.state = {}, s.isEdit = d.edit;
            let k = a.Authentication.getProvider() ? a.Authentication.getProvider() : 'Email';
            'mail' === k && (k = 'Email');
            const S = ({
                state: e
            }) => {
                let t = '';
                const a = k;
                let s = '';
                switch (e) {
                    case 'category':
                        t = 'Step - My Category', s = 'My Category';
                        break;
                    case 'topics':
                        t = 'Step - My Topics', s = 'My Topics';
                        break;
                    case 'recommended':
                        t = 'Step - Recommended Holospaces', s = 'Recommended';
                        break;
                    default:
                        return;
                }
                dataLayer.push({
                    eventCategory: 'Sign Up',
                    event: t,
                    eventAction: a,
                    eventLabel: s
                })
            };
            S({
                state: 'category'
            }), s.switch = function(e, t) {
                S({
                    state: e
                }), s.state.changing = !0, t && (w = s.data.interestIds), o(() => {
                    s.onboarding.active = e, s.state.loading = !1, s.state.changing = !1, b()
                }, 300)
            }, s.isEdit && (s.switch('topics'), s.topics = c.categories, s.data.interestIds = _.filter(s.topics, {
                checked: !0
            }).map((e) => e.id), w = _.clone(s.data.interestIds)), s.setFollowers = function() {
                return s.state.loading = !0, e.params.redirectToUrl ? window.location = e.params.redirectToUrl : void l.setFollowers(s.data.spaces).then(() => e.go('feeds', {
                    backgroundFetch: 0 < _.size(s.data.spaces)
                })).catch((t) => (console.error(t), r.error('An error occurred when trying to follow the recommended spaces.'), e.go('feeds')))
            }, s.updateCategory = function(e) {
                s.categories.forEach((t) => t.id === e.id ? void(t.checked = !e.checked) : void(t.checked = !1)), s.data.categoryID = e.checked ? e.id : null
            }, s.toggleTopic = function(e) {
                if (e.checked = !e.checked, e.checked) return void s.data.interestIds.push(e.id);
                const t = _.get(s.data, 'interestIds', []).indexOf(e.id);
                0 <= t && s.data.interestIds.splice(t, 1)
            }, s.getTopics = function() {
                return s.state.loading = !0, l.getTopics().then((e) => (s.topics = e.categories, s.switch('topics'), e)).catch((e) => (console.error(e), e))
            }, s.toggleFollow = function(e) {
                if (e.following = !e.following, e.following) return void s.data.spaces.push(e.id);
                const t = _.get(s.data, 'spaces', []).indexOf(e.id);
                0 <= t && s.data.spaces.splice(t, 1)
            }, s.confirmCategory = function() {
                const e = h();
                return s.isEdit && !!e ? p.show({
                    title: 'Topics',
                    message: 'You have ' + e + (1 < e ? ' changes.' : ' change.') + ' Proceed?',
                    confirm: {
                        text: 'Yes',
                        action: v
                    },
                    cancel: {
                        text: 'Cancel'
                    }
                }) : void v()
            }, s.back = function() {
                return 'topics' == s.onboarding.active ? a.fromState ? void window.history.back() : void e.go('feeds') : void s.switch('topics', !0)
            }, s.$watchCollection('data.interestIds', () => {
                s.preferencesChanges = h()
            }), window.addEventListener('scroll', f, {
                passive: !0
            }), s.$on('$destroy', () => {
                window.removeEventListener('scroll', f, {
                    passive: !0
                })
            }), e.params.skipCategories && (s.onboarding.active = 'recommended', s.state.loading = !0, g()), b()
        }])
    }(),
    function() {
        angular.module('onboarding').factory('OnboardingService', ['$rootScope', '$state', 'dsModal', 'Restangular', '$http', 'OnboardingUtils', function(e, t, a, s, i, o) {
            const n = {};
            return n.showLogin = function(s) {
                angular.element('body').removeClass('nav-active'), angular.element('.mobile-nav').removeClass('open');
                const i = t.current,
                    o = t.params;
                n.isSignupState(i) || (e.signupRootState = i, t.go('signup', void 0, {
                    notify: !1
                })), a.create({
                    template: 'public/modules/onboarding/templates/login.view.html',
                    controller: 'OnboardingLoginController',
                    scope: {
                        noMaxHeight: !0,
                        noHeader: !0,
                        additionalClass: 'onboarding__wrapper',
                        data: s,
                        refState: i,
                        refStateParams: o
                    },
                    full: !0
                }).then((e) => {
                    e.show()
                })
            }, n.isSignupState = (e) => -1 < ['signup', 'signup.step'].indexOf(e.name), n.isValid = function(e) {
                return /[a-zA-Z0-9_.-]/.test(e)
            }, n.parseUsername = function(e) {
                return e ? e.toString().replace(/[^a-zA-Z0-9]/g, '-').replace(/-{2,}/g, '-').replace(/-$/, '').toLowerCase() : void 0
            }, n.checkSpaceName = function(e) {
                return s.one('/spaces/' + e + '/check').get().then((e) => e.plain())
            }, n.askPasswordReset = function(e) {
                return s.all('/users/reset-password-request').post({
                    email: e
                }).then((e) => e.plain())
            }, n.verifyCode = function(e, t, a) {
                const i = {};
                return e ? i.token = e : (i.email = t, i.code = a), s.all('v2/users/verify').customPUT(i).then((e) => e.plain())
            }, n.smsExists = (e, t) => s.all('v2/users/login-phone-number').post({
                countryCode: e,
                phoneNumber: t
            }).then((e) => e.plain()), n.verifySmsCode = (e, t, a) => s.all('v2/users/verify-phone-number').customPUT({
                countryCode: e,
                phoneNumber: t,
                code: a
            }).then((e) => e.plain()), n.smsSignup = (e) => s.all('/v2/users/signup-phone-number').post(e), n.smsSignin = (e, t, a) => s.all('v2/users/login-phone-number-confirm').post({
                phoneNumber: e,
                countryCode: t,
                code: a
            }).then((e) => e.plain()), n.resetPassword = function(e, t) {
                return s.all('/users/reset-password').post({
                    password: e,
                    confirmation: t
                }).then((e) => e.plain())
            }, n.emailExists = (e) => s.all('v2/users/identity').post({
                where: {
                    email: e
                }
            }).then((e) => e.plain()), n.getCategories = function() {
                return s.one('/v2/categories/space').get().then((e) => e.plain()).catch((e) => {
                    console.error(e)
                })
            }, n.getTopics = function() {
                return s.one('/v2/categories/featured').get().then((e) => e.plain()).catch((e) => {
                    console.error(e)
                })
            }, n.getTopicsAll = function() {
                return s.one('/v2/categories/all').get().then((e) => e.plain()).catch((e) => {
                    console.error(e)
                })
            }, n.signup = function(e) {
                return s.all('/v2/users/signup').post(e)
            }, n.signin = function(e, t) {
                return i({
                    method: 'POST',
                    url: '/signin',
                    data: {
                        email: e,
                        password: t
                    }
                })
            }, n.setCategory = function(t, a) {
                return s.all('/v2/spaces/setup').customPUT(t).then((s) => {
                    if (!a) e.primarySpace.interestIds = t.interestIds;
                    else {
                        const s = o.getSpacesIndexByVanity(a);
                        e.userSpaces[s].interestIds = t.interestIds
                    }
                    return s.plain()
                })
            }, n.getRecommended = function(e) {
                return s.one('/v2/search/recommendation').get({
                    limit: e
                }).then((e) => e.plain())
            }, n.setFollowers = function(e) {
                return s.all('/relationships/batch/follow').post({
                    spaces: e
                })
            }, n.createHolospace = function(e) {
                return s.one('spaces').customPOST(e).then((e) => e.plain())
            }, n.resendCode = function(e) {
                return s.all('/v2/users/resend-verification').post({
                    email: e
                })
            }, n.changePassword = function(e, t, a) {
                return s.all('/users/password').customPUT({
                    currentPassword: e,
                    newPassword: t,
                    confirmNewPassword: a
                })
            }, n
        }])
    }(),
    function() {
        angular.module('onboarding').factory('OnboardingUtils', ['$rootScope', function(e) {
            return {
                getSpacesIndexByVanity: function(t) {
                    let a;
                    return _.map(e.userSpaces, (e, s) => {
                        e.vanityUrl == t && (a = s)
                    }), a
                }
            }
        }])
    }(),
    function() {
        function e(e) {
            return {
                restrict: 'A',
                link(t, a, s) {
                    let i;
                    t.overlays = t.overlays || {}, t.overlays.image = 'public/modules/overlay/views/overlay-image.view.html', a.bind('click', function() {
                        t.isLoading = !0, i = new Image, i.onload = function() {
                            t.$apply(() => {
                                t.isLoading = !1
                            })
                        }, i.src = t.overlayImage = s.overlayImage, e.show(t, 'image')
                    })
                }
            }
        }
        e.$inject = ['$overlay'], angular.module('core').directive('overlayImage', e), e.$inject = ['$overlay']
    }();

function overlayDirective(e) {
    return {
        restrict: 'A',
        scope: {
            overlay: '@',
            overlayScope: '='
        },
        link(t, a) {
            a.bind('click', function() {
                t.overlay && e.show(t.overlayScope || t.$parent, t.overlay)
            })
        }
    }
}
overlayDirective.$inject = ['$overlay'], angular.module('overlay').directive('overlay', overlayDirective);

function overlayService(e, t, a, s) {
    function i(e) {
        e.addClass(h), v.css('overflow', 'hidden')
    }

    function o(t) {
        t.removeClass(h), e.overlays.length - 1 || v.css('overflow', 'auto')
    }

    function n(t) {
        e.overlays.push(t)
    }

    function l() {
        e.overlays.pop()
    }

    function r(e) {
        e.remove()
    }

    function d(e) {
        e && !y && (y = !0, e.one('transitionend', () => {
            r(e), l(), y = !1
        }), o(e))
    }

    function c() {
        y || d(e.overlays[e.overlays.length - 1])
    }

    function p() {
        $(e.overlays).each((e, t) => {
            y = !1, d(t)
        })
    }

    function m(t) {
        t.target.hasAttribute(b) && c()
    }

    function u(t) {
        t.target.hasAttribute(f) && p()
    }

    function g(t) {
        27 === t.keyCode && (t.shiftKey ? p() : c())
    }
    const v = $('body'),
        h = 'overlay-active',
        b = 'overlay-close',
        f = 'overlay-close-all';
    let y = !1;
    return e.overlays = e.overlays || [], $('body').off('click', '[' + b + ']', m).on('click', '[' + b + ']', m).off('click', '[' + f + ']', u).on('click', '[' + f + ']', u), $(document).off('keydown', g).on('keydown', g), e.$on('$routeChangeSuccess', p), {
        show: function(e, o) {
            e.overlayContent = e.overlays[o], t('public/modules/overlay/views/overlay.view.html').then((t) => {
                const o = a(t)(e);
                s(() => {
                    v.append(o), n(o), i(o)
                }, 50)
            })
        },
        hide: c,
        hideAll: p
    }
}
overlayService.$inject = ['$rootScope', '$templateRequest', '$compile', '$timeout'], angular.module('overlay').factory('$overlay', overlayService),
    function() {
        angular.module('pages').config(['$stateProvider', function(e) {
            e.state('page', {
                abstract: !0,
                url: '',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        template: '<ui-view/>'
                    }
                }
            }).state('page.detail', {
                url: '/:space/p/:vanityUrl',
                title: 'Page detail',
                controller: 'PageDetailController',
                controllerAs: 'vm',
                templateUrl: 'public/modules/pages/views/detail.view.html'
            }).state('page.draft', {
                url: '/:space/pd/:id',
                params: {
                    draft: !0
                },
                title: 'Page draft',
                controller: 'PageDetailController',
                controllerAs: 'vm',
                templateUrl: 'public/modules/pages/views/detail.view.html'
            }).state('page.create', {
                url: '/create/page',
                title: 'New page',
                controller: 'PageFormController',
                templateUrl: 'public/modules/pages/views/form.view.html',
                resolve: {
                    page: ['userSpaces', 'PageService', function(e, t) {
                        return t.getOrCreate()
                    }]
                }
            }).state('page.edit', {
                url: '/edit/page/:id',
                params: {
                    edit: !0
                },
                title: 'Edit page',
                controller: 'PageFormController',
                templateUrl: 'public/modules/pages/views/form.view.html',
                resolve: {
                    page: ['userSpaces', 'PageService', '$stateParams', function(e, t, a) {
                        return t.draft(a.id, t.FORMAT.PLAIN)
                    }]
                }
            })
        }])
    }(),
    function() {
        angular.module('core').controller('PageDetailController', ['$timeout', '$log', '$scope', '$window', 'constants', 'Authentication', 'PageService', '$state', '$uibModal', '_', '$stateParams', 'jquery', '$location', 'Meta', 'Prerender', 'TilesService', 'Content', 'pixels', 'dfp', 'ad', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v, h, b, f, y) {
            function w() {
                a.$evalAsync(() => {
                    x.landingpageHeaderInfo.headerOffsetTop = 768 < window.innerWidth ? 60 : 45
                })
            }

            function k() {
                x.space = x.page.header.space, x.space.userId === o.currentUser() && (x.isMySpace = !0), x.landingpageHeaderInfo.holospaceDetails = x.space
            }

            function S() {
                x.createdBySpace = x.page.header.createdBy
            }

            function C() {
                const t = T(window),
                    a = t.scrollTop(),
                    s = T('.ads-bottom'),
                    i = document.getElementById('div-gpt-ad-holonis_sticky_1');
                if (!s.length) return;
                const o = s.offset().top + s.height(),
                    n = T('.stories-content').height(),
                    l = T('.ds-cover-wrapper'),
                    r = l.length ? l.height() : 0,
                    d = T('.share-this-custom-floating'),
                    c = d.css('top').replace('px', ''),
                    p = a + t.height() - c + 10;
                e(() => {
                    x.showShare = a >= r && p < o, x.hideSideAd = a >= r && p + 190 < o, i.style.cssText = x.hideSideAd ? 'position: fixed!important; top: 150px' : 'position: aboslute!important', p + 200 >= o && 700 <= n && (i.style.cssText = 'position: fixed!important; top: 150px; display:none')
                })
            }
            t.debug('Loading Landing Page Controller'), g.handleManually();
            const x = this,
                T = p;
            let I = {};
            x.vanityUrl = c.vanityUrl, x.isDraft = c.draft, x.pagePopulate = !1, x.holospaceName = c.space, x.landingpageHeaderInfo = {
                holospaceDetails: {
                    profilePhoto: '',
                    name: '',
                    tagline: ''
                },
                holospaceMetrics: {
                    views: '',
                    comments: '',
                    shares: ''
                }
            }, x.landingpageHeaderInfo.goToEditPage = function() {
                l.go('page.edit', {
                    id: x.page.id
                })
            }, x.page = {}, x.mediumOptions = {
                disabledEditing: !0
            }, x.appBackFn = function() {
                window.history.back()
            }, x.shareModal = function() {
                r.open({
                    templateUrl: 'public/modules/core/templates/sharethis.modal.template.html',
                    controller: ['$uibModalInstance', 'title', function(e, t) {
                        const a = this;
                        a.permalink = m.absUrl(), a.title = t || 'Holonis Inc.', a.cancel = function() {
                            e.dismiss()
                        }
                    }],
                    resolve: {
                        title() {
                            return x.page.contentHeight.name
                        }
                    },
                    controllerAs: 'vm',
                    size: 'sm',
                    windowClass: 'confirm-modal modal-share modal-mobile-full'
                })
            }, x.init = function() {
                setTimeout(() => {
                    T('.jumpToComment').click(() => {
                        T('html, body').animate({
                            scrollTop: T('#fb-comment').offset().top
                        }, 500)
                    })
                }, 0), w(), T(window).on('resize', w), x.isMySpace = !1, x.landingpageHeaderInfo.holospaceMetrics = {
                    views: 1e8,
                    shares: 200,
                    comments: 33000
                }, x.landingpageHeaderInfo.options = {
                    share: {}
                };
                const e = x.isDraft ? n.draft(c.id) : n.detail(x.vanityUrl);
                e.then((e) => {
                    if (x.isDraft && 'published' === e.status && (x.isDraft = !1, l.go('landingpage', {
                            holospaceName: e.space.vanityUrl,
                            vanityUrl: e.vanityUrl
                        }, {
                            location: 'replace',
                            notify: !1
                        })), x.aolPlayerEnabled = e.aolPlayerEnabled, x.page = e, d.has(x.page, 'header.space.pixels') && b.fire({
                            pixelObject: d.get(x.page, 'header.space.pixels', {}),
                            eventType: 'ViewContent',
                            params: {
                                content_name: d.get(x.page, 'body.name', ''),
                                pixelLocation: m.absUrl()
                            }
                        }), x.normalizedData = v.normalizeItem(h.toV1(e)), a.data = e, x.page.header.space.status && 'deactivate' === x.page.header.space.status ? T('body').addClass('user-deactivate') : x.pagePopulate = !0, k(), S(), a.params = {
                            contentId: x.page.id,
                            spaceId: x.page.header.space.id,
                            template: 'page',
                            story: x.page.body.story
                        }, x.isDraft) x.isMySpace = !0, x.landingpageHeaderInfo.holospaceDetails = x.space, x.landingpageHeaderInfo.holospaceDetails.isMySpace = x.isMySpace;
                    else if (l.current.canonical = m.absUrl(), x && x.page && x.page.id && n.v1.pageView(x.page.header.space.vanityUrl + '/p/' + x.vanityUrl, x.page.header.space.id, !1).then((e) => {
                            x.pageViews = e.views, x.pageViewsLoaded = !0
                        }), x.page) {
                        const e = d.get(x.page, 'engagement.views'),
                            t = f.createRangeText(e, i.DFP.RANGES.VIEWS);
                        a.showAds = !0, a.slotTargeting = {}, a.slotTargeting.page_id = x.page.id, a.slotTargeting.page_views_min = t, a.slotTargeting.content_type = 'page', d.get(x.page, 'category') && (a.slotTargeting.content_category = [x.page.category]), d.get(x.page, 'meta.tags') && (a.slotTargeting.tag = x.page.meta.tags), a.params.slotTargeting = a.slotTargeting;
                        const o = x.page.header.createdBy || x.page.header.space;
                        x.page.meta = x.page.meta || {};
                        let n = d.get(x.page, 'cover');
                        n && n.url || (n = d(d.get(x.page, 'body.story', [])).map('cover').compact().value(), n = d.first(n));
                        const l = d.pick(n, ['width', 'height']);
                        I = {
                            meta: {
                                title: x.page.meta.title ? x.page.meta.title : x.page.body.name,
                                description: x.page.meta.description ? x.page.meta.description : x.page.body.description
                            },
                            tags: x.page.tags,
                            type: x.page.type,
                            url: x.page.url,
                            author: d.get(a.data, 'author.link', o.name),
                            author_name: o.name,
                            published_time: x.page.publishDate || x.page.created,
                            modified_time: x.page.modified,
                            tag: x.page.tags,
                            image: d.get(n, 'url', null),
                            coverDimensions: d.isEmpty(l) ? null : l
                        };
                        const r = 'div-gpt-ad-holonis_sticky_1',
                            c = s.staticAds[r];
                        c && setInterval(() => {
                            y.refreshBid({
                                labels: [r],
                                slot: c,
                                slotName: r,
                                timeout: i.ADS.PREBID.TIMEOUT
                            })
                        }, 2e4), setTimeout(() => {
                            u.setPageMetaTags(I), setTimeout(g.ready, 100)
                        }, 100)
                    } else setTimeout(g.ready, 100)
                }).catch((e) => n.handleError(e))
            }, window.addEventListener('scroll', C, {
                passive: !0
            }), a.$on('$destroy', () => {
                window.removeEventListener('scroll', C, {
                    passive: !0
                })
            }), x.init()
        }])
    }(),
    function() {
        angular.module('pages').controller('PageFormController', ['$state', '$document', 'page', '$log', '$rootScope', '$scope', 'holospace', '_', '$timeout', 'PageService', 'dsModal', 'notifyService', 'dsForm', 'MetaContentService', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u) {
            function g() {
                clearTimeout(o.state.drafting)
            }
            s.debug('Loading Page Form Controller'), o.data = a, o.tracker = i.promiseTracker, u.generate(o.data);
            const v = m.instance(o, {
                name: {
                    required: !0
                },
                description: {
                    required: !0
                }
            });
            o.state = {
                title: 'Page',
                edit: e.params.edit
            }, o.params = {
                contentId: o.data.id,
                spaceId: o.data.spaceId,
                template: 'page',
                story: o.data.story,
                single: !1,
                bucket: '',
                storyVersion: o.data.storyVersion,
                tracker: o.tracker,
                actions: {
                    ad: !0
                }
            }, o.header = {
                title: '',
                tracker: o.tracker,
                params: {}
            }, o.state.edit && (o.header.params.cancel = {
                label: 'Close',
                menu: {
                    draft: 'Save as draft',
                    discard: 'Discard'
                }
            }), o.publish = function() {
                if (!v.validate()) return r(() => {
                    v.showError()
                });
                const t = o.data;
                return g(), d.publish(t.id, t).then((a) => (dataLayer.push({
                    event: 'PublishPage',
                    publish: {
                        description: t.description,
                        name: t.name,
                        spaceId: t.spaceId,
                        storyVersion: t.storyVersion,
                        id: t.id
                    }
                }), e.go('page.detail', {
                    space: a.header.space.vanityUrl,
                    vanityUrl: a.vanityUrl
                }), p.success('Page created succesfully.'), a)).catch((e) => {
                    p.error(e.data.message || 'An error occurred. Please try again.')
                })
            }, o.delete = function() {
                const t = o.data;
                return g(), d.delete(t.id).then(() => (e.go('holospace.home'), p.success('Page deleted successfully.'))).catch(() => p.error('Couldn\'t delete the page.'))
            }, o.discard = function() {
                const t = o.data;
                return g(), d.discard(t.id).then(() => (e.go('holospace.home'), p.success('Changes discarded successfully.'))).catch(() => p.error('Couldn\'t discard the changes.'))
            }, o.draft = function() {
                const t = o.data;
                return g(), d.saveAsDraft(t.id, t).then((t) => (e.go('page.draft', {
                    space: t.header.space.vanityUrl,
                    id: t.id
                }), p.success('Page drafted successfully.'))).catch(() => p.error('Couldn\'t draft the page.'))
            }, o.save = function() {
                return !o.tracker.active() && void(o.state.drafting && clearTimeout(o.state.drafting), o.header.title = 'Saving in drafts', o.state.drafting = setTimeout(() => {
                    const e = o.data,
                        t = d.save(e.id, e, d.DRAFT.NOTHING).then(() => {
                            o.header.title = 'Saved in drafts'
                        }).catch(() => {
                            o.header.title = 'Fail to save'
                        });
                    o.tracker.addPromise(t)
                }, 300))
            }, o.$watch('data', () => {
                o.save()
            }, !0)
        }])
    }(),
    function() {
        angular.module('pages').controller('PageTabController', ['$log', '$rootScope', '$scope', 'Authentication', '_', 'collections', 'PagePagination', 'Meta', 'PageService', 'contentCreationService', 'pixels', function(e, t, a, s, i, o, n, l, r, d, c) {
            e.debug('Loading Pages Controller');
            const p = this,
                m = a.$parent;
            let u = {};
            p.fieldTitle = 'Pages', p.pageContent = {}, p.callToAction = !1;
            const g = a.$parent.vm.space,
                v = a.$parent.vm.space.id,
                h = g.vanityUrl;
            p.showAds = i.get(g, 'Ads.page', !1), p.spaceId = v, p.vanity = h, a.items, a.$watchCollection('items', (e) => {
                e && (p.callToAction = 1 > e.length)
            }), p.init = function() {
                p.isMySpace = !1, m.$watch('vm.space', (e) => {
                    e.pixels && c.fire({
                        pixelObject: e.pixels,
                        eventType: 'ViewContent',
                        params: {
                            content_name: e.name,
                            pixelLocation: [window.location.origin, e.vanityUrl, 'pages'].join('/')
                        }
                    }), u = {
                        meta: {
                            title: (i.get(e, 'meta.title') || e.name) + ' | @' + e.vanityUrl + ' | Pages on Holonis',
                            description: 'Find original content created by ' + e.name + '. See all pages created by @' + e.vanityUrl
                        },
                        tags: i.get(e, 'meta.tags'),
                        type: e.type,
                        image: e.headerMediaUrl,
                        url: d.getCurrentUrl(e.vanityUrl) + '/pages'
                    }, l.setPageMetaTags(u)
                }), n.updatePaginationRelLinks(0)
            }, p.init()
        }])
    }(),
    function() {
        angular.module('pages').factory('PageService', ['$rootScope', 'DefaultContentService', 'Restangular', '_', '$timeout', function(e, t, a, s, i) {
            const o = new t('pages', {
                plain: function(e) {
                    const t = s.pick(e.body, ['description', 'name', 'story']);
                    return t.spaceId = e.header.space.id, t.id = e.id, t.channels = e.channels, t.meta = e.meta, t.type = e.type, t.storyVersion = e.storyVersion, t.published = e.published, e.cover && (t.cover = e.cover, t.headerMediaUrl = e.cover.url, t.headerMediaPosition = e.cover.position), t
                }
            });
            return o.homespace = function(e) {
                return a.one(this.route + '/' + e + '/home').get().then((e) => e.plain()).catch((e) => {
                    console.error(e)
                })
            }, o.v1 = {}, o.v1.getPagesWithContentById = function(e) {
                return a.one('pages/' + e + '/page-content').get().then((e) => e.plain()).catch((e) => {
                    console.error(e)
                })
            }, o.v1.getPagesBySpaceId = function() {}, o.v1.getPageDetailsByVanityUrl = function(e) {
                return a.one('pages/' + e + '/details').get().then((e) => e.plain()).catch((e) => {
                    console.error(e)
                })
            }, o.v1.getPageDetailsById = function(e) {
                return a.one('pages/id/' + e + '/details').get().then((e) => e.plain()).catch((e) => {
                    console.error(e)
                })
            }, o.v1.pageView = function() {
                return i().then(() => ({
                    views: 1
                }))
            }, o
        }])
    }(),
    function() {
        angular.module('pixels').config(['$stateProvider', function(e) {
            e.state('pixels', {
                url: '/pixels',
                title: 'Page detail',
                views: {
                    main: {
                        controller: 'PixelsController',
                        templateUrl: 'public/modules/pixels/views/pixels.view.html'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                }
            })
        }])
    }(),
    function() {
        angular.module('pixels').controller('PixelsController', ['$timeout', '$scope', 'localStorageService', 'PixelsService', 'notifyService', function(e, t, a, s, i) {
            const o = 'dismissedPixelsHero',
                n = a.get(o),
                l = moment().diff(moment(n));
            let r = {};
            const d = {
                facebook: 'Facebook',
                twitter: 'Twitter',
                pinterest: 'Pinterest',
                googleanalytics: 'Google Analytics'
            };
            t.pixels = {}, t.pixelsHero = !n || 12 <= moment.duration(l).asHours(), t.close = function() {
                const e = moment().format();
                a.set(o, e), t.pixelsHero = !1
            }, t.save = function(e) {
                const a = t.pixels[e];
                if (!a) return;
                const o = d[e];
                s.save(e, a).then((t) => {
                    if (!t.success) throw new Error;
                    const s = _.get(r, `${e}.id`) ? 'updated' : 'saved';
                    _.set(r, `${e}.id`, a.id.toString()), i.success(`${o} pixel ${s} successfully!`)
                }).catch(() => {
                    i.error(`There was a problem saving your ${o} pixel. Please try again!`)
                })
            }, t.validate = function(e) {
                const a = _.get(t.pixels, `${e}.id`, '').toString(),
                    s = _.get(r, `${e}.id`, '').toString();
                return !s && a || s !== a
            }, s.load().then((e) => {
                e && (r = _.cloneDeep(e), t.pixels = e)
            })
        }])
    }(),
    function() {
        angular.module('pixels').factory('PixelsService', ['$rootScope', 'Restangular', function(e, t) {
            return {
                load: function() {
                    return t.one('/spaces/settings/pixels').get().then((e) => e.plain()).catch((e) => {
                        console.error(e)
                    })
                },
                save: function(e, a) {
                    return t.one('/spaces/settings/pixels').post(null, {
                        provider: e,
                        value: a
                    }).then((e) => e.plain()).catch((e) => {
                        console.error(e)
                    })
                }
            }
        }])
    }(),
    function() {
        function e(e) {
            e.state('places.intern', {
                url: '/:section',
                title: 'Places',
                views: {
                    main: {
                        controller: 'PlacesController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/places/views/places.view.html'
                    }
                }
            })
        }
        e.$inject = ['$stateProvider'], angular.module('places').config(e), e.$inject = ['$stateProvider']
    }(),
    function() {
        function e(e, t, a, s, i) {
            t.debug('Loading Places Controller'), s.handleManually();
            const o = this;
            e.metaTags = e.metaTags || {}, e.metaTags.title = 'U.S. States | Geo Sitemap | Discover Businesses on Holonis', e.metaTags.description = 'Browse and find cities, categories and businesses that are empowered on Holonis. A Social Commerce publishing platform that enables endless opportunities.', i.getStates('US').then((e) => {
                o.states = a.reject(e, {
                    vanityUrl: 'puerto-rico'
                }), setTimeout(s.ready, 100)
            })
        }
        e.$inject = ['$rootScope', '$log', '_', 'Prerender', 'holospace'], angular.module('places').controller('PlacesController', e), e.$inject = ['$rootScope', '$log', '_', 'Prerender', 'holospace']
    }(),
    function() {
        angular.module('shop').config([function() {}])
    }(),
    function() {
        angular.module('shop').factory('CheckoutService', ['$log', '$rootScope', '$q', 'Restangular', 'CommerceRestangular', 'holospace', 'OrdersService', 'StripeService', 'dsModal', function(e, t, a, s, i, o, n, l, r) {
            function d(e) {
                return n.create(e)
            }
            const c = {};
            return c.checkout = (e, {
                action: a,
                params: s,
                onClose: i,
                onUpdate: o
            }) => {
                'readyToCheckout' === a || (clearTimeout(t.signupLeadTimeout), r.create({
                    template: 'public/modules/shop/templates/modal/checkout.template.html',
                    controller: 'ModalShopCheckoutController',
                    full: !0,
                    customClass: 'checkout-modal',
                    scope: {
                        tile: e,
                        params: s
                    }
                }).then((e) => {
                    e.show(), e.$scope.$on('ds.modal.update', (e, t) => {
                        o && o(t)
                    }), e.$scope.$on('ds.modal.close', () => {
                        i && i()
                    })
                }))
            }, c.getAvailableStates = () => [{
                id: 'AL',
                state: 'Alabama'
            }, {
                id: 'AK',
                state: 'Alaska'
            }, {
                id: 'AZ',
                state: 'Arizona'
            }, {
                id: 'AR',
                state: 'Arkansas'
            }, {
                id: 'CA',
                state: 'California'
            }, {
                id: 'CO',
                state: 'Colorado'
            }, {
                id: 'CT',
                state: 'Connecticut'
            }, {
                id: 'DE',
                state: 'Delaware'
            }, {
                id: 'DC',
                state: 'District Of Columbia'
            }, {
                id: 'FL',
                state: 'Florida'
            }, {
                id: 'GA',
                state: 'Georgia'
            }, {
                id: 'HI',
                state: 'Hawaii'
            }, {
                id: 'ID',
                state: 'Idaho'
            }, {
                id: 'IL',
                state: 'Illinois'
            }, {
                id: 'IN',
                state: 'Indiana'
            }, {
                id: 'IA',
                state: 'Iowa'
            }, {
                id: 'KS',
                state: 'Kansas'
            }, {
                id: 'KY',
                state: 'Kentucky'
            }, {
                id: 'LA',
                state: 'Louisiana'
            }, {
                id: 'ME',
                state: 'Maine'
            }, {
                id: 'MD',
                state: 'Maryland'
            }, {
                id: 'MA',
                state: 'Massachusetts'
            }, {
                id: 'MI',
                state: 'Michigan'
            }, {
                id: 'MN',
                state: 'Minnesota'
            }, {
                id: 'MS',
                state: 'Mississippi'
            }, {
                id: 'MO',
                state: 'Missouri'
            }, {
                id: 'MT',
                state: 'Montana'
            }, {
                id: 'NE',
                state: 'Nebraska'
            }, {
                id: 'NV',
                state: 'Nevada'
            }, {
                id: 'NH',
                state: 'New Hampshire'
            }, {
                id: 'NJ',
                state: 'New Jersey'
            }, {
                id: 'NM',
                state: 'New Mexico'
            }, {
                id: 'NY',
                state: 'New York'
            }, {
                id: 'NC',
                state: 'North Carolina'
            }, {
                id: 'ND',
                state: 'North Dakota'
            }, {
                id: 'OH',
                state: 'Ohio'
            }, {
                id: 'OK',
                state: 'Oklahoma'
            }, {
                id: 'OR',
                state: 'Oregon'
            }, {
                id: 'PA',
                state: 'Pennsylvania'
            }, {
                id: 'RI',
                state: 'Rhode Island'
            }, {
                id: 'SC',
                state: 'South Carolina'
            }, {
                id: 'SD',
                state: 'South Dakota'
            }, {
                id: 'TN',
                state: 'Tennessee'
            }, {
                id: 'TX',
                state: 'Texas'
            }, {
                id: 'UT',
                state: 'Utah'
            }, {
                id: 'VT',
                state: 'Vermont'
            }, {
                id: 'VA',
                state: 'Virginia'
            }, {
                id: 'WA',
                state: 'Washington'
            }, {
                id: 'WV',
                state: 'West Virginia'
            }, {
                id: 'WI',
                state: 'Wisconsin'
            }, {
                id: 'WY',
                state: 'Wyoming'
            }], c.getAvailableCountries = () => [{
                id: 'US',
                country: 'United States'
            }], c.emailExists = (e) => s.all('v2/users/identity').customGET(null, {
                where: {
                    email: e
                }
            }), c.getUserInformation = async() => {
                try {
                    const e = await c.getInformation(),
                        t = {
                            email: e.email,
                            phone: e.phone,
                            paymentMethod: e.paymentMethod
                        };
                    if (e.address && (t.city = e.address.city, t.name = e.address.name, t.address1 = e.address.address1 || e.address.line1, t.address2 = e.address.address2 || e.address.line2, t.region = e.address.region || e.address.state, t.postCode = (e.address.postCode || e.address.postal_code) + ''), e.lastCardId) {
                        const a = _.find(e.cards, {
                            id: e.lastCardId
                        });
                        if (a) {
                            const s = (a.exp_year + '').substr(-2),
                                i = `0${a.exp_month}`.substr(-2);
                            _.assign(t, {
                                ccName: e.address.name.toUpperCase(),
                                ccCard: a,
                                ccNumberAbbr: `•••• ${a.last4}`,
                                ccProvider: a.brand,
                                ccLast4: a.last4,
                                ccExp: `${i}/${s}`,
                                country: a.country,
                                ccZip: e.address.postal_code,
                                saveCard: !0
                            })
                        }
                    }
                    return t
                } catch (t) {
                    throw e.debug(t.data.message), t
                }
            }, c.payment = (e) => i.all('/commerce/paypal/order').post(e).then((e) => e.plain()), c.orderCallback = (e) => i.all('/commerce/paypal/callback').customGET(null, e).then((e) => e.plain()), c.calculatePrice = (e, t) => i.all(`/commerce/calculate/${e}`).post(t).then((e) => e.plain()), c.generateIdempotencyKey = (e) => `${Date.now()+''}${e}`.substr(0, 20), c.saveInformation = (e) => i.all('/commerce/checkout/information').post(e).then((e) => e.plain()), c.getInformation = () => i.all('/commerce/checkout/information').customGET(null).then((e) => e.plain()), c.getLink = () => o.getSocialLinksBySpaceId(t.primarySpace.id).then((e) => _.keyBy(e, 'provider', null)), c.isEnabled = (e) => _.get(e, 'stripe.active') || _.get(e, 'paypal.active'), c.verifyAddress = (e) => {
                const t = _.pick(e, ['address1', 'address2', 'city', 'state']);
                return t.zip5 = e.postal_code, t.zip4 = '', s.all('common/address/verify').post(t).then((e) => e.plain())
            }, c.buy = (e) => {
                if (0 === e.totalPrice) return d(e);
                const t = _.get(e, 'billing.paymentProvider.name', '').toLowerCase();
                return 'paypal' === t ? d(e) : 'stripe' === t ? e.useSavedCard ? d(e) : l.createToken(e).then((t) => (_.set(e, 'billing.paymentProvider.cardToken', t.id), _.set(e, 'billing.paymentProvider.card.id', _.get(t, 'card.id')), d(e))) : a.reject('Invalid order.')
            }, c
        }])
    }(),
    function() {
        angular.module('shop').factory('ConstractsService', ['CommerceRestangular', function(e) {
            return {
                createOrUpdate({
                    itemId: t,
                    offer: a,
                    service: s,
                    guestBuyerId: i,
                    buyerId: o
                }) {
                    const n = {
                        itemId: t,
                        offer: a
                    };
                    return s && (n.service = s), i && (n.guestBuyerId = i), o && (n.buyerId = o), e.one('/commerce/contracts').customPUT(n).then((e) => e.plain())
                }, getByItemIdForLoggedUser(t) {
                    return e.one(`/commerce/contracts/items/${t}`).get().then((e) => e.plain())
                }, getByItemIdForGuestUser(t, a) {
                    return e.one(`/commerce/contracts/items/${t}?guestBuyerId=${a}`).get().then((e) => e.plain())
                }, getByItemId(e, t) {
                    return t ? this.getByItemIdForGuestUser(e, t) : this.getByItemIdForLoggedUser(e)
                }, getOne(t) {
                    return e.one(`/commerce/contracts/${t}`).get().then((e) => e.plain())
                }, patch(t, {
                    op: a,
                    path: s,
                    value: i
                }) {
                    return e.one(`/commerce/contracts/${t}`).patch([{
                        op: a,
                        path: s,
                        value: i
                    }]).then((e) => e.plain())
                }, updateStatus(e, t) {
                    return this.patch(e, {
                        op: 'replace',
                        path: '/status',
                        value: t
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('shop').factory('PaypalService', ['$rootScope', '$q', '_', 'constants', 'CommerceRestangular', 'holospace', function(e, t, a, s, i, o) {
            const n = {};
            return n.connect = () => i.one('/commerce/link/paypal').get().then((e) => e.plain()), n.disconnect = () => o.updateSocialLinksBySpaceId(e.primarySpace.id, 'paypal'), n.getLink = () => o.getSocialLinksBySpaceId(e.primarySpace.id).then((e) => a.find(e, {
                provider: 'paypal'
            }, null)), n.isEnabled = (e) => a.get(e, 'active') && a.get(e, 'profile.primary_email_confirmed'), n.loadScript = () => t((e, t) => {
                if (a.has(window.paypal, 'request') && a.has(window.paypal, 'version')) return e(window.paypal);
                const s = document.getElementsByTagName('script')[0],
                    i = document.createElement('script');
                i.async = !0, i.src = 'https://www.paypalobjects.com/api/checkout.js', i.onload = () => e(window.paypal), i.onerror = t, s.parentNode.insertBefore(i, s)
            }), n.renderButton = (e, t) => {
                const a = 'ds-checkout-paypal-button',
                    i = $(e);
                if (!$(`${e} .${a} iframe`).length) return i.html(`<div class="${a}"></div>`), n.loadScript().then((i) => {
                    i.Button.render({
                        env: s.PAYPAL.ENV,
                        style: {
                            size: 'large',
                            color: 'blue',
                            shape: 'rect',
                            label: 'checkout',
                            tagline: !1
                        },
                        commit: !0,
                        payment: t.payment,
                        onAuthorize: t.onAuthorize,
                        onCancel: t.onCancel
                    }, `${e} .${a}`)
                })
            }, n
        }])
    }(),
    function() {
        angular.module('posts').config(['$stateProvider', function(e) {
            e.state('post', {
                abstract: !0,
                url: '',
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }]
                },
                views: {
                    main: {
                        template: '<ui-view/>'
                    }
                }
            }).state('post.detail', {
                url: '/:space/o/:vanityUrl',
                title: 'Post detail',
                controller: 'PostDetailController',
                templateUrl: 'public/modules/posts/views/detail.view.html'
            }).state('post.create', {
                url: '/create/post',
                title: 'New post',
                controller: 'PostFormController',
                templateUrl: 'public/modules/posts/views/form.view.html',
                resolve: {
                    post: ['userSpaces', 'PostService', function(e, t) {
                        return t.create()
                    }]
                }
            }).state('post.edit', {
                url: '/edit/post/:id',
                params: {
                    edit: !0
                },
                title: 'Edit post',
                controller: 'PostFormController',
                templateUrl: 'public/modules/posts/views/form.view.html',
                resolve: {
                    post: ['userSpaces', 'PostService', '$stateParams', function(e, t, a) {
                        return t.draft(a.id, t.FORMAT.PLAIN)
                    }]
                }
            })
        }])
    }(),
    function() {
        angular.module('core').controller('PostDetailController', ['$log', '$timeout', '_', '$scope', '$q', 'Authentication', '$state', '$sce', 'Content', 'TilesService', 'Meta', 'Prerender', 'moment', 'pixels', '$location', 'PostService', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g, v) {
            v.v1.getDetailsByVanityUrl(n.params.vanityUrl).then((e) => {
                if (!e) return;
                if (s.isVideo = 'video' === a.get(e, 'block[0].embedded.type'), s.post = d.normalizeItem(e), s.hasVideoEmbedded = 'video' === a.get(e, 'block[0].embedded[0].mediaType'), a.has(s.post, 'space.pixels') && u.fire({
                        pixelObject: a.get(s.post, 'space.pixels', {}),
                        eventType: 'ViewContent',
                        params: {
                            content_name: s.post.vanityUrl,
                            pixelLocation: g.absUrl()
                        }
                    }), 0 < s.post.content.embedded.length && s.post.content.embedded[0].embedlyData) {
                    const e = s.post.content.embedded[0];
                    if (e.source && -1 < e.embedlyData.provider_name.search(/facebook|twitter|instagram|youtube/i)) {
                        if (s.isYoutube = 'youtube' === e.embedlyData.provider_name.toLowerCase(), s.isYoutube) {
                            const t = $(e.embedlyData.html)[0],
                                a = t.src + '&autoplay=1';
                            t.src = a;
                            const i = t.outerHTML;
                            s.embedSource = l.trustAsHtml(i)
                        } else s.embedSource = l.trustAsHtml(e.source);
                        s.isVideo = !1
                    } else s.isIframe = 'rich' == e.mediaType || 'video' == e.mediaType, s.isIframe && (s.isVerticalIframe = 'twitter' === e.embedlyData.provider_name.toLowerCase(), s.post.iframeTag = l.trustAsHtml(e.embedlyData.html), s.isVideo = !1)
                } else if ('channel' === a.get(e, 'content.embedded.type')) {
                    const e = s.post.content.embedded;
                    e.block = a.map(e.block2, (e) => ({
                        cover: {
                            url: e.source
                        },
                        body: {
                            description: e.description,
                            story: {
                                type: e.embedType
                            }
                        }
                    })), e.hasGallery = e.block && 0 < e.block.length
                }
                t(() => {
                    const e = $('.ds-post-iframe');
                    if (e && s.post.content && s.post.content.width) {
                        const t = () => {
                            const t = e.width(),
                                a = t / s.post.content.width;
                            e.css({
                                height: s.post.content.height * a
                            })
                        };
                        $(window).off('resize', t).on('resize', t), t()
                    }
                });
                let i = null,
                    o = null,
                    n = a.get(e, 'content.description'),
                    v, h;
                const b = null !== n,
                    f = a.truncate(n, {
                        length: 70
                    }),
                    y = m(e.created).format('dddd, MMMM Do, YYYY [at] h:mm a'),
                    w = a.get(e, 'header.author.name'),
                    k = a.get(e, 'header.author.vanityUrl'),
                    S = a.get(e, 'content.embedded.content.embedded.content.title') || a.get(e, 'content.title') || a.get(e, 'block[0].embedded.content.embedded[0].body.title'),
                    C = a.capitalize(a.get(e, 'content.embedded.provider')),
                    x = a.get(e, 'content.embedded.url') || a.get(e, 'content.source');
                if ('share' === a.get(e, 'content.subType')) {
                    const t = a.get(e, 'content.embedded.content', {});
                    let s;
                    const l = 'youtube' == C.toLowerCase();
                    i = l ? a.get(e, 'content.embedded[0].body.data.url') : a.get(e, 'block[0].embedded.content.embedded[0].embedlyData.url'), 'image' === a.get(t, 'embedded["0"].mediaType') ? s = a.get(t, 'embedded["0"].source') : 'video' === a.get(t, 'embedded.type') && (s = a.get(t, 'embedded.content.cover')), 'deleted' === a.get(e, 'content.embedded.status') ? 'deleted' === a.get(e, 'content.embedded.status') && (o = !0) : (h = b ? f : w + ' shared a link from ' + C + ' | ' + (S || a.get(e, 'url')), n = b ? S + ' shared by ' + w + ' from ' + C + ' on ' + y : x + ' shared by ' + w + ' from ' + C + ' on ' + y), v = {
                        meta: {
                            title: h,
                            description: n
                        },
                        author: a.get(e, 'author.link', w),
                        video: i,
                        tags: t.tags,
                        type: 'post',
                        image: s,
                        coverDimensions: '',
                        url: e.content.url,
                        contentDeleted: o
                    }
                } else {
                    const t = a.get(e, 'content.embedded.width');
                    let s = a.get(e, 'content.embedded[0].cover');
                    const l = a.pick(s, ['width', 'height']);
                    !s && t && (s = {
                        width: a.get(e, 'content.embedded.width'),
                        height: a.get(e, 'content.embedded.height')
                    });
                    const r = a.capitalize(a.get(e, 'content.embedded[0].body.data.provider_name')),
                        c = a.get(e, 'content.embedded[0].body.data.title'),
                        p = a.get(e, 'hasEmbedPost'),
                        m = w + ' published a post on ' + y + '. Check out what they had to say and visit them on Holonis by @' + k + '.',
                        u = 'youtube' == r.toLowerCase();
                    switch (e.metaType) {
                        case d.TYPES.POST:
                            h = b ? f : w + ' shared a link from ' + C + ' | ' + S, n = p ? S + '. Shared by ' + w + ' from ' + C + ' on ' + y : m;
                            break;
                        case d.TYPES.PHOTO:
                            h = b ? f : 'A photo was posted by ' + w + ' | Holonis - A Social Commerce platform.', n = b ? m : w + ' published an image on ' + y + '. Check out this and other photos posted on Holonis by @' + k + '.';
                            break;
                        case d.TYPES.VIDEO:
                            h = b ? f : 'A video was uploaded by ' + w + ' | Holonis - A Social Commerce platform.', n = w + ' uploaded a new video ' + y + '. Watch this and other videos created or shared on Holonis by @' + k + '.', i = e.url;
                            break;
                        case d.TYPES.LINKSHARED:
                            h = b ? f : w + ' shared a link from ' + r + ' | ' + c, n = b ? c + '. Shared by ' + w + ' from ' + r + ' on ' + y : c + ': ' + x + '. Shared by ' + w + ' from ' + r + ' on ' + y, i = u && a.get(e, 'content.embedded[0].body.data.url');
                            break;
                        default:
                    }
                    v = {
                        meta: {
                            title: h,
                            description: n
                        },
                        video: i,
                        tags: e.content.tags,
                        type: 'post',
                        image: a.get(s, 'url', null),
                        author: a.get(e, 'author.link', w),
                        coverDimensions: a.isEmpty(l) ? null : l,
                        url: e.content.url,
                        contentDeleted: o
                    }
                }
                s.isVideo || s.embedSource || ('link' === s.post.content.type ? s.embedPostData = s.post.block[0].embedded[0] : 'share' === s.post.subType ? (s.embedPostData = r.toV1(a.get(e.v2, 'body.story')), s.post.hasEmbedPost = !0) : s.embedPostData = e.content.embedded), setTimeout(() => {
                    const t = a.get(e, 'content.cover'),
                        s = a.get(e, 'content.height'),
                        i = a.get(e, 'content.width');
                    !v.image && t && (v.image = t), !v.coverDimensions && s && i && (v.coverDimensions = {}, v.coverDimensions.height = s, v.coverDimensions.width = i), c.setPageMetaTags(v), dataLayer.push({
                        eventCategory: 'Post View',
                        event: 'What type of post was it?',
                        eventAction: e.typeLabel,
                        eventLabel: e.vanityUrl
                    }), setTimeout(p.ready, 100)
                }, 100)
            }).catch((e) => v.handleError(e))
        }])
    }(),
    function() {
        angular.module('posts').controller('PostFormController', ['$state', '$document', 'post', '$log', '$rootScope', '$scope', 'holospace', '_', '$timeout', 'PostService', 'dsModal', 'notifyService', 'dsForm', 'MetaContentService', 'Content', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g) {
            function v() {
                clearTimeout(o.state.drafting)
            }
            s.debug('Loading Item Form Controller Controller'), o.data = a, o.tracker = i.promiseTracker, u.generate(o.data);
            const h = {
                    content: {
                        custom() {
                            const e = l.get(o, 'params.contents.length', 0),
                                t = l.get(o.data, 'description.length', 0);
                            return e || t
                        }
                    }
                },
                b = m.instance(o, h);
            o.state = {
                title: 'Post',
                edit: e.params.edit
            }, o.params = {
                contentId: o.data.id,
                spaceId: o.data.spaceId,
                template: 'post',
                contents: o.data.published ? g.toV1(a.fullData).content.embedded : o.data.story,
                single: !0,
                bucket: '',
                disableDeleteContent: o.data.published,
                showContentCreator: o.data.story && 0 < o.data.story.length || !o.state.edit,
                vanity: o.data.space && o.data.vanityUrl || i.primarySpace.vanityUrl,
                tracker: o.tracker
            }, o.header = {
                title: 'Post',
                tracker: o.tracker,
                params: {
                    cancel: !1,
                    seo: !1,
                    user: {
                        restrict: ['owner']
                    }
                }
            }, o.header.params[o.state.edit ? 'discard' : 'delete'] = 'Cancel', o.publish = function() {
                if (!b.validate()) return b.showError();
                const t = o.data;
                return v(), d.publish(t.id, t).then((a) => (dataLayer.push({
                    event: 'PublishPost',
                    publish: {
                        description: t.description,
                        name: t.name,
                        spaceId: t.spaceId,
                        id: t.id
                    }
                }), e.go('holospace.home'), p.success('Post created succesfully.'), a)).catch((e) => {
                    p.error(e.data.message || 'An error occurred. Please try again.')
                })
            }, o.discard = function() {
                e.go('holospace.home')
            }, o.delete = function() {
                const t = o.data;
                return v(), d.delete(t.id).then(() => (e.go('holospace.home'), p.success('Post deleted successfully.'))).catch(() => p.error('Couldn\'t delete the post.'))
            }
        }])
    }(),
    function() {
        angular.module('posts').controller('PostTabController', ['$log', '$rootScope', '$scope', 'holospace', 'PageService', 'PagePagination', 'Meta', '_', 'contentCreationService', 'pixels', '$location', function(e, t, a, s, i, o, n, l, r, d, c) {
            e.debug('Loading PostController Controller');
            const p = this,
                m = a.$parent;
            let u = {};
            p.fieldTitle = 'Posts', p.pageContent = {}, p.callToAction = !1, a.$watchCollection('items', (e) => {
                e && (p.callToAction = !e.length)
            });
            const g = a.$parent.vm.space;
            p.spaceId = a.$parent.vm.space.id, p.vanity = g.vanityUrl, p.showAds = l.get(g, 'Ads.posts', !1), p.init = function() {
                p.isMySpace = !1, m.$watch('vm.space', (e) => {
                    e.pixels && d.fire({
                        pixelObject: e.pixels,
                        eventType: 'ViewContent',
                        params: {
                            content_name: e.name,
                            pixelLocation: c.absUrl()
                        }
                    }), u = {
                        meta: {
                            title: (l.get(e, 'meta.title') || e.name) + ' | @' + e.vanityUrl + ' | Posts on Holonis',
                            description: 'Find original content created by ' + e.name + '. See all posts created by @' + e.vanityUrl
                        },
                        tags: l.get(e, 'meta.tags').tags,
                        type: e.type,
                        image: e.headerMediaUrl,
                        url: r.getCurrentUrl(e.vanityUrl) + '/posts'
                    }, n.setPageMetaTags(u)
                }), o.updatePaginationRelLinks(0)
            }, p.init()
        }])
    }(),
    function() {
        angular.module('core').factory('PostModalService', ['$log', '$q', 'Restangular', 'collections', 'Content', 'constants', 'debounce', '_', 'dsModal', 'TilesService', '$state', '$rootScope', function(e, t, a, s, i, o, n, l, r, d) {
            return {
                getDetailsByVanityUrl(e) {
                    return a.one('posts/' + e + '/details/normalized').get({}).then((e) => e.plain())
                }, openModal(e) {
                    this.getDetailsByVanityUrl(e).then((e) => {
                        if (!e) return void console.error('Couldn\'t fetch post data.');
                        const t = 'video' === l.get(e, 'block[0].embedded.type');
                        e = d.normalizeItem(e), r.create({
                            template: 'public/modules/core/templates/modal/post.template.html',
                            controller: 'PostController',
                            title: '',
                            close: !0,
                            scope: {
                                noPadding: !0,
                                noMaxHeight: !0,
                                noHeader: !0,
                                isVideo: t,
                                big: t || !!e.content.cover && !(e.hasEmbedPost || 'link' == e.content.type),
                                data: e
                            }
                        }).then((e) => {
                            e.show()
                        })
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('posts').factory('PostService', ['$rootScope', 'DefaultContentService', '_', 'Restangular', 'Content', function(e, t, a, s, i) {
            const o = new t('posts', {
                plain: function(e) {
                    const t = a.pick(e.body, ['description', 'name', 'story']);
                    return t.spaceId = e.header.space.id, t.id = e.id, t.status = e.status, t.type = e.type, t.header = e.header, t.fullData = e, t.story = t.story ? [t.story] : [], t.published = e.published, t
                }
            });
            return o.share = function(e, t, a, i, o) {
                return s.all('posts/share').post({
                    spaceId: e,
                    objectType: t,
                    objectId: a,
                    description: i,
                    shareTo: o
                }).then((e) => e.plain())
            }, o.v1 = {}, o.v1.getPostByIdNormalized = function() {
                return null
            }, o.v1.getDetailsByVanityUrl = function(e) {
                return o.detail(e).then((e) => i.toV1(e))
            }, o
        }])
    }(),
    function() {
        angular.module('social').config(['$stateProvider', '$urlRouterProvider', function(e) {
            e.state('holospace.social', {
                url: '/social',
                views: {
                    holotab: {
                        controller: 'SocialController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/social/views/social.view.html'
                    }
                }
            })
        }])
    }(),
    function() {
        angular.module('social').controller('SocialController', ['$log', '$scope', '$rootScope', '_', 'collections', 'Posts', function(e, t, a) {
            e.debug('Loading Social Controller');
            const s = this;
            s.parent = t.$parent.vm, s.fieldTitle = 'Social', s.pageContent = {}, s.callToAction = !1;
            const i = a.primarySpace.id;
            s.spaceId = a.primarySpace.id
        }])
    }(),
    function() {
        angular.module('tiles').config(['$stateProvider', '$urlRouterProvider', function() {}])
    }(),
    function() {
        angular.module('tiles').controller('TilesController', ['$log', '$rootScope', '$scope', 'holospace', 'dsModal', function(e, t, a, s) {
            e.debug('Loading TilesController Controller'), a.selectedChannels = [], s.getCurrentUserSpaces().then(() => {
                a.spaceId = t.primarySpace.id
            })
        }])
    }(),
    function() {
        angular.module('tiles').directive('tileGroup', ['$log', '$q', '$timeout', '_', 'holospace', '$stateParams', 'PagePagination', '$rootScope', '$state', 'Content', 'TileCache', 'constants', 'view', 'dfp', 'Analytics', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g) {
            function v() {}
            e.debug('Loading TileGroupDirective Controller');
            const h = {
                itemSelector: '.tile-new',
                layoutMode: 'masonry',
                masonry: {
                    columnWidth: 400,
                    gutter: 10
                },
                transitionDuration: 0
            };
            return {
                replace: !0,
                restrict: 'E',
                scope: {
                    selectable: '@',
                    type: '@',
                    perpage: '=',
                    spaceId: '=',
                    disableInfiniteScroll: '=',
                    selectableData: '=',
                    jsonData: '=',
                    query: '=?',
                    filter: '=?',
                    model: '=?',
                    settings: '=?',
                    status: '=?',
                    statePagination: '=?',
                    isLoading: '=?',
                    ads: '=?',
                    noEngagement: '=?',
                    customInfiniteScroll: '&',
                    container: '=',
                    showVideoInfo: '=',
                    vanity: '=?',
                    prepend: '=?',
                    backgroundFetch: '=?'
                },
                link: function(e, t) {
                    e.$grid = t.find('.tile-group-wrapper'), e.$grid.isotope(h)
                },
                controller: ['$scope', 'TilesService', function(e, i) {
                    function r() {
                        C = !1, x = !1, e.infiniteScrollDisabled = !1, T = e.statePagination && o.page ? o.page : 1, e.data = [], e.loading = !1, e.status = 'start', e.adsCount = 0, e.isPrerender = l.isPrerender, e.pagination = {}
                    }

                    function p() {
                        const {
                            $items: t
                        } = e, a = {};
                        l.state.dsModalOpened || s.map(t, (e) => {
                            if (m.isElementInView(e, {
                                    offset: -200
                                })) {
                                const t = $(e).data('url');
                                t && (a[t] = {
                                    url: t
                                })
                            }
                        }), g.trackImpressions(a)
                    }

                    function u() {
                        if (!s.size(e.data)) {
                            r();
                            const t = b();
                            return e.backgroundFetch.fetchs++, e.backgroundFetch.fetchs >= e.backgroundFetch.limit ? void 0 : t ? t.then(() => a(u, e.backgroundFetch.interval)) : void a(u, e.backgroundFetch.interval)
                        }
                    }

                    function h(t) {
                        return e.data = t, e.model = e.data, w(!1), e.isLoading = !1, a(() => {
                            k(!1), l.$broadcast('holonis_pageLoaded')
                        }, 50), a(() => {
                            S()
                        })
                    }

                    function b() {
                        if (e.loading) return;
                        const a = e.type,
                            o = e.perpage,
                            l = e.vanity;
                        if ('json' === a) return h(i.normalizeItems(e.jsonData));
                        let r = {};
                        r.spaceId = e.spaceId, r.vanity = l, r.skip = s.get(e, 'pagination.skip'), r.page = r.skip ? void 0 : T - 1, r.perpage = o, r.limit = o, r = angular.extend(r, e.query || {}), r = angular.extend(r, e.filter || {}), w(!0);
                        const c = e.ads;
                        return e.serviceLoading = e.serviceLoading.then(() => i.load(a, r, c, e).then((a) => {
                            const l = !!s.find(a.items, {
                                    version: '2.0'
                                }) || !!s.find(a.items, {
                                    type: 'space'
                                }),
                                r = a.pagination || a.settings && a.settings.next;
                            if (e.pagination = r, e.settings = a.settings, x) return t.reject(new Error('Tile group already destroyed'));
                            e.statePagination && s.size(a.items) && n.cursor(T);
                            let c = e.data || [];
                            const p = i.normalizeItems(a.items.map((e) => l ? d.toV1(e) : e));
                            return c = c.concat(p), (0 == p.length || p.length < o || null === s.get(a, 'settings.next')) && y(), h(c), T++, p
                        })), e.serviceLoading
                    }

                    function f() {
                        e.loading || C || x || (v('loading more'), k(!0), b())
                    }

                    function y() {
                        x = !0, e.infiniteScrollDisabled = !0
                    }

                    function w(t) {
                        e.loading = !!t, e.status = !1 === x && !0 === C ? 'loading' : 'ready'
                    }

                    function k(t) {
                        C = !!t, e.loadingMore = C
                    }

                    function S() {
                        const t = e.$grid.find('.tile-new');
                        t.length && (e.$grid.isotope(e.prepend ? 'prepended' : 'appended', t), t.removeClass('tile-new'), e.$items = e.$grid.find('.grid-item'))
                    }
                    let C, x, T;
                    e.$grid = null, e.serviceLoading = t.resolve(), r(),
                        function() {
                            return ['holonis_scroll', 'holonis_resize', 'holonis_pageLoaded', 'holonis_focus'].map((t) => e.$on(t, () => p()))
                        }(), e.$on('$destroy', () => {
                            v('destroyed'), y()
                        }), e.$watch('query', (e, t) => {
                            e !== t && (r(), b())
                        }, !0), e.$watchCollection('jsonData', (e) => e && b()), !0 !== e.disableInfiniteScroll && 'json' !== e.type && function() {
                            e.infiniteScroll = function() {
                                v('infinite scroll triggered'), f()
                            }
                        }(), c.clearWatchers('main'), e.backgroundFetch ? (e.backgroundFetch.fetchs = 0, u()) : f(), e.onSelectableChange = function(t) {
                            if ('single' === e.selectable) e.selectableData = t.selected ? [] : [t], t.selected = !t.selected;
                            else {
                                const a = s.findIndex(e.selectableData, {
                                    id: t.id
                                }); - 1 === a ? e.selectableData.push(t) : e.selectableData.splice(a, 1)
                            }
                        }
                }],
                controllerAs: 'vm',
                templateUrl: 'public/modules/tiles/templates/group.template.html'
            }
        }])
    }(),
    function() {
        angular.module('tiles').directive('tile', ['$log', '$timeout', '$state', '$rootScope', '_', 'Followers', 'jquery', 'dsModal', 'EngagementService', 'TileCache', 'constants', 'dfp', 'view', 'AdRefresher', 'ad', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g) {
            return e.debug('Loading TileDirective Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=',
                    selectable: '=',
                    hideKarot: '=',
                    onSelectableChange: '=',
                    noEngagement: '=',
                    adsCount: '=',
                    hideEngagement: '@?',
                    showVideoInfo: '=',
                    noHeader: '@?',
                    story: '@?'
                },
                controller: ['$scope', function(e) {
                    function t(t) {
                        e.onSelectableChange(t)
                    }
                    e.toggleSelect = function(e, a) {
                        return t(a)
                    }, e.toggleFollow = function(e) {
                        o.toggleFollow(s.primarySpace, e.space)
                    }, e.data.provider || (e.data.provider = 'holonis'), d.set(d.getKey(e.data), e.data), e.isVideo = 'video' === i.get(e.data, 'block[0].type') && 'video' !== i.get(e.data, 'block[0].embedded[0].mediaType'), e.oldVideo = 'media' === i.get(e.data.content, 'embedded[0].type') && 'video' === i.get(e.data.content, 'embedded[0].mediaType'), e.hasLinkShared = ('link' === i.get(e.data, 'content.embedded.content.type') || 'embedly' === i.get(e.data, 'content.embedded.content.type')) && 'share' === e.data.subType, e.hasLinkEmbedded = 'link' === i.get(e.data, 'content.type') || 'holonis' !== i.get(e.data, 'content.embedded[0].provider', 'holonis'), i.get(e.data, 'content') && (e.data.content.style = {
                        "padding-bottom": e.data.content.ratio ? 100 * Math.abs(e.data.content.ratio) + '%' : ''
                    }), e.openContent = function(e, t) {
                        return t.localstack ? (e.preventDefault(), void window.open(t.source)) : t.content.hasModal ? (e.preventDefault(), a.go('post.detail', {
                            space: t.vanityUrl,
                            vanityUrl: t.space.vanityUrl
                        })) : void('post' === t.type && 'link' === t.content.type && (e.preventDefault(), window.open(t.url)))
                    };
                    const n = i.get(e, 'data.content'),
                        c = i.get(n, 'embedded.content') || i.get(n, 'embedded[0].embedlyData'),
                        p = i.get(e.data, 'type');
                    e.isContent = e.data && i.includes(['post', 'page', 'product', 'channel', 'video'], e.data.type), e.isShare = 'share' === i.get(e, 'data.content.subType'), e.isSingleShare = e.isShare && 'dynamic' !== i.get(e, 'data.shareType'), e.originalContentIsDeleted = 'deleted' === i.get(n, 'embedded.status'), e.hasEmbed = !e.originalContentIsDeleted && c, e.showEngagementBar = !e.hideEngagement && !e.showVideoInfo && !e.originalContentIsDeleted, e.state = {
                        isOffer: 'offer' === i.get(e.data, 'item.pricingModel'),
                        isProductOrService: 'service' === p || 'product' === p
                    }, e.openShares = function(e) {
                        l.create({
                            template: 'public/modules/core/templates/modal/share.who-shared.template.html',
                            controller: 'SharesWhoSharedController',
                            title: 'People who shared this',
                            close: !0,
                            position: 'auto',
                            scope: {
                                id: e.header.sharedId,
                                type: e.header.sharedType,
                                spaceId: i.get(s, 'primarySpace.id', null),
                                contentSpace: i.get(e, 'v2.body.story.header.space', {}),
                                mainData: i.get(e, 'v2.body.story')
                            }
                        }).then((e) => {
                            e.show()
                        })
                    }, e.openPost = function(e, t) {
                        if (r.openPost(e), 'post' === e.type || 'video' === e.type && 'holonis' === e.provider) return t && (t.preventDefault(), t.stopPropagation()), !1
                    }
                }],
                link: function(e, a) {
                    e.Math = window.Math;
                    let o;
                    return e.$on('$destroy', () => {
                        const e = a.closest('.tile-group-wrapper');
                        e.data('isotope') && e.isotope('remove', a[0]).isotope('layout'), o && (o.destroy(), o = null)
                    }), e.selectable && e.$parent.$watchCollection('selectableData', function(t) {
                        t && (e.data.selected = i.some(t, {
                            id: e.data.id
                        }))
                    }), 'ads' === e.data.type ? void
                    function() {
                        if (i.includes(['activities', 'posts', 'pages', 'channels', 'feeds', 'search'], e.data.contentType)) {
                            const t = c.ADS.DETAIL[e.data.contentType],
                                n = e.data.index + 1;
                            e.adsSlotName = t.slotName.replace('%NUM%', n);
                            const l = {
                                slotName: e.adsSlotName,
                                adUnitPath: t.adUnitPath,
                                adSize: t.size,
                                targeting: function(t) {
                                    const a = {},
                                        o = i.get(s, 'state.main');
                                    return 'feeds' !== e.data.contentType && o && (i.size(o.badges) && (a.badge_category = i.first(o.badges).title), i.size(o.links) && (a.linked_account = i.map(o.links, 'name')), a.space_id = o.id, i.get(o, 'meta.category') && (a.space_category = o.meta.category.name), a.space_views_min = p.createRangeText(o.views, c.DFP.RANGES.VIEWS)), a.ad_slot = t, a
                                }(n)
                            };
                            o = new u({
                                displayEvents: ['holonis_scroll', 'holonis_resize', 'holonis_pageLoaded'],
                                adInfo: l,
                                $scope: e,
                                element: a,
                                dfp: p,
                                bidderTimeout: c.ADS.PREBID.TIMEOUT,
                                adService: g,
                                bids: c.ADS.PREBID.bids,
                                view: m,
                                pixelsBeforeDisplay: c.ADS.PIXELS_BEFORE_DISPLAY,
                                fullyVisible: c.ADS.FULLY_VISIBLE_TO_DISPLAY
                            })
                        }
                    }(): void('space' === e.data.type && s && s.primarySpace && e && e.data && e.data.space && (s.primarySpace.id === e.data.space.id ? e.data.isMySpace = !0 : e.data.isMySpace = !1), e.data.hasGallery && t(() => {
                        const t = a.find('.channel-pages-gallery'),
                            s = a.find('.swiper-pagination');
                        e.swiper = new Swiper(t, {
                            slidesPerView: 'auto',
                            pagination: {
                                el: s,
                                type: 'bullets',
                                clickable: !0
                            }
                        })
                    }))
                },
                templateUrl: 'public/modules/tiles/templates/tile.template.html'
            }
        }])
    }(),
    function() {
        angular.module('tiles').directive('tileUnclaimed', ['$log', function(e) {
            return e.debug('Loading TileUnclaimedDirective Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '='
                },
                controller: ['$scope', function() {}],
                templateUrl: 'public/modules/tiles/templates/tile.unclaimed.template.html'
            }
        }])
    }(),
    function() {
        function e(e, t) {
            return {
                type: 'ads',
                index: e,
                contentType: t
            }
        }

        function t(t, a) {
            if (!t) return [];
            const s = t.tiles;
            if (!s || !s.length) return s || [];
            let o = a.adsCount || 0,
                n = a.totalTiles || 0;
            const l = [];
            for (let r = 0; r < s.length; r++) {
                const i = t.start + t.interval * o;
                n === i && l.push(new e(o++, a.type)), 'deleted' !== s[r].status && n++, l.push(s[r])
            }
            return a.adsCount = o, a.totalTiles = n, l
        }
        const a = ['page', 'channel'],
            s = ['page', 'channel', 'product', 'service'];
        angular.module('tiles').factory('TilesService', ['$log', '_', 'TilesTypeActivityService', 'TilesTypeChannelService', 'TilesTypeFeedService', 'TilesTypeItemService', 'TilesTypePageService', 'TilesTypeSearchService', 'TilesTypeLikeService', 'TilesTypeSaveService', 'TilesTypePostService', 'TilesTypeVideoService', 'TilesTypeDraftService', 'constants', function(e, i, o, n, l, r, d, c, p, m, u, g, v, h) {
            function b(e) {
                if ('ads' === e.type || 'deleted' === e.status) return e;
                let t = 'p';
                switch (e.type) {
                    case 'product':
                        t = 'i';
                        break;
                    case 'service':
                        t = 'i';
                        break;
                    case 'post':
                        t = 'o';
                        break;
                    case 'channel':
                        t = 'c';
                        break;
                    case 'space':
                        t = null;
                }
                if (e.descriptionOnTop = 'holonis' !== e.provider || 'post' === e.type, e.content || (e.content = e.content || {}), e.hasEmbed = e.content.embedded && 0 < e.content.embedded.length, e.typeLabel = i.get(e, 'v2.body.item.videoDelivery.enabled') ? 'Video Service' : i.capitalize(e.type), e.metaType = e.type, 'post' == e.type)
                    if (e.hasMentions = !0, e.content.embedded instanceof Array || !e.content.embedded) {
                        e.hasEmbedPost = !1;
                        const t = e.block && e.block.length && e.block[0] && e.block[0].embedded ? e.block[0].embedded[0] : e.content.embedded || null;
                        t && ('media' == t.type && 'image' === t.mediaType ? (e.typeLabel = 'Photo uploaded', e.metaType = f.TYPES.PHOTO) : 'embedly' == t.type && (e.typeLabel = 'Link shared', e.metaType = f.TYPES.LINKSHARED))
                    } else e.hasEmbedPost = !0, e.content.subType && 'share' === e.content.subType ? e.typeLabel = '@' + e.space.vanityUrl + ' shared this ' + e.content.embedded.type : e.block && e.block[0].embedded && 'video' === e.block[0].embedded.type && (e.metaType = f.TYPES.VIDEO, e.typeLabel = 'Video uploaded');
                if (-1 === a.indexOf(e.type) && e.block) {
                    const t = e.content.embedded;
                    e.content = angular.extend(e.content, (0 < e.block.length ? i.find(e.block, {
                        status: 'published'
                    }) || e.block.shift() : {}) || {}), e.content.embedded || (e.content.embedded = t || []), 'video' !== e.content.type && e.content.source ? (e.content.thumb = e.content.source, e.content.cover = e.content.source) : !e.content.cover && (e.content.thumb ? e.content.cover = e.content.thumb : e.content.source && (e.content.cover = e.content.source))
                }
                return e.content.hasModal = -1 === s.indexOf(e.type), e.hasExtraContent = e.content.cover || e.hasGallery || e.hasEmbed, 'channel' === e.type && (e.hasGallery = e.block && 0 < e.block.length), 'facebook' === e.provider && (e.header.linkProfile = e.header.author.url, e.header.story && (e.header.storyHtml = e.header.story, i.forEach(e.header.storyTags, (t) => {
                    e.header.fbProfile = 'https://www.facebook.com/' + t.id, e.header.storyHtml = e.header.storyHtml.replace(new RegExp('(' + t.name + ')', 'i'), '<a href=\'' + e.header.fbProfile + '\' target=\'_blank\'>$1<a/>')
                }))), 'twitter' === e.provider && (e.header.linkProfile = e.header.author.url), 'instagram' === e.provider && (e.header.linkProfile = e.header.author.url), 'holonis' === e.provider && (e.header.linkProfile = window.location.protocol + '//' + window.location.host + '/' + e.header.author.vanityUrl), e.hasEmbed && (e.content.type = e.content.embedded[0].mediaType, 'image' === e.content.type ? e.content.cover = e.content.embedded[0].source : 'photo' === e.content.type ? e.content.cover = e.content.embedded[0].embedlyData.url : 'video' === e.content.type ? (e.content.cover = e.content.embedded[0].thumb || e.content.embedded[0].thumbnail, e.content.isVideo = !0) : e.content.cover = e.content.embedded[0].thumbnail, e.content.source = e.content.embedded[0].source, e.embed = {
                    caption: e.content.embedded[0].caption || e.content.embedded[0].title || '',
                    content: e.content.embedded[0].content || '',
                    description: e.content.embedded[0].description || ''
                }, 'link' == e.content.type && (e.content.hasModal = !1, e.content.embedded[0].embedlyData && 'Facebook' === e.content.embedded[0].embedlyData.provider_name && (e.content.hasModal = !0, e.content.facebookModal = !0)), 'rich' === e.content.type && e.content.embedded[0].embedlyData && e.content.embedded[0].embedlyData.provider_name && 'Facebook' === e.content.embedded[0].embedlyData.provider_name && (e.content.facebookModal = !0)), e.content.subtitle = e.descriptionOnTop ? e.content.message == e.content.description ? null : e.content.message : e.content.description, e.content.ratio = e.content.ratio || e.space && e.space.thumbRatio || 0.6, e.hasEmbedPost && (e.content.title = i.get(e, 'content.embedded.content.title'), e.content.cover = i.get(e, 'content.embedded.content.cover'), e.content.subtitle = i.get(e, 'content.embedded.content.description'), e.content.ratio = i.get(e, 'content.embedded.content.ratio'), e.content.hasModal = !1, e.content.price = i.get(e, 'content.embedded.block[0].price')), e.url || (t ? e.url = [window.location.origin, (e.space || e.header.space).vanityUrl, t, e.vanityUrl].join('/') : e.url = [window.location.origin, (e.space || e.header.space).vanityUrl].join('/')), 'draft' === e.status && (e.vanityUrl = [e.space.vanityUrl, t + 'd', e.id].join('/'), e.url = [window.location.origin, e.vanityUrl].join('/')), e
            }
            const f = {};
            f.TYPES = {}, f.TYPES.POST = 'post', f.TYPES.PHOTO = 'photo', f.TYPES.VIDEO = 'video', f.TYPES.LINKSHARED = 'linkshare';
            const y = {
                activities: o,
                channels: n,
                feeds: l,
                items: r,
                pages: d,
                search: c,
                likes: p,
                saves: m,
                posts: u,
                videos: g,
                drafts: v
            };
            return f.isShare = function(e) {
                return 'share' === i.get(e, 'v2.type')
            }, f.isDynamicShare = function(e) {
                return f.isShare(e) && 'dynamic' === e.shareType
            }, f.isSingleShare = function(e) {
                return f.isShare(e) && 'dynamic' !== e.shareType
            }, f.load = function(e, a, s, o) {
                return y[e].load(a).then((e) => e ? (e.settings && (s = i.get(e, 'settings.Ads.main', !1)), s ? {
                    items: t({
                        tiles: e.items,
                        interval: h.ADS.SCROLL_INTERVAL,
                        start: h.ADS.SCROLL_START
                    }, o),
                    pagination: e.pagination,
                    settings: e.settings
                } : e) : {})
            }, f.normalizeItems = function(e) {
                return e ? e instanceof Array ? e.map(b) : [e] : []
            }, f.normalizeItem = function(e) {
                return b(e)
            }, f
        }])
    }(),
    function() {
        angular.module('inventory').controller('TransactionsInventoryController', ['$scope', '$log', 'InventoryService', 'notifyService', '$timeout', function(e, t, a, s, i) {
            t.debug('Loading Item Detail Controller Controller'), e.loading = !0, a.getItems().then((t) => {
                e.items = t.items, e.next = t.settings.next, e.loading = !1
            }).catch(() => {
                s.error('Couldn\'t fetch any items.'), e.loading = !1
            }), e.state = {}, e.search = {
                params: {
                    combo: !0,
                    icon: 'glass',
                    key: 'name'
                }
            }, e.filters = [{
                name: 'All items',
                value: ''
            }, {
                name: 'Products',
                value: 'product'
            }, {
                name: 'Services',
                value: 'service'
            }], e.state.type = e.filters[0].value, e.query = function() {
                e.state.loading = !0, e.timeout && i.cancel(e.timeout), e.timeout = i(() => {
                    e.loadMore(!0)
                }, 300)
            }, e.type = function() {
                e.state.loading = !0, e.loadMore(!0)
            }, e.loadMore = function(t) {
                if (e.next = t ? {} : e.next, !e.state.loadingMore && e.next) return e.timeout && (e.timeout = i.cancel(e.timeout)), e.state.loadingMore = !0, a.getItems(e.next.page, e.next.limit, e.state.query, e.state.type).then((a) => {
                    e.state.loading = !1, e.state.loadingMore = !1, e.next = a.settings.next, e.items = t ? a.items : e.items.concat(a.items)
                }).catch((t) => {
                    console.error(t), e.state.loading = !1, e.state.loadingMore = !1
                })
            }
        }])
    }(),
    function() {
        angular.module('users').config(['$httpProvider', function(e) {
            e.interceptors.push(['$q', '$location', '$rootScope', '$injector', '_', function(e) {
                return {
                    responseError(t) {
                        return e.reject(t)
                    }
                }
            }])
        }])
    }(),
    function() {
        angular.module('users').config(['$stateProvider', function(e) {
            e.state('authentication', {
                url: '/auth/:ttl/:created/:userId/:id/:provider?source',
                views: {
                    main: {
                        controller: 'AuthenticationController',
                        controllerAs: 'vm'
                    }
                }
            }).state('logout', {
                url: '/logout',
                views: {
                    main: {
                        controller: ['users', function(e) {
                            e.logout()
                        }]
                    }
                }
            }).state('holospace', {
                abstract: !0,
                url: '/:holospaceName',
                title: 'Holospace',
                params: {
                    post: null
                },
                views: {
                    main: {
                        controller: 'HolospaceController',
                        controllerAs: 'vm',
                        templateUrl: 'public/modules/holospace/views/holospace.view.html'
                    }
                },
                resolve: {
                    userSpaces: ['holospace', function(e) {
                        return e.getCurrentUserSpaces()
                    }],
                    currentSpaceDetail: ['$stateParams', 'holospace', '$state', '$q', '_', 'notifyService', function(e, t, a, s, i, o) {
                        return t.getSpaceDetails(e.holospaceName).catch((e) => 404 === i.get(e, 'status') ? void a.go('404', void 0, {
                            location: 'replace'
                        }) : (o.error('Error loading holospace.'), i.get(a, 'current.name') || a.go('homescreen'), s.reject(e)))
                    }]
                },
                onEnter: ['$log', '$stateParams', '$state', 'dynamicRouteProvider', function(e, t, a, s) {
                    const i = s.excludedRouteRedirect(t.holospaceName);
                    i && (e.info('redirecting to state -> ', i), a.go(i))
                }]
            })
        }])
    }(),
    function() {
        angular.module('users').controller('AuthenticationController', ['$rootScope', '$location', '$log', '$state', '$stateParams', '$window', 'Authentication', 'FacebookService', 'GoogleService', 'holospace', 'users', '_', 'localStorageService', '$q', 'constants', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u) {
            a.debug('Loading Authentication Controller');
            const g = this,
                v = {};
            v.identity = null, v.init = function() {
                if (n.currentUser()) return o.location.href = o.location.origin, !1;
                if (n.clearLocalStorage(), v.identity = null, p.isEmpty(i)) return s.go('homescreen');
                g.authAccessToken = i.id, g.authUserId = i.userId, i.ttl && i.created && i.userId && i.id && i.provider && n.setUserAuth(i.ttl, i.created, i.userId, i.id, i.provider);
                const e = v[i.provider ? i.provider : null];
                e ? e.sign() : v.error()
            }, v.goToCreateHolospace = function() {
                return s.go('onboarding.new')
            }, v.success = function() {
                return n.saveToAuthAfterHolospaceCreation(i.ttl, i.created, i.userId, i.id, i.provider), c.getSpaceByUserId(g.authUserId).then((e) => {
                    if (!e.length) return dataLayer.push({
                        eventCategory: 'Sign Up',
                        event: 'Sign Up',
                        eventAction: i.provider,
                        eventLabel: 'Sign Up'
                    }), v.goToCreateHolospace();
                    if ('signup' === i.source) {
                        const t = p.first(e);
                        if (dataLayer.push({
                                eventCategory: 'Sign Up',
                                event: 'Sign Up',
                                eventAction: 'Email',
                                eventLabel: 'Sign Up'
                            }), window.branch.setIdentity(t.id, (e) => {
                                e || window.branch.logEvent('COMPLETE_REGISTRATION', {
                                    description: 'User created an account'
                                })
                            }), sessionStorage.getItem('redirectToUrlAfterLogin')) {
                            const e = JSON.parse(sessionStorage.getItem('redirectToUrlAfterLogin')).url;
                            return sessionStorage.removeItem('redirectToUrlAfterLogin'), s.go('onboarding.preferences', {
                                skipCategories: !0,
                                redirectToUrl: e
                            })
                        }
                        return s.go('onboarding.preferences', {
                            skipCategories: !0
                        })
                    }
                    n.setUserAuth(i.ttl, i.created, i.userId, i.id, i.provider);
                    const t = m.get('redirectState'),
                        a = m.get('redirectParams');
                    t && !p.includes(['firstHolospace', 'onboarding.new'], t) ? s.go(t, a && JSON.parse(a)) : s.go('holospace.home'), m.remove('redirectState'), m.remove('redirectParams')
                })
            }, v.error = function(e) {
                console.error(e), n.clearLocalStorage(), s.go('homescreen')
            }, v.common = {}, v.common.getUserIdentity = function(e) {
                return c.getIdentities(g.authUserId).then((t) => p.find(t, {
                    provider: e
                }) || null)
            }, v.mail = {}, v.mail.sign = function() {
                return n.setUserAuth(i.ttl, i.created, i.userId, i.id, i.provider), v.success()
            }, v.google = {}, v.google.sign = function() {
                return v.common.getUserIdentity('google-login').then(v.google.setIdentity).then(v.google.getStatus).then(v.google.getUserData).then(v.success).catch(v.error)
            }, v.google.setIdentity = function(e) {
                return e ? void(v.identity = e, g.accessToken = e.credentials.accessToken) : u.reject('Identity not found!')
            }, v.google.getStatus = function() {
                return v.google.user = {}, r.login().then((e) => e ? e : u.reject('User not authenticated!'))
            }, v.google.getUserData = function() {
                return r.getUserData().then((e) => {
                    const t = {
                        provider: 'google',
                        displayName: e.getName(),
                        uid: e.getId(),
                        email: e.getEmail(),
                        picture: e.getImageUrl(),
                        link: {
                            name: 'google',
                            link: ''
                        }
                    };
                    return m.set('socialuserdata', t), t
                })
            }, v.facebook = {}, v.facebook.user = {}, v.facebook.permissions = ['email', 'manage_pages', 'public_profile', 'pages_show_list', 'user_friends', 'user_age_range', 'publish_pages', 'read_insights'], v.facebook.sign = function() {
                return v.common.getUserIdentity('facebook-login').then(v.facebook.setIdentity).then(v.facebook.getStatus).then(v.facebook.getPermissions).then(v.facebook.getUserData).then(v.success).catch(v.error)
            }, v.facebook.setIdentity = function(e) {
                return e ? void(v.identity = e, g.accessToken = e.credentials.accessToken) : u.reject('Identity not found!')
            }, v.facebook.getStatus = function() {
                return v.facebook.user = {}, l.getLoggedInStatus().then((e) => 'connected' === e.status ? (n.setFacebookAuth(e.authResponse), e.authResponse.userID) : u.reject('User not authenticated!'))
            }, v.facebook.getPermissions = function(e) {
                return l.getPermissions(e).then((e) => {
                    const t = p.differenceWith(v.facebook.permissions, e.data, (e, t) => e === t.permission && 'granted' === t.status);
                    return t
                })
            }, v.facebook.getUserData = function(e) {
                return l.getUserPages(g.accessToken).then((t) => {
                    const a = {
                        provider: 'facebook',
                        neededPermission: e,
                        displayName: [t.first_name, t.last_name].join(' '),
                        uid: t.id,
                        email: t.email,
                        picture: 'https://graph.facebook.com/' + t.id + '/picture?type=large&width=720&height=720',
                        cover: t.cover ? t.cover.source : void 0,
                        link: {
                            name: 'Facebook',
                            ghostBefore: 'https://www.facebook.com/',
                            ghostAfter: '',
                            link: 'app_scoped_user_id/' + t.id
                        },
                        accounts: t.accounts ? p.each(t.accounts.data || [], (e) => {
                            e.cover && (e.cover = e.cover.source)
                        }) : [],
                        locations: []
                    };
                    if (t.location && t.location.name) {
                        const e = t.location.name.split(',');
                        a.locations.push({
                            state: e[0],
                            city: e[1]
                        })
                    }
                    return m.set('socialuserdata', a), a
                })
            }, v.init()
        }])
    }(),
    function() {
        angular.module('users').controller('directoryController', ['$scope', function() {}])
    }(),
    function() {
        angular.module('users').controller('errorController', ['$scope', 'Meta', function(e, t) {
            function a() {
                $('.loader').delay(400).fadeOut(), $('.animationload').delay(400).fadeOut('fast')
            }
            t.set('prerender-status-code', '404'), 'complete' === document.readyState ? a() : $(window).on('load', a)
        }])
    }(),
    function() {
        angular.module('users').controller('PasswordController', ['$scope', '$stateParams', '$state', '$timeout', '$location', 'Authentication', 'ResetPassword', 'notifyService', 'localStorageService', 'dsForm', function(e, t, a, s, i, o, n, l, r, d) {
            e.state = {}, e.data = e.data || {}, r.set('id', t.access_token), e.$watch('data.password', () => {
                e.data && (e.hasNumber = /\d+/g.test(e.data.password), e.hasSpecialChar = /^[a-zA-Z0-9- ]*$/.test(e.data.password))
            });
            const c = {
                    password: {
                        required: !0,
                        custom() {
                            return 4 === e.state.passwordLevel
                        }
                    },
                    confirm: {
                        required: !0,
                        custom() {
                            return e.inputs.confirm.iconValidator.valid
                        }
                    }
                },
                p = d.instance(e, c);
            e.inputs = {
                confirm: new function(e) {
                    return _.assign({
                        iconValidator: {
                            className: 'check'
                        }
                    }, e)
                }({
                    errorMessage: 'Passwords do not match'
                }),
                password: {
                    errorMessage: 'Your password must match the requirements'
                }
            }, e.matchPasswords = function() {
                s(() => {
                    const t = isNaN(e.data.password) && !!e.data.password && e.data.password === e.data.confirm && 4 === e.state.passwordLevel;
                    e.inputs.confirm.iconValidator.valid = t
                })
            }, e.resetPassword = function() {
                return p.validate() ? (e.state.loading = !0, n.resetPassword(e.data.password, e.data.confirm).then(() => {
                    l.success('Password updated'), a.go('homescreen')
                }).catch(() => {
                    l.error('An error occurred')
                })) : (s(() => {
                    p.showError()
                }), !1)
            }
        }])
    }(),
    function() {
        angular.module('users').factory('authInterceptorService', ['$rootScope', '$q', 'notifyService', function(e, t, a) {
            return {
                request: function(t) {
                    t.headers = t.headers || {};
                    const a = e.Authentication.accessToken();
                    a && (t.headers.Authorization = a);
                    const s = e.Authentication.spaceAccessToken();
                    return s && !t.headers['X-Space-Token'] && (t.headers['X-Space-Token'] = s.id), t
                },
                responseError(s) {
                    return 403 === s.status && (a.error('The current user is not allowed to view this page.'), e.$state.go('homescreen')), t.reject(s)
                }
            }
        }])
    }(),
    function() {
        angular.module('users').factory('authTokenService', ['$window', function(e) {
            const t = e.localStorage,
                a = 'id';
            return {
                getToken: function() {
                    return t.getItem(a)
                },
                setToken: function(e) {
                    e ? t.setItem(a, e) : t.removeItem(a)
                }
            }
        }])
    }(),
    function() {
        angular.module('users').factory('Authentication', ['$window', '$rootScope', '$q', 'localStorageService', 'OnboardingService', 'FacebookService', 'GoogleService', function(e, t, a, s, i, o, n) {
            function l() {
                const e = s.get('dataholospacecreation');
                return e ? e.id : null
            }

            function r(e, t, a, i, o) {
                s.set('ttl', e), s.set('created', t), s.set('userId', a), s.set('id', i), s.set('provider', o), s.remove('socialuserdata'), s.remove('dataholospacecreation')
            }

            function d() {
                s.remove('userId'), s.remove('provider'), s.remove('created'), s.remove('ttl'), s.remove('id'), s.remove('spaceToken'), s.remove('fbExpiresIn'), s.remove('fbAccessToken'), s.remove('fbid'), s.remove('socialuserdata'), s.remove('dataholospacecreation'), s.remove('contentCreation')
            }
            return {
                currentUser: function() {
                    return s.get('userId')
                },
                clearLocalStorage: d,
                accessToken: function() {
                    return s.get('id') || l()
                },
                spaceAccessToken: function() {
                    return s.get('spaceToken')
                },
                setSpaceAccessToken: function(e) {
                    return s.set('spaceToken', e)
                },
                isLoggedOut: function() {
                    return !s.get('id') || !s.get('userId')
                },
                setFacebookAuth: function(e) {
                    s.set('fbExpiresIn', e.expiresIn), s.set('fbAccessToken', e.accessToken), s.set('fbid', e.userID)
                },
                setUserAuth: r,
                fbAccessToken: function() {
                    return s.get('fbAccessToken')
                },
                saveRedirectState: function() {
                    s.set('redirectState', t.$state.current.name), s.set('redirectParams', JSON.stringify(t.$stateParams))
                },
                showLoginPrompt: function() {
                    clearTimeout(t.signupLeadTimeout), t.closeAllDsModal && t.closeAllDsModal(), i.showLogin()
                },
                showSignupPrompt: function() {
                    clearTimeout(t.signupLeadTimeout), t.closeAllDsModal && t.closeAllDsModal(), i.showLogin()
                },
                isFbAccessTokenRejection: function(e) {
                    return !!(e.data && e.data.error && 190 === e.data.error.code)
                },
                softLogout: function() {
                    d(), t.userSpaces = [], t.primarySpace = void 0
                },
                logoutAuthProviders: function() {
                    return a.all([o.logout().catch((e) => {
                        console.error('Error signing out from Facebook', e)
                    }), n.logout().catch((e) => {
                        console.error('Error signing out from Google Plus', e)
                    })])
                },
                saveToAuthAfterHolospaceCreation: function(e, t, a, i, o) {
                    s.set('dataholospacecreation', {
                        ttl: e,
                        created: t,
                        userId: a,
                        id: i,
                        provider: o
                    })
                },
                setUserAuthAfterHolospaceCreation: function() {
                    const e = s.get('dataholospacecreation');
                    return !!e && (r(e.ttl, e.created, e.userId, e.id, e.provider), !0)
                },
                getUserIdFromHolospaceCreation: function() {
                    const e = s.get('dataholospacecreation');
                    return e ? e.userId : null
                },
                getProvider: function() {
                    return s.get('provider')
                }
            }
        }])
    }(),
    function() {
        angular.module('users').factory('users', ['$timeout', '$rootScope', '$state', '$q', 'Restangular', 'Authentication', 'collections', function(e, t, a, s, i, o, n) {
            return {
                async logout() {
                    const e = o.accessToken();
                    o.clearLocalStorage(), window.location.href = '/';
                    try {
                        e && (await i.one('users/logout?access_token=' + e).post()), await o.logoutAuthProviders()
                    } catch (e) {
                        console.error('Error signing out', e)
                    }
                }, getSpaceByUserId(e) {
                    const t = o.accessToken();
                    return i.one('users', e).one('spaces?access_token=' + t).get().then((e) => n.collectify(e.plain()))
                }, getIdentities(e) {
                    return t.userIdentities ? s((e) => {
                        e(t.userIdentities)
                    }) : i.one('users', e).one('identities').get().then((e) => (t.userIdentities = n.collectify(e.plain()), t.userIdentities))
                }, finishTutorial(e) {
                    return i.one('v2/users/tutorials', e).customPUT().then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('video-input').directive('videoInputPicker', ['dsVideoUploaderUtils', function(e) {
            return {
                replace: !0,
                restrict: 'E',
                scope: {
                    bus: '='
                },
                controller: ['$scope', '$sce', function(t) {
                    function a() {
                        _.get(t.bus, 'onFileSelected') && t.bus.onFileSelected()
                    }
                    t.$on('$destroy', () => {
                        a()
                    }), t.bus.onFileSelected = t.bus.$on('file-selected', (a, s) => {
                        (async() => {
                            t.bus.file = await e.loadVideoData(s), t.bus.$emit('file-parsed', t.bus.file)
                        })()
                    })
                }],
                link: function(e, t) {
                    t.bind('change', (t) => {
                        if (t.target.files && t.target.files[0]) {
                            const a = t.target.files[0];
                            e.bus.$emit('file-selected', a), t.target.value = null
                        }
                    })
                },
                templateUrl: 'public/modules/video-input/templates/video-input-picker.template.html'
            }
        }])
    }(),
    function() {
        angular.module('video-input').directive('videoInputPlayer', ['$q', '$rootScope', '$log', '_', 'Videos', 'constants', function(e, t, a, s, i, o) {
            return a.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                require: 'dsEmbed',
                scope: {
                    bus: '=?',
                    video: '=?'
                },
                controller: ['$scope', '$document', function(a) {
                    function n() {
                        a.state = {
                            thumbUploadStatus: 'started',
                            videoUploadStatus: 'started',
                            isUploading: !0,
                            isPlaying: !1,
                            video: null,
                            thumb: null,
                            error: null
                        }
                    }

                    function l() {
                        s.get(a.bus, 'onFileParsed') && a.bus.onFileParsed()
                    }

                    function r(e, t) {
                        a.bus.$emit('upload-progress', {
                            progress: e,
                            skipAnimation: t
                        }), a.progressCallback(e, t)
                    }
                    async function d(t) {
                        try {
                            await c(t), await e.all([p(t), m(t)]), a.state.isUploading = !1, a.bus.$emit('upload-finished', t)
                        } catch (t) {
                            a.bus.$emit('error', t), a.state.error = t
                        }
                    }
                    async function c(e) {
                        if (a.state.video) return a.state.video;
                        const t = e.input.name,
                            s = await i.createInstance({
                                title: t
                            });
                        return e.model = s, a.state.video = s, s
                    }
                    async function p(e) {
                        if ('finished' !== a.state.thumbUploadStatus) {
                            const t = await i.uploadThumb(e),
                                s = await i.publishVideo(a.state.video.id, {
                                    thumb: t.url
                                });
                            a.state.thumbUploadStatus = 'finished', a.state.thumb = t, a.state.video = s
                        }
                    }
                    async function m(e) {
                        if ('finished' !== a.state.videoUploadStatus) {
                            const t = await i.uploadVideo(e, a.bus, (e) => r(0.9 * e));
                            r(100), a.state.videoUploadStatus = 'finished', a.state.video = t
                        }
                    }
                    a.$on('$destroy', () => {
                        l()
                    }), n(), a.video && (a.state.thumbUploadStatus = 'finished', a.state.videoUploadStatus = 'finished', a.state.video = function(e) {
                        const t = s.get(e, 'body.ooId', e.ooId);
                        return {
                            id: e.id,
                            ooId: t
                        }
                    }(a.video), a.state.thumb = a.video.cover, a.state.isUploading = !1), a.bus && (l(), a.bus.onFileParsed = a.bus.$on('file-parsed', (e, s) => {
                        const i = t.primarySpace,
                            l = s.info.duration;
                        return i.isVerified && l > o.VIDEO.DURATION.MAX_DURATION_VERIFIED_USER ? void a.bus.$emit('error', new Error('You can only upload videos up to 15 minutes.')) : !i.isVerified && l > o.VIDEO.DURATION.MAX_DURATION_NORMAL_USER ? void a.bus.$emit('error', new Error('You can only upload videos up to 3 minutes.')) : void(n(), a.file = s, a.state.thumb = {
                            url: s.info.thumb
                        }, a.bus.$emit('upload-started'), r(0, !0), d(s))
                    })), a.shouldShowPlayer = () => !a.state.isUploading && a.state.isPlaying, a.playIconClickHandler = () => {
                        a.state.error ? (a.state.error = null, d(a.file)) : a.state.isPlaying = !0
                    }
                }],
                templateUrl: 'public/modules/video-input/templates/video-input-player.template.html'
            }
        }])
    }(),
    function() {
        angular.module('videos').controller('VideosController', ['$rootScope', '$scope', '$log', 'Videos', 'TilesService', function(e, t, a, s, i) {
            a.debug('Loading Drafts Controller');
            const o = this;
            o.space = e.primarySpace, o.tabsArray = [{
                title: 'All videos'
            }], t.deck = [], t.infiniteScroll = function() {
                return s.getVideosNormalized({
                    limit: 15
                }).then((e) => {
                    e = i.normalizeItems(e), [].push.apply(t.deck, e)
                })
            }, t.items, t.$watchCollection('items', (e) => {
                e && (o.callToAction = 1 > e.length)
            }), o.previousState = function() {
                window.history.back()
            }, o.init = function() {}, o.init()
        }])
    }(),
    function() {
        angular.module('core').factory('Ooyala', [function() {}])
    }(),
    function() {
        angular.module('core').factory('Videos', ['$q', 'Authentication', 'Restangular', 'collections', '$sce', function(e, t, a, s, i) {
            function o(a, s, i, o, n, l) {
                const r = new XMLHttpRequest,
                    d = e.defer();
                return n && (n.xhrInstance = r), r.open('POST', a, !0), r.setRequestHeader('X-Space-Token', t.spaceAccessToken().id), r.setRequestHeader('Authorization', t.accessToken()), r.setRequestHeader('Content-Type', i), Object.keys(l || {}).map((e) => {
                    r.setRequestHeader(e, l[e])
                }), r.upload && o && r.upload.addEventListener('progress', (t) => {
                    o((100 * (t.loaded / t.total)).toFixed(0))
                }, !1), r.addEventListener('readystatechange', function() {
                    if (4 == this.readyState) return 200 == this.status ? d.resolve(JSON.parse(r.responseText)) : d.reject(this)
                }), r.addEventListener('error', (t) => {
                    d.reject(t)
                }), r.send(s), d.promise
            }
            return {
                getVideoById: function(e) {
                    return a.all('videos/' + e).get('').then((e) => s.collectify(e.plain()).map((e) => (e.source = i.trustAsResourceUrl(e.source), e)))
                },
                uploadThumb: function(e) {
                    return o('/thumb/upload', e.thumb, e.thumb.type)
                },
                uploadVideo: function(e, t, a) {
                    return o('/videos/' + e.model.id + '/upload', e.blob, e.input.type, a, t, {
                        duration: e.info.duration
                    })
                },
                publishVideo: function(e, t) {
                    return a.all('videos/' + e + '/publish').customPUT(t).then((e) => e.plain())
                },
                getVideosNormalized: function(e) {
                    return a.all('videos/normalized').get('', e).then((e) => e.plain())
                },
                createInstance: function(e) {
                    return a.all('videos').post(e).then((e) => e.plain())
                },
                getVideoByIdNormalized: function(e) {
                    return a.all('videos/' + e + '/normalized').get('').then((e) => e.plain())
                },
                getVideoCountBySpaceId: function() {
                    return a.all('videos/normalized?count=true').get('')
                },
                view: function(e) {
                    return a.all('videos/' + e + '/view').customPUT().then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('core').controller('ModalAccessController', ['$log', '$rootScope', '$scope', '$http', '$q', '$timeout', 'jquery', '_', 'holospace', 'GoogleService', 'notifyService', 'Authentication', 'ResetPassword', 'constants', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u) {
            const g = {};
            g.email = u.VALIDATION.EMAIL_PATTERN, e.debug('Loading ModalAccessController Controller'), a.type = 'signup', a.step = 'choices', a.message = '', a.hasHolospace = !1, a.passStrength = 0, a.isForgotPass = !1, a.emailSent = !1, a.signup = {}, a.signup.data = {}, a.signup.invalid = {}, a.signin = {}, a.signin.data = {}, a.signin.invalid = {}, a.loaderSocialLogin = function() {
                t.loadingFeedback('add')
            }, a.forgotPass = function(e) {
                a.isForgotPass = e, a.emailSent = !1
            }, a.sendResetEmail = function() {
                const e = a.signin.data.email;
                m.resetPasswordRequest(e).then(() => {
                    a.emailSent = !0
                }).catch(() => {
                    c.error('An error occurred')
                })
            }, a.applyUsernameRules = function() {
                return !a.signup.data.username || void(a.signup.data.username = a.signup.data.username.replace(/[^\w.-]/g, '-'))
            }, a.changeStep = function(e) {
                a.step = e
            }, a.changeType = function(e) {
                a.step = 'choices', a.type = e
            }, a.changeMessage = function(e) {
                a.message = e
            }, a.open = function(e, t) {
                a.changeType(t.type), a.changeMessage(t.message)
            }, a.google = function() {
                d.login().then((e) => e ? void(window.location.href = t.API_DOMAIN + '/auth/google') : i.reject(new Error('Not logged in'))).catch((e) => {
                    console.error(e), t.loadingFeedback('remove'), c.error('Sign in failed, please try again.')
                })
            }, a.$on('open-access-modal', (e, t) => {
                a.open(t.$element, t.dataset)
            }), a.signup.randomUsername = function() {
                if (a.signup.data.name) {
                    const e = a.signup.data.name.replace(/(^\w+\b)(.+)(\b\w+$)/g, '$1$3').toLowerCase(),
                        t = Math.floor(9999 * Math.random() + 1e3);
                    a.signup.data.username = [e, t].join('')
                }
            };
            let v = null;
            a.hidePasswordMessage = function() {
                o.cancel(v), a.signup.invalid.password = !1, a.signup.invalid.weak = !1
            }, a.doSignup = function(e) {
                e.preventDefault();
                const i = e.target;
                let r = !0;
                if (a.signup.invalid.emailTaken = !1, a.signup.invalid.email = !1, a.signup.data.email && g.email.test(a.signup.data.email) || (a.signup.invalid.email = !0, r = !1), a.signup.invalid.name = !1, (!a.signup.data.name || 3 > a.signup.data.name.length) && (a.signup.invalid.name = !0, r = !1), a.signup.invalid.username = !!a.hasHolospace, (!a.signup.data.username || 4 > a.signup.data.username.length) && (a.signup.invalid.username = !0), a.signup.invalid.username && (r = !1), a.signup.invalid.weak = !1, a.signup.invalid.password = !1, (!a.signup.data.password || 5 > a.signup.data.password.length) && (a.signup.invalid.password = !0, r = !1), !a.signup.invalid.password) {
                    const e = parseInt(n('.password-strengthdanger').attr('aria-valuenow'), 10);
                    40 > e && (a.signup.invalid.weak = !0, r = !1)
                }
                if (a.signup.invalid.confirm = !1, a.signup.data.confirm !== a.signup.data.password && (a.signup.invalid.confirm = !0, r = !1), o.cancel(v), v = o(() => {
                        a.hidePasswordMessage()
                    }, 5e3), r) {
                    t.loadingFeedback('add');
                    const e = n(i).find(':submit').prop('disabled', !0);
                    s({
                        method: i.method,
                        url: i.action,
                        data: a.signup.data
                    }).then((s) => {
                        s.data.error ? ('ValidationError' === s.data.error.code ? o(() => {
                            const e = l.find(s.data.error.errors, {
                                field: 'email'
                            });
                            e && l.includes(e.errors, 'uniqueness') && (a.signup.invalid.emailTaken = !0);
                            const t = l.find(s.data.error.errors, {
                                field: 'username'
                            });
                            t && l.includes(t.errors, 'uniqueness') && (a.signup.invalid.username = !0)
                        }) : (c.error('An error occurred, please try again later.'), console.error(s.data.error), t.loadingFeedback('remove')), t.loadingFeedback('remove'), e.prop('disabled', !1)) : (n('#modal-access').trigger('close-modal'), window.location = s.data.success.redirectUrl)
                    }).catch((a) => {
                        console.error(a), t.loadingFeedback('remove'), e.prop('disabled', !1), c.error('An error occurred, please try again later.')
                    })
                }
            }, a.checkAddress = function() {
                return a.signup.data.username && 4 > a.signup.data.username.length ? (a.hasHolospace = !1, void(a.signup.invalid.username = !0)) : void(a.signup.data.username && r.checkSpace(a.signup.data.username, !0).then((e) => {
                    e.success ? (a.hasHolospace = !1, a.signup.invalid.username = !1) : (a.hasHolospace = !0, a.signup.invalid.username = !0)
                }))
            }, a.$watch('signup.data.username', a.checkAddress), a.doSignin = function(e) {
                e.preventDefault();
                const i = e.target;
                let o = !0;
                if (a.signin.invalid.email = !1, a.signin.data.email && g.email.test(a.signin.data.email) || (a.signin.invalid.email = !0, o = !1), a.signin.invalid.password = !1, a.signin.data.password || (a.signin.invalid.password = !0, o = !1), o) {
                    const e = n(i).find(':submit').prop('disabled', !0);
                    s({
                        method: i.method,
                        url: i.action,
                        data: a.signin.data
                    }).then((e) => {
                        window.location = e.data.success.redirectUrl, c.success('Success! Logging in.')
                    }).catch((a) => {
                        a.data.error && 'LOGIN_FAILED' === a.data.error.code ? c.error('Login failed, please double-check your email and password.') : (c.error('An error occurred, please try again later.'), console.error(a.data)), e.prop('disabled', !1), t.loadingFeedback('remove')
                    })
                }
            };
            const h = {
                general: 'An error occurred, please try again.',
                signup_email_exists: 'This email is registered with a different account. Please sign in using a different method or sign up with a different email.'
            };
            t.$stateParams.auth_error && o(() => {
                p.logoutAuthProviders(), p.showLoginPrompt(), o(() => {
                    c.error(h[t.$stateParams.auth_error])
                }, 750)
            })
        }])
    }(),
    function() {
        angular.module('core').controller('LikesListController', ['$scope', '$log', 'LikesService', 'Authentication', 'Followers', '_', '$timeout', 'OnboardingService', function(e, t, a, s, i, o, n) {
            e.nextPage = 0, e.loaded = !1, e.data = {}, e.data.likes = [], e.timer = null, e.state = {
                loadingMore: !0
            }, e.form = {
                query: '',
                max: 0,
                page: 0,
                next: !1
            };
            const l = e.id;
            e.getLikes = function(t, s, i) {
                e.form.next && (e.state.loadingMore = !0, e.form.page = s || e.form.page, a.listSpaces(l, e.form.page, t).then((t) => {
                    i && (e.data.likes = []), [].push.apply(e.data.likes, t.items), e.data.pagination = t.pagination, e.loaded = !0, e.state.loadingMore = !1, e.form.next = t.pagination.next
                }).catch((e) => {
                    console.error('at likes', e)
                }))
            }, e.$watch('form.query', () => {
                e.timer && clearTimeout(e.timer), e.timer = setTimeout(() => {
                    e.form.next = !0, e.getLikes(e.form.query, 0, !0)
                }, 500)
            }), e.getLikes(), e.toggleFollow = function(t, a, o, l) {
                return s.isLoggedOut() ? n(s.showLoginPrompt()) : !e.data.likes[l].followDisabled && void(t = {
                    id: t
                }, a = {
                    id: a
                }, e.data.likes[l].isFollowing = !e.data.likes[l].isFollowing, e.data.likes[l].followDisabled = !0, i.follow(t, a, o).then(() => {
                    e.data.likes[l].followDisabled = !1
                }).catch(() => {
                    e.data.likes[l].followDisabled = !1, e.data.likes[l].isFollowing = !e.data.likes[l].isFollowing
                }))
            }
        }])
    }(),
    function() {
        var e = Math.max,
            t = Math.min;
        angular.module('core').controller('PostController', ['$scope', '$location', '$state', '$log', '$timeout', '$sce', '_', '$rootScope', 'dsModal', function(a, s, i, o, n, l, r, d, c) {
            function p() {
                return {
                    height: 0.8 * S.height(),
                    width: 0.8 * S.width()
                }
            }

            function m(t, s, i) {
                i.width -= 360;
                const o = e(1, s.height / i.height),
                    n = e(1, s.width / i.width),
                    l = e(o, n),
                    r = e(400, s.height / l),
                    d = s.width / l;
                return a.width = e(300, d) + 360, {
                    height: r,
                    width: d
                }
            }

            function u(e, t, a, s) {
                if (s) return void e.css({
                    height: 'auto',
                    width: 'auto'
                });
                const i = m(e, {
                    height: 768,
                    width: 1024
                }, a);
                e.css({
                    width: i.width
                })
            }

            function g(e, t, a, s) {
                if (s) return void e.css({
                    height: 'auto',
                    width: 'auto'
                });
                const i = r.get(t.data.content, 'embedded[0].embedlyData') || {},
                    o = i.height || i.thumbnail_height || 768,
                    n = i.width || i.thumbnail_width || 768,
                    l = m(e, {
                        height: o,
                        width: n
                    }, a);
                e.css({
                    height: l.height,
                    width: l.width
                })
            }

            function v(a, s, i) {
                const o = angular.element(window);
                if (!(768 >= o.width())) {
                    const a = s.$main.find('.ds-post'),
                        o = s.$main.find('.ds-post-interaction'),
                        n = s.$main.find('.ds-modal'),
                        l = e(i.height, t(i.height, o.height()));
                    n.css({
                        top: '50%',
                        transform: 'translate(0, -50%)'
                    }), o.css({
                        height: '100%'
                    }), a.css({
                        minHeight: l,
                        maxHeight: i.height,
                        overflow: 'auto'
                    })
                }
            }

            function h(e, t, a) {
                const s = angular.element(window);
                if (!(768 >= s.width())) {
                    const e = t.$main.find('.ds-post'),
                        s = t.$main.find('.ds-post-interaction'),
                        i = t.$main.find('.ds-modal');
                    i.css({
                        top: '50%',
                        transform: 'translate(0, -50%)'
                    }), s.css({
                        height: '100%'
                    }), e.css({
                        height: a.height,
                        overflow: 'auto'
                    })
                }
            }

            function b(e, t, a, s) {
                if (s) return void e.css({
                    height: 'auto',
                    width: 'auto'
                });
                const i = {
                        height: t.data.content.height,
                        width: t.data.content.width
                    },
                    o = m(e, i, a);
                e.css({
                    height: o.height,
                    width: o.width
                })
            }

            function f(e, a, s) {
                const i = e.$main.find('.ds-post'),
                    o = e.$main.find('.ds-post-interaction');
                if (s) return i.css({
                    height: 'auto'
                }), void o.css({
                    height: 'calc(100% - 50px)'
                });
                const n = t(a.height, o.height());
                o.css({
                    height: '100%'
                }), i.css({
                    minHeight: n,
                    maxHeight: a.height,
                    overflow: 'auto'
                })
            }

            function y(e) {
                const t = e.vanityUrl == a.data.vanityUrl;
                a.visible = t, a.hideOverlay = !t, c.repositionAll()
            }
            const w = a.$state.current.name,
                k = a.$state.params,
                S = angular.element(window);
            d.$broadcast('ds.post.open', {
                vanityUrl: a.data.vanityUrl
            }), a.dsEmbedData = 'link' === a.data.content.type ? r.get(a, 'data.block[0].embedded') : r.get(a, 'data.content.embedded'), r.isArray(a.dsEmbedData) && (a.dsEmbedData = a.dsEmbedData[0]), i.go('post.detail', {
                space: a.data.space.vanityUrl,
                vanityUrl: a.data.vanityUrl,
                id: a.data.id
            }, {
                notify: !1
            });
            const C = p().width;
            if (a.data.content.maxWidth = a.data.content.width ? t(a.data.content.width, C) : C, a.oldVideo = 'media' === r.get(a.data.content, 'embedded[0].type') && 'video' === r.get(a.data.content, 'embedded[0].mediaType'), a.data.content.embedded && 0 < a.data.content.embedded.length && a.data.content.embedded[0].embedlyData) {
                const e = a.data.content.embedded[0];
                if (e.source && -1 < e.embedlyData.provider_name.search(/facebook|twitter|instagram/i)) a.embedSource = l.trustAsHtml(r.get(a.data, 'embedSource')), a.isVideo = !1;
                else {
                    const t = 'youtube' === e.embedlyData.provider_name.toLowerCase();
                    if (a.isIframe = 'rich' == e.mediaType || 'video' == e.mediaType, a.isIframe) {
                        const s = $(e.embedlyData.html)[0];
                        let i = s.src;
                        t && (i += '&autoplay=1'), s.src = i;
                        const o = s.outerHTML;
                        a.isVerticalIframe = 'twitter' === e.embedlyData.provider_name.toLowerCase(), a.data.iframeTag = l.trustAsHtml(o), a.isVideo = !1
                    }
                }
            }
            a.$on('ds.modal.setSize', (e, t, a, s) => {
                const i = a.$main.find('.ds-post-image-container'),
                    o = a.$main.find('.ds-player'),
                    n = a.$main.find('.ds-post-iframe'),
                    l = a.$main.find('.ds-post-iframe-vertical'),
                    r = a.$main.find('.embedly-card-content'),
                    d = p();
                return i.length ? b(i, a, d, s) : o.length ? u(o, a, d, s) : n.length ? g(n, a, d, s) : l.length ? v(l, a, d) : r.length ? h(r, a, d) : f(a, d, s)
            }), a.$on('ds.modal.close', () => {
                const e = k,
                    t = Object.keys(e); - 1 < t.indexOf('page') && !e.page && (e.page = 1), i.go(w, e, {
                    notify: !1
                }), d.$broadcast('ds.post.close', {
                    vanityUrl: k.vanityUrl
                })
            }), a.$on('ds.post.open', (e, t) => {
                y(t)
            }), a.$on('ds.post.close', (e, t) => {
                y(t)
            })
        }])
    }(),
    function() {
        angular.module('core').controller('SharePostController', ['$scope', '$log', '$rootScope', '$q', '_', 'PostService', 'notifyService', '$timeout', 'TileCache', 'TilesService', 'constants', 'ShareThird', function(e, t, a, s, i, o, n, l, r, d, c, p) {
            e.shareData = {
                description: ''
            }, e.state = {
                expanded: !0
            }, e.label = 'Share', e.busyTracker = a.promiseTracker, e.toggleCollapse = function() {
                const t = e.$main.find('.wrapper-tile')[0],
                    a = angular.element(t);
                e.state.containerHeight = e.state.containerHeight || a.outerHeight(), e.state.hasMinHeight = e.state.containerHeight > 180, e.state.expanded = !e.state.expanded, e.state.maxHeight = e.state.expanded ? e.state.containerHeight : ''
            }, l(() => {
                e.toggleCollapse()
            });
            const m = function() {
                e.label = 'Sharing';
                const t = o.share(a.primarySpace.id, e.data.type, e.data.id, e.shareData.description, e.shareData.shareTo).then((t) => {
                    if (!t.success) return s.reject();
                    e.label = 'Share', n.success('Content shared successfully!'), e.close();
                    const a = r.getKey(e.data);
                    if (r.assign(a, {
                            engagement: {
                                shared: !0
                            }
                        }), r.increment(a, 'engagement.shares', 1), d.isSingleShare(e.data)) {
                        const t = r.getKey(i.get(e.data, 'v2.body.story'));
                        r.increment(t, 'engagement.shares', 1), r.assign(t, {
                            engagement: {
                                shared: !0
                            }
                        })
                    }
                    dataLayer.push({
                        eventCategory: e.data.type + 'Action',
                        event: 'Shared a ' + e.data.type,
                        eventAction: 'Share',
                        eventLabel: e.data.vanityUrl
                    })
                }).catch((e) => e && 409 === e.status ? n.warning('You\'ve shared this content recently. We\'ve prevented the share from being published because it was already shared within the last 30 days.') : void n.error('An error occurred, please try again.'));
                e.busyTracker.addPromise(t)
            };
            e.postShareContent = () => {
                const t = e.data.v2.url;
                if (a.facebookProfileSelected && !localStorage.getItem(c.USER_HAS_SEEN_FACEBOOK_DIALOG_WARNING)) return p.facebookProfileWarning(() => p.facebookShareDialog(t, m));
                return a.facebookProfileSelected ? p.facebookShareDialog(t, m) : m()
            }
        }])
    }(),
    function() {
        angular.module('core').controller('SharesWhoSharedController', ['$scope', '$log', 'SharesService', 'EngagementService', 'Content', 'TilesService', function(e, t, a, s, i, o) {
            function n(e, t) {
                return !!e && e.skip && t.items.length >= e.limit
            }
            let l = !1;
            e.loaded = !1, e.data = {}, e.data.shares = [], e.state = {
                loadingMore: !1,
                showMore: !1
            }, e.settings = {};
            const r = {
                id: e.id,
                type: e.type,
                totalShares: e.totalShares
            };
            e.getShares = function(t) {
                !_.get(e, 'settings.next.skip') && l || (e.state.loadingMore = !0, a.whoShared(r, e.settings).then((a) => {
                    t && (e.data.shares = []), [].push.apply(e.data.shares, _.map(a.items, (t) => (t.body.story || (t.body.story = e.mainData), t.engagement.shared = t.body.story.engagement.shared, t.v1 = o.normalizeItem(i.toV1(t)), t))), e.loaded = !0, e.settings = a.settings, e.state.loadingMore = !1;
                    const s = _.get(e, 'settings.next');
                    e.state.showMore = n(s, a), l = !0
                }).catch((e) => {
                    console.error('at shares.list', e)
                }))
            }, e.openPost = function(e, t) {
                if (s.openPost(e.v1), 'post' === e.type || 'video' === e.type && 'holonis' === e.provider) return t && (t.preventDefault(), t.stopPropagation()), !1
            }, e.getShares()
        }])
    }(),
    function() {
        angular.module('core').controller('SharesListController', ['$scope', '$log', 'Authentication', 'SharesService', 'Followers', '_', '$timeout', function(e, t, a, s, i, o, n) {
            e.nextPage = 0, e.loaded = !1, e.data = {}, e.data.shares = [], e.timer = null, e.state = {
                loadingMore: !0
            }, e.form = {
                query: '',
                max: 0,
                page: 0,
                next: !1
            };
            const l = e.id;
            e.getShares = function(t, a, i) {
                e.form.next && (e.state.loadingMore = !0, e.form.page = a || e.form.page, s.listSpaces(l, e.form.page, t).then((t) => {
                    i && (e.data.shares = []), [].push.apply(e.data.shares, t.items), e.data.pagination = t.pagination, e.loaded = !0, e.state.loadingMore = !1, e.form.next = t.pagination.next
                }).catch((e) => {
                    console.error('at shares.list', e)
                }))
            }, e.$watch('form.query', () => {
                e.timer && clearTimeout(e.timer), e.timer = setTimeout(() => {
                    e.form.next = !0, e.getShares(e.form.query, 0, !0)
                }, 500)
            }), e.getShares(), e.toggleFollow = function(t, s, o, l) {
                return a.isLoggedOut() ? n(a.showLoginPrompt()) : !e.data.shares[l].followDisabled && void(t = {
                    id: t
                }, s = {
                    id: s
                }, e.data.shares[l].isFollowing = !e.data.shares[l].isFollowing, e.data.shares[l].followDisabled = !0, i.follow(t, s, o).then(() => {
                    e.data.shares[l].followDisabled = !1
                }).catch(() => {
                    e.data.shares[l].followDisabled = !1, e.data.shares[l].isFollowing = !e.data.shares[l].isFollowing
                }))
            }
        }])
    }(),
    function() {
        angular.module('core').controller('StripeConnectController', ['$log', '$rootScope', '$scope', '$modal', 'Restangular', 'Authentication', '$uibModal', function(e, t, a, s, i, o) {
            a.country = 'US', a.email = t.primarySpace.email;
            const n = o.spaceAccessToken().id;
            a.stripeConnectLink = ['/link/stripe?space_token=', n, '&isContentCreationFlow=true'].join(''), i.one('../stripe/countries').get().then((e) => {
                a.countries = e.plain()
            }), a.cancel = function() {
                s.close()
            }, a.submit = function() {
                let e = !0;
                a.warning = !1, a.sending = !1;
                const t = angular.element('#email').parent();
                if (t.removeClass('ds-input-error'), a.email || (e = !1, t.addClass('ds-input-error')), !e) return !1;
                const o = {
                    email: a.email,
                    country: a.country
                };
                a.sending = !0, i.all('../stripe/create').post(o).then(() => (a.sending = !1, s.close(), !0)).catch((e) => {
                    a.sending = !1, 409 == e.status && (a.warning = !0)
                })
            }
        }])
    }(),
    function() {
        angular.module('core').controller('VideoController', ['$scope', '$log', 'notifyService', 'Videos', function(e, t, a, s) {
            t.debug('Loading VideoController Controller');
            const i = _.get(e.data, 'content.id') || _.get(e.data, 'id');
            e.videoModel = {
                title: _.get(e.data, 'content.title') || _.get(e.data, 'body.name'),
                description: _.get(e.data, 'content.description') || _.get(e.data, 'body.description')
            }, e.save = function() {
                s.publishVideo(i, e.videoModel).then(() => {
                    _.set(e.data, 'block[0].title', e.videoModel.title), _.set(e.data, 'block[0].description', e.videoModel.description), _.set(e.data, 'content.title', e.videoModel.title), _.set(e.data, 'content.description', e.videoModel.description), a.success('Video successfully updated!'), e.close()
                }).catch(() => {
                    a.error('An error occurred, please try again.')
                })
            }
        }])
    }(),
    function() {
        angular.module('ds.action-group').directive('dsActionGroup', ['$log', function(e) {
            return e.debug('Loading actiongroup Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {},
                controller: ['$scope', function() {}],
                templateUrl: 'public/modules/ds/action-group/templates/action-group.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').controller('ActionsController', ['$state', '$scope', '$log', '$rootScope', '$timeout', 'dsActionsService', 'Authentication', '_', function(e, t, a, s, i, o, n, l) {
            function r(e) {
                const a = this,
                    s = Array.prototype.slice.call(arguments, 1);
                s.push((s) => o[e](t, a, s)), this.status = !0, this.label = e, this.index = null, this.subActions = null, this.selected = null, this.method = function(e) {
                    return this.subActions || t.close(), s.every((t) => t(e))
                }, this.getData = function() {
                    return {
                        status: this.status,
                        label: this.label,
                        getLabel: this.getLabel,
                        subActions: this.subActions,
                        selected: this.selected,
                        method(e) {
                            a.method(e)
                        }
                    }
                }, this.export = function() {
                    const e = this.getData();
                    this.index = t.actions.push(e) - 1
                }
            }

            function d() {
                return !!u || (n.showLoginPrompt(), !1)
            }
            const c = 'share' === t.data.type && 'dynamic' === t.data.shareType;
            t._contentData = c ? t.data.body.story : t.data, t._contentData.space = t._contentData.space || t._contentData.header.space;
            const p = s.primarySpace && s.primarySpace.id === l.get(t._contentData, 'space.id'),
                m = t.content && s.primarySpace && (l.get(t.content, 'space.id') || l.get(t.content, 'header.space.id')) === s.primarySpace.id,
                u = !s.isLoggedOut(),
                g = !0 === t._contentData.space.isMySpace,
                v = t.data.space.isPrivate,
                h = !!t._contentData.vanityUrl,
                b = 'video' === t._contentData.type,
                f = 'draft' === t._contentData.status,
                y = t.type,
                w = t._contentData.engagement || {},
                k = t._contentData.featured;
            t._contentData.type = t._contentData.type || t.type, t.status = {}, t.actions = [], s.spaces = s.spaces || {}, s.spaces[t._contentData.space.vanityUrl] = s.spaces[t._contentData.space.vanityUrl] || t._contentData.space;
            const S = new r('block', d);
            S.labels = ['Block', 'Unblock'], S.getLabel = () => S.labels[s.spaces[t._contentData.space.vanityUrl].isBlocked ? 1 : 0], S.status = !p && !c, S.export();
            const C = new r('save', d);
            C.labels = ['Save', 'Saved'], C.label = C.labels[w.saved ? 1 : 0], C.status = !p && h && 'space' !== y, C.export();
            const x = new r('videoEdit', d);
            x.label = 'Edit', x.status = p && b, x.export();
            const T = new r('edit', d);
            T.label = 'Edit', T.status = p && !b && 'comment' !== y, T.export();
            const I = new r('message', d);
            I.label = 'Message', I.status = !p && !c, I.export();
            const A = new r('share');
            A.label = 'Share', A.status = (h || 'space' === y) && !f && !v, A.export();
            const P = new r('delete', d);
            P.label = 'Delete', P.status = 'comment' === y && t.content && 'item' === t.content.type ? l.get(s, 'primarySpace.id') === l.get(t, 'data.spaceId') : (p || m) && 'space' !== y, P.export();
            const U = new r('report', d);
            U.label = 'Report', U.status = !p && 'space' !== y, U.subActions = [{
                label: 'It\u2019s Spam',
                type: 'spam'
            }, {
                label: 'It\u2019s Inappropriate',
                type: 'inappropriate',
                subActions: [{
                    label: 'Self injury',
                    value: 1
                }, {
                    label: 'Harassment or bullying',
                    value: 2
                }, {
                    label: 'Sale or promotion of drugs',
                    value: 3
                }, {
                    label: 'Sale or promotion of firearms',
                    value: 4
                }, {
                    label: 'Nudity or pornography',
                    value: 5
                }, {
                    label: 'Violence or harm',
                    value: 6
                }, {
                    label: 'Hate speech or symbols',
                    value: 7
                }, {
                    label: 'Intellectual property violation',
                    value: 8
                }, {
                    label: 'I just don\u2019t like it',
                    value: 9
                }]
            }], U.export();
            const E = new r('copy');
            if (E.label = 'Copy URL', E.status = h && 'space' !== y, E.export(), l.includes(['holospace.home', 'holospace.home.page', 'holospace.posts', 'holospace.posts.page', 'holospace.pages', 'holospace.pages.page', 'holospace.shop', 'holospace.shop.page', 'holospace.channels', 'holospace.channels.page'], e.current.name) && g) {
                const e = new r('featureContent');
                k ? (e.label = 'Remove from Featured', e.status = h && 'space' !== y, e.export()) : (e.label = 'Set as Featured', e.status = h && 'space' !== y, e.export())
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionsService', ['$log', '_', '$timeout', '$rootScope', '$state', 'dsActionVideoEditService', 'dsActionBlockService', 'dsActionCopyService', 'dsActionEditService', 'dsActionDeleteService', 'dsActionShareService', 'dsActionReportService', 'dsActionSaveService', 'dsActionMessageService', 'dsActionFeaturedContentService', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g) {
            function v(e) {
                return function(t, a, o) {
                    const n = t._contentData,
                        l = {
                            data: n,
                            type: n.type,
                            id: n.id,
                            space: s.primarySpace,
                            $state: i,
                            $scope: t,
                            $event: o
                        };
                    return e(l, a)
                }
            }
            return {
                block: v(n),
                copy: v(l),
                edit: v(r),
                videoEdit: v(o),
                delete: v(d),
                share: v(c),
                report: v(p),
                save: v(m),
                message: v(u),
                featureContent: v(g)
            }
        }])
    }(),
    function() {
        angular.module('ds.avatar').directive('dsAdd', ['$rootScope', '$log', function(e, t) {
            return t.debug('Loading DsAdd Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    label: '@?',
                    src: '@?',
                    caption: '@?',
                    description: '@?',
                    action: '&',
                    hideAction: '=?'
                },
                controller: ['$scope', '$sce', function() {}],
                templateUrl: 'public/modules/ds/add/templates/add.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.address').directive('dsAddress', ['$log', '$timeout', function(e, t) {
            return e.debug('Loading DsAddress Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    model: '=',
                    placeholder: '@'
                },
                controller: ['$scope', '$element', function(e, a) {
                    e.model = e.model || {};
                    let s, i;
                    e.$on('$destroy', () => {
                        google.maps.event.removeListener(i), google.maps.event.clearInstanceListeners(s), $('.pac-container').remove()
                    }), t(() => {
                        const t = a.find('.ds-input')[0];
                        s = new google.maps.places.Autocomplete(t, {
                            types: ['geocode']
                        }), i = s.addListener('place_changed', function() {
                            e.model.address = t.value, e.model.selected = !0
                        })
                    })
                }],
                templateUrl: 'public/modules/ds/address/templates/address.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.avatar').directive('dsAvatar', ['$rootScope', '$log', '$filter', 'media', function(e, t, a, s) {
            t.debug('Loading DsEmbed Controller');
            const i = a('processImage');
            return {
                replace: !0,
                restrict: 'E',
                scope: {
                    src: '=',
                    avatar: '=',
                    size: '=?',
                    resize: '=?',
                    editable: '=?',
                    space: '=?',
                    zoomable: '=?'
                },
                controller: ['$scope', function(t) {
                    const a = t.size || 32;
                    t.width = a, t.height = a, t.getImage = function() {
                        return t.avatar ? i(t.avatar, t.resize || a, !0) : t.src || e.cdnBaseUrl + '/images/default-user.png?1'
                    }, t.change = function() {
                        s.pickFile(1, t.space.bucket, t.space.id).then((e) => {
                            t.src = e.source, t.avatar = null
                        })
                    }
                }],
                templateUrl: 'public/modules/ds/avatar/templates/avatar.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.channel-mosaic').directive('dsChannelMosaic', ['$rootScope', '$log', function(e, t) {
            return t.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '='
                },
                controller: ['$scope', '$sce', function() {}],
                templateUrl: 'public/modules/ds/channel-mosaic/templates/mosaic.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.chart').directive('dsChart', ['$rootScope', '$log', function(e, t) {
            return t.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    labels: '=?',
                    series: '=?',
                    data: '=?'
                },
                controller: ['$scope', '$sce', function() {}],
                templateUrl: 'public/modules/ds/chart/templates/chart.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.code').directive('dsCode', ['$log', 'constants', '_', '$timeout', function(e, t, a, s) {
            return e.debug('Loading DsCode Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    model: '=',
                    digits: '=',
                    validate: '=',
                    initFocus: '=?',
                    params: '=?'
                },
                controller: ['$scope', '$sce', '$element', function(e, i, o) {
                    function n(e) {
                        const t = a.get(e, 'originalEvent.data');
                        if (t) return t;
                        const s = a.get(e, 'originalEvent.explicitOriginalTarget');
                        if (!s) return !1;
                        const i = 1 < (s && s.selectionEnd),
                            o = e.target.value,
                            n = o.toString().split('');
                        return i && o ? n.pop() : n.shift()
                    }

                    function l(t) {
                        const a = t || e.model;
                        for (let s = 0; s < e.digits; s++) {
                            if (a) {
                                e.inputs[s] = a[s];
                                continue
                            }
                            e.inputs[s] = ''
                        }
                    }

                    function r() {
                        s(() => {
                            const e = o.find('input'),
                                t = angular.element(e[0]);
                            t.length && t.focus()
                        })
                    }

                    function d(e) {
                        const t = /^[0-9]+$/i;
                        return t.test(e)
                    }
                    e.inputs = [], l(), e.initFocus && r(), e.$watchCollection('inputs', (t) => {
                        e.model = t.join('')
                    }), e.prevent = function(t, a) {
                        const s = angular.element(t.target),
                            i = s.next(),
                            o = t.target.value;
                        if (!d(o)) return void(t.target.value = '');
                        const l = n(t);
                        l && (e.inputs[a] = l, i.length && i.focus())
                    }, e.handlePaste = function(t) {
                        const a = t.originalEvent.clipboardData.getData('text/plain');
                        !d(a) || a.length >= e.digits && (l(a), t.stopPropagation(), t.preventDefault())
                    }, e.handleBackspace = function(e) {
                        const a = e.keyCode || e.charCode,
                            s = e.target,
                            i = angular.element(e.target).prev(),
                            o = angular.element(e.target).next(),
                            n = s.value;
                        return !n && (8 == a || 46 == a) && i.length ? void i.focus() : a == t.keyCode.LEFT ? void i.focus() : void(a == t.keyCode.RIGHT && o.focus())
                    }, e.$watch('model', (e) => {
                        '' === e && (r(), l())
                    })
                }],
                templateUrl: 'public/modules/ds/code/templates/code.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.comments').directive('dsComments', ['$log', '_', '$rootScope', 'notifyService', '$location', '$timeout', 'Authentication', 'dsModal', 'AdRefresher', 'dfp', 'constants', 'ad', 'view', 'windowSizeService', 'Analytics', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u, g) {
            return e.debug('Loading DsComments Directive'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    objectId: '=',
                    objectType: '@',
                    inverse: '&?',
                    scroller: '@',
                    content: '=?',
                    contentTitle: '=?',
                    autoFocus: '&?',
                    noKarot: '=?',
                    modal: '=?',
                    transaction: '=?',
                    ads: '=?'
                },
                controller: ['$state', '$scope', '$element', 'dsCommentsApi', function(e, v, h, b) {
                    function f() {
                        let e = v.content;
                        return -1 < ['page', 'channel', 'product'].indexOf(v.model.objectType) && (e = v.$parent.data.tile), e && e.engagement && e.engagement
                    }

                    function y() {
                        const e = f();
                        return !!e && void e.comments++
                    }

                    function w() {
                        const e = f();
                        return !!e && void e.comments--
                    }

                    function k(e, a) {
                        const s = v.content || {},
                            i = t.get(s, 'engagement.views'),
                            o = d.createRangeText(i, c.DFP.RANGES.VIEWS),
                            n = {};
                        n.page_views_min = o, n.space_id = t.get(s, 'space.id'), n.page_id = s.id, n.content_type = 'post', n.ad_slot = a;
                        const l = e.slotName.replace('%NUM%', a),
                            u = {
                                slotName: l,
                                adUnitPath: e.adUnitPath,
                                adSize: e.size,
                                targeting: n
                            },
                            b = {
                                event: `Saw an ad on a ${v.objectType}`,
                                eventLabel: t.get(s, 'vanityUrl'),
                                tagType: 'Universal Analytics',
                                eventCategory: `${v.objectType} Ad Impression`,
                                eventAction: 'Banner Ads'
                            };
                        return g.setAdDataLayerInfo(l, b), O.push(new r({
                            displayEvents: ['holonis_scroll', 'holonis_resize', 'holonis_commentsLoaded', 'holonis_commentsScroll'],
                            adInfo: u,
                            $scope: v,
                            element: h,
                            dfp: d,
                            bidderTimeout: c.ADS.PREBID.TIMEOUT,
                            adService: p,
                            bids: c.ADS.PREBID.bids,
                            view: m,
                            pixelsBeforeDisplay: c.ADS.PIXELS_BEFORE_DISPLAY,
                            fullyVisible: c.ADS.FULLY_VISIBLE_TO_DISPLAY
                        })), {
                            type: 'ads',
                            slotName: l
                        }
                    }

                    function S() {
                        const e = v.modalWithoutMedia() ? '.ds-comment-list.no-media' : '.ds-post-interaction';
                        return angular.element(e)
                    }

                    function C() {
                        a.$broadcast('holonis_commentsScroll')
                    }

                    function x() {
                        const e = S();
                        angular.element(e).off('scroll', C), N.off('click', D)
                    }

                    function T() {
                        const e = S();
                        angular.element(e).on('scroll', t.throttle(() => {
                            C()
                        }, c.THROTTLE_SCROLL))
                    }

                    function I(e) {
                        const t = v.inverse ? Math.floor(c.ADS.COMMENTS.POSITION / 2) : 0;
                        return (e + 1) * c.ADS.COMMENTS.POSITION - t
                    }

                    function A() {
                        const e = t.filter(v.comments, (e) => 'ads' !== e.type);
                        return e.length
                    }

                    function P(e) {
                        if (!e || e.length < c.ADS.COMMENTS.MIN_LENGTH) return e;
                        let t = 0,
                            a = v.adsCount;
                        const s = [],
                            o = e.length;
                        for (let n = 0; n < o; n++) {
                            const i = e[n],
                                o = I(t);
                            s.push(i), n + 1 === o && (s.push(new k(c.ADS.DETAIL.comments, a++)), t++)
                        }
                        return v.adsCount += a, s
                    }

                    function U(e) {
                        v.inverse ? v.comments.unshift(...e.reverse()) : v.comments.push(...e)
                    }

                    function E() {
                        if (v.ads && v.ads.header && !v.headerAd) {
                            const e = v.ads.forceSmall || u.isMobile() ? c.ADS.DETAIL.commentsHeaderSmall : c.ADS.DETAIL.commentsHeader;
                            v.headerAd = k(e, v.adsCount++)
                        }
                    }

                    function L(e) {
                        if (E(), v.transaction) {
                            v.status.loading = !1, v.status.loadingMore = !1;
                            const e = v.content.review;
                            return e.space = v.content.buyer, void(v.comments = [e])
                        }
                        return b.list(v.model.objectId, v.objectType, e, v.highlight).then((e) => {
                            v.status.loading = !1, v.status.loaded = !0, v.status.loadingMore = !1, v.pagination = e.pagination;
                            const t = v.ads ? P(e.items) : e.items;
                            U(t);
                            const s = A();
                            v.pagination.next = v.pagination.total > v.pagination.limit * v.pagination.page + s, M(), v.repositionModal(), a.autoFocusComment && (v.focusText(), a.autoFocusComment = !1), o(() => {
                                a.$broadcast('holonis_commentsLoaded')
                            })
                        })
                    }

                    function M() {
                        v.placeholder = v.comments.length ? 'Say something...' : 'Be the first to write a comment...'
                    }

                    function D() {
                        return v.status.focused && v.model.body && 0 < v.model.body.length ? !1 : void v.$apply(() => {
                            v.status.focused = !1
                        })
                    }
                    const N = angular.element('body'),
                        O = [];
                    if (e.params.highlight) {
                        const t = e.params.highlight.split(':');
                        'comment' === t[0] && (v.highlight = t[1])
                    }
                    v.hasCover = t.get(v, 'content.cover'), v.space = a.primarySpace, v.comments = [];
                    const H = (e) => {
                        e.scrollTo(0, e.scrollHeight)
                    };
                    a.postDeleteEvent && a.postDeleteEvent(), v.$on('$destroy', () => {
                        O.map((e) => e.destroy()), x()
                    }), a.postDeleteEvent = a.$on('post.delete', (e, a, s) => {
                        b.del(a).then(() => {
                            const e = t.findIndex(v.comments, {
                                id: a
                            });
                            v.comments.splice(e, 1), !v.comments.length && v.pagination && v.pagination.next && v.showMore(), w()
                        }).then(s.resolve.bind(s), s.reject.bind(s))
                    }), v.status = {
                        logged: !!a.primarySpace,
                        focused: !1,
                        loading: !0,
                        allowed: !1,
                        sending: !1,
                        loadingMore: !1
                    }, v.model = {
                        body: null,
                        objectId: null,
                        objectType: null
                    }, v.$watch('objectId', (e) => {
                        e && (v.model.objectId = v.objectId, v.model.objectType = v.objectType, L().then(() => {
                            v.modalWithoutMedia() && o(() => {
                                T()
                            })
                        }))
                    }), v.showLogin = function() {
                        const e = {
                            url: i.absUrl(),
                            timestamp: Date.now()
                        };
                        return sessionStorage.setItem('redirectToUrlAfterLogin', JSON.stringify(e)), o(n.showLoginPrompt)
                    }, v.showMore = function() {
                        v.status.loadingMore = !0;
                        const e = v.comments.filter((e) => !e.hightlighted && 'ads' !== e.type),
                            a = v.inverse ? t.first(e) : t.last(e);
                        L(a && a.created)
                    }, v.$watch('model.body', (e) => {
                        v.status.allowed = e && 0 < e.length
                    }), v.focus = function(e) {
                        v.status.focused = !0, e && e.stopPropagation()
                    }, v.checkAuthAndFocusText = (e) => v.status.logged ? v.focusText(e) : v.showLogin(), v.focusText = function(e) {
                        setTimeout(() => {
                            $('.ds-modal-visible .ds-comment-input .ds-textarea, .ds-textarea').focus()
                        }, 500), v.focus(e)
                    }, v.publish = function() {
                        const e = document.querySelector('.ds-modal'),
                            t = document.querySelector('.ds-comment-list');
                        return !v.status.sending && v.model.body && v.status.allowed && void(v.status.sending = !0, b.add(v.model).then((a) => {
                            dataLayer.push({
                                eventCategory: v.objectType + 'Action',
                                event: 'Commented on a ' + v.objectType,
                                eventAction: 'Comment',
                                eventLabel: v.content.vanityUrl
                            }), v.inverse ? (v.comments.push(a), v.scrollToEnd()) : v.comments.unshift(a), v.content && y(), v.repositionModal(), v.status.sending = !1, v.model.body = '', M(), o(() => {
                                e && H(e), t && H(t)
                            })
                        }).catch((e) => {
                            s.error(e.data ? e.data.message : 'Unknown error')
                        }))
                    }, v.scrollToEnd = function() {
                        v.scroller && o(() => {
                            const e = h.parents(v.scroller);
                            e.each(function() {
                                const e = $(this);
                                e.animate({
                                    scrollTop: e.prop('scrollHeight')
                                }, 500)
                            })
                        })
                    }, v.pressed = function(e) {
                        13 !== e.keyCode || e.shiftKey || (v.publish(), e.preventDefault())
                    }, v.repositionModal = function() {
                        l.repositionAll()
                    }, v.modalWithoutMedia = function() {
                        return !v.hasCover && !0 === v.modal
                    }, N.off('click', D).on('click', D), v.adsCount = 0, v.modalWithoutMedia() || T()
                }],
                templateUrl: 'public/modules/ds/comments/templates/comments.html'
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('dsCommentsApi', ['$log', 'Restangular', '_', function(e, t, a) {
            return {
                removeCommentFromScope: function() {},
                del: function(e) {
                    return t.one('comments/' + e).post('delete').then((e) => e.plain())
                },
                add: function(e) {
                    const s = a.pick(e, ['objectId', 'objectType', 'body']);
                    return t.one('comments/add').post('', s).then((e) => e.plain())
                },
                list: function(e, a, s, i) {
                    return t.one('comments').all(e).customGET(a, {
                        created: s,
                        highlight: i
                    }).then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('ds.confirm').controller('DsConfirmController', ['$q', '$log', '$scope', function(e, t, a) {
            t.debug('Loading Ds Confirm Controller Controller'), a.confirm = function() {
                const t = _.get(a.params, 'confirm.action') && a.params.confirm.action();
                return a.loaded = !1, e.resolve(t).then((e) => (a.loaded = !0, a.close(), e))
            }, a.cancel = function() {
                const t = _.get(a.params, 'cancel.action') && a.params.cancel.action();
                return a.loaded = !1, e.resolve(t).then((e) => (a.loaded = !0, a.close(), e))
            }, a.$on('ds.modal.close', () => _.get(a.params, 'close.action') && a.params.close.action())
        }])
    }(),
    function() {
        angular.module('items').factory('dsConfirm', ['$rootScope', 'dsModal', '_', function(e, t) {
            return {
                show: function(e) {
                    return e ? t.create({
                        template: 'public/modules/ds/confirm/templates/confirm.html',
                        controller: 'DsConfirmController',
                        title: e.title || 'Confirm',
                        scope: {
                            params: e,
                            additionalClass: 'ds-confirm'
                        },
                        close: e.close
                    }).then((e) => {
                        e.show()
                    }) : void console.error('You should define params to DsConfirm')
                }
            }
        }])
    }(),
    function() {
        var e = Math.round,
            t = Math.min;
        angular.module('ds.cover').directive('dsCover', ['$rootScope', '$log', '_', '$timeout', 'dsTooltip', 'Cropper', 'media', 'DsImageUploaderService', function(a, s, i, o, n, l, r, d) {
            return s.debug('Loading DsCover Controller'), {
                restrict: 'E',
                transclude: !0,
                scope: {
                    editing: '=?',
                    uploading: '=?',
                    editable: '=?',
                    spaceId: '=',
                    data: '=?',
                    hasPlaceholder: '=?',
                    aspectWidth: '=?',
                    aspectHeight: '=?'
                },
                controller: ['$scope', '$element', '$window', '$filter', function(s, n, l, c) {
                    function p() {
                        s.state.changing = !1, s.$broadcast(s.showEvent), o(() => {
                            window.__cropper = s.cropper.first
                        })
                    }

                    function m() {
                        o(() => {
                            s.style.container.height = b()
                        })
                    }

                    function u(e) {
                        const a = s.cropper.first('getImageData');
                        if (!a.naturalWidth) return o(() => {
                            u(e)
                        }, 200);
                        s.data.cover.url = s.state.preview;
                        const i = t(l.innerWidth, f.width) / f.width,
                            n = s.data.cover.crop[0],
                            r = s.data.cover.crop[1],
                            d = s.data.cover.crop[2],
                            c = a.naturalWidth,
                            p = d * c * i,
                            m = p * f.ratio,
                            g = {
                                left: n * i,
                                top: r * i,
                                width: e ? f.width : p,
                                height: m
                            };
                        s.cropper.first('setCanvasData', g)
                    }

                    function g(e) {
                        const t = new Image,
                            a = e.source || e.url;
                        s.draft.url = a, s.state.changing = !0, s.editing = !0, s.mainNav.addClass('disabled'), t.onload = function() {
                            s.state.changing = !1, s.state.choosing = !1, s.state.imageLoaded = !1, s.state.preview = s.draft.url, s.repositionImage(!0)
                        }, t.src = a
                    }

                    function v(t, a, i) {
                        if (t !== a) {
                            const o = i ? -0.1 : 0.1;
                            for (a = a || 1; i ? a > t : a < t;) a = e(10 * (a += o)) / 10, s.cropper.first('zoom', o)
                        }
                    }

                    function h() {
                        s.draft = {}
                    }

                    function b() {
                        return l.innerWidth >= f.width ? f.height : l.innerWidth * f.ratio
                    }
                    const f = {
                            width: s.aspectWidth,
                            height: s.aspectHeight,
                            ratio: s.aspectHeight / s.aspectWidth
                        },
                        y = c('processImage'),
                        w = c('exif');
                    s.getCoverOverlayImage = function() {
                            return w(s.data.cover.originalUrl || s.data.cover.url || s.data.headerMediaUrl)
                        }, s.getCoverImage = function() {
                            return s.state.preview || y(s.data.cover, 1237) || 'public/images/cover-default.png?1'
                        }, s.state = {}, s.draft = {}, s.cropper = {}, s.params = {
                            zoomin: function(e) {
                                const a = s.cropper.first('getImageData'),
                                    i = s.cropper.first('getCanvasData'),
                                    o = t(l.innerWidth, f.width) / f.width,
                                    n = i.width / o,
                                    r = a.naturalWidth;
                                2 < n / r && (e.preventDefault(), e.stopPropagation())
                            },
                            width: f.width,
                            height: f.height
                        }, s.cropperProxy = 'cropper.first', s.showEvent = 'show', s.hideEvent = 'hide', s.style = {
                            container: {
                                height: b()
                            }
                        }, s.mainNav = $('.ds-nav-desktop'), s.data.cover = s.data.cover || {
                            originalUrl: s.data.headerMediaUrl,
                            url: s.data.headerMediaUrl,
                            crop: [0, 0, 1]
                        }, s.slider = {
                            options: {
                                floor: 0,
                                ceil: 2,
                                step: 0.05,
                                precision: 1,
                                showSelectionBar: !0
                            }
                        },
                        function() {
                            m()
                        }(), s.slide = function(t) {
                            const a = e(10 * (s.draft.z + t)) / 10;
                            a < s.slider.options.floor || a > s.slider.options.ceil || (s.draft.z = a)
                        }, s.$watch('draft.z', (e, t) => {
                            if (e !== t && i.get(s, 'cropper.first') && t && !(e < s.slider.options.floor) && !(e > s.slider.options.ceil)) {
                                s.cropper.first('getCanvasData');
                                v(e, t, t >= e)
                            }
                        }), s.changeImage = function() {
                            a.pickMediaFile = !0, s.state.choosing = !0, r.pickFile(null, null, s.spaceId).then((e) => {
                                g(e)
                            }).catch(() => {
                                s.state.choosing = !1
                            })
                        }, s.repositionImage = function(e) {
                            s.data.cover = s.data.cover || {}, s.state.loadingEdit = !0, s.editing = !0;
                            const t = new Image;
                            t.onload = function() {
                                s.state.loadingEdit = !1
                            }, s.draft.x = 0, s.draft.y = 0, s.draft.z = 0, s.state.originalCover = i.assign({}, s.data.cover), s.draft.url || (s.draft.url = s.data.cover.originalUrl), e || (s.draft.x = s.data.cover.crop[0], s.draft.y = s.data.cover.crop[1], s.draft.z = s.data.cover.crop[2], s.draft.url = s.data.cover.originalUrl), s.cropper.first && (s.cropper.first('destroy'), $('.cropper-container').remove()), o(() => {
                                p(), t.src = s.draft.url, o(() => {
                                    u(e), s.mainNav.addClass('disabled')
                                })
                            })
                        }, s.save = function() {
                            if (!s.cropper.first) return;
                            const e = s.cropper.first('getImageData'),
                                a = s.cropper.first('getCanvasData'),
                                i = t(l.innerWidth, f.width) / f.width,
                                o = a.left / i,
                                n = a.top / i,
                                r = a.width / i,
                                c = e.naturalWidth,
                                p = s.draft.url || s.data.cover.originalUrl || s.data.cover.url,
                                m = s.cropper.first('getCroppedCanvas', {
                                    width: f.width,
                                    height: f.height
                                });
                            m && m.toDataURL && (s.state.preview = m.toDataURL('image/jpeg'), s.uploading = !0, d.upload(d.dataURItoBlob(s.state.preview), null, s).then((e) => {
                                s.data.cover = {
                                    url: e.url,
                                    originalUrl: p,
                                    crop: [o, n, r / c]
                                }, s.uploading = !1, s.editing = !1, s.mainNav.removeClass('disabled'), h()
                            }))
                        }, s.discard = function() {
                            s.data.cover = s.state.originalCover || s.data.cover, s.state.preview = null, s.mainNav.removeClass('disabled'), s.editing = !1, s.state.choosing = !1, s.state.changing = !1, h()
                        }, angular.element(l).on('resize', m), s.$on('$destroy', function() {
                            angular.element(l).off('resize', m)
                        })
                }],
                templateUrl: 'public/modules/ds/cover/templates/cover.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.cover').factory('DsCoverService', ['$rootScope', 'dsModal', '_', function() {
            return {}
        }])
    }(),
    function() {
        angular.module('ds.cropper').directive('dsCropper', ['$q', '$parse', function(e, t) {
            function a(t, a) {
                t = t || {};
                let i = e.when(t);
                return t.maximize && (i = s(t, a)), i
            }

            function s(e, t) {
                return i(t).then((t) => (e.data = t, e))
            }

            function i(t) {
                const a = e.defer(),
                    s = new Image;
                return s.onload = function() {
                    a.resolve({
                        width: s.width,
                        height: s.height
                    })
                }, s.src = t.src, a.promise
            }
            return {
                restrict: 'A',
                scope: {
                    options: '=ngCropperOptions',
                    proxy: '=ngCropperProxy',
                    showEvent: '=ngCropperShow',
                    hideEvent: '=ngCropperHide'
                },
                link(e, s) {
                    function i(a) {
                        if (e.proxy) {
                            const s = t(e.proxy).assign;
                            s(e.$parent, a.cropper.bind(a))
                        }
                    }
                    let o = !1;
                    e.$on(e.showEvent, () => {
                        o || (o = !0, a(e.options, s[0]).then((e) => {
                            i(s), s.cropper(e)
                        }))
                    }), e.$on(e.hideEvent, () => {
                        o && (o = !1, s.cropper('destroy'))
                    }), e.$watch('options.disabled', (e) => {
                        o && (e && s.cropper('disable'), !e && s.cropper('enable'))
                    })
                }
            }
        }]).service('Cropper', ['$q', function(e) {
            function t(t) {
                const a = e.defer(),
                    s = new Image;
                return s.onload = function(t) {
                    a.resolve(t.target)
                }, s.src = t, a.promise
            }

            function a(e) {
                const t = document.createElement('canvas');
                return t.width = e.width, t.height = e.height, t.style.display = 'none', document.body.appendChild(t), t
            }

            function s(e) {
                e.parentElement.removeChild(e)
            }
            this.encode = function(t) {
                const a = e.defer(),
                    s = new FileReader;
                return s.onload = function(t) {
                    a.resolve(t.target.result)
                }, s.readAsDataURL(t), a.promise
            }, this.decode = function(e) {
                const t = e.split(';')[0],
                    a = t.split(':')[1],
                    s = atob(e.split(',')[1]),
                    o = new Uint8Array(s.length);
                for (let t = 0; t < s.length; t++) o[t] = s.charCodeAt(t);
                return new Blob([o], {
                    type: a
                })
            }, this.crop = function(e, i) {
                const o = this.decode;
                return this.encode(e).then(t).then((t) => {
                    const n = a(i),
                        l = n.getContext('2d');
                    l.drawImage(t, i.x, i.y, i.width, i.height, 0, 0, i.width, i.height);
                    const r = n.toDataURL(e.type);
                    return s(n), o(r)
                })
            }, this.scale = function(e, i) {
                const o = this.decode;
                return this.encode(e).then(t).then((t) => {
                    const n = t.height,
                        l = t.width;
                    let r, d, c;
                    angular.isNumber(i) && (r = i, d = n * r, c = l * r), angular.isObject(i) && (r = l / n, d = i.height, c = i.width, d && !c ? c = d * r : c && !d && (d = c / r));
                    const p = a(i),
                        m = p.getContext('2d');
                    p.height = d, p.width = c, m.drawImage(t, 0, 0, l, n, 0, 0, c, d);
                    const u = p.toDataURL(e.type);
                    return s(p), o(u)
                })
            }
        }])
    }(), (() => {
        function e(e) {
            return 'number' == typeof e && !isNaN(e)
        }

        function t(e) {
            return 'undefined' == typeof e
        }

        function a(t, a) {
            const s = [];
            return e(a) && s.push(a), s.slice.apply(t, s)
        }

        function s(e, t) {
            const s = a(arguments, 2);
            return function() {
                return e.apply(t, s.concat(a(arguments)))
            }
        }

        function i(e) {
            const t = e.match(/^(https?:)\/\/([^:/?#]+):?(\d*)/i);
            return t && (t[1] !== g.protocol || t[2] !== g.hostname || t[3] !== g.port)
        }

        function o(e) {
            const t = 'timestamp=' + new Date().getTime();
            return e + (-1 === e.indexOf('?') ? '?' : '&') + t
        }

        function n(e) {
            return e ? 'rotate(' + e + 'deg)' : 'none'
        }

        function l(e, t) {
            const a = z(e.degree) % 180,
                s = (90 < a ? 180 - a : a) * c / 180,
                i = j(s),
                o = Y(s),
                n = e.width,
                l = e.height,
                r = e.aspectRatio;
            let d, p;
            return t ? (d = n / (o + i / r), p = d / r) : (d = n * o + l * i, p = n * i + l * o), {
                width: d,
                height: p
            }
        }

        function r(e, t) {
            const a = $('<canvas>')[0],
                s = a.getContext('2d'),
                i = t.naturalWidth,
                o = t.naturalHeight,
                n = t.rotate,
                r = l({
                    width: i,
                    height: o,
                    degree: n
                });
            return n ? (a.width = r.width, a.height = r.height, s.save(), s.translate(r.width / 2, r.height / 2), s.rotate(n * c / 180), s.drawImage(e, -i / 2, -o / 2, i, o), s.restore()) : (a.width = i, a.height = o, s.drawImage(e, 0, 0, i, o)), a
        }

        function d(e, t) {
            this.$element = $(e);
            const a = p(m.width(), t.width),
                s = a * (t.height / t.width),
                i = t.width / t.height,
                o = this.$element[0].naturalHeight,
                n = this.$element[0].naturalWidth,
                l = o > n ? a : o < s && n / o > i ? n * (s / o) : a,
                r = {
                    viewMode: 1,
                    dragMode: 'none',
                    cropBoxMovable: !1,
                    cropBoxResizable: !1,
                    toggleDragModeOnDblclick: !1,
                    rotatable: !1,
                    autoCropArea: 1,
                    autoCrop: !0,
                    aspectRatio: i,
                    zoomOnWheel: !1,
                    zoomOnTouch: 768 > m.width(),
                    guides: !1,
                    resizable: !1,
                    minCanvasWidth: l,
                    minCanvasHeight: s,
                    minCropBoxWidth: a,
                    minCropBoxHeight: s
                };
            this.options = $.extend({}, d.DEFAULTS, $.isPlainObject(r) && r, $.isPlainObject(t) && t), this.ready = !1, this.built = !1, this.rotated = !1, this.cropped = !1, this.disabled = !1, this.canvas = null, this.cropBox = null, this.load()
        }
        var c = Math.PI,
            p = Math.min;
        const m = $(window),
            u = $(document),
            g = window.location,
            v = '.cropper',
            h = 'preview' + v,
            b = /^(e|n|w|s|ne|nw|sw|se|all|crop|move|zoom)$/,
            f = 'cropper-modal',
            y = 'cropper-hide',
            w = 'cropper-hidden',
            k = 'cropper-move',
            S = 'cropper-crop',
            C = 'cropper-disabled',
            x = 'mousedown touchstart',
            T = 'mousemove touchmove',
            I = 'mouseup mouseleave touchend touchleave touchcancel',
            A = 'wheel mousewheel DOMMouseScroll',
            P = 'dblclick',
            U = 'resize' + v,
            E = 'build' + v,
            L = 'built' + v,
            M = 'dragstart' + v,
            D = 'dragmove' + v,
            N = 'dragend' + v,
            O = 'zoomin' + v,
            H = 'zoomout' + v,
            q = 'change' + v,
            F = $.isFunction($('<canvas>')[0].getContext),
            B = Math.sqrt,
            R = p,
            V = Math.max,
            z = Math.abs,
            j = Math.sin,
            Y = Math.cos,
            W = parseFloat,
            G = {};
        G.load = function(e) {
            const t = this.options,
                a = this.$element;
            let s, n, l, r;
            if (!e)
                if (a.is('img')) {
                    if (!a.attr('src')) return;
                    e = a.prop('src')
                } else a.is('canvas') && F && (e = a[0].toDataURL());
            e && (l = $.Event(E), a.one(E, t.build).trigger(l), l.isDefaultPrevented() || (t.checkImageOrigin && i(e) && (s = ' crossOrigin="anonymous"', !a.prop('crossOrigin') && (n = o(e))), this.$clone = r = $('<img' + (s || '') + ' src="' + (n || e) + '">'), r.one('load', $.proxy(function() {
                const t = r[0],
                    a = t.naturalWidth || t.width,
                    s = t.naturalHeight || t.height;
                this.image = {
                    naturalWidth: a,
                    naturalHeight: s,
                    aspectRatio: a / s,
                    rotate: 0
                }, this.url = e, this.ready = !0, this.build()
            }, this)).one('error', () => {
                r.remove()
            }), r.addClass(y).insertAfter(a)))
        }, G.build = function() {
            const e = this.$element,
                t = this.$clone,
                a = this.options;
            let s, i, o;
            this.ready && (this.built && this.unbuild(), this.$cropper = s = $(d.TEMPLATE), e.addClass(w), t.removeClass(y), this.$container = e.parent().append(s), this.$canvas = s.find('.cropper-canvas').append(t), this.$dragBox = s.find('.cropper-drag-box'), this.$cropBox = i = s.find('.cropper-crop-box'), this.$viewBox = s.find('.cropper-view-box'), this.$face = o = i.find('.cropper-face'), this.addListeners(), this.initPreview(), a.aspectRatio = W(a.aspectRatio) || NaN, a.autoCrop ? (this.cropped = !0, a.modal && this.$dragBox.addClass(f)) : i.addClass(w), a.background && s.addClass('cropper-bg'), !a.highlight && o.addClass('cropper-invisible'), !a.guides && i.find('.cropper-dashed').addClass(w), a.cropBoxMovable && o.addClass(k).data('drag', 'all'), !a.cropBoxResizable && i.find('.cropper-line, .cropper-point').addClass(w), this.setDragMode(a.dragCrop ? 'crop' : a.movable ? 'move' : 'none'), this.built = !0, this.render(), this.setData(a.data), e.one(L, a.built).trigger(L))
        }, G.unbuild = function() {
            this.built && (this.built = !1, this.initialImage = null, this.initialCanvas = null, this.initialCropBox = null, this.container = null, this.canvas = null, this.cropBox = null, this.removeListeners(), this.resetPreview(), this.$preview = null, this.$viewBox = null, this.$cropBox = null, this.$dragBox = null, this.$canvas = null, this.$container = null, this.$cropper.remove(), this.$cropper = null)
        }, $.extend(G, {
            render() {
                this.initContainer(), this.initCanvas(), this.initCropBox(), this.renderCanvas(), this.cropped && this.renderCropBox()
            }, initContainer() {
                const e = this.$element,
                    t = this.$container,
                    a = this.$cropper,
                    s = this.options;
                a.addClass(w), e.removeClass(w), a.css(this.container = {
                    width: V(t.width(), W(s.minContainerWidth) || 200),
                    height: V(t.height(), W(s.minContainerHeight) || 100)
                }), e.addClass(w), a.removeClass(w)
            }, initCanvas() {
                const e = this.container,
                    t = e.width,
                    a = e.height,
                    s = this.image,
                    i = s.aspectRatio,
                    o = {
                        aspectRatio: i,
                        width: t,
                        height: a
                    };
                a * i > t ? o.height = t / i : o.width = a * i, o.oldLeft = o.left = (t - o.width) / 2, o.oldTop = o.top = (a - o.height) / 2, this.canvas = o, this.limitCanvas(!0, !0), this.initialImage = $.extend({}, s), this.initialCanvas = $.extend({}, o)
            }, limitCanvas(e, t) {
                const a = this.options,
                    s = a.strict,
                    i = this.container,
                    o = i.width,
                    n = i.height,
                    l = this.canvas,
                    r = l.aspectRatio,
                    d = this.cropBox,
                    c = this.cropped && d,
                    p = this.initialCanvas || l,
                    m = p.width,
                    u = p.height;
                let g, v;
                e && (g = W(a.minCanvasWidth) || 0, v = W(a.minCanvasHeight) || 0, g ? (s && (g = V(c ? d.width : m, g)), v = g / r) : v ? (s && (v = V(c ? d.height : u, v)), g = v * r) : s && (c ? (g = d.width, v = d.height, v * r > g ? g = v * r : v = g / r) : (g = m, v = u)), $.extend(l, {
                    minWidth: g,
                    minHeight: v,
                    maxWidth: Infinity,
                    maxHeight: Infinity
                })), t && (s ? c ? (l.minLeft = R(d.left, d.left + d.width - l.width), l.minTop = R(d.top, d.top + d.height - l.height), l.maxLeft = d.left, l.maxTop = d.top) : (l.minLeft = R(0, o - l.width), l.minTop = R(0, n - l.height), l.maxLeft = V(0, o - l.width), l.maxTop = V(0, n - l.height)) : (l.minLeft = -l.width, l.minTop = -l.height, l.maxLeft = o, l.maxTop = n))
            }, renderCanvas(e) {
                const t = this.options,
                    a = this.canvas,
                    s = this.image;
                let i, o;
                this.rotated && (this.rotated = !1, o = l({
                    width: s.width,
                    height: s.height,
                    degree: s.rotate
                }), i = o.width / o.height, i !== a.aspectRatio && (a.left -= (o.width - a.width) / 2, a.top -= (o.height - a.height) / 2, a.width = o.width, a.height = o.height, a.aspectRatio = i, this.limitCanvas(!0, !1))), (a.width > a.maxWidth || a.width < a.minWidth) && (a.left = 0 < a.oldLeft ? 0 : a.oldLeft), (a.height > a.maxHeight || a.height < a.minHeight) && (a.top = a.oldTop), a.width = R(V(a.width, a.minWidth), a.maxWidth), a.height = R(V(a.height, a.minHeight), a.maxHeight), this.limitCanvas(!1, !0), a.oldLeft = a.left = R(V(a.left, a.minLeft), a.maxLeft), a.oldTop = a.top = R(V(a.top, a.minTop), a.maxTop), this.$canvas.css({
                    width: a.width,
                    height: a.height,
                    left: a.left,
                    top: a.top
                }), this.renderImage(), this.cropped && t.strict && this.limitCropBox(!0, !0), e && this.output()
            }, renderImage() {
                const e = this.canvas,
                    t = this.image;
                let a;
                t.rotate && (a = l({
                    width: e.width,
                    height: e.height,
                    degree: t.rotate,
                    aspectRatio: t.aspectRatio
                }, !0)), $.extend(t, a ? {
                    width: a.width,
                    height: a.height,
                    left: (e.width - a.width) / 2,
                    top: (e.height - a.height) / 2
                } : {
                    width: e.width,
                    height: e.height,
                    left: 0,
                    top: 0
                }), this.$clone.css({
                    width: t.width,
                    height: t.height,
                    marginLeft: t.left,
                    marginTop: t.top,
                    transform: n(t.rotate)
                })
            }, initCropBox() {
                const e = this.options,
                    t = this.canvas,
                    a = e.aspectRatio,
                    s = W(e.autoCropArea) || 0.8,
                    i = {
                        width: t.width,
                        height: t.height
                    };
                a && (t.height * a > t.width ? i.height = i.width / a : i.width = i.height * a), this.cropBox = i, this.limitCropBox(!0, !0), i.width = R(V(i.width, i.minWidth), i.maxWidth), i.height = R(V(i.height, i.minHeight), i.maxHeight), i.width = V(i.minWidth, i.width * s), i.height = V(i.minHeight, i.height * s), i.oldLeft = i.left = t.left + (t.width - i.width) / 2, i.oldTop = i.top = t.top + (t.height - i.height) / 2, this.initialCropBox = $.extend({}, i)
            }, limitCropBox(e, t) {
                const a = this.options,
                    s = a.strict,
                    i = this.container,
                    o = i.width,
                    n = i.height,
                    l = this.canvas,
                    r = this.cropBox,
                    d = a.aspectRatio;
                let c, p;
                e && (c = W(a.minCropBoxWidth) || 0, p = W(a.minCropBoxHeight) || 0, r.minWidth = R(o, c), r.minHeight = R(n, p), r.maxWidth = R(o, s ? l.width : o), r.maxHeight = R(n, s ? l.height : n), d && (r.maxHeight * d > r.maxWidth ? (r.minHeight = r.minWidth / d, r.maxHeight = r.maxWidth / d) : (r.minWidth = r.minHeight * d, r.maxWidth = r.maxHeight * d)), r.minWidth = R(r.maxWidth, r.minWidth), r.minHeight = R(r.maxHeight, r.minHeight)), t && (s ? (r.minLeft = V(0, l.left), r.minTop = V(0, l.top), r.maxLeft = R(o, l.left + l.width) - r.width, r.maxTop = R(n, l.top + l.height) - r.height) : (r.minLeft = 0, r.minTop = 0, r.maxLeft = o - r.width, r.maxTop = n - r.height))
            }, renderCropBox() {
                const e = this.options,
                    t = this.container,
                    a = t.width,
                    s = t.height,
                    i = this.cropBox;
                (i.width > i.maxWidth || i.width < i.minWidth) && (i.left = i.oldLeft), (i.height > i.maxHeight || i.height < i.minHeight) && (i.top = i.oldTop), i.width = R(V(i.width, i.minWidth), i.maxWidth), i.height = R(V(i.height, i.minHeight), i.maxHeight), this.limitCropBox(!1, !0), i.oldLeft = i.left = R(V(i.left, i.minLeft), i.maxLeft), i.oldTop = i.top = R(V(i.top, i.minTop), i.maxTop), e.movable && e.cropBoxMovable && this.$face.data('drag', i.width === a && i.height === s ? 'move' : 'all'), this.$cropBox.css({
                    width: i.width,
                    height: i.height,
                    left: i.left,
                    top: i.top
                }), this.cropped && e.strict && this.limitCanvas(!0, !0), this.disabled || this.output()
            }, output() {
                const e = this.options,
                    t = this.$element;
                this.preview(), e.crop && e.crop.call(t, this.getData()), t.trigger(q)
            }
        }), G.initPreview = function() {
            const e = this.url;
            this.$preview = $(this.options.preview), this.$viewBox.html('<img src="' + e + '">'), this.$preview.each(function() {
                const t = $(this);
                t.data(h, {
                    width: t.width(),
                    height: t.height(),
                    original: t.html()
                }).html('<img src="' + e + '" style="display:block;width:100%;min-width:0!important;min-height:0!important;max-width:none!important;max-height:none!important;image-orientation: 0deg!important">')
            })
        }, G.resetPreview = function() {
            this.$preview.each(function() {
                const e = $(this);
                e.html(e.data(h).original).removeData(h)
            })
        }, G.preview = function() {
            const e = this.image,
                t = this.canvas,
                a = this.cropBox,
                s = e.width,
                i = e.height,
                o = a.left - t.left - e.left,
                l = a.top - t.top - e.top,
                r = e.rotate;
            !this.cropped || this.disabled || (this.$viewBox.find('img').css({
                width: s,
                height: i,
                marginLeft: -o,
                marginTop: -l,
                transform: n(r)
            }), this.$preview.each(function() {
                const e = $(this),
                    t = e.data(h);
                let d = t.width / a.width,
                    c = t.width,
                    p = a.height * d;
                p > t.height && (d = t.height / a.height, c = a.width * d, p = t.height), e.width(c).height(p).find('img').css({
                    width: s * d,
                    height: i * d,
                    marginLeft: -o * d,
                    marginTop: -l * d,
                    transform: n(r)
                })
            }))
        }, G.addListeners = function() {
            const e = this.options,
                t = this.$element,
                a = this.$cropper;
            $.isFunction(e.dragstart) && t.on(M, e.dragstart), $.isFunction(e.dragmove) && t.on(D, e.dragmove), $.isFunction(e.dragend) && t.on(N, e.dragend), $.isFunction(e.zoomin) && t.on(O, e.zoomin), $.isFunction(e.zoomout) && t.on(H, e.zoomout), $.isFunction(e.change) && t.on(q, e.change), a.on(x, $.proxy(this.dragstart, this)), e.zoomable && e.mouseWheelZoom && a.on(A, $.proxy(this.wheel, this)), e.doubleClickToggle && a.on(P, $.proxy(this.dblclick, this)), u.on(T, this._dragmove = s(this.dragmove, this)).on(I, this._dragend = s(this.dragend, this)), e.responsive && m.on(U, this._resize = s(this.resize, this))
        }, G.removeListeners = function() {
            const e = this.options,
                t = this.$element,
                a = this.$cropper;
            $.isFunction(e.dragstart) && t.off(M, e.dragstart), $.isFunction(e.dragmove) && t.off(D, e.dragmove), $.isFunction(e.dragend) && t.off(N, e.dragend), $.isFunction(e.zoomin) && t.off(O, e.zoomin), $.isFunction(e.zoomout) && t.off(H, e.zoomout), $.isFunction(e.change) && t.off(q, e.change), a.off(x, this.dragstart), e.zoomable && e.mouseWheelZoom && a.off(A, this.wheel), e.doubleClickToggle && a.off(P, this.dblclick), u.off(T, this._dragmove).off(I, this._dragend), e.responsive && m.off(U, this._resize)
        }, $.extend(G, {
            resize() {
                const e = this.$container,
                    t = this.container;
                let a, s;
                if (this.disabled || !t) return;
                const o = e.width() / t.width;
                (1 != o || e.height() !== t.height) && (a = this.getCanvasData(), s = this.getCropBoxData(), this.render(), this.setCanvasData($.each(a, (e, t) => {
                    a[e] = t * o
                })), this.setCropBoxData($.each(s, (e, t) => {
                    s[e] = t * o
                })))
            }, dblclick() {
                this.disabled || (this.$dragBox.hasClass(S) ? this.setDragMode('move') : this.setDragMode('crop'))
            }, wheel(t) {
                const a = t.originalEvent
            }, dragstart(t) {
                const a = this.options,
                    s = t.originalEvent,
                    i = s && s.touches;
                let o = t,
                    e, n, l;
                if (!this.disabled) {
                    if (i) {
                        if (l = i.length, 1 < l)
                            if (a.zoomable && a.touchDragZoom && 2 === l) o = i[1], this.startX2 = o.pageX, this.startY2 = o.pageY, e = 'zoom';
                            else return;
                        o = i[0]
                    }
                    if (e = e || $(o.target).data('drag'), b.test(e)) {
                        if (t.preventDefault(), n = $.Event(M, {
                                originalEvent: s,
                                dragType: e
                            }), this.$element.trigger(n), n.isDefaultPrevented()) return;
                        this.dragType = e, this.cropping = !1, this.startX = o.pageX, this.startY = o.pageY, 'crop' === e && (this.cropping = !0, this.$dragBox.addClass(f))
                    }
                }
            }, dragmove(t) {
                const a = this.options,
                    s = t.originalEvent,
                    i = s && s.touches;
                let o = t;
                const e = this.dragType;
                let n, l;
                if (!this.disabled) {
                    if (i) {
                        if (l = i.length, 1 < l)
                            if (a.zoomable && a.touchDragZoom && 2 === l) o = i[1], this.endX2 = o.pageX, this.endY2 = o.pageY;
                            else return;
                        o = i[0]
                    }
                    if (e) {
                        if (t.preventDefault(), n = $.Event(D, {
                                originalEvent: s,
                                dragType: e
                            }), this.$element.trigger(n), n.isDefaultPrevented()) return;
                        this.endX = o.pageX, this.endY = o.pageY, this.change(o.shiftKey)
                    }
                }
            }, dragend(e) {
                const t = this.dragType;
                let a;
                if (!this.disabled && t) {
                    if (e.preventDefault(), a = $.Event(N, {
                            originalEvent: e.originalEvent,
                            dragType: t
                        }), this.$element.trigger(a), a.isDefaultPrevented()) return;
                    this.cropping && (this.cropping = !1, this.$dragBox.toggleClass(f, this.cropped && this.options.modal)), this.dragType = ''
                }
            }
        }), $.extend(G, {
            crop() {
                !this.built || this.disabled || (!this.cropped && (this.cropped = !0, this.limitCropBox(!0, !0), this.options.modal && this.$dragBox.addClass(f), this.$cropBox.removeClass(w)), this.setCropBoxData(this.initialCropBox))
            }, reset() {
                !this.built || this.disabled || (this.image = $.extend({}, this.initialImage), this.canvas = $.extend({}, this.initialCanvas), this.cropBox = $.extend({}, this.initialCropBox), this.renderCanvas(), this.cropped && this.renderCropBox())
            }, clear() {
                !this.cropped || this.disabled || ($.extend(this.cropBox, {
                    left: 0,
                    top: 0,
                    width: 0,
                    height: 0
                }), this.cropped = !1, this.renderCropBox(), this.limitCanvas(), this.renderCanvas(), this.$dragBox.removeClass(f), this.$cropBox.addClass(w))
            }, destroy() {
                const e = this.$element;
                this.ready ? (this.unbuild(), e.removeClass(w)) : this.$clone && this.$clone.remove(), e.removeData('cropper')
            }, replace(e) {
                !this.disabled && e && (this.options.data = null, this.load(e))
            }, enable() {
                this.built && (this.disabled = !1, this.$cropper.removeClass(C))
            }, disable() {
                this.built && (this.disabled = !0, this.$cropper.addClass(C))
            }, move(t, a) {
                const s = this.canvas;
                this.built && !this.disabled && this.options.movable && e(t) && e(a) && (s.left += t, s.top += a, this.renderCanvas(!0))
            }, zoom(e) {
                const t = this.canvas;
                let a, s, i;
                if (e = W(e), e && this.built && !this.disabled && this.options.zoomable) {
                    if (a = 0 < e ? $.Event(O) : $.Event(H), this.$element.trigger(a), a.isDefaultPrevented()) return;
                    e = -1 >= e ? 1 / (1 - e) : 1 >= e ? 1 + e : e, s = t.width * e, i = t.height * e, t.left -= (s - t.width) / 2, t.top -= (i - t.height) / 2, t.width = s, t.height = i, this.renderCanvas(!0), this.setDragMode('move')
                }
            }, rotate(e) {
                const t = this.image;
                e = W(e), e && this.built && !this.disabled && this.options.rotatable && (t.rotate = (t.rotate + e) % 360, this.rotated = !0, this.renderCanvas(!0))
            }, getData(e) {
                const t = this.cropBox,
                    a = this.canvas,
                    s = this.image;
                let o, l;
                return this.built && this.cropped ? (l = {
                    x: t.left - a.left,
                    y: t.top - a.top,
                    width: t.width,
                    height: t.height
                }, o = s.width / s.naturalWidth, $.each(l, (t, a) => {
                    a /= o, l[t] = e ? Math.round(a) : a
                })) : l = {
                    x: 0,
                    y: 0,
                    width: 0,
                    height: 0
                }, l.rotate = this.ready ? s.rotate : 0, l
            }, setData(t) {
                const a = this.image,
                    s = this.canvas,
                    i = {};
                let o;
                this.built && !this.disabled && $.isPlainObject(t) && (e(t.rotate) && t.rotate !== a.rotate && this.options.rotatable && (a.rotate = t.rotate, this.rotated = !0, this.renderCanvas(!0)), o = a.width / a.naturalWidth, e(t.x) && (i.left = t.x * o + s.left), e(t.y) && (i.top = t.y * o + s.top), e(t.width) && (i.width = t.width * o), e(t.height) && (i.height = t.height * o), this.setCropBoxData(i))
            }, getContainerData() {
                return this.built ? this.container : {}
            }, getImageData() {
                return this.ready ? this.image : {}
            }, getCanvasData() {
                const e = this.canvas;
                let t;
                return this.built && (t = {
                    left: e.left,
                    top: e.top,
                    width: e.width,
                    height: e.height
                }), t || {}
            }, setCanvasData(t) {
                const a = this.canvas || {},
                    s = a.aspectRatio || this.options.aspectRatio;
                this.built && !this.disabled && $.isPlainObject(t) && (e(t.left) && (a.left = t.left), e(t.top) && (a.top = t.top), e(t.width) ? (a.width = t.width, a.height = t.width / s) : e(t.height) && (a.height = t.height, a.width = t.height * s), this.renderCanvas(!0))
            }, getCropBoxData() {
                const e = this.cropBox;
                let t;
                return this.built && this.cropped && (t = {
                    left: e.left,
                    top: e.top,
                    width: e.width,
                    height: e.height
                }), t || {}
            }, setCropBoxData(t) {
                const a = this.cropBox,
                    s = this.options.aspectRatio;
                this.built && this.cropped && !this.disabled && $.isPlainObject(t) && (e(t.left) && (a.left = t.left), e(t.top) && (a.top = t.top), e(t.width) && (a.width = t.width), e(t.height) && (a.height = t.height), s && (e(t.width) ? a.height = a.width / s : e(t.height) && (a.width = a.height * s)), this.renderCropBox())
            }, getCroppedCanvas(e) {
                let t, a, s, i, o, n, l, d, c, p, m;
                if (this.built && this.cropped && F) return $.isPlainObject(e) || (e = {}), m = this.getData(), t = m.width, a = m.height, d = t / a, $.isPlainObject(e) && (o = e.width, n = e.height, o ? (n = o / d, l = o / t) : n && (o = n * d, l = n / a)), s = o || t, i = n || a, c = $('<canvas>')[0], c.width = s, c.height = i, p = c.getContext('2d'), e.fillColor && (p.fillStyle = e.fillColor, p.fillRect(0, 0, s, i)), p.drawImage.apply(p, function() {
                    const e = r(this.$clone[0], this.image),
                        s = e.width,
                        i = e.height,
                        o = [e];
                    let n = m.x,
                        d = m.y,
                        c, p, u, g, v, h;
                    return n <= -t || n > s ? n = c = u = v = 0 : 0 >= n ? (u = -n, n = 0, c = v = R(s, t + n)) : n <= s && (u = 0, c = v = R(t, s - n)), 0 >= c || d <= -a || d > i ? d = p = g = h = 0 : 0 >= d ? (g = -d, d = 0, p = h = R(i, a + d)) : d <= i && (g = 0, p = h = R(a, i - d)), o.push(n, d, c, p), l && (u *= l, g *= l, v *= l, h *= l), 0 < v && 0 < h && o.push(u, g, v, h), o
                }.call(this)), c
            }, setAspectRatio(e) {
                const a = this.options;
                this.disabled || t(e) || (a.aspectRatio = W(e) || NaN, this.built && (this.initCropBox(), this.cropped && this.renderCropBox()))
            }, setDragMode(e) {
                const t = this.options;
                let a, s;
                this.ready && !this.disabled && (a = !1, s = !0, e = 'move', this.$dragBox.data('drag', e).toggleClass(S, a).toggleClass(k, s), !t.cropBoxMovable && this.$face.data('drag', e).toggleClass(S, a).toggleClass(k, s))
            }
        }), G.change = function(e) {
            let t = this.dragType;
            const a = this.options,
                s = this.canvas,
                i = this.container,
                o = this.cropBox;
            let n = o.width,
                l = o.height,
                r = o.left,
                d = o.top;
            const c = r + n,
                p = d + l;
            let m = 0,
                u = 0,
                g = i.width,
                v = i.height,
                h = !0,
                b = a.aspectRatio;
            const f = {
                x: this.endX - this.startX,
                y: this.endY - this.startY
            };
            let y;
            switch (!b && e && (b = n && l ? n / l : 1), a.strict && (m = o.minLeft, u = o.minTop, g = m + R(i.width, s.width), v = u + R(i.height, s.height)), b && (f.X = f.y * b, f.Y = f.x / b), t) {
                case 'all':
                    r += f.x, d += f.y;
                    break;
                case 'e':
                    if (0 <= f.x && (c >= g || b && (d <= u || p >= v))) {
                        h = !1;
                        break
                    }
                    n += f.x, b && (l = n / b, d -= f.Y / 2), 0 > n && (t = 'w', n = 0);
                    break;
                case 'n':
                    if (0 >= f.y && (d <= u || b && (r <= m || c >= g))) {
                        h = !1;
                        break
                    }
                    l -= f.y, d += f.y, b && (n = l * b, r += f.X / 2), 0 > l && (t = 's', l = 0);
                    break;
                case 'w':
                    if (0 >= f.x && (r <= m || b && (d <= u || p >= v))) {
                        h = !1;
                        break
                    }
                    n -= f.x, r += f.x, b && (l = n / b, d += f.Y / 2), 0 > n && (t = 'e', n = 0);
                    break;
                case 's':
                    if (0 <= f.y && (p >= v || b && (r <= m || c >= g))) {
                        h = !1;
                        break
                    }
                    l += f.y, b && (n = l * b, r -= f.X / 2), 0 > l && (t = 'n', l = 0);
                    break;
                case 'ne':
                    if (b) {
                        if (0 >= f.y && (d <= u || c >= g)) {
                            h = !1;
                            break
                        }
                        l -= f.y, d += f.y, n = l * b
                    } else 0 <= f.x ? c < g ? n += f.x : 0 >= f.y && d <= u && (h = !1) : n += f.x, 0 >= f.y ? d > u && (l -= f.y, d += f.y) : (l -= f.y, d += f.y);
                    0 > n && 0 > l ? (t = 'sw', l = 0, n = 0) : 0 > n ? (t = 'nw', n = 0) : 0 > l && (t = 'se', l = 0);
                    break;
                case 'nw':
                    if (b) {
                        if (0 >= f.y && (d <= u || r <= m)) {
                            h = !1;
                            break
                        }
                        l -= f.y, d += f.y, n = l * b, r += f.X
                    } else 0 >= f.x ? r > m ? (n -= f.x, r += f.x) : 0 >= f.y && d <= u && (h = !1) : (n -= f.x, r += f.x), 0 >= f.y ? d > u && (l -= f.y, d += f.y) : (l -= f.y, d += f.y);
                    0 > n && 0 > l ? (t = 'se', l = 0, n = 0) : 0 > n ? (t = 'ne', n = 0) : 0 > l && (t = 'sw', l = 0);
                    break;
                case 'sw':
                    if (b) {
                        if (0 >= f.x && (r <= m || p >= v)) {
                            h = !1;
                            break
                        }
                        n -= f.x, r += f.x, l = n / b
                    } else 0 >= f.x ? r > m ? (n -= f.x, r += f.x) : 0 <= f.y && p >= v && (h = !1) : (n -= f.x, r += f.x), 0 <= f.y ? p < v && (l += f.y) : l += f.y;
                    0 > n && 0 > l ? (t = 'ne', l = 0, n = 0) : 0 > n ? (t = 'se', n = 0) : 0 > l && (t = 'nw', l = 0);
                    break;
                case 'se':
                    if (b) {
                        if (0 <= f.x && (c >= g || p >= v)) {
                            h = !1;
                            break
                        }
                        n += f.x, l = n / b
                    } else 0 <= f.x ? c < g ? n += f.x : 0 <= f.y && p >= v && (h = !1) : n += f.x, 0 <= f.y ? p < v && (l += f.y) : l += f.y;
                    0 > n && 0 > l ? (t = 'nw', l = 0, n = 0) : 0 > n ? (t = 'sw', n = 0) : 0 > l && (t = 'ne', l = 0);
                    break;
                case 'move':
                    s.left += f.x, s.top += f.y, this.renderCanvas(!0), h = !1;
                    break;
                case 'zoom':
                    this.zoom(function(e, t, a, s) {
                        const i = B(e * e + t * t),
                            o = B(a * a + s * s);
                        return (o - i) / i
                    }(z(this.startX - this.startX2), z(this.startY - this.startY2), z(this.endX - this.endX2), z(this.endY - this.endY2))), this.startX2 = this.endX2, this.startY2 = this.endY2, h = !1;
                    break;
                case 'crop':
                    f.x && f.y && (y = this.$cropper.offset(), r = this.startX - y.left, d = this.startY - y.top, n = o.minWidth, l = o.minHeight, 0 < f.x ? 0 < f.y ? t = 'se' : (t = 'ne', d -= l) : 0 < f.y ? (t = 'sw', r -= n) : (t = 'nw', r -= n, d -= l), !this.cropped && (this.cropped = !0, this.$cropBox.removeClass(w)));
            }
            h && (o.width = n, o.height = l, o.left = r, o.top = d, this.dragType = t, this.renderCropBox()), this.startX = this.endX, this.startY = this.endY
        }, $.extend(d.prototype, G), d.DEFAULTS = {
            aspectRatio: 1237 / 433,
            autoCropArea: 1,
            crop: null,
            data: null,
            preview: '',
            strict: !0,
            responsive: !0,
            checkImageOrigin: !0,
            modal: !1,
            guides: !1,
            highlight: !1,
            background: !1,
            autoCrop: !0,
            dragCrop: !1,
            movable: !0,
            rotatable: !1,
            zoomable: !0,
            touchDragZoom: 768 > m.width(),
            mouseWheelZoom: !1,
            cropBoxMovable: !1,
            cropBoxResizable: !1,
            doubleClickToggle: !1,
            minCanvasWidth: 0,
            minCanvasHeight: 0,
            minCropBoxWidth: 0,
            minCropBoxHeight: 0,
            minContainerWidth: 200,
            minContainerHeight: 100,
            build: null,
            built: null,
            dragstart: null,
            dragmove: null,
            dragend: null,
            zoomin: null,
            zoomout: null,
            change: null
        }, d.setDefaults = function(e) {
            $.extend(d.DEFAULTS, e)
        }, d.TEMPLATE = function(e, t) {
            return t = t.split(','), e.replace(/\d+/g, (e) => t[e])
        }('<0 6="5-container"><0 6="5-canvas"></0><0 6="5-2-9"></0><0 6="5-crop-9"><1 6="5-view-9"></1><1 6="5-8 8-h"></1><1 6="5-8 8-v"></1><1 6="5-face"></1><1 6="5-7 7-e" 3-2="e"></1><1 6="5-7 7-n" 3-2="n"></1><1 6="5-7 7-w" 3-2="w"></1><1 6="5-7 7-s" 3-2="s"></1><1 6="5-4 4-e" 3-2="e"></1><1 6="5-4 4-n" 3-2="n"></1><1 6="5-4 4-w" 3-2="w"></1><1 6="5-4 4-s" 3-2="s"></1><1 6="5-4 4-ne" 3-2="ne"></1><1 6="5-4 4-nw" 3-2="nw"></1><1 6="5-4 4-sw" 3-2="sw"></1><1 6="5-4 4-se" 3-2="se"></1></0></0>', 'div,span,drag,data,point,cropper,class,line,dashed,box'), d.other = $.fn.cropper, $.fn.cropper = function(e) {
            const s = a(arguments, 1);
            let i;
            return this.each(function() {
                const t = $(this);
                let a = t.data('cropper'),
                    o;
                a || t.data('cropper', a = new d(this, e)), 'string' == typeof e && $.isFunction(o = a[e]) && (i = o.apply(a, s))
            }), t(i) ? this : i
        }, $.fn.cropper.Constructor = d, $.fn.cropper.setDefaults = d.setDefaults, $.fn.cropper.noConflict = function() {
            return $.fn.cropper = d.other, this
        }
    })(),
    function() {
        angular.module('ds.cover').factory('DsCoverService', ['$rootScope', 'dsModal', '_', function() {
            return {}
        }])
    }(),
    function() {
        angular.module('core').controller('DataFormCreateController', ['$scope', '$timeout', 'notifyService', 'localStorageService', 'dataFormService', 'dsConfirm', 'constants', function(t, a, s, i, o, n, l) {
            const r = 'createFormHelpDismissed',
                d = {
                    name: 'phone',
                    active: !1,
                    required: !1
                },
                c = {
                    name: 'message',
                    active: !1,
                    required: !1
                };
            t.helpDismissed = i.get(r), t.emailPattern = l.VALIDATION.EMAIL_PATTERN, t.form ? (_.forEach(t.form.fields, (e) => {
                e.active === void 0 && (e.active = !0)
            }), !_.some(t.form.fields, {
                name: 'phone'
            }) && t.form.fields.splice(2, 0, d), !_.some(t.form.fields, {
                name: 'message'
            }) && t.form.fields.splice(3, 0, c)) : t.form = {
                fields: [{
                    name: 'name',
                    active: !0,
                    required: !0
                }, {
                    name: 'email',
                    active: !0,
                    required: !0
                }, d, c]
            }, t.phoneField = t.form.fields[2], t.messageField = t.form.fields[3];
            const p = _.cloneDeep(t.form);
            t.cancel = () => {
                n.show({
                    title: t.isEdit ? 'Edit form' : 'Add form',
                    message: `Are you sure you want to discard ${t.isEdit?'changes to ':''}this form?`,
                    confirm: {
                        text: 'Yes',
                        action() {
                            _.assign(t.form, p), t.close()
                        }
                    },
                    cancel: {
                        text: 'No'
                    }
                })
            }, t.dataFormClose = t.cancel, t.dismissHelp = () => {
                t.helpDismissed = !0, i.set(r, t.helpDismissed)
            }, t.onClose && t.$on('ds.modal.hide', t.onClose), t.dataFormFields = {
                name: {
                    name: 'name',
                    value: ''
                },
                email: {
                    name: 'email',
                    value: ''
                },
                phone: {
                    name: 'phone',
                    value: ''
                },
                message: {
                    name: 'message',
                    value: ''
                }
            }, t.dataForm = {
                reCaptchaType: 'v2',
                fields: [t.dataFormFields.name, t.dataFormFields.email, t.dataFormFields.phone, t.dataFormFields.message]
            }, t.submit = (e) => {
                e.$valid && (t.isSubmitting = !0, o.submit(t.form.id, t.dataForm).then((e) => {
                    t.submitResponse = e
                }).catch((e) => {
                    console.error(e), s.error('Failed to add form.')
                }).finally(() => {
                    t.isSubmitting = !1
                }))
            }, e()
        }]);
        const e = _.debounce(() => {
            Stretchy.resizeAll()
        }, 10)
    }(),
    function() {
        angular.module('core').factory('dataFormService', ['notifyService', '$q', 'Restangular', function(e, t, a) {
            return {
                add: (e) => a.all('/forms/add').post(e),
                update: (e) => a.all(`/forms/${e.id}`).customPUT(e),
                submit: (e, t) => a.all(`/forms/${e}/submit`).post(t)
            }
        }])
    }(),
    function() {
        angular.module('ds.ngCurrencyMask', []).directive('format', ['$filter', function(e) {
                return {
                    require: '?ngModel',
                    link(t, a, s, i) {
                        i && (i.$formatters.unshift(() => e(s.format)(i.$modelValue)), i.$parsers.unshift(() => (a.priceFormat({
                            prefix: '',
                            centsSeparator: ',',
                            thousandsSeparator: '.'
                        }), a[0].value)))
                    }
                }
            }]),
            function(e) {
                e.fn.priceFormat = function(t) {
                    var t = e.extend({
                        prefix: 'US$ ',
                        suffix: '',
                        centsSeparator: '.',
                        thousandsSeparator: ',',
                        limit: !1,
                        centsLimit: 2,
                        clearPrefix: !1,
                        clearSufix: !1,
                        allowNegative: !1,
                        insertPlusSign: !1
                    }, t);
                    return this.each(function() {
                        function a(e) {
                            let t = '';
                            for (let a = 0; a < e.length; a++) char_ = e.charAt(a), 0 == t.length && 0 == char_ && (char_ = !1), char_ && char_.match(p) && (h ? t.length < h && (t += char_) : t += char_);
                            return t
                        }

                        function s(e) {
                            for (; e.length < b + 1;) e = '0' + e;
                            return e
                        }

                        function i(t) {
                            let i = s(a(t)),
                                o = '',
                                n = 0;
                            0 == b && (g = '', l = '');
                            var l = i.substr(i.length - b, b);
                            let r = i.substr(0, i.length - b);
                            if (i = 0 == b ? r : r + g + l, v || '' != e.trim(v)) {
                                for (let e = r.length; 0 < e; e--) char_ = r.substr(e - 1, 1), n++, 0 == n % 3 && (char_ = v + char_), o = char_ + o;
                                o.substr(0, 1) == v && (o = o.substring(1, o.length)), i = 0 == b ? o : o + g + l
                            }
                            return w && (0 != r || 0 != l) && (-1 != t.indexOf('-') && t.indexOf('+') < t.indexOf('-') ? i = '-' + i : k ? i = '+' + i : i = '' + i), m && (i = m + i), u && (i += u), i
                        }

                        function o() {
                            let e = c.val(),
                                t = i(e);
                            e != t && c.val(t)
                        }

                        function n() {
                            let e = c.val();
                            c.val(m + e)
                        }

                        function l() {
                            let e = c.val();
                            c.val(e + u)
                        }

                        function r() {
                            if ('' != e.trim(m) && f) {
                                let e = c.val().split(m);
                                c.val(e[1])
                            }
                        }

                        function d() {
                            if ('' != e.trim(u) && y) {
                                let e = c.val().split(u);
                                c.val(e[0])
                            }
                        }
                        let c = e(this),
                            p = /[0-9]/,
                            m = t.prefix,
                            u = t.suffix,
                            g = t.centsSeparator,
                            v = t.thousandsSeparator,
                            h = t.limit,
                            b = t.centsLimit,
                            f = t.clearPrefix,
                            y = t.clearSuffix,
                            w = t.allowNegative,
                            k = t.insertPlusSign;
                        k && (w = !0), e(this).bind('keydown.price_format', function(t) {
                            let e = t.keyCode ? t.keyCode : t.which,
                                a = String.fromCharCode(e),
                                s = !1,
                                o = c.val(),
                                n = i(o + a);
                            (48 <= e && 57 >= e || 96 <= e && 105 >= e) && (s = !0), 8 == e && (s = !0), 9 == e && (s = !0), 13 == e && (s = !0), 46 == e && (s = !0), 37 == e && (s = !0), 39 == e && (s = !0), w && (189 == e || 109 == e) && (s = !0), k && (187 == e || 107 == e) && (s = !0), s || (t.preventDefault(), t.stopPropagation(), o != n && c.val(n))
                        }), e(this).bind('keyup.price_format', o), e(this).bind('focusout.price_format', o), f && (e(this).bind('focusout.price_format', function() {
                            r()
                        }), e(this).bind('focusin.price_format', function() {
                            n()
                        })), y && (e(this).bind('focusout.price_format', function() {
                            d()
                        }), e(this).bind('focusin.price_format', function() {
                            l()
                        })), 0 < e(this).val().length && (o(), r(), d())
                    })
                }, e.fn.unpriceFormat = function() {
                    return e(this).unbind('.price_format')
                }, e.fn.unmask = function() {
                    let t = e(this).val(),
                        a = '';
                    for (let e in t) isNaN(t[e]) && '-' != t[e] || (a += t[e]);
                    return a
                }
            }(jQuery)
    }(),
    function() {
        angular.module('ds.dynamic.input').directive('dsDynamicInput', ['$rootScope', '$log', '_', '$timeout', '$compile', function(e, t, a, s) {
            return t.debug('Loading DsDynamicInput Controller'), {
                restrict: 'E',
                transclude: !0,
                scope: {
                    ngModel: '=',
                    validate: '='
                },
                controller: ['$scope', '$element', function(e, t) {
                    function a(t) {
                        const a = Object.keys(e.ngModel[t]);
                        a.map((a) => {
                            e.ngModel[t][a] = null
                        })
                    }

                    function i(a) {
                        a = a || e.ngModel.length - 1, s(() => {
                            const e = angular.element(t),
                                s = angular.element(e.find('.ds-dynamic-input-row-wrapper')[a]),
                                i = s.find('input');
                            0 < i.length && i[0].focus()
                        })
                    }
                    e.ngModel = e.ngModel || [], e.add = function() {
                        e.ngModel.push({}), i()
                    }, e.remove = function(t) {
                        return 0 === t && 1 === e.ngModel.length ? a(t) : void e.ngModel.splice(t, 1)
                    }, 1 > e.ngModel.length && e.add()
                }],
                templateUrl: 'public/modules/ds/dynamic-input/templates/dynamic.input.html'
            }
        }])
    }(), angular.module('ds.embed').directive('dsAsyncEmbed', ['$compile', function(e) {
        return {
            restrict: 'E',
            template: '<div class="async-card ds-embed-async-card"></div>',
            link(t, a) {
                e('<ds-embed no-interaction="true" data="data.content.embedded[0] || data.content.embedded" content="data" hide-video="true"></ds-embed>')(t).appendTo(a)
            },
            replace: !0
        }
    }]),
    function() {
        angular.module('ds.embed').directive('dsEmbedDefault', ['$rootScope', '$log', '$sce', function(e, t) {
            return t.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                require: 'dsEmbed',
                scope: {
                    data: '=',
                    subType: '=',
                    noInteraction: '=',
                    content: '=',
                    dontOpenPost: '=?'
                },
                controller: ['$scope', '$sce', 'EngagementService', function(e, t, a) {
                    const s = e.data.length ? e.data[0] : e.data,
                        i = s.embedlyData;
                    if ('channel' === s.type && (s.hasGallery = s.block && 0 < s.block.length), e.playable = 'video' == s.mediaType || 'rich' == s.mediaType && i && 'soundcloud' == i.provider_name.toLowerCase(), e.isModal = e.playable || 'photo' == s.mediaType || 'link' == s.mediaType && i && 'facebook' == i.provider_name.toLowerCase() && -1 < i.url.search(/photos/) || 'rich' == s.mediaType && i && 'twitter' == i.provider_name.toLowerCase(), e.showHeader = 'holonis' === s.provider && 'share' === e.subType && 'deleted' !== s.status, i) {
                        let a = s.source || i.url;
                        a = 'http' == a.substring(0, 4) ? a : '//' + a, e.externalUrl = t.trustAsResourceUrl(a), 'rich' == s.mediaType && 'facebook' == i.provider_name.toLowerCase() && (i.url = e.externalUrl)
                    }
                    e.openPost = function(t) {
                        return !e.isModal || (e.dontOpenPost ? void 0 : (a.openPost(e.content), t.preventDefault(), t.stopPropagation(), !1))
                    }
                }],
                templateUrl: 'public/modules/ds/embed/templates/ds.embed.default.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.embed').directive('dsEmbed', ['$rootScope', '$log', '_', function(e, t, a) {
            return t.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    hideVideo: '=',
                    hideEngagement: '=',
                    editor: '=',
                    subType: '=?',
                    uploading: '=',
                    ctx: '=',
                    autoplay: '=',
                    data: '=',
                    force: '=',
                    content: '=',
                    noInteraction: '=',
                    showVideoInfo: '=',
                    hideVideoModal: '=',
                    typeLabel: '=',
                    dontOpenPost: '=?',
                    share: '=?'
                },
                controller: ['$scope', '$sce', function(e) {
                    e.type = e.force || a.get(e, 'data.type') || a.get(e, 'data[0].mediaType'), e.hideVideo = e.hideVideo && 'video' !== e.force, ('product' === e.type || 'service' === e.type) && (e.type = 'item'), e.share && (e.shareType = e.type, e.type = 'share');
                    const t = 60;
                    e.data.ratio = e.data.ratio || (e.content ? 100 * e.content.content.ratio || t : t)
                }],
                templateUrl: 'public/modules/ds/embed/templates/ds.embed.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.embed').directive('dsEmbedPost', ['$rootScope', '$log', '_', 'EngagementService', 'TilesService', '$filter', function(e, t, a, s, i, o) {
            t.debug('Loading DsEmbedPost Controller');
            const n = o('processImage');
            return {
                replace: !0,
                restrict: 'E',
                require: 'dsEmbed',
                scope: {
                    data: '=',
                    hideEngagement: '=',
                    noInteraction: '=',
                    typeLabel: '='
                },
                controller: ['$scope', function(e) {
                    e.data = i.normalizeItem(e.data), e.content = {}, e.content.coverData = e.data.content.coverData, e.content.image = e.data.content.cover || e.data.headerMediaUrl || a.get(e.data, 'block[0].embedded[0].source'), e.content.isImage = 'media' === a.get(e.data, 'block[0].embedded[0].type'), e.content.text = 'post' == e.data.type ? a.get(e.data, 'content.description') : a.get(e.data, 'content.description') || e.data.description || a.get(e.data, 'embed.content') || a.get(e.data, 'block[0].description'), e.content.title = 'post' == e.data.type ? '' : a.get(e.data, 'content.title') || e.data.name || a.get(e.data, 'embed.caption'), e.content.embedded = e.data.block.length && e.data.block[0].embedded && (0 < e.data.block[0].embedded.length || e.data.content.embedded.content), e.content.url = a.get(e.data, 'block[0].url'), e.content.tile = a.includes(['post', 'link', 'video'], a.get(e.data, 'block[0].type')) && !e.content.isImage && !a.isEmpty(a.get(e.data, 'block[0].embedded[0]', a.get(e.data, 'block[0].embedded'))), e.content.ratio = e.content.image && function() {
                        const t = a.get(e.data, 'block[0].ratio');
                        return 100 * Math.abs(t)
                    }(), e.getImage = () => {
                        const t = a.get(e.content, 'coverData') || a.get(e.content, 'image');
                        return n(t, 500, !0)
                    }, e.openPost = function(e, t) {
                        return s.openPost(e), t && (t.preventDefault(), t.stopPropagation()), !1
                    }
                }],
                templateUrl: 'public/modules/ds/embed/templates/ds.embed.post.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.embed').directive('dsEmbedShare', ['$rootScope', '$log', '$filter', '_', 'EngagementService', 'Content', function(e, t, a, s, i, o) {
            function n(e) {
                return -1 < ['item', 'page', 'link'].indexOf(e.type)
            }
            return t.debug('Loading DsEmbedShare Controller'), {
                replace: !0,
                restrict: 'E',
                require: 'dsEmbed',
                scope: {
                    data: '='
                },
                controller: ['$scope', function(e) {
                    const t = e.data,
                        l = t.body.story,
                        r = s.pick(l, ['header', 'cover', 'body', 'type', 'url']),
                        d = a('amTimeAgo');
                    e.content = l.body.story, e.isDeleted = 'deleted' === s.get(l, 'status'), r.publishedAt = [s.upperFirst(l.type), 'published', d(l.published), 'by'].join(' '), r.externalLink = !1, r.cover && (r.cover.ratio = r.cover.height && r.cover.width ? 100 * (r.cover.height / r.cover.width) : 60), 'item' === r.type || 'page' === r.type ? r.content = r.body : 'post' === r.type && (r.description = r.body.description, e.content && n(e.content) && (r.content = e.content.body, 'link' === e.content.type && (r.url = s.get(r, 'content.data.url') || s.get(r, 'body.story.source'), r.externalLink = !0, r.externalVideo = 'video' === s.get(r, 'content.data.type')))), e.openPost = function(t) {
                        return e.content && 'link' === e.content.type ? void 0 : t && 'post' === r.type ? (i.openPost(o.toV1(l)), t.preventDefault(), t.stopPropagation(), !1) : void 0
                    }, e.main = r
                }],
                templateUrl: 'public/modules/ds/embed/templates/ds.embed.share.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.embed').directive('dsEmbedTile', ['$rootScope', '$log', '_', 'EngagementService', 'TilesService', function(e, t, a, s, i) {
            return t.debug('Loading DsEmbedTile Controller'), {
                replace: !0,
                restrict: 'E',
                require: 'dsEmbed',
                scope: {
                    data: '=',
                    hideEngagement: '=',
                    noInteraction: '=',
                    typeLabel: '='
                },
                controller: ['$scope', function(e) {
                    e.data = i.normalizeItem(e.data), e.content = {}, e.content.image = e.data.content.cover || e.data.headerMediaUrl || a.get(e.data, 'block[0].embedded[0].source'), e.content.isImage = 'media' === a.get(e.data, 'block[0].embedded[0].type'), e.content.text = 'post' == e.data.type ? a.get(e.data, 'content.description') : a.get(e.data, 'content.description') || e.data.description || a.get(e.data, 'embed.content') || a.get(e.data, 'block[0].description'), e.content.title = 'post' == e.data.type ? '' : a.get(e.data, 'content.title') || e.data.name || a.get(e.data, 'embed.caption');
                    const t = e.data.cover;
                    e.data.ratio = t ? 100 * (t.width / t.height) : 60
                }],
                templateUrl: 'public/modules/ds/embed/templates/ds.embed.tile.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.embed').directive('dsEmbedVideo', ['$sce', '$q', '$rootScope', '$log', '_', 'Videos', '$filter', function(e, t, a, s, i, o, n) {
            return s.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                require: 'dsEmbed',
                scope: {
                    data: '=',
                    hideVideo: '=',
                    autoplay: '=',
                    content: '=',
                    showInfo: '=',
                    hideVideoModal: '='
                },
                controller: ['$scope', 'EngagementService', function(t, a) {
                    t.internalContent = i.get(t, 'content.content', t.data.content);
                    const s = n('processImage'),
                        o = s(t.data.cover || t.internalContent.cover, 500);
                    t.internalBackground = {
                        "padding-bottom": `${t.data.ratio}%`,
                        "background-image": `url(${o})`
                    }, t.fromHolonis = 'holonis' === t.data.provider, t.oldVideo = !t.hideVideo && !t.fromHolonis, t.data.sources = i.get(t, 'data.block[0].sources', []);
                    const l = 400;
                    t.data.coverWidth = Math.min(i.get(t.data, 'cover.width', l), l), t.fromHolonis || (t.filestack = e.trustAsResourceUrl(i.get(t, 'data[0].source'))), t.data.sources = Object.keys(t.data.sources).map((a) => {
                        const s = t.data.sources[a],
                            i = s.trusted ? s.location : e.trustAsResourceUrl(s.location);
                        return {
                            trusted: !0,
                            location: i,
                            mime: s.mime
                        }
                    }), t.openPost = function(e) {
                        return t.hideVideoModal ? t.playing = !0 : (a.openPost(t.content), e.preventDefault(), e.stopPropagation()), t.player && t.player.then((e) => {
                            e.play()
                        }), !1
                    }
                }],
                templateUrl: 'public/modules/ds/embed/templates/ds.embed.video.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.embed').directive('dsEmbedVideoUpload', ['$timeout', '$q', '$rootScope', '$log', '_', 'AutoSaving', 'Videos', 'notifyService', 'constants', function(e, t, a, s, i, o, n, l, r) {
            return s.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                require: 'dsEmbed',
                scope: {
                    data: '=',
                    hideVideo: '=',
                    ctx: '='
                },
                controller: ['$scope', '$document', function(s) {
                    function d(t, a) {
                        e(() => {
                            s.progressCallback && s.progressCallback(t, a)
                        }, 10)
                    }

                    function c() {
                        return n.publishVideo(s.data.id, {
                            title: s.data.content.title,
                            description: s.data.content.description
                        })
                    }
                    s.fromHolonis = 'holonis' === s.data.provider, s.ctx.validateBlock = function() {
                        return s.thumbUplaodSuccess && s.videoUplaodSuccess
                    }, s.processUpload = function() {
                        const c = s.ctx.file,
                            p = i.get(a, 'primarySpace.isVerified');
                        if (!c) return e(() => {
                            d(100, !0)
                        }, 0), s.thumbUplaodSuccess = !0, s.videoUplaodSuccess = !0, s.finished = !0, void(s.oldInstance = !0);
                        if (!p && c.info.duration > r.VIDEO.DURATION.MAX_DURATION_NORMAL_USER) return void l.error('You can only upload videos up to 3 minutes.');
                        if (p && c.info.duration > r.VIDEO.DURATION.MAX_DURATION_VERIFIED_USER) return void l.error('You can only upload videos up to 15 minutes.');
                        s.oldInstance = !1, s.error = !1, d(0, !0);
                        let m = null,
                            u = null;
                        s.thumbUplaodSuccess || (m = n.uploadThumb(c).then((e) => (s.thumb = e.url, n.publishVideo(s.data.id, {
                            thumb: s.thumb
                        }).then((e) => (s.thumbUplaodSuccess = !0, e))))), s.videoUplaodSuccess ? d(100) : u = n.uploadVideo(c, s, (e) => {
                            d(0.9 * e)
                        }).then((e) => {
                            d(100), s.videoUplaodSuccess = !0, c.model = e
                        });
                        const g = t.all([m, u]).then(() => {
                            delete s.ctx, s.finished = !0, s.data.block = [c.model]
                        }).catch(() => {
                            d(0, !0), s.canceledByTheUser || (s.error = !0, l.error('Whoops, something went wrong, please try selecting the file again.'))
                        });
                        return o.track(g), g
                    };
                    let p;
                    s.ctx.beforeDeleteContentBlock = function() {
                        s.canceledByTheUser = !0, s.xhrInstance && s.xhrInstance.abort()
                    }, s.playVideo = function(t) {
                        return s.error ? s.processUpload() : s.finished && (s.playing = !0, e()), t.preventDefault(), t.stopPropagation(), !1
                    }, s.thumb = i.get(s, 'data.block[0].thumb'), s.$watch('[data.content.title, data.content.description]', function() {
                        p && clearTimeout(p), p = setTimeout(c, 1e3)
                    }), e(s.processUpload, 0)
                }],
                templateUrl: 'public/modules/ds/embed/templates/ds.embed.video.upload.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.engagement').directive('dsEngagement', ['Analytics', '$rootScope', '$log', '$location', '$state', 'Authentication', 'dsModal', 'TilesService', 'EngagementService', '$timeout', '_', 'notifyService', 'TileCache', 'Content', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u) {
            function g(e, t, a) {
                return 1 === parseInt(e) ? t : a || t + 's'
            }

            function v(e, t, a) {
                const s = c.get(e, a, 0),
                    i = c.get(t, a, 0);
                return s > i || s < i && 0 === s
            }
            a.debug('Loading Engagement Controller');
            const h = o.currentUser();
            return {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=',
                    noInteraction: '=',
                    dontOpenPost: '=',
                    shareModal: '@'
                },
                controller: ['$scope', function(e) {
                    function a() {
                        const e = k.id,
                            a = k.type,
                            s = c.get(k, 'header.space') || c.get(k, 'header.author', {});
                        n.create({
                            template: 'public/modules/core/templates/modal/share.who-shared.template.html',
                            controller: 'SharesWhoSharedController',
                            title: 'People who shared this',
                            close: !0,
                            position: 'auto',
                            customClass: 'who-shared-modal',
                            scope: {
                                id: e,
                                spaceId: c.get(t, 'primarySpace.id', null),
                                type: a,
                                contentSpace: s,
                                mainData: k
                            }
                        }).then((e) => {
                            e.show()
                        })
                    }

                    function b() {
                        const e = k.id,
                            a = k.type,
                            s = c.get(k, 'header.space') || c.get(k, 'header.author', {});
                        n.create({
                            template: 'public/modules/core/templates/modal/shares.template.html',
                            controller: 'SharesListController',
                            title: 'People who shared this',
                            close: !0,
                            position: 'auto',
                            scope: {
                                id: e,
                                spaceId: c.get(t, 'primarySpace.id', null),
                                type: a,
                                contentSpace: s,
                                mainData: k
                            }
                        }).then((e) => {
                            e.show()
                        })
                    }
                    const f = l.isDynamicShare(e.data),
                        y = f ? c.get(e.data, 'v2.body.story') : e.data,
                        w = m.getKey(y),
                        k = m.get(w, y);
                    e.statistics = k.engagement, e.hasEngagement = e.statistics, e.likeDisabled = !1, e.getTemplateUrl = function() {
                        return 'public/modules/ds/engagement/templates/engagement.html'
                    }, e.hasLink = 'post' !== e.data.type && e.data.url !== s.absUrl(), e.isEngagementVisible = function() {
                        return e.hasEngagement ? 0 < e.statistics.likes + e.statistics.comments + e.statistics.shares + e.statistics.views : void 0
                    }, e.engagementVisible = e.isEngagementVisible();
                    m.watchCollection('main', w, 'engagement', (t, a) => {
                        t && (e.statistics = t, e.label = {}, e.label.likes = g(t.likes, 'Like'), e.label.comments = g(t.comments, 'Comment'), e.label.shares = g(t.shares, 'Share'), e.label.views = g(t.views, 'View'), e.hasStats = 0 < t.likes + t.comments + t.shares + t.views, e.engagementVisible = e.isEngagementVisible(), (v(t, a, 'likes') || v(t, a, 'comments') || v(t, a, 'shares')) && d(() => {
                            angular.element('.tile-group-wrapper').isotope('layout')
                        }, bowser.chrome ? void 0 : 100))
                    }), e.focusComment = function() {
                        if (t.autoFocusComment = !0, !h) {
                            const e = {
                                url: s.absUrl(),
                                timestamp: Date.now()
                            };
                            return sessionStorage.setItem('redirectToUrlAfterLogin', JSON.stringify(e)), d(o.showLoginPrompt())
                        }
                        const a = k.v2 ? k : l.normalizeItem(u.toV1(k));
                        if ('private' === a.status) {
                            const e = c.get(a, 'v2.header.space.vanityUrl'),
                                t = c.get(a, 'v2.header.space.name');
                            return i.go('holospace.home', {
                                holospaceName: e
                            }), p.info(`Follow ${t} to see and interact with their content`)
                        }
                        r.openPost(a, !0, e.dontOpenPost, () => {
                            setTimeout(() => {
                                $('.ds-modal-visible .ds-comment-input .ds-textarea, .ds-textarea').focus(), t.autoFocusComment = !1
                            }, 500)
                        })
                    }, e.share = function(t) {
                        let a = c.get(e.statistics, 'shared');
                        const s = c.get(e.data.space, 'isPrivate');
                        if (s) return p.warning('This Holospace is private. Sharing content is currently deactivated.');
                        const i = {
                            template: 'public/modules/core/templates/modal/share.post.template.html',
                            controller: 'SharePostController',
                            title: 'Post',
                            close: !0,
                            scope: {
                                noPadding: !0,
                                data: t.shareTile || t,
                                overflow: !0
                            }
                        };
                        if (!h) {
                            const e = {
                                url: t.url,
                                timestamp: Date.now()
                            };
                            return sessionStorage.setItem('redirectToUrlAfterLogin', JSON.stringify(e)), e.modalData = i, sessionStorage.setItem('showModalAfterLoginRedirect', JSON.stringify(e)), d(o.showLoginPrompt)
                        }
                        if (!a && l.isSingleShare(e.data)) {
                            const t = c.get(e.data, 'v2.body.story'),
                                s = m.get(m.getKey(t), t);
                            a = s.engagement.shared
                        }
                        return a ? p.warning('You\'ve shared this content recently. We\'ve prevented the share from being published because it was already shared within the last 30 days.') : void n.create(i).then((e) => {
                            e.show()
                        })
                    }, e.openLikes = function() {
                        const e = k.id;
                        n.create({
                            template: 'public/modules/core/templates/modal/likes.template.html',
                            controller: 'LikesListController',
                            title: 'Likes',
                            close: !0,
                            position: 'auto',
                            scope: {
                                id: e,
                                spaceId: c.get(t, 'primarySpace.id', null)
                            }
                        }).then((e) => {
                            e.show()
                        })
                    }, e.openShares = function() {
                        return 'list' === e.shareModal || l.isSingleShare(e.data) ? b() : a()
                    }, e.toggleLike = function() {
                        if (!h) {
                            const e = {
                                url: s.absUrl(),
                                timestamp: Date.now()
                            };
                            return sessionStorage.setItem('redirectToUrlAfterLogin', JSON.stringify(e)), d(o.showLoginPrompt())
                        }
                        e.statistics.likes;
                        e.statistics.liked = !e.statistics.liked, e.likeDisabled = !0;
                        const t = e.statistics.liked;
                        t ? (e.statistics.likes++, dataLayer.push({
                            eventCategory: k.type + 'Action',
                            event: 'Liked a ' + k.type,
                            eventAction: 'Like',
                            eventLabel: c.get(k, 'body.vanityUrl')
                        })) : e.statistics.likes--, r.toggle(k, t, e.data.shareType).then((a) => {
                            if (e.likeDisabled = !1, e.statistics.likes = a.count, l.isSingleShare(e.data)) {
                                const a = c.get(e.data, 'v2.body.story'),
                                    s = m.getKey(a),
                                    i = m.get(s, a);
                                i.engagement.liked !== t && m.increment(s, 'engagement.likes', t ? 1 : -1), m.assign(s, {
                                    engagement: {
                                        liked: t
                                    }
                                })
                            }
                        }).catch(() => {
                            e.likeDisabled = !1
                        })
                    }
                }],
                templateUrl(e, t) {
                    const a = t.type ? '.' + t.type : '';
                    return 'public/modules/ds/engagement/templates/engagement' + a + '.html'
                }
            }
        }])
    }(),
    function() {
        angular.module('core').factory('EngagementService', ['$log', '_', '$timeout', 'Authentication', 'holoLikesService', 'dsModal', 'OnboardingService', '$state', function(e, t, a, s, i, o) {
            const n = {};
            return n.like = function(e) {
                const t = s.currentUser();
                return t ? i.postLike(e.id, e.type, e.propagate) : a(s.showLoginPrompt())
            }, n.unlike = function(e) {
                const t = s.currentUser();
                return t ? i.deleteLike(e.id, e.type, e.propagate) : a(s.showLoginPrompt())
            }, n.toggle = function(e, t, a) {
                const s = {
                    type: e.type,
                    id: e.id || e.content.id,
                    propagate: 'single' === a
                };
                return t ? n.like(s) : n.unlike(s)
            }, n.openPost = function(e, a, s, i) {
                if (s && i && i(), 'video' === e.type) {
                    const a = !!(t.get(e, 'content.cover') || e.cover) && !(e.hasEmbedPost || 'link' == t.get(e, 'content.type') || 'video' == e.type);
                    return o.create({
                        template: 'public/modules/core/templates/modal/video.template.html',
                        controller: 'VideoController',
                        title: '',
                        close: !0,
                        scope: {
                            noPadding: !0,
                            noMaxHeight: !0,
                            noHeader: !0,
                            big: a,
                            data: e,
                            overflow: !a
                        }
                    }).then((e) => {
                        e.show()
                    })
                }
                if ('post' === e.type && !s) {
                    const s = 'video' === t.get(e, 'block[0].embedded.type');
                    let i = t.get(e.content, 'embedded[0].embedlyData.provider_name');
                    i && i.toLowerCase && (i = i.toLowerCase());
                    const n = 'media' === t.get(e.content, 'embedded[0].type') && 'video' === t.get(e.content, 'embedded[0].mediaType'),
                        l = s || !!e.content.cover && !(e.hasEmbedPost || 'link' == e.content.type || 'amazon' === i) && !(i && -1 < i.search(/facebook|twitter|instagram/i)) && !n;
                    return o.create({
                        template: 'public/modules/core/templates/modal/post.template.html',
                        controller: 'PostController',
                        title: '',
                        close: !0,
                        scope: {
                            noPadding: !0,
                            noMaxHeight: !0,
                            noHeader: !0,
                            shouldFocus: a,
                            big: l,
                            data: e,
                            isVideo: s,
                            overflow: !l
                        }
                    }).then((e) => {
                        e.show()
                    })
                }
            }, n
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsCheckbox', ['$log', function(e) {
            return e.debug('Loading DsCheckbox Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    name: '@?',
                    label: '@',
                    description: '@?',
                    ngModel: '=',
                    change: '&?',
                    inputId: '@?',
                    ngDisabled: '=?'
                },
                controller: ['$scope', function() {}],
                compile: function() {
                    return {
                        pre: function() {},
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/form/templates/checkbox.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsConditionalInput', ['$log', function(e) {
            return e.debug('Loading dsConditionalInput Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    type: '@',
                    model: '=',
                    labelInput: '@?',
                    labelCheckbox: '@?',
                    params: '=?',
                    placeholder: '@',
                    disabledValue: '@?',
                    disabledLabel: '@?',
                    checked: '=?',
                    maxlength: '@?'
                },
                controller: ['$scope', function(e) {
                    e.checked = e.checked || !1, e.oldModel = e.model, e.$watch('checked', (t) => t ? (e.oldModel = e.model, void(e.model = e.disabledValue)) : void(e.model = e.oldModel))
                }],
                templateUrl: 'public/modules/ds/form/templates/conditional.input.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsCounter', ['$log', '$timeout', function(e, t) {
            return e.debug('Loading DsCounter Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    model: '=?',
                    label: '@',
                    singular: '@?',
                    plural: '@?',
                    disabled: '=?',
                    id: '@',
                    name: '@',
                    start: '@?',
                    min: '=?',
                    max: '=?',
                    maxLength: '@?',
                    params: '=?'
                },
                controller: ['$scope', function(e) {
                    e.style = {}, e.state = {}, e.model = e.model || 0, e.min = e.min || 0, e.style.padding = 0, e.verify = function(e) {
                        const t = e.key,
                            a = /^\d+$/,
                            s = !a.test(t);
                        if (s) return e.preventDefault()
                    }, e.add = function(t) {
                        const a = e.model + t,
                            s = e.maxLength && a.toString().length > e.maxLength,
                            i = a > e.max,
                            o = a < e.min;
                        o || i || s || (e.model = parseInt(e.model) + t)
                    }, e.$watch('model', (a) => {
                        const s = a < e.min || '' === a,
                            i = a > e.max;
                        s && t(() => {
                            e.model = e.min
                        }), i && t(() => {
                            e.model = e.max
                        }), e.model = +(e.model || 0).toString(), e.hasWord && (e.style.padding = e.content.getBoundingClientRect().width + 15)
                    })
                }],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            const a = angular.element(t);
                            e.content = a.find('.ds-counter-content')[0], a.removeAttr('label').removeAttr('type').removeAttr('singular').removeAttr('plural').removeAttr('id').removeAttr('name').removeAttr('model')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/form/templates/counter.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsInputAction', ['$log', function(e) {
            return e.debug('Loading DsInputAction Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    model: '=?',
                    label: '@',
                    id: '@',
                    action: '&',
                    actionLabel: '@'
                },
                controller: ['$scope', function() {}],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            angular.element(t).removeAttr('label').removeAttr('id').removeAttr('model')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/form/templates/input.action.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsInput', ['$log', '_', '$compile', 'ItemService', '$timeout', function(e, t, a, s, i) {
            return e.debug('Loading TileDirective Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    ngModel: '=?',
                    label: '@',
                    type: '@',
                    id: '@',
                    name: '@',
                    placeholder: '@',
                    disabled: '=',
                    change: '&?',
                    focus: '&?',
                    blur: '&?',
                    ngKeypress: '&?',
                    big: '@?',
                    disabledValue: '@?',
                    hasAutocomplete: '=?',
                    params: '=?',
                    validate: '=?',
                    maxlength: '@?',
                    dsAutofocus: '=?'
                },
                controller: ['$scope', '$element', function(e, a) {
                    e.params = e.params || {}, e.dsAutofocus && i(() => {
                        a.find('.ds-input').get(0).focus()
                    }), e.$watch('ngModel', () => {
                        const s = a.find('.ds-input');
                        e.validate = null, t.get(e.params, 'mask.currency') && i(() => {
                            s.trigger('change')
                        })
                    })
                }],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            const a = angular.element(t);
                            a.removeAttr('label').removeAttr('type').removeAttr('id').removeAttr('name').removeAttr('change').removeAttr('focus').removeAttr('blur').removeAttr('params')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/form/templates/input.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsInputGroup', ['$log', function(e) {
            return e.debug('Loading DsInputGroup Controller'), {
                replace: !0,
                transclude: !0,
                restrict: 'E',
                scope: {},
                controller: ['$scope', '$transclude', function() {}],
                compile: function() {
                    return {
                        pre: function() {},
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/form/templates/input.group.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsRadio', ['$log', function(e) {
            return e.debug('Loading DsRadio Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    name: '@?',
                    label: '@',
                    description: '@?',
                    ngModel: '=',
                    change: '&?',
                    inputId: '@?',
                    ngValue: '=?',
                    ngDisabled: '=?'
                },
                controller: ['$scope', function() {}],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            angular.element(t).removeAttr('label').removeAttr('inputId').removeAttr('name').removeAttr('description').removeAttr('ng-model').removeAttr('ng-value').removeAttr('ng-disabled')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/form/templates/radio.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsSelect', ['$log', '_', function(e, t) {
            return e.debug('Loading TileDirective Controller'), {
                replace: !0,
                transclude: !0,
                restrict: 'E',
                scope: {
                    ngModel: '=?',
                    ngChange: '&?',
                    label: '@',
                    id: '@',
                    name: '@',
                    placeholder: '@',
                    type: '@',
                    options: '=',
                    params: '@',
                    noOptions: '@?',
                    active: '=?',
                    text: '=?',
                    change: '&?'
                },
                controller: ['$scope', '$transclude', function(e) {
                    function a(a) {
                        const s = {};
                        s[e._value] = a, e.text = t.find(e.options, s)[e._text], e.ngChange && e.ngChange()
                    }
                    if (e._value = 'value', e._text = 'text', e.params) {
                        const t = e.params.split(',');
                        e._value = t[0], e._text = t[1], e._tip = t[2]
                    }
                    e.select = function(t) {
                        e.ngModel = t[e._value]
                    }, e.$watch('ngModel', (t, s) => {
                        void 0 !== t && e.options && t !== s && (a(t), e.change && e.change())
                    }), e.$watch('options', (t) => {
                        t && e.options.length && void 0 !== e.ngModel && a(e.ngModel)
                    })
                }],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            angular.element(t).removeAttr('model').removeAttr('type').removeAttr('id').removeAttr('name').removeAttr('placeholder').removeAttr('options').removeAttr('params')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/form/templates/select.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('setMinimumPriceInput', ['$log', function(e) {
            return e.debug('Loading setMinimumPriceInput Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    type: '@',
                    model: '=',
                    labelInput: '@?',
                    labelCheckbox: '@?',
                    params: '=?',
                    placeholder: '@',
                    disabledValue: '@?',
                    disabledLabel: '@?',
                    checked: '=?',
                    maxlength: '@?'
                },
                controller: ['$scope', function(e) {
                    e.checked = e.checked || !1, e.oldModel = e.model, e.$watch('checked', (t) => t ? (e.oldModel = e.model, void(e.model = e.disabledValue)) : void(e.model = e.oldModel))
                }],
                templateUrl: 'public/modules/ds/form/templates/set-minimum-price.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsStripeForm', ['$log', function(e) {
            return e.debug('Loading TileDirective Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    parentForm: '=',
                    data: '=',
                    validators: '=',
                    onChange: '=',
                    bypassValidation: '=?'
                },
                controller: ['$rootScope', '$scope', '$timeout', 'creditcards', 'dsForm', function(e, t, a, s, i) {
                    t.$validators = t.validators, t.isLoggedOut = e.isLoggedOut;
                    const o = () => t.data.ccCard && (!t.bypassValidation || t.bypassValidation());
                    t.$watch('data.ccNumber', (e) => {
                        !e || 1 > e.length || (t.data.ccCleanNumber = e.replace(/ /g, ''), t.data.ccFormattedNumber = s.card.format(t.data.ccCleanNumber), t.data.ccNumber = t.data.ccFormattedNumber, t.data.ccProvider = s.card.type(t.data.ccCleanNumber, !0), t.data.ccIsValid = s.card.isValid(t.data.ccCleanNumber), t.data.ccLast4 = t.data.ccIsValid ? e.substr(-4) : '', t.data.ccCard && (t.data.ccCard = null, t.data.ccNumberAbbr = null, t.data.ccExp = null))
                    }), t.focusCCNumber = function() {
                        t.data.ccNumberAbbr && (t.data.ccNumberAbbr = null)
                    }, t.blurCCNumber = function() {
                        !t.data.ccCard || t.data.ccNumberAbbr || (t.data.ccNumberAbbr = `•••• ${t.data.ccCard.last4}`)
                    };
                    const n = {};
                    t.onInputChange = (e) => {
                        a.cancel(n[e]), n[e] = a(() => {
                            const a = _.get(t.inputs, e),
                                s = t.form.validateInput(e);
                            t.onChange && t.onChange({
                                name: e,
                                valid: s,
                                $form: t.form
                            }), a.iconValidator && (a.iconValidator.valid = s)
                        }, 200)
                    };
                    const l = new i(t.data, {
                        ccName: {
                            errorMessage: '',
                            iconValidator: {
                                className: 'check'
                            },
                            validators: {
                                custom: () => !!o() || !!t.data.useAsBillingAddress || !!t.data.ccName && 0 < t.data.ccName.length
                            }
                        },
                        ccNumber: {
                            errorMessage: 'Invalid Credit Card number',
                            iconValidator: {
                                className: 'check'
                            },
                            validators: {
                                custom: () => !!o() || s.card.isValid(t.data.ccCleanNumber)
                            }
                        },
                        ccExp: {
                            mask: {
                                custom: '99/99'
                            },
                            iconValidator: {
                                className: 'check'
                            },
                            errorMessage: 'Invalid expiration date',
                            validators: {
                                custom: () => {
                                    if (o()) return !0;
                                    if (!t.data.ccExp) return !1;
                                    const e = t.data.ccExp.match(/([0-9]{2})/g);
                                    return !(2 > e.length) && !(31 < e[0]) && !s.expiration.isPast(e[0], `20${e[1]}`)
                                }
                            }
                        },
                        ccCvv: {
                            mask: {
                                custom: '999?9'
                            },
                            iconValidator: {
                                className: 'check'
                            },
                            errorMessage: 'Invalid CVV',
                            validators: {
                                custom: () => !!o() || s.cvc.isValid(t.data.ccCvv, t.data.ccProvider)
                            }
                        },
                        ccZip: {
                            mask: {
                                custom: '99999'
                            },
                            iconValidator: {
                                className: 'check'
                            },
                            validators: {
                                custom: () => !!o() || !!t.data.useAsBillingAddress || t.data.ccZip && 4 < t.data.ccZip.toString().length
                            }
                        }
                    }, t.$validators);
                    t.form = l, t.inputs = l.getInputs(), t.parentForm instanceof i && t.parentForm.append(l)
                }],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            const a = angular.element(t);
                            a.removeAttr('form').removeAttr('data').removeAttr('validators').removeAttr('on-change').removeAttr('bypass-validation')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/form/templates/stripe-form.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsText', ['$log', '$timeout', 'dsMentionsService', 'dsInputService', '_', function(e, t, a, s, i) {
            return e.debug('Loading dsText Directive'), {
                replace: !0,
                restrict: 'E',
                require: 'ngModel',
                scope: {
                    label: '@',
                    id: '@',
                    name: '@',
                    placeholder: '@',
                    mentions: '=?',
                    singleLine: '=?',
                    autoFocus: '&?',
                    disabled: '=',
                    validate: '=',
                    maxCharacters: '=?',
                    params: '=?'
                },
                controller: ['$scope', '$element', function() {}],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            angular.element(t).removeAttr('label').removeAttr('id').removeAttr('name').removeAttr('placeholder').removeAttr('ng-model').removeAttr('max-characters')
                        },
                        post: function(e, o, n, l) {
                            function r() {
                                return i.get(l, '$modelValue', '').length
                            }

                            function d() {
                                e.state.characters = e.maxCharacters - r()
                            }
                            const c = ['<span class="ds-textarea-placeholder">', e.placeholder, '</span>'].join(''),
                                p = o.find('.ds-textarea'),
                                m = angular.element(c),
                                u = o.find('.ds-textarea-wrapper');
                            e.state = {
                                characters: e.maxCharacters
                            }, e.$parent.$watch(n.ngModel, (t) => {
                                t ? m.remove() : u.append(m), e.value = t ? t.substr(0, e.maxCharacters) : t
                            }), e.mentions && a.instance(e, p), p.on('input keypress paste', () => {
                                m.remove(), t(() => {
                                    r() > e.maxCharacters && (e.value = e.value.substr(0, e.maxCharacters), l.$setViewValue(e.value), p.html(l.$viewValue || ''), d())
                                })
                            });
                            const g = [s.keys.BACKSPACE, s.keys.DELETE, s.keys.DOWN, s.keys.END, s.keys.HOME, s.keys.LEFT, s.keys.PAGE_DOWN, s.keys.PAGE_UP, s.keys.PERIOD, s.keys.RIGHT, s.keys.UP, s.keys.CTRL, s.keys.CMD];
                            p.on('keydown', (t) => r() >= e.maxCharacters && -1 === g.indexOf(t.keyCode) ? t.preventDefault() : e.singleLine && t.keyCode === s.keys.ENTER || e.disabled ? t.preventDefault() : void(t.keyCode === s.keys.BACKSPACE && (1 === p.text().length || s.selected(p)) && o.append(m))), p.on('focus', () => {
                                e.disabled && p.blur()
                            }), p.on('blur input keyup change', () => {
                                const t = p.text();
                                l.$setViewValue(t), e.maxCharacters && d()
                            }), l.$render = function() {
                                p.html(l.$viewValue || '')
                            }, e.maxCharacters && t(d)
                        }
                    }
                },
                templateUrl: 'public/modules/ds/form/templates/text.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsTextarea', ['$log', function(e) {
            return e.debug('Loading dsTextarea Directive'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    model: '=?',
                    label: '@',
                    id: '@',
                    name: '@',
                    placeholder: '@'
                },
                controller: ['$scope', function() {}],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            angular.element(t).removeAttr('label').removeAttr('id').removeAttr('name').removeAttr('placeholder').removeAttr('model')
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/form/templates/textarea.html'
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('dsForm', ['$timeout', (e) => {
            function t(a, s, i) {
                const o = {};
                let n = !1;
                this.childrenForms = [], o.required = (e) => {
                    const t = _.get(a, e, '').toString(),
                        s = t && 0 < t.length;
                    return n || _.set(i, e, s ? '' : 'required'), s
                }, o.requiredIf = (e, t, a) => t.requiredIf && t.requiredIf(e, t, a) ? o.required(e) : !0, o.email = (e) => {
                    const t = _.get(a, e, ''),
                        s = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
                        o = s.test(t);
                    return n || _.set(i, e, o ? '' : 'invalidEmail'), o
                }, o.custom = (e, t, a) => {
                    const s = t.custom && t.custom(e, t, a);
                    return n || _.set(i, e, s ? '' : 'custom'), s
                }, o.validateIf = (e, t, a) => {
                    const s = t.validateIf;
                    return !s || t.validateIf(e, t, a)
                }, this.validateChildrenForms = function(e) {
                    return this.childrenForms.every((t) => {
                        if (!t.validate) return !1;
                        const a = t.validate(e, i);
                        return _.assign(i, t.$validators), a
                    })
                }, this.validate = function(e) {
                    const t = this;
                    let a = !0;
                    n = e, Object.keys(s).forEach((e, i) => {
                        const o = s[e].validators;
                        let n;
                        return o ? /.+\[\]$/.test(e) ? (n = t.partialArray(e, o), a && (a = n)) : void(n = t.partial(e, o, i), a = a && n) : void 0
                    }), n = !1;
                    const i = this.validateChildrenForms(e);
                    return a && i
                }, this.validateInput = function(e) {
                    const t = s[e].validators,
                        a = Object.keys(s).indexOf(e);
                    return t ? /.+\[\]$/.test(e) ? this.partialArray(e, t) : this.partial(e, t, a) : void 0
                }, this.showError = function() {
                    return e(() => {
                        const e = angular.element('.ds-input-error-message').parent()[0],
                            t = angular.element(e),
                            a = t.parents('.ds-form-wrapper');
                        if (0 < a.length) {
                            const e = a.find('.ds-textarea,.ds-input--enabled');
                            return void(0 < e.length && e.focus())
                        }
                        const s = $('body,html');
                        if (t.length) {
                            const e = t.offset().top - t.outerHeight(!0) - 100;
                            s.animate({
                                scrollTop: e
                            }, 100)
                        }
                    })
                }, this.partialArray = function(e, t) {
                    const s = this;
                    let o = !0;
                    return Object.keys(t).forEach((l) => {
                        const r = t[l],
                            d = _.get(a, e.replace(/\[\]/, ''));
                        return d ? void(d.forEach((t, a) => {
                            const i = e.replace(/\[\]/, '[' + a + '].' + l),
                                n = s.partial(i, r, a);
                            o = o && n
                        }), !n && _.set(i, e.replace(/\[\]/, 'General'), !o)) : o = void 0 === d
                    }), o
                }, this.partial = function(e, t, a) {
                    const s = Object.keys(t);
                    return !o.validateIf(e, t, a) || s.every((s) => o[s](e, t, a))
                }, this.append = function(e) {
                    e instanceof t && this.childrenForms.push(e)
                }, this.getInputs = function() {
                    const e = {};
                    return Object.keys(s).forEach((t) => {
                        e[t] = _.omit(s[t], ['validators'])
                    }), e
                }
            }
            return t.instance = (e, a) => {
                const s = {},
                    i = e.data;
                return e.inputs && Object.keys(e.inputs).forEach((t) => {
                    s[t] || (s[t] = {});
                    const a = e.inputs[t];
                    _.assign(s[t], a)
                }), Object.keys(a).forEach((e) => {
                    s[e] || (s[e] = {});
                    const t = a[e];
                    _.assign(s[e], {
                        validators: t
                    })
                }), e.$validators || (e.$validators = {}), new t(i, s, e.$validators)
            }, t
        }])
    }(),
    function() {
        angular.module('ds.form').factory('dsInputService', ['$log', '$q', '_', 'constants', function(e, t, a, s) {
            const i = {
                keys: s.keyCode,
                isCharacterKey: function() {
                    return !0
                },
                selected: function(e) {
                    const t = window.getSelection();
                    if (t.rangeCount) {
                        const a = t.getRangeAt(0);
                        return 0 === a.startOffset && a.endOffset === e.text().length
                    }
                    return !1
                },
                getCaretPosition: function(e) {
                    const t = window.getSelection();
                    if (t.rangeCount) {
                        const a = t.getRangeAt(0);
                        if (a.commonAncestorContainer.parentNode == e) return a.endOffset
                    }
                    return 0
                },
                setCaretPosition: function(e, t) {
                    const a = window.getSelection(),
                        s = document.createRange();
                    s.setStart(e.firstChild, t), s.collapse(!0), a.removeAllRanges(), a.addRange(s)
                }
            };
            return i
        }])
    }(),
    function() {
        angular.module('ds.gallery').directive('dsGallery', ['$rootScope', '$log', '$timeout', function(e, t, a) {
            return t.debug('Loading dsGallery Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    images: '='
                },
                controller: ['$scope', function(e) {
                    e.state = {}, e.images = e.images.map((e, t) => ({
                        url: e.url,
                        settings: e.settings,
                        selected: 0 === t
                    })), e.activeImage = function(t) {
                        const a = angular.element(t.currentTarget),
                            s = a.index();
                        e.swiper.slideTo(s)
                    }, e.updateSelected = function() {
                        e.state.index = e.swiper.activeIndex, e.images.forEach((e) => {
                            e.selected = !1
                        }), a(() => {
                            e.images[e.state.index].selected = !0
                        })
                    }
                }],
                compile: function() {
                    return {
                        pre: function() {},
                        post: function(e, t) {
                            e.initSwiper = function() {
                                const a = angular.element(t),
                                    s = a.find('.ds-gallery-swiper'),
                                    i = a.find('.swiper-pagination'),
                                    o = a.find('.ds-gallery-thumbs');
                                e.swiper = new Swiper(s, {
                                    slidesPerView: 'auto',
                                    grabCursor: !0,
                                    pagination: {
                                        el: i,
                                        type: 'bullets',
                                        clickable: !0
                                    }
                                }), e.swiperThumbs = new Swiper(o, {
                                    slidesPerView: 'auto',
                                    observer: !0,
                                    observeParents: !0,
                                    navigation: {
                                        nextEl: '.swiper-button-next',
                                        prevEl: '.swiper-button-prev'
                                    }
                                }), e.swiper.on('slideChange', () => {
                                    e.updateSelected()
                                })
                            }
                        }
                    }
                },
                templateUrl: 'public/modules/ds/gallery/templates/gallery.html'
            }
        }])
    }(),
    function() {
        angular.module('core').controller('ExitHeaderController', ['$rootScope', '$scope', function() {}])
    }(),
    function() {
        angular.module('core').controller('SeoTooltipController', ['$scope', 'Categories', '_', function(e, t) {
            const a = e.data.item ? e.data.item.type : e.data.type;
            if ('space' === e.data.type && (e.data.meta = e.data.meta || {}, e.data.meta.tags = e.data.meta.tags || e.data.tags, e.$watch('data.meta.tags', (t) => {
                    e.data.tags = t
                })), !e.categories) return t.getCategoryByType(a).then((t) => {
                e.data.categories = t.categories
            })
        }])
    }(),
    function() {
        angular.module('ds.header').directive('dsHeaderCreation', ['$rootScope', '$log', 'dsTooltip', '$stateParams', '_', 'dsConfirm', 'waitTrackerPromises', 'ShareThird', 'constants', '$timeout', function(e, t, a, s, i, o, n, l, r, d) {
            t.debug('Loading DsNav Controller');
            const c = s.edit,
                p = {
                    cancel: {
                        label: 'Close',
                        menu: {
                            draft: 'Save as draft',
                            delete: 'Delete'
                        }
                    },
                    publish: 'Publish',
                    seo: {
                        channels: !0
                    },
                    user: {
                        restrict: !1
                    }
                };
            return {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=?',
                    headerTitle: '=?',
                    params: '=?',
                    tracker: '=?',
                    status: '=?'
                },
                controller: ['$scope', 'holospace', function(t, s) {
                    function c(e) {
                        return t.state.submitting = !0, n(t.tracker).then(() => t.$parent[e]()).finally(() => {
                            t.state.submitting = !1
                        })
                    }
                    t.data = t.data || {}, t.status = t.status || {};
                    const m = t.data.type || i.get(t.data, 'item.type');
                    t.state = {
                        owner: !1,
                        loading: !0,
                        submitting: !1
                    }, t.title = t.title || '', t.params = i.assign({}, p, t.params), t.tracker = t.promiseTracker || e.promiseTracker, s.getCurrentUserSpaces().then(() => {
                        !e.state.content.spaceId && e.primarySpace && (e.state.content.spaceId = e.primarySpace.id, e.state.content.accessLevel = 'owner')
                    }), e.$watch('state.content.spaceId', () => {
                        t.state.owner = 'owner' === e.state.content.accessLevel, t.state.loading && (t.state.loading = !1)
                    }), t.save = function() {
                        if (t.$parent.save) return c('save');
                        throw new Error('Missing save action.')
                    };
                    const u = () => {
                        c('publish').then((e) => {
                            d(() => {
                                e && e.url && l.facebookShareDialog(e.url)
                            }, 500)
                        })
                    };
                    t.publish = function() {
                        return (a.closeAll(), e.facebookProfileSelected && !localStorage.getItem(r.USER_HAS_SEEN_FACEBOOK_DIALOG_WARNING)) ? l.facebookProfileWarning() : e.facebookProfileSelected ? u() : c('publish')
                    }, t.draft = function() {
                        return a.closeAll(), o.show({
                            title: 'Draft ' + m,
                            message: 'Are you sure you want to draft your ' + m + '?',
                            confirm: {
                                text: 'Yes',
                                action() {
                                    if (t.$parent.draft) return c('draft')
                                }
                            },
                            cancel: {
                                text: 'Cancel'
                            }
                        })
                    }, t.delete = function() {
                        return a.closeAll(), o.show({
                            title: 'Delete ' + m,
                            message: 'Are you sure you want to delete your ' + m + '?',
                            confirm: {
                                text: 'Yes',
                                action() {
                                    if (t.$parent.delete) return c('delete')
                                }
                            },
                            cancel: {
                                text: 'Cancel'
                            }
                        })
                    }, t.discard = function() {
                        return a.closeAll(), o.show({
                            title: 'space' === m ? 'Edit holospace' : 'Draft ' + m,
                            message: 'Are you sure you want to discard the changes in your ' + m + '? Any edits you\'ve made will be lost.',
                            confirm: {
                                text: 'Yes',
                                action() {
                                    if (t.$parent.discard) return c('discard')
                                }
                            },
                            cancel: {
                                text: 'Cancel'
                            }
                        })
                    }, t.cancel = function(e) {
                        return t.tooltipClose && !t.tooltipClose.destroyed ? void t.tooltipClose.close() : void a.create({
                            template: 'public/modules/ds/header/templates/exit.html',
                            controller: 'ExitHeaderController',
                            element: e,
                            scope: {
                                position: 'center',
                                draft: t.draft,
                                delete: t.delete,
                                discard: t.discard,
                                params: t.params.cancel.menu
                            },
                            data: t.data,
                            offset: {
                                top: 36
                            },
                            fixed: !0
                        }).then((e) => {
                            e.show(), t.tooltipClose = e
                        })
                    }, t.seo = function(e) {
                        return t.tooltipSeo && !t.tooltipSeo.destroyed ? void t.tooltipSeo.close() : void(t.openedOptions = !0, a.create({
                            template: 'public/modules/ds/header/templates/seo.html',
                            controller: 'SeoTooltipController',
                            element: e,
                            scope: {
                                baseline: 'auto',
                                params: t.params.seo
                            },
                            data: t.data,
                            offset: {
                                top: 36,
                                left: i.get(t.params, 'seo.left') || -400
                            },
                            arrow: {
                                right: i.get(t.params, 'seo.arrow') || 56
                            },
                            fixed: !0,
                            fullscreenMobile: !0
                        }).then((e) => {
                            e.show(), t.tooltipSeo = e
                        }))
                    }
                }],
                templateUrl: 'public/modules/ds/header/templates/header.creation.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.header').directive('dsHeader', ['$log', function(e) {
            return e.debug('Loading dsHeader Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    centerTitle: '@?',
                    rightTitle: '@?',
                    rightAction: '&?',
                    leftTitle: '@?',
                    leftAction: '&?',
                    leftIcon: '@?',
                    rightIcon: '@?'
                },
                controller: ['$scope', function() {}],
                templateUrl: 'public/modules/ds/header/templates/header.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.header').directive('mobileHeader', ['$log', function(e) {
            return e.debug('Loading MobileHeader Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    centerTitle: '@?',
                    backIcon: '@?'
                },
                controller: 'HeaderController as vm',
                templateUrl: 'public/modules/ds/header/templates/mobile-header.template.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.header').directive('dsHeaderSelection', ['$rootScope', '$state', '$log', function(e, t, a) {
            return a.debug('Loading DsNav Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=?',
                    title: '@',
                    params: '=?'
                },
                controller: ['$scope', function(e) {
                    e.params = e.params || {}, e.data = e.data || {}, e.close = function() {
                        return e.$parent.close ? e.$parent.close() : t.go('holospace.home')
                    }, e.showInfo = function(t) {
                        return e.$parent && e.$parent.showInfo(t)
                    }
                }],
                templateUrl: 'public/modules/ds/header/templates/header.selection.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.share').factory('ShareChannelService', ['$rootScope', 'Restangular', '$q', 'holospace', 'identityService', 'FacebookService', function() {
            return {}
        }])
    }(),
    function() {
        angular.module('ds.holospace').directive('dsHolospace', ['$log', function(e) {
            return e.debug('Loading DsHolospace Controller'), {
                restrict: 'E',
                transclude: !0,
                scope: {
                    data: '=',
                    editable: '=?',
                    editingCover: '=?'
                },
                controller: ['$scope', '$rootScope', '$uibModal', '$state', '$location', '_', 'MessagesAsync', 'Authentication', '$timeout', 'Followers', function(e, t, a, s, i, o, n, l, r, d) {
                    const c = this;
                    e.state = {}, e.state.following = 'Following', c.isLoggedOut = l.isLoggedOut(), e.content = {
                        space: e.data,
                        body: {
                            name: e.data.name,
                            description: o.get(e.data, 'information.tagline', '')
                        },
                        name: e.data.name,
                        url: [window.location.origin, e.data.vanityUrl].join('/'),
                        id: e.data.id
                    };
                    const p = t.primarySpace;
                    c.currentSpace = e.data, e.overlays = {
                        message: 'public/modules/holospace/views/holospace-message.view.html'
                    }, e.showLogin = function() {
                        const e = l.currentUser();
                        if (!e) {
                            const e = {
                                url: i.absUrl(),
                                timestamp: Date.now()
                            };
                            return sessionStorage.setItem('redirectToUrlAfterLogin', JSON.stringify(e)), r(l.showLoginPrompt)
                        }
                    }, e.sendNewMessage = function(e) {
                        n.then((t) => {
                            const a = {
                                body: e,
                                recipientId: c.currentSpace.id
                            };
                            t.createAndRedirect(a, p.vanityUrl, s)
                        })
                    }, e.modalLinks = function() {
                        e.showLinks = !e.showLinks, t.isOverflow = !t.isOverflow
                    }, e.addLink = function() {
                        e.$parent.vm.addSpaceLink()
                    }, e.openFollowModal = function(t) {
                        dataLayer.push({
                            eventCategory: 'Modal Visit',
                            event: 'Follower Modal Visit',
                            eventAction: 'Follow',
                            eventLabel: c.currentSpace.vanityUrl
                        }), d.openFollowModal(e.data, t)
                    }, e.$watch('state.editingCover', (t) => {
                        e.editingCover = t
                    })
                }],
                controllerAs: 'vm',
                templateUrl: 'public/modules/ds/holospace/templates/holospace.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.holospace').factory('dsHolospaceService', ['Restangular', function(e) {
            return {
                update: function(t, a) {
                    return e.all('/v2/spaces/' + a + '/save').customPUT(t).then((e) => e.plain())
                },
                getEditSpaceDetail: function(t) {
                    return e.one('/v2/spaces/draft/' + t).get().then((e) => e.plain())
                },
                getSpaceDetail: function(t) {
                    return e.one('/v2/spaces/' + t).get().then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('ds.holospace.follow').directive('dsHolospaceFollow', ['$rootScope', '$log', 'Authentication', '$location', '$timeout', 'Followers', 'notifyService', function(e, t, a, s, i, o) {
            return t.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=',
                    isFollow: '=?',
                    onlyFollow: '=?',
                    theme: '@?'
                },
                controller: ['$scope', function(t) {
                    t.theme = t.theme || 'default', t.state = {
                        following: t.data.hasAskedFollow ? 'Requested' : 'Following'
                    }, t.hideUnfollow = function() {
                        t.state.following = t.data.hasAskedFollow ? 'Requested' : 'Following'
                    }, t.showUnfollow = function() {
                        t.state.following = 'Unfollow', t.data.hasAskedFollow = !1
                    }, t.toggleFollow = function(n) {
                        n.stopPropagation(), n.preventDefault();
                        const l = a.currentUser();
                        if (!l) {
                            const e = {
                                url: s.absUrl(),
                                timestamp: Date.now()
                            };
                            return sessionStorage.setItem('redirectToUrlAfterLogin', JSON.stringify(e)), i(a.showLoginPrompt)
                        }
                        return i(() => {
                            t.state.loadingFollow = !0
                        }), o.toggleFollow(e.primarySpace, t.data).then(() => {
                            t.state.loadingFollow = !1, t.state.following = t.data.isFollowing ? t.data.isPrivate ? 'Requested' : 'Following' : 'Follow', t.data.isPrivate && (t.data.hasAskedFollow = !0, t.data.isFollowing = !1)
                        })
                    }
                }],
                templateUrl: 'public/modules/ds/holospace-follow/templates/holospace.follow.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.image.uploader').directive('dsImageUploader', ['$rootScope', '$log', '_', '$timeout', 'media', 'DsImageUploaderService', function(e, t, a, s, i, o) {
            return t.debug('Loading DsImageUploader Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    inputId: '@?',
                    spaceId: '=',
                    files: '=?',
                    validate: '=?'
                },
                controller: ['$scope', '$element', function(t, n) {
                    function l(e, i) {
                        s(() => {
                            e.local = e.source, e.source = i.url, e.uploading = !1, e.filestack = !0;
                            const s = a.filter(t.content, {
                                filestack: !0
                            });
                            t.files = s.map((e) => e.source)
                        })
                    }

                    function r(e) {
                        const t = atob(e.split(',')[1]),
                            a = e.split(',')[0].split(':')[1].split(';')[0],
                            s = new ArrayBuffer(t.length),
                            o = new Uint8Array(s);
                        for (let a = 0; a < t.length; a++) o[a] = t.charCodeAt(a);
                        const i = new Blob([s], {
                            type: a
                        });
                        return i
                    }
                    const d = $(window);
                    t.isMobile = 768 >= d.width(), t.state = {}, t.content = t.files ? t.files.map((e) => ({
                        source: e,
                        filestack: !0
                    })) : [], t.isMobile && function() {
                        const e = angular.element(n),
                            a = e.find('.ds-image-uploader-swiper');
                        t.swiper = new Swiper(a, {
                            slidesPerView: 4,
                            freeMode: !0,
                            breakpoints: {
                                768: {
                                    slidesPerView: 2,
                                    freeMode: !0
                                }
                            }
                        })
                    }(), t.pickImage = function() {
                        e.pickMediaFile = !0, i.pickFile(null, null, t.spaceId, null, !0).then((e) => {
                            e.result.map((e) => {
                                t.content.push({
                                    source: e.source,
                                    filestack: !0
                                }), t.files.push(e.source)
                            }), t.swiper && t.swiper.update(), t.validate = null, s()
                        })
                    }, t.toggleEdit = function(e) {
                        t.content[e].editing = !t.content[e].editing
                    }, t.$watchCollection('content', (e) => {
                        const s = a.filter(e, {
                            filestack: !0
                        });
                        t.files = s.map((e) => e.source)
                    }), t.delete = function(e) {
                        (t.content[e].editing || t.isMobile) && t.content.splice(e, 1)
                    }, t.create = function(e) {
                        a.map(e, (e) => {
                            const a = new window.FileReader;
                            return a.readAsDataURL(e), a.onloadend = function(i) {
                                e.data = r(i.target.result), e.blob = new Blob([e.data], {
                                    type: e.type
                                }), e.source = a.result, t.swiper && t.swiper.update(), s(() => {
                                    t.content.push(e), t.upload(e)
                                })
                            }, e
                        })
                    }, t.handleDrop = function(e) {
                        if (e.dataTransfer.files && e.dataTransfer.files[0]) {
                            const s = a.map(e.dataTransfer.files, (e) => e);
                            t.create(s)
                        }
                    }, t.upload = function(e) {
                        return e.uploading = !0, o.upload(e.blob, e.type, t).then((t) => {
                            l(e, t)
                        })
                    }
                }],
                templateUrl: 'public/modules/ds/image-uploader/templates/image.uploader.html',
                link: function(t, e) {
                    t.uploader = angular.element(e).find('.ds-image-uploader-label')[0], t.uploader.addEventListener('dragover', (a) => (a.preventDefault(), a.stopPropagation(), s(() => {
                        t.state.hovering = !0
                    }), !1)), t.uploader.addEventListener('dragleave', (a) => {
                        a.preventDefault(), a.stopPropagation(), s(() => {
                            t.state.hovering = !1
                        })
                    }), t.uploader.addEventListener('drop', (a) => {
                        a.preventDefault(), a.stopPropagation(), t.handleDrop(a), s(() => {
                            t.state.hovering = !1
                        })
                    })
                }
            }
        }])
    }(),
    function() {
        angular.module('items').factory('DsImageUploaderService', ['$rootScope', 'Restangular', '$q', 'Authentication', function(e, t, a, s) {
            return {
                upload: function(e, t, i, o) {
                    const n = new XMLHttpRequest,
                        l = a.defer();
                    return i && (i.xhrInstance = n), n.open('POST', '/thumb/upload', !0), n.setRequestHeader('X-Space-Token', s.spaceAccessToken().id), n.setRequestHeader('Authorization', s.accessToken()), n.setRequestHeader('Content-Type', t || e.type), n.upload && o && n.upload.addEventListener('progress', (t) => {
                        o && o((100 * (t.loaded / t.total)).toFixed(0))
                    }, !1), n.addEventListener('readystatechange', function() {
                        if (4 == this.readyState) return 200 == this.status ? l.resolve(JSON.parse(n.responseText)) : l.reject(this)
                    }), n.addEventListener('error', (t) => {
                        console.error(t), l.reject(t)
                    }), n.send(e), l.promise
                },
                dataURItoBlob: function(e) {
                    const t = atob(e.split(',')[1]),
                        a = e.split(',')[0].split(':')[1].split(';')[0],
                        s = new ArrayBuffer(t.length),
                        o = new Uint8Array(s);
                    for (let a = 0; a < t.length; a++) o[a] = t.charCodeAt(a);
                    const i = new Blob([s], {
                        type: a
                    });
                    return i
                }
            }
        }])
    }(),
    function() {
        angular.module('ds.karot').directive('dsKarot', ['$rootScope', '$log', 'dsTooltip', function(e, t, a) {
            function s(e, t) {
                return {
                    template: 'public/modules/ds/user-selection/templates/tooltip.html',
                    controller: 'UserSelectionController',
                    scope: {
                        noPadding: !0,
                        content: t.content
                    },
                    offset: {
                        top: 30,
                        right: 19
                    },
                    responsive: {
                        offset: {
                            top: 5,
                            right: -7
                        }
                    },
                    right: !0,
                    element: e,
                    fullscreenMobile: !0,
                    fixed: !0
                }
            }

            function i(e, t) {
                return {
                    template: 'public/modules/ds/actions/templates/actions.html',
                    controller: 'ActionsController',
                    scope: {
                        type: t.type,
                        content: t.content
                    },
                    offset: {
                        top: -10,
                        right: 7
                    },
                    right: !0,
                    data: t.data,
                    element: e
                }
            }
            return t.debug('Loading dsKarot Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=',
                    type: '=',
                    content: '=?'
                },
                controller: ['$scope', function(e) {
                    e.tooltip = null, e.showTooltip = function(t) {
                        if (e.tooltip && !e.tooltip.destroyed) return e.tooltip.close(), !1;
                        const o = 'user-selection' === e.type ? s(t, e) : i(t, e);
                        'space' === e.type && (o.offset = {
                            top: 10,
                            right: -5
                        }), a.create(o).then((t) => {
                            e.tooltip = t, t.show()
                        })
                    }
                }],
                templateUrl: 'public/modules/ds/karot/templates/karot.html'
            }
        }])
    }(),
    function() {
        angular.module('core').controller('MentionsController', ['$scope', '$tooltip', '$log', 'dsMentionsService', 'dsInputService', function(e, t, a, s, i) {
            e.spaceList = [], e.index = 0, e.timer = null, e.choose = function() {
                const t = e.spaceList[e.index],
                    a = angular.element(e.element.target),
                    o = a.text();
                if (e.main.remove(), !t || !t.vanityUrl) return !1;
                const n = s.getMentionStartPoition(o, e.caretPosition) + 1,
                    l = o.split(''),
                    r = t.vanityUrl.split('');
                r.push('&nbsp;'), l.splice.apply(l, [n, e.caretPosition - n].concat(r));
                const d = l.join('');
                a.html(d), a.trigger('change'), i.setCaretPosition(a.get(0), n + r.length)
            }, e.select = function(t) {
                e.index = t
            }, e.up = function() {
                e.spaceList.length && e.$apply(() => {
                    e.index ? e.index-- : e.index = e.spaceList.length - 1
                })
            }, e.down = function() {
                e.spaceList.length && e.$apply(() => {
                    e.index === e.spaceList.length - 1 ? e.index = 0 : e.index++
                })
            }, e.$watch('mention', (a) => {
                a && (clearTimeout(e.timer), e.waiting = !0, e.timer = setTimeout(() => {
                    e.waiting = !1, s.search(a).then((a) => {
                        e.spaceList = a, e.spaceList.length ? t.show() : t.hide()
                    })
                }, 200))
            })
        }])
    }(),
    function() {
        angular.module('ds.mentions').filter('mentions', ['dsMentionsService', '_', function(e, t) {
            return function(a, s) {
                const i = t.map(s, 'vanityUrl');
                return e.normalize(a, i)
            }
        }])
    }(),
    function() {
        angular.module('ds.mentions').factory('dsMentionsService', ['$log', '$q', '_', '$timeout', 'dsTooltip', 'Restangular', 'dsInputService', function(e, t, a, s, i, o, n) {
            function l(e, t) {
                const a = this;
                this.creating = null, this.tooltip = null, this.update = function() {
                    this.tooltip.$scope.mention = e.mention
                }, this.remove = function() {
                    this.tooltip && (this.tooltip.destroy(), this.tooltip = null)
                }, this.create = function(t) {
                    this.creating = !0, i.create({
                        template: 'public/modules/ds/mentions/templates/mentions.html',
                        controller: 'MentionsController',
                        scope: {
                            mention: e.mention,
                            caretPosition: e.caretPosition,
                            baseline: 'auto',
                            noArrow: !0,
                            position: 'start',
                            main: a
                        },
                        element: t
                    }).then((e) => {
                        a.creating = !1, a.tooltip = e
                    })
                }, t.on('keydown', (e) => {
                    if (a.tooltip) {
                        if (a.tooltip.$scope.waiting) return clearTimeout(a.tooltip.$scope.timer), void(a.tooltip.$scope.waiting = !1);
                        if (38 === e.keyCode) return a.tooltip.$scope.up(), e.preventDefault(), !1;
                        if (40 === e.keyCode) return a.tooltip.$scope.down(), e.preventDefault(), !1;
                        if (13 === e.keyCode) return a.tooltip.$scope.choose(), a.remove(), e.preventDefault(), !1
                    }
                }), t.on('keyup', (t) => {
                    -1 < [38, 40, 13, 16, 17, 18, 91].indexOf(t.keyCode) || (a.tooltip && clearTimeout(a.tooltip.$scope.timer), s(() => {
                        const s = n.getCaretPosition(t.target),
                            i = r.getMention(e.value, s);
                        e.caretPosition = s, a.tooltip && (a.tooltip.$scope.caretPosition = e.caretPosition), 1 < t.key.length && !a.tooltip || (i ? (e.mention = i, a.tooltip ? a.update() : a.create(t)) : a.tooltip && a.remove())
                    }))
                })
            }
            const r = {};
            return r.instance = function(e, t) {
                return new l(e, t)
            }, r.normalize = function(e, t = []) {
                return e ? e.replace(/@([a-z0-9._-]+)/ig, (e, s) => a.includes(t, s) ? '<a href="/' + s.toLowerCase() + '" class="ds-mention-link">' + e + '</a>' : e).replace(/#([a-z0-9._-]+)/ig, '<a href="/search/$1" class="ds-mention-link">$&</a>') : e
            }, r.format = function(e) {
                return e && e.replace(/@([a-z0-9._-]+)/ig, '<span class="ds-mention-text">$&</span> ')
            }, r.search = function(e) {
                return o.all('mentions').get('lookup', {
                    term: e
                }).then((e) => {
                    const t = e.plain(),
                        s = a.remove(a.uniqBy(t, 'vanityUrl'), (e) => !a.isEmpty(e.vanityUrl));
                    return s
                })
            }, r.getMentionStartPoition = function(e, t) {
                return e.slice(0, t).search(/@([a-z0-9._-]+)$/i)
            }, r.getMention = function(e, t) {
                e += '', t = +t >>> 0;
                const a = r.getMentionStartPoition(e, t);
                return -1 === a ? null : e.slice(a + 1, t)
            }, r
        }])
    }(),
    function() {
        function e(e, s, i, o) {
            function n() {
                e.$apply(() => {
                    l.setModalPosition()
                })
            }
            const l = this;
            e.$emit('ds.modal.created', [this, e]);
            const r = angular.element('html'),
                d = angular.element('body'),
                c = angular.element(window);
            this.$scope = e, c.on('resize', n), this.destroy = function() {
                e.hideOverlay = !0, s(() => {
                    i.remove()
                }, 50), c.off('resize', n), this.killVideos(), e.$destroy(), delete this
            }, this.isVisible = function() {
                return !0 === e.visible
            }, this.open = function() {
                return e.$emit('ds.modal.open', [this, e]), this.show()
            }, this.close = function(t) {
                t || e.$emit('ds.modal.close', [this, e]), o.$emit('holonis_modalClosed', [e]);
                const a = o.dsModals.indexOf(l);
                return -1 !== a && o.dsModals.splice(a, 1), this.hide().destroy()
            }, this.show = function() {
                e.$emit('ds.modal.show', [this, e]), o.$emit('holonis_modalOpen', [e]);
                const t = d.find('.slideRoute'),
                    a = d.hasClass('browser-safari') ? d.scrollTop() : r.scrollTop();
                return e.scroll = a, d.addClass('ds-modal-open'), t.scrollTop(e.scroll), s(() => {
                    l.setModalPosition(() => {
                        e.visible = !0
                    })
                }), o.dsModals.push(this), this
            }, this.hide = function() {
                return e.visible && (e.$emit('ds.modal.hide', [this, e]), e.visible = !1, d.hasClass('browser-safari') ? d.scrollTop(e.scroll) : r.scrollTop(e.scroll)), this
            }, this.killVideos = function() {
                const e = i.find('.oo-player-container').attr('id');
                o.$broadcast('ds.modal.destroy', {
                    id: e
                })
            }, this.setModalPosition = function(o) {
                const n = angular.element(i.find('.ds-modal'));
                return 'auto' === e.position ? (n.addClass('ds-modal-center'), s(o)) : s(() => {
                    768 >= c.width() || e.full ? (l.setSize(!0), e.top = 0, e.left = 0, s(o)) : (l.setSize(!1), s(() => {
                        const i = e.width || n.width(),
                            l = e.height || n.height();
                        e.top = t(a(c.height() / 2 - l / 2), 0), e.left = t(a(c.width() / 2 - i / 2), 0), s(o)
                    }))
                })
            }, this.setSize = function(t) {
                const a = angular.element(i.find('.ds-modal'));
                e.width = t ? c.width() : e.minWidth || a.width() || 550, e.height = null, e.$emit('ds.modal.setSize', this, e, t)
            }
        }
        var t = Math.max,
            a = Math.round;
        angular.module('tiles').factory('dsModal', ['$log', '$q', '$templateRequest', '$compile', '$timeout', '$controller', '$rootScope', 'jquery', '_', 'dsTooltip', function(t, a, s, i, o, n, l, r, d, c) {
            function p(e) {
                27 === e.keyCode && l.dsModals.length && l.dsModals.pop().close()
            }

            function m() {
                const e = r('.ds-modal-visible');
                return 1 > e.length ? {
                    overlay: 99999999,
                    modal: 1e8
                } : v.handleMultipleModal(e)
            }

            function u(e) {
                const t = e.$scope;
                t.silentClose = () => t.allowClose ? e.close(!0) : void 0, t.update = (e) => {
                    t.$emit('ds.modal.update', e)
                }, t.close = (a) => {
                    if (t.allowClose) {
                        if (!a) return e.close();
                        if (a.target.classList.contains('ds-modal-container')) return e.close();
                        const t = !d.get(a, 'originalEvent.path', []).filter((e) => {
                            e.classList && e.classList.contains('ds-modal')
                        });
                        t && e.close()
                    }
                }
            }

            function g() {
                return f ? a.resolve(f) : s(b).then((e) => f = e)
            }
            const v = {},
                h = {},
                b = 'public/modules/ds/modal/templates/modal.template.html';
            let f = null;
            const y = angular.element('body');
            return y.off('keydown', p).on('keydown', p), v.getOpenModals = function() {
                return l.dsModals
            }, v.repositionAll = function() {
                l.dsModals.forEach((e) => {
                    e.setModalPosition()
                })
            }, v.closeAll = function() {
                l.dsModals.forEach((e) => {
                    e.close(!0)
                })
            }, v.closeLast = function() {
                d.last(l.dsModals).close(!0)
            }, l.closeAllDsModal = function() {
                v.closeAll()
            }, v.create = function(r) {
                c.closeAll(), t.debug('ds.modal.service : create');
                const d = l.$new();
                return a.all([g(), s(r.template)]).then((t) => {
                    Object.assign(d, r.scope), d.loaded = !0, d.title = r.title, d.full = r.full, d.focused = r.focused, d.close = r.close, d.position = r.position, d.allowClose = void 0 === r.allowClose || r.allowClose, d.zindex = m(), d.hideClose = !1, d.top = 0, d.left = 0, d.width = d.minWidth || 550;
                    const a = i(t[0].trim())(d),
                        s = i(t[1].trim())(d);
                    d.$main = a, d.$content = s;
                    const c = angular.element('body'),
                        p = new e(d, o, a, l);
                    return u(p), r.controller && n(r.controller, {
                        $scope: d,
                        $modal: p
                    }), a.find('.ds-modal-wrapper-content').append(s), c.append(a), r.customClass && o(() => a.addClass(r.customClass)), p
                })
            }, v.handleMultipleModal = function(e) {
                let t = 0;
                e.each((e, a) => {
                    const s = r(a).css('z-index');
                    t = s > t ? s : t
                });
                const a = parseInt(t, 10) + 2,
                    s = parseInt(t, 10) + 1;
                return {
                    overlay: s,
                    modal: a
                }
            }, h.show = function() {
                t.debug('ds.overlay.service : show')
            }, h.hide = function() {
                t.debug('ds.overlay.service : hide')
            }, v
        }])
    }(),
    function() {
        angular.module('ds.nav').controller('dsNavController', ['$log', '$rootScope', '$scope', function(e) {
            e.debug('Loading DsNavController Controller')
        }])
    }(),
    function() {
        angular.module('ds.nav').directive('dsNavMobile', ['$log', function(e) {
            return e.debug('Loading DsNav Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {},
                controller: 'dsNavController',
                templateUrl: 'public/modules/ds/nav/templates/nav.mobile.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.password').directive('dsPassword', ['$rootScope', '$log', '_', '$timeout', '$compile', function(e, t) {
            return t.debug('Loading DsPassword Controller'), {
                restrict: 'E',
                transclude: !0,
                scope: {
                    ngModel: '=',
                    ngChange: '&?',
                    validate: '=',
                    level: '=?',
                    label: '@?',
                    placeholder: '@?',
                    params: '=?',
                    dsAutofocus: '=?'
                },
                controller: ['$scope', '$element', function(e) {
                    e.$watch('ngModel', (t) => {
                        t = t || '', e.level = 0, e.level += 7 < t.toString().length ? 1 : 0, e.level += t.toLowerCase() === t ? 0 : 1, e.level += /\d+/g.test(t) ? 1 : 0, e.level += /^[a-zA-Z0-9- ]*$/.test(t) ? 0 : 1
                    })
                }],
                templateUrl: 'public/modules/ds/password/templates/password.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.player').directive('dsPlayer', ['$log', '$timeout', 'uid', '_', 'Videos', 'dsActionShareService', 'constants', function(e, t, a, s, i, o, n) {
            return e.debug('Loading dsPlayer Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=',
                    autoplay: '=',
                    api: '=?',
                    editing: '=',
                    ooId: '=?',
                    videoId: '=?'
                },
                compile: function() {
                    return {
                        pre: function(e) {
                            const t = 'ds-player-' + e.videoId + a.generateUid(),
                                s = document.querySelectorAll('.ds-player');
                            e.id = t
                        },
                        post: function() {}
                    }
                },
                controller: ['$scope', function(e) {
                    e.show = {
                        share: !1
                    };
                    const a = 'undefined' != typeof _holonisTurnOnVideoAds && 'undefined' != typeof _holonisVideoAdTagUrl && _holonisTurnOnVideoAds,
                        l = a ? {
                            all_ads: [{
                                linearAdSkipButtonStartTime: 5,
                                showLinearAdSkipButton: !0,
                                position: 0,
                                position_type: 't',
                                tag_url: _holonisVideoAdTagUrl
                            }],
                            vpaidMode: 'insecure'
                        } : null;
                    t(() => {
                        const t = e.id;
                        e.ooId = e.ooId || s.get(e.data, 'content.embedded.block["0"].ooId') || s.get(e.data, 'block["0"].ooId') || s.get(e.data, 'body.ooId') || s.get(e.data, 'ooId'), e.videoId = e.videoId || s.get(e.data, 'content.embedded.block["0"].id') || s.get(e.data, 'block["0"].id') || s.get(e.data, 'source') || s.get(e.data, 'id');
                        const a = {
                            autoplay: e.autoplay,
                            loop: !1,
                            pcode: 'VxbmoyOh2cM7ctZM5XfoOTspLXXz',
                            playerBrandingId: 'a7ce96155a949f899715d6fee0dd942',
                            encodingPriority: ['mp4'],
                            debug: !1,
                            skin: {
                                inline: {
                                    startScreen: {
                                        showTitle: !0,
                                        showDescription: !0
                                    },
                                    pauseScreen: {
                                        showTitle: !0,
                                        showDescription: !0
                                    },
                                    icons: {
                                        play: {
                                            fontStyleClass: 'dsicon-play ds-player-icon',
                                            fontString: ''
                                        },
                                        pause: {
                                            fontStyleClass: 'dsicon-pause ds-player-icon',
                                            fontString: ''
                                        },
                                        expand: {
                                            fontStyleClass: 'dsicon-expand ds-player-icon',
                                            fontString: ''
                                        },
                                        compress: {
                                            fontStyleClass: 'dsicon-expand ds-player-icon',
                                            fontString: ''
                                        }
                                    }
                                }
                            },
                            "google-ima-ads-manager": l
                        };
                        let o;
                        OO.ready(() => {
                            const s = OO.Player.create(t, e.ooId, a);
                            e.editing || (e.player = s, o = new VideoEventTracker({
                                player: s,
                                tag: 'analytics',
                                videoViewedAnnotator: i,
                                scope: e,
                                videoEngagementConstants: n.ANALYTICS_DETAIL.videoEngagement
                            }))
                        })
                    }), e.share = function(t) {
                        o({
                            data: t
                        }), e.player.pause()
                    }, e.$on('ds.modal.destroy', (t, a) => {
                        const i = s.get(e.player, 'destroy');
                        if (a.id === e.id && s.isFunction(i)) return i()
                    })
                }],
                templateUrl: 'public/modules/ds/player/templates/player.html'
            }
        }])
    }();
class VideoEventTracker {
    constructor(e) {
        this.player = e.player, this.subscriber = e.tag, this.scope = e.scope, this.videoViewedAnnotator = e.videoViewedAnnotator, this.videoEngagementConstants = e.videoEngagementConstants, this.requiredEngagementTime = e.videoEngagementConstants.watermarkTimeDuration, this.start = 0, this.end = 0, this.cumulativeWatchedTime = 0, this.duration = -1, this.size = -1, this.fullScreen = -1, this.videoPagePath = '', this.videoName = '', this.initialSubscribe()
    }
    getEventDict() {
        return {
            playheadTimeChanged: {
                cb: (t, e) => this.handleTimeChanged(t, e)
            },
            videoPaused: {
                cb: (t, e) => this.handlePaused(t, e)
            },
            seeked: {
                cb: (t, e) => this.handleSeeked(t, e)
            },
            fullscreenChanged: {
                cb: (t, e) => this.handleFullScreenChanged(t, e)
            },
            sizeChanged: {
                cb: (t, e) => this.handleSizeChanged(t, e)
            },
            adsPlayed: {
                cb: (t, e) => this.handleAdsPlayed(t, e)
            },
            play: {
                cb: (t, e) => this.handlePlay(t, e)
            },
            videoWillPlay: {
                cb: (t, e) => this.handleVideoWillPlay(t, e)
            },
            playbackReady: {
                cb: (t, e) => this.handlePlaybackReady(t, e),
                subscribeOnCreate: !0
            },
            contentTreeFetched: {
                cb: (t, e) => this.handleInfoFetch(t, e),
                subscribeOnCreate: !0
            }
        }
    }
    isAd() {
        return 'ads' === this.videoName
    }
    hideVideoTitle() {
        this.scope.show.share = !1
    }
    showVideoTitle() {
        this.scope.show.share = !0
    }
    markVideoAsViewed() {
        this.scope.viewed || (this.scope.viewed = !0, this.videoViewedAnnotator.view(this.scope.videoId))
    }
    calculateEngagementTime(e) {
        const t = this.videoEngagementConstants.watermarkPercentTimeDuration / 100,
            a = e > this.videoEngagementConstants.watermarkTimeDuration && e * t > this.videoEngagementConstants.watermarkTimeDuration,
            s = e < this.videoEngagementConstants.watermarkTimeDuration;
        return a ? e * t : s ? e : this.videoEngagementConstants.watermarkTimeDuration
    }
    isUserEngaged(e) {
        const t = -1 === this.duration;
        return t ? void 0 : e >= this.requiredEngagementTime
    }
    logVideoEvent(e) {
        const t = Object.assign({}, e, {
            duration: this.duration,
            videoPagePath: this.videoPagePath,
            videoName: this.videoName,
            title: this.title
        });
        dataLayer.push(t)
    }
    logEngagedUser(e) {
        this.logVideoEvent({
            event: VideoEventTracker.videoEvent.ENGAGED,
            cumulativeTime: e
        })
    }
    logWatched() {
        const e = this.end - this.start;
        if (0 < e) {
            const e = this.isAd() ? VideoEventTracker.videoEvent.WATCHED_AD : VideoEventTracker.videoEvent.WATCHED;
            this.logVideoEvent({
                event: e,
                start: this.start,
                end: this.end
            })
        }
        const t = !this.scope.viewed && !this.isAd();
        t && (this.cumulativeWatchedTime += this.end - this.start, this.isUserEngaged(this.cumulativeWatchedTime) && (this.logEngagedUser(this.cumulativeWatchedTime), this.markVideoAsViewed()))
    }
    logVideoPlay(e) {
        const t = this.isAd() ? VideoEventTracker.videoEvent.PLAY_AD : VideoEventTracker.videoEvent.PLAY;
        this.logVideoEvent({
            event: t,
            videoTime: e.videoTime
        })
    }
    handleInfoFetch(e, t) {
        const a = /.*\/\/[^/]*(.*)/;
        this.videoPagePath = t.hostedAtURL.match(a)[1], this.title = t.title
    }
    handleTimeChanged(e, t) {
        this.hideVideoTitle(), this.end = t;
        const a = 0 < t && -1 === this.duration;
        a && (this.duration = this._getDuration(), this.requiredEngagementTime = this.calculateEngagementTime(this.duration), this.logVideoPlay({
            videoTime: 0
        }))
    }
    handleVideoWillPlay(e, t) {
        this.videoName = t;
        const a = -1 < this.duration;
        a && this.logVideoPlay({
            videoTime: this.end
        })
    }
    handleSeeked(e, t) {
        const a = this.end === t;
        if (!a && !a) {
            this.logWatched();
            const e = this.isAd() ? VideoEventTracker.videoEvent.SEEKED_AD : VideoEventTracker.videoEvent.SEEKED;
            this.logVideoEvent({
                event: e,
                videoTime: this.end,
                seekedTime: t
            }), this.start = this.end = t
        }
    }
    handlePaused() {
        const e = 0 === this.end;
        if (!e) {
            this.showVideoTitle(), this.logWatched();
            const e = this.end === this.duration;
            if (e) {
                const e = !this.isAd() && !this.scope.viewed;
                e && this.markVideoAsViewed(), this.duration = -1
            } else {
                const e = this.isAd() ? VideoEventTracker.videoEvent.PAUSED_AD : VideoEventTracker.videoEvent.PAUSED;
                this.logVideoEvent({
                    event: e,
                    videoTime: this.end
                }), this.start = this.end
            }
        }
    }
    handleFullScreenChanged(e, t) {
        const a = this.fullScreen !== t;
        a && (this.logVideoEvent({
            event: VideoEventTracker.videoEvent.FULLSCREEN_CHANGED,
            isFullScreen: t,
            videoTime: this.end
        }), this.fullScreen = t)
    }
    handleSizeChanged(e, t) {
        const a = this.size !== t;
        a && (this.logVideoEvent({
            event: VideoEventTracker.videoEvent.SIZE_CHANGED,
            size: t,
            videoTime: this.end
        }), this.size = t)
    }
    handleAdsPlayed() {
        this.duration = -1, this.end = 0, this.start = 0
    }
    handlePlaybackReady() {
        this.fullScreen = this._getPlayerFullScreen();
        const e = this.getEventDict(),
            t = Object.keys(e);
        t.forEach((t) => {
            const a = e[t];
            a.subscribeOnCreate ? this._unsubscribe(t) : this._subscribe(t)
        })
    }
    initialSubscribe() {
        const e = this.getEventDict(),
            t = Object.keys(e);
        t.forEach((t) => {
            const a = e[t];
            a.subscribeOnCreate && this._subscribe(t)
        })
    }
    _subscribe(e) {
        const t = this.getEventDict();
        this.player.mb.subscribe(e, this.subscriber, t[e].cb)
    }
    _unsubscribe(e) {
        const t = this.getEventDict();
        this.player.mb.unsubscribe(e, this.subscriber, t[e].cb)
    }
    _getDuration() {
        return this.player.getDuration()
    }
    _getPlayheadTime() {
        return this.player.getPlayheadTime()
    }
    _getPlayerFullScreen() {
        return this.player.isFullscreen()
    }
}
VideoEventTracker.videoEvent = {
        FULLSCREEN_CHANGED: 'VideoFullScreenChanged',
        PAUSED: 'VideoPaused',
        PAUSED_AD: 'VideoAdPaused',
        PLAY: 'VideoPlay',
        PLAY_AD: 'VideoAdPlay',
        SEEKED: 'VideoSeeked',
        SEEKED_AD: 'VideoAdSeeked',
        SIZE_CHANGED: 'SizeChanged',
        WATCHED: 'VideoWatched',
        WATCHED_AD: 'VideoAdWatched',
        ENGAGED: 'VideoEngagement'
    },
    function() {
        angular.module('ds.post.text').directive('dsPostText', ['$rootScope', '$log', function(e, t) {
            return t.debug('Loading Engagement Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '='
                },
                controller: ['$scope', function(e) {
                    e.hideSeeMore = !1, e.isPost = 'post' === e.data.type, e.text = e.data.content.subtitle && !e.isPost || e.data.content.description, e.showText = !!e.data.content.description, 'share' === e.data.subType && (e.text = _.get(e.data, 'v2.body.description'), e.showText = !0)
                }],
                templateUrl: 'public/modules/ds/post-text/templates/post.text.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.product.listing').directive('dsProductListing', ['$rootScope', '$log', '$timeout', 'uid', '_', '$q', 'Videos', 'dsActionShareService', function(e, t) {
            return t.debug('Loading dsProductListing Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    items: '='
                },
                controller: ['$scope', function() {}],
                templateUrl: 'public/modules/ds/product-listing/templates/listing.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.rating').directive('dsRating', ['$rootScope', '$log', '$timeout', function(e, t, a) {
            return t.debug('Loading dsRating Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    level: '=?',
                    editable: '=?',
                    forceVisibility: '=?'
                },
                controller: ['$scope', function(e) {
                    function t() {
                        return [5, 4, 3, 2, 1].map((t) => ({
                            id: e.$id + '-star-' + t,
                            value: t
                        }))
                    }(function() {
                        a(() => {
                            e.stars = t()
                        })
                    })()
                }],
                templateUrl: 'public/modules/ds/rating/templates/rating.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.recommendations').directive('dsRecommendations', ['$log', '_', '$timeout', 'moment', 'OnboardingService', 'localStorageService', function(e, t, a, s, i, o) {
            return e.debug('Loading DsRecommendations Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {},
                controller: ['$scope', '$element', function(e, t) {
                    function n() {
                        const a = t.find('.ds-recommendations-swiper-container');
                        e.swiper = new Swiper(a, {
                            slidesPerView: 'auto',
                            spaceBetween: 19,
                            grabCursor: !0,
                            navigation: {
                                nextEl: '.swiper-button-next',
                                prevEl: '.swiper-button-prev'
                            }
                        }), l()
                    }

                    function l(e) {
                        const a = t.find('.ds-recommendations-container')[0],
                            s = a && a.getBoundingClientRect().height,
                            i = e ? 0 : s;
                        t.css('max-height', i)
                    }

                    function r() {
                        l(!0)
                    }
                    e.state = {
                            loaded: !1
                        }, e.getRecommended = function(t) {
                            return i.getRecommended(t).then((t) => {
                                e.spaces = t.items, e.state.loaded = !0, e.spaces.length && a(n)
                            })
                        }, e.close = function() {
                            const e = s().format();
                            o.set('dismissedRecommendations', e), r()
                        },
                        function() {
                            const t = o.get('dismissedRecommendations');
                            if (!t) return void e.getRecommended();
                            const a = s().diff(s(t)),
                                i = 12 <= s.duration(a).asHours();
                            i && e.getRecommended()
                        }()
                }],
                templateUrl: 'public/modules/ds/recommendations/templates/ds.recommendations.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.search').directive('dsSearch', ['$log', '_', '$timeout', function(e, t, a) {
            return e.debug('Loading Search Directive Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    placeholder: '@',
                    ngModel: '=',
                    ngChange: '&?',
                    data: '=',
                    filtered: '=?',
                    loading: '=?',
                    params: '='
                },
                controller: ['$scope', function(e) {
                    e.data = e.data || [], e.state = {
                        timeout: null
                    }, e.timeout = e.$watch('ngModel', () => {
                        e.loading = !0, e.state.timeout && a.cancel(e.state.timeout), e.state.timeout = a(() => e.params.action ? e.params.action().then((t) => (e.loading = !1, t)) : void(e.loading = !1), 300)
                    })
                }],
                templateUrl: 'public/modules/ds/search/templates/search.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.seo').directive('dsSeo', ['$rootScope', '$log', '$timeout', function(e, t, a) {
            return t.debug('Loading dsSeo Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '='
                },
                controller: ['$scope', '$element', function(e, t) {
                    function s() {
                        a(() => {
                            e.style.height = (e.state.editing ? e.containers.active : e.containers.inactive).getBoundingClientRect().height
                        })
                    }
                    e.data = e.data || {}, e.state = {}, e.draft = {}, e.state.editing = !1, e.style = {
                        height: 117
                    }, e.containers = {
                        inactive: t.find('.ds-seo-inactive')[0],
                        active: t.find('.ds-seo-active')[0]
                    }, e.$watchCollection('draft', () => {
                        e.state.save = !!e.draft.title || !!e.draft.description, s()
                    }), e.save = function() {
                        e.data.meta.title = e.draft.title, e.data.meta.description = e.draft.description, e.edit()
                    }, e.edit = function(t) {
                        t && (e.draft.title = e.data.meta.title || e.data.name, e.draft.description = e.data.meta.description || e.data.description), e.state.editing = !e.state.editing, s()
                    }, s()
                }],
                templateUrl: 'public/modules/ds/seo/templates/seo.html'
            }
        }])
    }(),
    function() {
        angular.module('core').controller('ShareButtonController', ['$scope', '$log', function() {}])
    }(),
    function() {
        angular.module('ds.share').directive('dsShareChannel', ['$rootScope', '$q', '$log', 'ShareChannelService', '$timeout', '_', function(e, t, a, s, i, o) {
            return a.debug('Loading DsShareChannel Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=?',
                    currentId: '='
                },
                controller: ['$scope', '$element', function(t, a) {
                    function n() {
                        i(() => {
                            const e = angular.element(a).find('.ds-share-swiper');
                            t.swiper = new Swiper(e, {
                                slidesPerView: 2,
                                spaceBetween: 20,
                                navigation: {
                                    nextEl: '.swiper-button-next',
                                    prevEl: '.swiper-button-prev'
                                },
                                breakpoints: {
                                    480: {
                                        slidesPerView: 1,
                                        spaceBetween: 10
                                    }
                                }
                            }), t.swiper.on('onReachEnd', () => {
                                l()
                            })
                        })
                    }

                    function l() {
                        if (t.content.channels.length != o.get(t.content, 'pagination.total')) {
                            const a = o.find(e.userSpaces, {
                                id: e.state.content.spaceId
                            }).vanityUrl;
                            s.getChannels(a, o.get(t.content, 'pagination.skip')).then((e) => {
                                t.content.channels = t.content.channels.concat(e.items), t.content.pagination = e.pagination, t.state.loaded = !0, o.get(t.data, 'channels.length', 0) && r(), t.swiper ? i(() => {
                                    t.swiper.update()
                                }) : n()
                            })
                        }
                    }

                    function r() {
                        if (!t.data.channels.length) return;
                        const e = {};
                        t.data.channels.map((t) => {
                            e[t] = !0
                        }), t.content.channels.map((t) => {
                            t.selected = e[t.id]
                        }), d()
                    }

                    function d() {
                        const e = o.filter(t.content.channels, {
                                selected: !0
                            }),
                            a = e.length;
                        t.data.channels = e.map((e) => e.id), i(() => a ? void(t.model.text = a + ' channel' + (1 < a ? 's' : '') + ' selected.') : void(t.model.text = null))
                    }
                    t.data = t.data || {}, t.data.channels = t.data.channels || [], t.content = {
                        channels: []
                    }, t.model = {}, t.state = {
                        opened: !1,
                        loaded: !!t.content.channels.length
                    }, l(), t.toggleChannel = function(e) {
                        t.content.channels[e].selected = !t.content.channels[e].selected, d()
                    }
                }],
                templateUrl: 'public/modules/ds/share/templates/share.channel.template.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsShare', ['$q', '$log', 'ShareThird', 'Authentication', '$timeout', 'jquery', '_', '$state', function(e, t, a, s, i, o, n, l) {
            return t.debug('Loading DsShare Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    selectedProviders: '='
                },
                controller: ['$scope', '$element', '$rootScope', function(t, r, d) {
                    function c() {
                        t.buttons.forEach((e) => {
                            e.classList.remove('ds-button-social--opened')
                        })
                    }

                    function p() {
                        const e = Object.keys(t.selectedProviders);
                        e.map((e) => {
                            const a = t.selectedProviders[e];
                            return a.map((a) => n.find(t.providers[e], (e) => {
                                e.id === a && (e.selected = !0)
                            }))
                        }), g(), u()
                    }

                    function m(e) {
                        const a = n.filter(t.providers[e], (e) => e.selected);
                        return {
                            hasSelected: 0 < a.length,
                            allSelected: a.length === t.providers[e].length
                        }
                    }

                    function u(e) {
                        if (e) {
                            const e = m(t.provider);
                            return void t.activeButton.classList[e.hasSelected ? 'add' : 'remove']('ds-button-social--selected')
                        }
                        const a = r.find('.ds-share-buttons-button');
                        angular.forEach(a, (e) => {
                            const t = e.getAttribute('social'),
                                a = m(t);
                            e.classList[a.hasSelected ? 'add' : 'remove']('ds-button-social--selected')
                        })
                    }

                    function g() {
                        Object.keys(t.providers).forEach((e) => {
                            t.selectedProviders[e] = n(t.providers[e]).filter('selected').map('id').value()
                        })
                    }
                    t.providers = {}, t.selectedProviders = t.selectedProviders || {}, t.accounts = [], t.expiredProviders = a.expiredProviders, t.currentUser = s.currentUser(), t.noSocial = null, d.facebookProfileSelected = !1, t.goToApps = function() {
                        l.go('apps')
                    };
                    a.getAccounts(t.currentUser).then((e) => {
                        const a = !!Object.keys(t.selectedProviders).length;
                        i(() => {
                            a && p(), t.providers = e, t.providersLoaded = !0, t.noSocial = !Object.keys(t.providers).length, t.buttons = document.querySelectorAll('.ds-share-buttons-button')
                        })
                    }).catch(() => {
                        t.noSocial = !0
                    }), t.$watchCollection('providers', () => {
                        t.accounts = t.providers[t.provider]
                    }), t.toggleSelect = function() {
                        t.providers[t.provider].forEach((e) => {
                            e.selected = !t.hasSelected
                        }), t.hasSelected = !t.hasSelected, t.activeButton.classList[t.hasSelected ? 'add' : 'remove']('ds-button-social--selected'), g(), t.hasSelected ? d.facebookProfileSelected = !0 : !t.hasSelected && (d.facebookProfileSelected = !1)
                    }, t.toggleAccount = function(e) {
                        const a = o(e.currentTarget),
                            s = a.index() + (t.hasSelectAll ? -1 : 0),
                            n = m(t.provider);
                        t.providers[t.provider][s].selected = !t.providers[t.provider][s].selected, t.hasSelected = n.allSelected, u(t.activeButton), g(), i(() => {
                            const e = document.querySelector('.profile.true');
                            e ? d.facebookProfileSelected = !0 : !e && (d.facebookProfileSelected = !1)
                        }, 100)
                    }, t.toggleNetwork = function(s, i) {
                        const o = i || s.currentTarget,
                            n = o.getAttribute('social'),
                            l = o.classList.contains('ds-button-social--opened');
                        e.resolve().then(() => {
                            if (a.expiredProviders[n]) return a.expiredProviders[n].update().then((e) => {
                                a.expiredProviders[n] = void 0, t.providers[n] = e
                            })
                        }).then(() => {
                            if (l) return t.accounts = [], void o.classList.remove('ds-button-social--opened');
                            c(), o.classList.add('ds-button-social--opened'), t.accounts = t.providers[n], t.hasSelectAll = 1 < t.accounts.length, t.provider = n, t.activeButton = o;
                            const e = m(t.provider);
                            t.hasSelected = e.allSelected
                        })
                    }
                }],
                templateUrl: 'public/modules/ds/share/templates/share.template.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.share').factory('ShareChannelService', ['$rootScope', 'Restangular', '$q', 'holospace', 'identityService', 'FacebookService', function(e, t) {
            return {
                getChannels: function(e, a, s) {
                    return t.one('/v2/channels/' + e + '/all').customGET(null, {
                        skip: a,
                        limit: s
                    }).then((e) => e.plain()).catch((e) => (console.error(e), e))
                }
            }
        }])
    }(),
    function() {
        angular.module('ds.share').factory('ShareThird', ['$rootScope', 'Restangular', '$q', 'holospace', 'identityService', 'FacebookService', 'dsModal', 'constants', function(e, t, a, s, i, o, n, l) {
            const r = {};
            return r.expiredProviders = {}, r.identities = {}, r.getAccounts = function() {
                return s.getCurrentUserSpaces().then(() => s.getSocialLinksBySpaceId(e.primarySpace.id)).then((e) => a.all([r.getTwitterAccounts(e), r.getFacebookAccounts(e)])).then((e) => {
                    const t = {};
                    return e.map((e) => {
                        if (e && !(1 > e.length)) return t[e[0].provider] = e, e
                    }), t
                }).catch(() => {})
            }, r.facebookProfileWarning = (e) => n.create({
                template: 'public/modules/ds/share/templates/facebook-share-warning.modal.html',
                controller: ['$scope', function(t) {
                    t.$on('ds.modal.close', () => {
                        if (localStorage.setItem(l.USER_HAS_SEEN_FACEBOOK_DIALOG_WARNING, !0), e) return e()
                    })
                }],
                close: !0,
                scope: {
                    minWidth: 360,
                    noHeader: !0,
                    additionalClass: 'facebook-modal-wrapper'
                }
            }).then((e) => {
                e.show()
            }), r.facebookShareDialog = (e, t) => FB.ui({
                method: 'share',
                href: e,
                mobile_iframe: !0
            }, () => {
                if (t) return t()
            }), r.getFacebookAccounts = function(e) {
                return i.getFacebookIdentities(e).then((e) => (r.identities.facebook = e, e)).catch((t) => t instanceof i.InvalidTokenError ? void(r.expiredProviders.facebook = {
                    update() {
                        return o.reauthenticate().then(() => r.getFacebookAccounts(e))
                    }
                }) : a.reject(t))
            }, r.getTwitterAccounts = function(e) {
                return i.getTwitterIdentities(e).then((e) => e)
            }, r.getSocialLinksBySpaceId = function(e) {
                return t.one('spaces', e).one('links').get().then((e) => e.plain())
            }, r
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsShowHide', ['$q', '$log', '$timeout', function(e, t, a) {
            return t.debug('Loading DsShowHide Controller'), {
                replace: !0,
                restrict: 'E',
                transclude: !0,
                scope: {
                    name: '@?',
                    label: '@',
                    ngModel: '=',
                    noCheckbox: '@?',
                    focus: '@?',
                    params: '=?'
                },
                controller: ['$scope', '$element', function(e, t) {
                    e.$watch('ngModel', (s) => {
                        s && e.focus && a(() => {
                            const e = t.find('.ds-show-hide-container input')[0];
                            e && !!s && e.focus()
                        })
                    })
                }],
                templateUrl: 'public/modules/ds/show-hide/templates/show.hide.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.form').directive('dsSpaceName', ['$q', '$log', '$timeout', function(e, t) {
            return t.debug('Loading DsSpaceName Controller'), {
                replace: !0,
                restrict: 'E',
                transclude: !0,
                scope: {
                    viewName: '=?',
                    space: '=',
                    isHeading: '=?',
                    link: '=?'
                },
                controller: ['$scope', function() {}],
                templateUrl: 'public/modules/ds/space-name/templates/space.name.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.story').directive('dsStoryView', ['$rootScope', '$log', '$timeout', '$document', 'DefaultStoryMedium', '$compile', 'HolonisMediumParser', function(e, t) {
            return t.debug('Loading dsStoryView Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    params: '='
                },
                controller: ['$scope', '$element', function() {}],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            const a = t.find('.stories-content');
                            MediumEditor.Holonis.parser.view(a, e.params)
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/story/templates/story-view.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.story').directive('dsStory', ['$rootScope', '$log', '$timeout', '$document', 'DefaultStoryMedium', 'HolonisMediumParser', function(e, t, a, s, i) {
            return t.debug('Loading dsStory Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    params: '=',
                    type: '@',
                    showTitle: '@?'
                },
                controller: ['$scope', '$element', function(t) {
                    t.params && (t.state = {}, t.state.addContent = t.params.story && t.params.story.length, t.params.length = t.state.addContent, t.hasCreateFormAction = _.includes(e.primarySpace._features, 'create-form'), t.hasCreateAdAction = _.includes(e.primarySpace._features, 'create-story-ad-unit') && _.get(t.params, 'actions.ad'), t.addContent = function() {
                        t.editor.elements && (t.state.addContent = !0, a(() => {
                            t.params.length = 1, t.editor.elements[0].focus()
                        }, 60))
                    })
                }],
                compile: function() {
                    return {
                        pre: function(e, t) {
                            const a = t.find('.stories-content');
                            e.editor = new i(a, e)
                        },
                        post: function() {}
                    }
                },
                templateUrl: 'public/modules/ds/story/templates/story.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.story').factory('MediumHolonisActions', ['$rootScope', '$timeout', '$q', 'media', 'Videos', 'dsVideoUploaderUtils', 'dsModal', 'dataFormService', 'notifyService', function(e, t, a, s, i, o, n, l, r) {
            function d(e, t, a) {
                return MediumEditor.Holonis.util.appendContentNode(e, t), c(t, a), t
            }

            function c(e, t) {
                MediumEditor.Holonis.util.selectNode(e), MediumEditor.Holonis.util.focusNode(e), t.updateActions();
                const a = MediumEditor.util.getContainerEditorElement(e);
                MediumEditor.Holonis.util.updatePlaceholder(a)
            }

            function p(e) {
                return o.loadVideoData(e).then((e) => i.createInstance({
                    title: e.input.name
                }).then((t) => (e.model = t, {
                    model: t,
                    file: e
                })))
            }
            return {
                image: function(t) {
                    e.pickMediaFile = !0;
                    const a = this.base.options.$scope.params,
                        i = a.spaceId,
                        o = a.bucket;
                    return s.pickFile(void 0, o, i, null, !0).then((e) => {
                        if (!e) return;
                        let a, s;
                        const i = e.indexes.map((t) => e.result[t]);
                        _.forEach(i, (e) => {
                            a = a ? MediumEditor.Holonis.util.addEmptyNode(s) : t, s = MediumEditor.Holonis.template.image({
                                url: _.get(e, 'source')
                            }), MediumEditor.Holonis.util.appendContentNode(a, s)
                        }), c(s, this)
                    })
                },
                video: function(e, t) {
                    const a = MediumEditor.Holonis.template.video(t, null);
                    d(e, a, this)
                },
                videoUpload: function(e, t) {
                    return p(t).then((t) => {
                        const a = MediumEditor.Holonis.template.video(t.model, t.file);
                        d(e, a, this)
                    })
                },
                embed: function(t) {
                    const a = this.base.options.$scope.params,
                        i = [a.spaceId, a.template, a.contentId, [], !1, !0, _.find(e.userSpaces, {
                            id: e.state.content.spaceId
                        }).vanityUrl];
                    return s.openEmbedModal.apply(s, i).then((e) => {
                        if (e) {
                            const a = e[0],
                                s = MediumEditor.Holonis.template.embed(a);
                            d(t, s, this)
                        }
                    })
                },
                tile: function(e, a) {
                    const s = MediumEditor.Holonis.template.embed(a);
                    MediumEditor.Holonis.util.appendContentNode(e, s), this.updateActions();
                    const i = MediumEditor.util.getContainerEditorElement(s);
                    return MediumEditor.Holonis.util.updatePlaceholder(i), t(() => s)
                },
                link: function(e) {
                    const a = MediumEditor.Holonis.template.link(e.textContent, this);
                    MediumEditor.Holonis.util.appendContentNode(e, a), this.updateActions();
                    const s = MediumEditor.util.getContainerEditorElement(a);
                    return MediumEditor.Holonis.util.updatePlaceholder(s), t(() => a)
                },
                form: function(t) {
                    const s = a.defer();
                    let i;
                    return n.create({
                        template: 'public/modules/ds/data-form/templates/create.template.html',
                        controller: 'DataFormCreateController',
                        title: 'Add a form',
                        scope: {
                            node: t,
                            save: (a, o) => {
                                if (a.$valid) {
                                    const a = _.assign({}, o);
                                    a.spaceId = e.state.content.spaceId, a.fields = _(a.fields).filter('active').map((e) => _.pick(e, ['name', 'required'])).value(), l.add(a).then((e) => {
                                        const a = MediumEditor.Holonis.template.form(e);
                                        MediumEditor.Holonis.util.appendContentNode(t, a), s.resolve(a), i.close()
                                    }).catch((e) => {
                                        console.error(e), r.error('Failed to add form.')
                                    })
                                }
                            },
                            onClose: () => {
                                s.reject()
                            },
                            additionalClass: 'ds-modal--form-container',
                            overflow: !0
                        }
                    }).then((e) => {
                        i = e, e.show()
                    }), s.promise
                },
                ad: function(e) {
                    const t = MediumEditor.Holonis.template.adPlaceholder();
                    return MediumEditor.Holonis.util.appendContentNode(e, t), a.resolve(t)
                }
            }
        }])
    }(),
    function() {
        angular.module('ds.story').factory('MediumHolonisButtons', [function() {
            const e = {
                title: MediumEditor.extensions.button.extend({
                    name: 'customTitle',
                    tagNames: ['h3'],
                    contentDefault: '<b>T<span style="font-size: .75em; margin-left: -2px; vertical-align: -1px;">T</span></b>',
                    aria: 'Title',
                    action: 'custom-title',
                    init() {
                        MediumEditor.extensions.button.prototype.init.call(this)
                    },
                    handleClick(e) {
                        e.preventDefault(), e.stopPropagation();
                        MediumEditor.selection.getSelectionRange(this.document);
                        return !1
                    }
                }),
                orderedlist: MediumEditor.extensions.button.extend({
                    name: 'customOrderedlist',
                    tagNames: ['ol'],
                    contentDefault: '<i class="fa fa-list-ol"></i>',
                    aria: 'Ordered list',
                    action: 'orderedlist',
                    init() {
                        MediumEditor.extensions.button.prototype.init.call(this)
                    },
                    handleClick() {
                        this.base.checkContentChanged()
                    }
                }),
                unorderedlist: MediumEditor.extensions.button.extend({
                    name: 'customUnorderedlist',
                    tagNames: ['ul'],
                    contentDefault: '<i class="fa fa-list-ul"></i>',
                    aria: 'Unordered list',
                    action: 'unorderedlist',
                    init() {
                        MediumEditor.extensions.button.prototype.init.call(this)
                    },
                    handleClick() {
                        this.base.checkContentChanged()
                    }
                }),
                indent: MediumEditor.extensions.button.extend({
                    name: 'customIndent',
                    tagNames: [],
                    contentDefault: '<i class="fa fa-indent"></i>',
                    aria: 'Indent',
                    action: 'indent',
                    init() {
                        MediumEditor.extensions.button.prototype.init.call(this)
                    },
                    handleClick() {
                        this.base.checkContentChanged()
                    }
                }),
                outdent: MediumEditor.extensions.button.extend({
                    name: 'customOutdent',
                    tagNames: [],
                    contentDefault: '<i class="fa fa-outdent"></i>',
                    aria: 'Outdent',
                    action: 'outdent',
                    init() {
                        MediumEditor.extensions.button.prototype.init.call(this)
                    },
                    handleClick() {
                        this.base.checkContentChanged()
                    }
                }),
                quote: MediumEditor.extensions.button.extend({
                    name: 'customQuote',
                    tagNames: [],
                    contentDefault: '<i class="fa fa-quote-right"></i>',
                    aria: 'Quote',
                    action: 'quote',
                    init() {
                        MediumEditor.extensions.button.prototype.init.call(this)
                    },
                    handleClick() {
                        this.base.checkContentChanged()
                    }
                })
            };
            return e
        }])
    }(),
    function() {
        angular.module('ds.story').factory('MediumHolonis', ['$rootScope', '$timeout', 'MediumHolonisActions', 'StoryService', 'notifyService', 'dsModal', 'dataFormService', 'HolonisMediumUtils', 'HolonisMediumParser', 'MediumHolonisTemplates', function(e, t, a, s, i, o, n) {
            return function() {
                function l(e) {
                    return e.find('div.stories-content').get(0)
                }

                function r(e) {
                    return T ? (T.addPromise(e), e) : (console.warn('Promise tracker not available.'), e)
                }

                function d(e) {
                    const t = this,
                        s = MediumEditor.Holonis.util.getSelectedNode(this.editable);
                    if (s && e.target.files && e.target.files[0]) {
                        const i = e.target.files[0];
                        e.target.value = null, a.videoUpload.bind(this)(s, i).then(() => {
                            t.unsaved(t.editable)
                        })
                    }
                }

                function c(e) {
                    const t = this;
                    this.closeActions();
                    const s = MediumEditor.Holonis.util.getSelectedNode(this.editable);
                    if (s) {
                        const i = e.currentTarget,
                            o = a[i.getAttribute('type')];
                        if (o) {
                            const e = l(this.$main);
                            o.bind(this)(s).then(() => {
                                t.unsaved(e)
                            })
                        }
                    }
                }

                function p(e) {
                    $(e.target).closest('.stories-main').length || ($('.story-selected').removeClass('story-selected'), this.$action.addClass('story-actions-main-hidden'), this.closeActions())
                }

                function m() {
                    this.closeActions()
                }

                function u() {
                    const e = this.$action.hasClass('story-actions-visible');
                    e ? this.closeActions() : this.openActions()
                }

                function g(e, t) {
                    const s = MediumEditor.Holonis.util.getActiveNode(this.editable);
                    if (!s) {
                        if (MediumEditor.Holonis.util.cleanEditor(t), !t.children.length) MediumEditor.Holonis.util.resetEditor(t), this.unsaved(t);
                        else {
                            const e = _.first(t.children);
                            MediumEditor.Holonis.util.selectNode(e), MediumEditor.Holonis.util.focusNode(e), this.updateActions()
                        }
                        return
                    }
                    const i = s.getAttribute('type');
                    if (MediumEditor.Holonis.util.isType(i, MediumEditor.Holonis.types.IMAGE)) {
                        const e = _.first(s.getElementsByClassName('story-caption'));
                        e.textContent.length || e.classList.add('story-caption-placeholder')
                    }
                    if (MediumEditor.Holonis.util.isType(i, [MediumEditor.Holonis.types.VIDEO, MediumEditor.Holonis.types.IMAGE, MediumEditor.Holonis.types.TILE, MediumEditor.Holonis.types.LINK, MediumEditor.Holonis.types.AD])) {
                        if (MediumEditor.util.isKey(e, MediumEditor.util.keyCode.ENTER)) return e.preventDefault(), MediumEditor.Holonis.util.selectNode(s.nextSibling), MediumEditor.Holonis.util.focusNode(s.nextSibling), void this.updateActions();
                        if (MediumEditor.util.isKey(e, [MediumEditor.util.keyCode.DELETE, MediumEditor.util.keyCode.BACKSPACE])) return MediumEditor.Holonis.util.selectNode(s), void this.updateActions()
                    }
                    if (MediumEditor.util.isKey(e, MediumEditor.util.keyCode.ENTER) && !e.shiftKey && s.previousSibling) {
                        const e = s.previousSibling,
                            t = e.getAttribute('type');
                        MediumEditor.Holonis.util.isType(t, [MediumEditor.Holonis.types.TEXT]) && MediumEditor.Holonis.util.isLink(e) && a.link.bind(this)(e)
                    }
                    MediumEditor.util.isKey(e, MediumEditor.util.keyCode.ENTER) && !e.shiftKey && MediumEditor.Holonis.util.initNode(s), MediumEditor.Holonis.util.selectNode(s), this.updateActions()
                }

                function v(e) {
                    let t;
                    const a = MediumEditor.Holonis.util.getActiveNode(this.editable);
                    if (a) {
                        if (t = a.getAttribute('type'), MediumEditor.util.isKey(e, MediumEditor.util.keyCode.ENTER) && MediumEditor.Holonis.util.isType(t, [MediumEditor.Holonis.types.VIDEO, MediumEditor.Holonis.types.IMAGE, MediumEditor.Holonis.types.TILE, MediumEditor.Holonis.types.LINK, MediumEditor.Holonis.types.AD])) return e.preventDefault(), void MediumEditor.Holonis.util.addEmptyNode(a);
                        if (MediumEditor.util.isKey(e, [MediumEditor.util.keyCode.DELETE, MediumEditor.util.keyCode.BACKSPACE])) {
                            const s = [MediumEditor.Holonis.types.TILE, MediumEditor.Holonis.types.LINK, MediumEditor.Holonis.types.VIDEO, MediumEditor.Holonis.types.AD, MediumEditor.Holonis.types.IMAGE];
                            if (MediumEditor.Holonis.util.isType(t, [MediumEditor.Holonis.types.IMAGE]) && a.textContent.length) return;
                            if (MediumEditor.Holonis.util.isType(t, s)) a.nextSibling ? MediumEditor.selection.moveCursor(document, a.nextSibling) : a.previousSibling && MediumEditor.selection.moveCursor(document, a.previousSibling), a.parentNode.removeChild(a), e.preventDefault();
                            else if (!a.textContent.length && a.previousSibling) {
                                const t = a.previousSibling.getAttribute('type') || 'text';
                                MediumEditor.Holonis.util.isType(t, [MediumEditor.Holonis.types.TEXT]) || (MediumEditor.selection.moveCursor(document, a.previousSibling), e.preventDefault())
                            }
                        }
                        MediumEditor.Holonis.util.isType(t, [MediumEditor.Holonis.types.TILE, MediumEditor.Holonis.types.LINK, MediumEditor.Holonis.types.VIDEO, MediumEditor.Holonis.types.AD]) && !MediumEditor.util.isKey(e, [MediumEditor.util.keyCode.UP, MediumEditor.util.keyCode.DOWN]) && e.preventDefault()
                    }
                }

                function h(e) {
                    let t;
                    const a = MediumEditor.Holonis.util.getActiveNode(this.editable);
                    if (a) {
                        const s = _.some(e.path, (e) => e.classList && e.classList.contains('story-item-closer'));
                        s || (t = a.getAttribute('type'), MediumEditor.Holonis.util.isType(t, [MediumEditor.Holonis.types.VIDEO, MediumEditor.Holonis.types.IMAGE, MediumEditor.Holonis.types.TILE, MediumEditor.Holonis.types.LINK, MediumEditor.Holonis.types.AD]) && !a.textContent.length && MediumEditor.Holonis.util.focusNode(a), MediumEditor.Holonis.util.selectNode(a), this.updateActions())
                    }
                }

                function b(e, t) {
                    let a;
                    const s = MediumEditor.Holonis.util.getActiveNode(this.editable);
                    if (s && (s.getAttribute('type') || MediumEditor.Holonis.util.configNewNode(s), a = s.getAttribute('type'), MediumEditor.Holonis.util.isType(a, MediumEditor.Holonis.types.IMAGE))) {
                        const e = _.first(s.getElementsByClassName('story-caption'));
                        e.classList.remove('story-caption-placeholder')
                    }
                    this.unsaved(t)
                }

                function f() {}

                function y() {
                    this.body.classList.add('force-hide-medium-toolbar')
                }

                function w(e) {
                    const t = $(e.target);
                    t.hasClass('story-caption') || this.body.classList.remove('force-hide-medium-toolbar')
                }

                function k() {
                    const t = MediumEditor.Holonis.util.getSelectedNode(this.editable);
                    if (!t) return;
                    const a = $(t).data('form');
                    let s;
                    o.create({
                        template: 'public/modules/ds/data-form/templates/create.template.html',
                        controller: 'DataFormCreateController',
                        title: 'Edit form',
                        scope: {
                            form: a,
                            node: t,
                            save: (t, a) => {
                                if (t.$valid) {
                                    const t = _.assign({}, a);
                                    t.spaceId = e.state.content.spaceId, t.fields = _(t.fields).filter('active').map((e) => _.pick(e, ['name', 'required'])).value(), n.update(t).then(() => {
                                        s.close(), this.unsaved(this.editable)
                                    }).catch((e) => {
                                        console.error(e), i.error('Failed to save form.')
                                    })
                                }
                            },
                            isEdit: !0,
                            additionalClass: 'ds-modal--form-container',
                            overflow: !0
                        }
                    }).then((e) => {
                        s = e, e.show()
                    })
                }

                function S() {
                    const e = MediumEditor.Holonis.util.getSelectedNode(this.editable);
                    e && (e.parentNode.removeChild(e), this.unsaved(this.editable))
                }
                let C = null,
                    x = !1,
                    T;
                this.name = 'holonis', this.init = function() {
                    this.$scope = this.base.options.$scope, this.story = this.$scope.params.story, this.hids = {}, this.$body = $('.ds-view--creation').parent(), this.body = $('body')[0], this.$status = $('.stories-main .story-status'), this.$main = $('.stories-main'), this.$content = this.$main.find('.stories-content'), this.$action = $('.stories-main .story-actions-main'), this.$buttonsGroup = this.$action.find('.story-actions'), this.$buttons = this.$buttonsGroup.find('.story-action'), this.$add = this.$action.find('.story-action-add'), this.$videoAction = this.$main.find('.story-filepicker'), this.events(), this.editable = l(this.$main), T = this.$scope.params.tracker, MediumEditor.Holonis.parser.init.bind(this)(), MediumEditor.Holonis.util.updatePlaceholder(this.editable), this.updateActions()
                }, this.focusNextNode = function(e) {
                    const t = e.nextSibling;
                    t && (MediumEditor.Holonis.util.selectNode(t), MediumEditor.Holonis.util.focusNode(t), this.updateActions())
                }, this.removeInvalidStoryAndNotifyUser = function(e) {
                    const t = _.get(e, 'sid');
                    if (t) {
                        const a = MediumEditor.Holonis.util.getNodeBySid(t);
                        this.focusNextNode(a), a.parentNode.removeChild(a), this.hids[e.sid] = void 0, i.error(e.error.message)
                    }
                }, this.setActionNodeHid = function(e, t) {
                    const a = this;
                    _.forEach(e, (e) => {
                        if (!e.success) return this.removeInvalidStoryAndNotifyUser(e);
                        const s = _.find(t, {
                            sid: e.sid
                        });
                        return s.type === MediumEditor.Holonis.actions.DELETE ? void(a.hids[e.sid] = void 0) : void(a.hids[e.sid] = e.id)
                    })
                }, this.destroy = function() {}, this.events = function() {
                    const e = p.bind(this);
                    this.$body.off('click', e).on('click', e), this.$content.on('click', m.bind(this)), this.$add.on('click', u.bind(this)), this.$buttons.on('click', c.bind(this)), this.$videoAction.on('change', d.bind(this)), this.$main.on('click', '.story-item-edit', k.bind(this)), this.$main.on('click', '.story-item-closer', S.bind(this)), this.$main.on('focus', '.story-caption', y.bind(this)), this.$main.on('click', w.bind(this)), this.subscribe('editableInput', b.bind(this)), this.subscribe('editableClick', h.bind(this)), this.subscribe('editableKeydown', v.bind(this)), this.subscribe('editableKeyup', g.bind(this)), this.subscribe('editablePaste', f.bind(this))
                }, this.openActions = function() {
                    this.$action.addClass('story-actions-visible')
                }, this.closeActions = function() {
                    this.$action.removeClass('story-actions-visible')
                }, this.updateActions = function() {
                    const e = MediumEditor.Holonis.util.getSelectedNode(this.editable);
                    e && (this.$action.css({
                        top: e.offsetTop
                    }), MediumEditor.Holonis.util.isDisabledNode(e) ? this.$action.addClass('story-actions-main-hidden') : this.$action.removeClass('story-actions-main-hidden'))
                }, this.status = function(e, t) {
                    this.$status.html([e, '<br> Saving: ', t].join(''))
                }, this.getAllData = function(e) {
                    const t = MediumEditor.Holonis.util.getNodes(e, !0),
                        a = [];
                    return _.forEach(t, (e) => {
                        e.getAttribute('sid') || MediumEditor.Holonis.util.initNode(e), a.push(MediumEditor.Holonis.parser.toSave(e))
                    }), a
                }, this.saveAll = function(e) {
                    const a = this,
                        i = this.getAllData(e),
                        o = this.base.options.$scope.params,
                        n = {
                            type: o.template,
                            id: o.contentId,
                            storyVersion: o.storyVersion || 0
                        };
                    return s.upsert(n, i).then((e) => (a.setActionNodeHid(e.actions, i), o.storyVersion = e.version, o.length = i.length, t()))
                }, this.unsaved = function(e) {
                    const a = this;
                    return MediumEditor.Holonis.util.updatePlaceholder(e), C && t.cancel(C), C = r(t(() => x ? a.unsaved(e) : (x = !0, a.saveAll(e).then(() => {
                        x = !1
                    }).catch(() => {
                        i.error('Saving failed because someone is also editing. Reload to see their changes.'), x = !1
                    })), 800)), C
                }
            }
        }])
    }(),
    function() {
        angular.module('ds.story').factory('HolonisMediumParser', ['_', 'MediumHolonisActions', 'Content', 'dsMentionsService', function(e, t, a, s) {
            function i(e, t) {
                const i = e.getAttribute ? e.getAttribute('type') : MediumEditor.Holonis.types.TEXT;
                if (e.classList && e.classList.contains('story-content-placeholder')) switch (i) {
                        case MediumEditor.Holonis.types.LINK:
                            {
                                const t = e.getAttribute('source'),
                                    a = MediumEditor.Holonis.template.link(t);
                                e.removeAttribute('source'), MediumEditor.Holonis.util.appendContentNode(e, a);
                                break
                            }
                        case MediumEditor.Holonis.types.ITEM:
                        case MediumEditor.Holonis.types.POST:
                        case MediumEditor.Holonis.types.PAGE:
                        case MediumEditor.Holonis.types.SHARE:
                        case MediumEditor.Holonis.types.CHANNEL:
                            {
                                const s = MediumEditor.Holonis.template.embed(a.toV1(t));
                                MediumEditor.Holonis.util.appendContentNode(e, s);
                                break
                            }
                        case MediumEditor.Holonis.types.VIDEO:
                            {
                                const s = MediumEditor.Holonis.template.video(a.toV1(t));
                                MediumEditor.Holonis.util.appendContentNode(e, s);
                                break
                            }
                        default:
                    } else if (MediumEditor.Holonis.util.isType(i, MediumEditor.Holonis.types.TEXT)) e.innerHTML = s.normalize(e.innerHTML);
                    else if (MediumEditor.Holonis.util.isType(i, MediumEditor.Holonis.types.IMAGE)) {
                    const t = e.querySelector('.story-caption');
                    t.innerHTML = s.normalize(t.innerHTML)
                }
                e.removeAttribute && (e.removeAttribute('sid'), e.removeAttribute('contenteditable'))
            }
            if (!MediumEditor) return;
            if (MediumEditor.Holonis = MediumEditor.Holonis || {}, MediumEditor.Holonis.parser) return;
            const o = {};
            return o.mount = function(t) {
                const a = [];
                return t && t.length ? (e.forEach(t, (t) => {
                    const s = o.toNode(t, !0);
                    if (Array.isArray(s)) {
                        const i = e.first(s);
                        return i.setAttribute('data-hid', t.storyId), 1 < s.length && i.setAttribute('force-update', !0), e.forEach(s, (e) => {
                            a.push(e.outerHTML)
                        })
                    }
                    s.setAttribute('data-hid', t.storyId), a.push(s.outerHTML)
                }), a.join('')) : MediumEditor.Holonis.util.createEmptyNode().outerHTML
            }, o.toNode = function(t, a, s) {
                switch (t.type) {
                    case MediumEditor.Holonis.types.UNDEFINED:
                    case MediumEditor.Holonis.types.TEXT:
                        return MediumEditor.Holonis.template.text(t.body.content);
                    case MediumEditor.Holonis.types.EMBEDLY:
                    case MediumEditor.Holonis.types.LINK:
                        {
                            const e = {
                                source: t.source
                            };
                            return MediumEditor.Holonis.template.placeholder(MediumEditor.Holonis.types.LINK, e)
                        }
                    case MediumEditor.Holonis.types.ITEM:
                    case MediumEditor.Holonis.types.POST:
                    case MediumEditor.Holonis.types.PAGE:
                    case MediumEditor.Holonis.types.SHARE:
                    case MediumEditor.Holonis.types.CHANNEL:
                        return MediumEditor.Holonis.template.placeholder(t.type);
                    case MediumEditor.Holonis.types.IMAGE:
                        {
                            const e = t.body ? t.body.caption : '';
                            return MediumEditor.Holonis.template.image(t.cover, e, !a)
                        }
                    case MediumEditor.Holonis.types.VIDEO:
                        return MediumEditor.Holonis.template.placeholder(MediumEditor.Holonis.types.VIDEO);
                    case MediumEditor.Holonis.types.MEDIA:
                        {
                            if (t.mediaType === MediumEditor.Holonis.types.IMAGE) {
                                const e = t.body ? t.body.caption : '';
                                return MediumEditor.Holonis.template.image(t.source, e, !a)
                            }
                            if (t.mediaType === MediumEditor.Holonis.types.VIDEO) return MediumEditor.Holonis.template.video(t);
                            break
                        }
                    case MediumEditor.Holonis.types.FORM:
                        {
                            const a = e.assign(e.pick(t, ['type', 'id']), e.pick(t.body, ['description', 'email', 'successMessage', 'fields']), {
                                title: t.body.name
                            });
                            return MediumEditor.Holonis.template.form(a)
                        }
                    case MediumEditor.Holonis.types.AD:
                        {
                            const t = e.get(s, 'slotTargeting');
                            return a || !t ? MediumEditor.Holonis.template.adPlaceholder() : MediumEditor.Holonis.template.ad(t)
                        }
                    default:
                        throw new Error('Story : Invalid type ' + t.type);
                }
            }, o.toSave = function(e) {
                const t = e.getAttribute('type'),
                    a = {};
                switch (t) {
                    case MediumEditor.Holonis.types.UNDEFINED:
                    case MediumEditor.Holonis.types.TEXT:
                        {
                            a.type = MediumEditor.Holonis.types.TEXT;
                            const t = e.cloneNode(!0);
                            t.removeAttribute('sid'), t.removeAttribute('type'), t.removeAttribute('class'), t.removeAttribute('force-update'), a.content = t.outerHTML;
                            break
                        }
                    case MediumEditor.Holonis.types.LINK:
                        {
                            a.type = MediumEditor.Holonis.types.LINK, a.source = e.getAttribute('source'), a.data = e.data;
                            break
                        }
                    case MediumEditor.Holonis.types.TILE:
                        {
                            a.type = e.getAttribute('tile-type'), ['service', 'product'].includes(a.type) && (a.type = 'item'), a.source = e.getAttribute('source');
                            break
                        }
                    case MediumEditor.Holonis.types.IMAGE:
                        {
                            a.type = MediumEditor.Holonis.types.IMAGE, a.caption = MediumEditor.Holonis.util.getNodeCaption(e), a.source = e.getAttribute('source');
                            break
                        }
                    case MediumEditor.Holonis.types.VIDEO:
                        {
                            a.type = MediumEditor.Holonis.types.VIDEO, a.source = e.getAttribute('source');
                            break
                        }
                    case MediumEditor.Holonis.types.FORM:
                        {
                            a.type = MediumEditor.Holonis.types.FORM, a.source = e.getAttribute('source');
                            break
                        }
                    case MediumEditor.Holonis.types.AD:
                        {
                            a.type = MediumEditor.Holonis.types.AD;
                            break
                        }
                    default:
                        return null;
                }
                return a
            }, o.linkToSave = function(t) {
                const a = e.pick(t, ['description', 'provider_name', 'provider_url', 'title', 'url']),
                    s = e.first(t.images) || {};
                return a.thumbnail_height = s.height, a.thumbnail_width = s.width, a.thumbnail_url = s.url, e.assign(a, t.media), a
            }, o.init = function() {
                const s = this,
                    i = MediumEditor.Holonis.util.getNodes(this.editable);
                if (!i || !i.length) throw new Error('Where is the nodes?');
                const o = e.last(i);
                o.classList.add('story-selected'), e.map(i, (i) => {
                    const o = i.getAttribute('type'),
                        n = i.getAttribute('data-hid'),
                        l = i.getAttribute('sid');
                    i.removeAttribute('data-hid'), s.hids[l] = n;
                    const r = e.find(s.story, {
                        storyId: n
                    });
                    if (i.classList.contains('story-content-placeholder')) switch (o) {
                        case MediumEditor.Holonis.types.LINK:
                            {
                                const e = i.getAttribute('source');
                                return i.setAttribute('type', MediumEditor.Holonis.types.TEXT), i.innerHTML = e, i.textContent = e, t.link.bind(s)(i)
                            }
                        case MediumEditor.Holonis.types.ITEM:
                        case MediumEditor.Holonis.types.POST:
                        case MediumEditor.Holonis.types.PAGE:
                        case MediumEditor.Holonis.types.SHARE:
                        case MediumEditor.Holonis.types.CHANNEL:
                            return t.tile.bind(s)(i, a.toV1(r));
                        case MediumEditor.Holonis.types.VIDEO:
                            return t.video.bind(s)(i, a.toV1(r));
                    }
                })
            }, o.view = function(t, a) {
                e.map(a.story, (s) => {
                    const n = o.toNode(s, !1, a);
                    return !n.length && n ? (t.append(n), i(n, s)) : void e.map(n, (e) => {
                        t.append(e), i(e)
                    })
                }), $('.story-editable').attr('contenteditable', !1), $('.story-item-blocker').remove()
            }, MediumEditor.Holonis.parser = o, o
        }]);
        /^</
    }(),
    function() {
        angular.module('ds.story').factory('MediumHolonisTemplates', ['$rootScope', '$timeout', '$filter', 'media', '$compile', 'embedlyAsync', 'ResizeSensorService', 'TilesService', '$state', function(t, a, s, i, o, n, l, r) {
            function d(e) {
                const s = e.getElementsByClassName('story-item-closer')[0];
                if (!s) return;
                const i = e.getAttribute('source'),
                    n = o('<svg-icon icon="close"></svg-icon>')(t.$new());
                a(() => {
                    $(`[source="${i}"] .story-item-closer`).append(n)
                })
            }

            function c(e) {
                const a = e.getElementsByClassName('story-item-edit')[0];
                if (a) {
                    const e = o('<i class="ds-holospace-edit-icon dsicon-pencil"></i>')(t.$new())[0];
                    a.append(e)
                }
            }

            function p(e, t, a) {
                const s = MediumEditor.Holonis.util.createContentNode(e, t),
                    i = a || MediumEditor.Holonis.util.gsid();
                return s.setAttribute('source', i), d(s), c(s), s
            }
            if (!MediumEditor) return;
            if (MediumEditor.Holonis = MediumEditor.Holonis || {}, MediumEditor.Holonis.template) return;
            const m = s('processImage'),
                u = s('escapeHTML'),
                g = {};
            return g.placeholder = function(e, t) {
                const a = MediumEditor.Holonis.util.createEmptyNode();
                return a.setAttribute('type', e), a.setAttribute('contenteditable', !1), a.classList.add('story-content-placeholder'), a.classList.add('story-loading'), _.forEach(t, (e, t) => {
                    a.setAttribute(t, e)
                }), a
            }, g.text = function(e) {
                if (!e) return MediumEditor.Holonis.util.createEmptyNode();
                const t = MediumEditor.Holonis.util.createTextGroup(e);
                return t.length ? (_.forEach(t, (e) => {
                    e.setAttribute && e.setAttribute('type', MediumEditor.Holonis.types.TEXT)
                }), t) : MediumEditor.Holonis.util.createEmptyNode()
            }, g.form = function(s) {
                const i = t.$new();
                i.form = s, i.hideActions = !0, i.isInteractive = !0;
                const n = p(MediumEditor.Holonis.types.FORM, '<div class="story-item" contenteditable="false"><div class="story-item-form"></div><div class="story-editable" contenteditable="true"></div><div class="story-item-blocker"><span class="story-item-edit"></span><span class="story-item-closer"></span></div></div>', s.id),
                    l = o('<div ng-controller="DataFormCreateController"><div ng-include="\'public/modules/ds/data-form/templates/preview.template.html\'"></div></div>')(i);
                return a(() => {
                    $(`[source="${s.id}"]`).data('form', s).find('.story-item-form').append(l), e()
                }), n
            }, g.image = function(a, s, i) {
                if (!a) return;
                let n;
                const l = a.url,
                    r = m(a, 1200);
                let d = u(s);
                d = d && d.replace(/"/g, '&quot;').replace(/'/g, '&#39;');
                const c = '<img src="' + r + '" alt="' + (d || '') + '">',
                    g = t.$new(),
                    v = '<div class="story-item" contenteditable="false"><div class="story-item-figure"></div><div class="story-editable story-caption ' + (s ? '' : 'story-caption-placeholder') + '" contenteditable="true">' + (s || '') + '</div><div class="story-item-blocker"><span class="story-item-closer"></span></div></div>';
                n = i ? '<figure contenteditable="false" overlay-image="' + r + '">' + c + '</figure>' : '<figure contenteditable="false">' + c + '</figure>';
                const h = o(n)(g),
                    b = p(MediumEditor.Holonis.types.IMAGE, v, l),
                    f = b.getElementsByClassName('story-item-figure')[0];
                f.append(h[0]);
                const y = new Image;
                return y.onload = function() {
                    b.classList.add('story-loaded'), e()
                }, y.src = l, b
            }, g.video = function(e, a) {
                if (!e) return;
                let s;
                const i = t.$new();
                a ? (s = '<ds-embed-video-upload data="data" ctx="ctx" hide-video="false"></ds-embed-video-upload>', i.data = {
                    content: e
                }, i.ctx = {
                    file: a
                }, i.data.id = e.id) : (s = '<video-input-player video="data"></video-input-player>', i.data = e.v2);
                const n = o(s)(i),
                    l = p(MediumEditor.Holonis.types.VIDEO, '<div class="story-item" contenteditable="false"><div contenteditable="false" class="story-video-content"></div><div class="story-editable" contenteditable="true"></div><div class="story-item-blocker story-item-blocker-video"><span class="story-item-closer"></span></div></div>', e.id),
                    r = l.getElementsByClassName('story-video-content')[0];
                return r.append(n[0]), l
            }, g.embed = function(e) {
                if (e) {
                    const a = t.$new(),
                        s = p(MediumEditor.Holonis.types.TILE, '<div class="story-item" contenteditable="false"><div contenteditable="false" class="story-tile"></div><div class="story-editable" contenteditable="true"></div><div class="story-item-blocker"><span class="story-item-closer"></span></div></div>', e.id);
                    s.setAttribute('tile-type', e.type), a.item = r.normalizeItem(e);
                    const i = o('<tile data="item" story="true" selectable="false" no-engagement="true" show-video-info="false"></tile>')(a),
                        n = s.getElementsByClassName('story-tile')[0];
                    return n.append(i[0]), s
                }
            }, g.link = function(t) {
                if (!t) return;
                const s = p(MediumEditor.Holonis.types.LINK, '<div class="story-item" contenteditable="false"><a href="' + t + '" data-card-controls="0" data-card-branding="0" data-card-recommend="0" data-card-chrome="0" data-card-theme="light"></a><div class="story-editable" contenteditable="true"></div><div class="story-item-blocker"><span class="story-item-closer"></span></div></div>', t);
                return s.classList.add('story-loading'), a(() => {
                    n.then((t) => {
                        t('card', s.children[0].children[0], (e) => {
                            s.data = MediumEditor.Holonis.parser.linkToSave(e.extract), s.classList.remove('story-loading')
                        }), new l(s, e)
                    })
                }), s
            }, g.adPlaceholder = function() {
                const e = t.$new(),
                    a = o('<div class="story-ad-placeholder"><div class="story-ad-placeholder-icon"></div></div>')(e),
                    s = p(MediumEditor.Holonis.types.AD, '<div class="story-item story-item-ad-wrapper" contenteditable="false"><div class="story-item-ad"></div><div class="story-editable" contenteditable="true"></div><div class="story-item-blocker"><span class="story-item-closer"></span></div></div>'),
                    i = s.getElementsByClassName('story-item-ad')[0];
                return i.append(a[0]), s
            }, g.ad = function(e) {
                const a = t.$new();
                a.slotTargeting = e;
                const s = o('<ad-story></ad-story>')(a),
                    i = p(MediumEditor.Holonis.types.AD, '<div class="story-item-ad-wrapper"></div>'),
                    n = i.getElementsByClassName('story-item-ad-wrapper')[0];
                return n.append(s[0]), i
            }, MediumEditor.Holonis.template = g, g
        }]);
        const e = _.debounce(() => {
            MediumEditor.Holonis.extension && MediumEditor.Holonis.extension.updateActions()
        }, 10)
    }(),
    function() {
        angular.module('ds.story').factory('HolonisMediumTypes', [function() {
            if (MediumEditor) {
                MediumEditor.Holonis = MediumEditor.Holonis || {}, MediumEditor.Holonis.types = {};
                const e = {
                        LINK: 'link',
                        EMBEDLY: 'embedly',
                        VIDEO: 'video',
                        IMAGE: 'image',
                        MEDIA: 'media',
                        TEXT: 'text',
                        POST: 'post',
                        PAGE: 'page',
                        SHARE: 'share',
                        CHANNEL: 'channel',
                        ITEM: 'item',
                        PRODUCT: 'product',
                        SERVICE: 'service',
                        EMBED: 'embed',
                        TILE: 'tile',
                        FORM: 'form',
                        AD: 'ad',
                        UNDEFINED: ''
                    },
                    t = {};
                return t.INSERT = 'i', t.UPDATE = 'u', t.DELETE = 'd', t.POSITION = 'u', MediumEditor.Holonis.types = e, MediumEditor.Holonis.actions = t, e
            }
        }])
    }(),
    function() {
        angular.module('ds.story').factory('HolonisMediumUtils', ['_', 'HolonisMediumTypes', function(e) {
            function t(e) {
                MediumEditor.util.isKey(e, MediumEditor.util.keyCode.ENTER) && e.preventDefault()
            }

            function a(e) {
                if (MediumEditor.util.isKey(e, MediumEditor.util.keyCode.ENTER)) {
                    const t = e.currentTarget;
                    t && !t.textContent && setTimeout(() => {
                        t.innerHTML = ''
                    }), e.preventDefault()
                }
            }
            if (!MediumEditor) return;
            if (MediumEditor.Holonis = MediumEditor.Holonis || {}, MediumEditor.Holonis.util) return;
            const s = {};
            return s.getActiveNode = function(e) {
                try {
                    let t = MediumEditor.selection.getSelectionStart(document);
                    const a = t.classList.contains('stories-content');
                    if (a) return null;
                    if (e === t.parentElement) return t;
                    for (;
                        (t = t.parentElement) && e !== t.parentElement;);
                    return t
                } catch (e) {}
            }, s.getNodeBySid = function(t) {
                return e.first(angular.element(`[sid="${t}"]`))
            }, s.getNodes = function(t, a) {
                if (!t) return [];
                const s = t.children;
                return s.length ? a ? e.map(s, (t) => {
                    if (e.isElement(t)) return t.cloneNode(!0)
                }) : s : []
            }, s.unselectNodes = function(t) {
                const a = s.getNodes(t);
                e.forEach(a, (e) => {
                    e.classList.remove('story-selected')
                })
            }, s.selectNode = function(e) {
                const t = MediumEditor.util.getContainerEditorElement(e);
                s.unselectNodes(t), e.classList.add('story-selected')
            }, s.getSelectedNode = function(e) {
                return e.getElementsByClassName('story-selected')[0]
            }, s.setInitialAttributes = function(e, t) {
                e.setAttribute && (e.setAttribute('sid', s.gsid()), e.setAttribute('type', t))
            }, s.initNode = function(e) {
                const t = e.textContent ? MediumEditor.Holonis.types.TEXT : '';
                s.setInitialAttributes(e, t), e.removeAttribute('style')
            }, s.createEmptyNode = function() {
                const e = document.createElement('p');
                return e.innerHTML = '<br>', s.initNode(e), e
            }, s.createTextGroup = function(e) {
                const t = /^</;
                if (t.test(e)) {
                    const t = [];
                    return $(e).each((e, a) => {
                        s.setInitialAttributes(a, MediumEditor.Holonis.types.TEXT), t.push(a)
                    }), t
                }
                const a = s.createEmptyNode();
                return a.innerHTML = e, [a]
            }, s.removePlaceholder = function(e) {
                e.classList.remove('medium-editor-placeholder')
            }, s.updatePlaceholder = function(t) {
                const a = s.getNodes(t),
                    i = e.last(a),
                    o = e.first(a);
                if (o) return e.map(a, (e) => {
                    e.classList.remove('story-text-placeholder'), e.classList.remove('story-main-placeholder')
                }), 2 > a.length ? void(o.textContent ? o.classList.remove('story-main-placeholder') : o.classList.add('story-main-placeholder')) : void(o.classList.remove('story-main-placeholder'), !i.textContent && i.classList.add('story-text-placeholder'))
            }, s.resetEditor = function(e) {
                const t = s.createEmptyNode();
                e.innerHTML = '', e.appendChild(t), t.classList.add('story-selected'), e.classList.add('medium-editor-placeholder')
            }, s.cleanEditor = function(t) {
                e.map(t.children, (e) => {
                    e && e.tagName && /br/i.test(e.tagName) && e.parentNode.removeChild(e)
                })
            }, s.configNewNode = function(e) {
                e.getAttribute('sid') || e.setAttribute('sid', s.gsid()), e.setAttribute('type', MediumEditor.Holonis.types.TEXT)
            }, s.addEmptyNode = function(e) {
                const t = s.createEmptyNode(),
                    a = e.parentNode;
                return a.lastChild === e ? (a.appendChild(t), t) : (a.insertBefore(t, e.nextSibling), t)
            }, s.focusNode = function(e) {
                const t = e.getElementsByClassName('story-editable')[0];
                MediumEditor.selection.moveCursor(document, t || e, 0)
            }, s.createContentNode = function(e, i) {
                const o = document.createElement('div');
                o.setAttribute('type', e), o.setAttribute('sid', s.gsid()), o.setAttribute('contenteditable', !1), o.innerHTML = i;
                const n = o.getElementsByClassName('story-editable')[0];
                return n && (n.addEventListener('keydown', t), n.addEventListener('keyup', a)), o
            }, s.appendContentNode = function(e, t) {
                if (e.classList.contains('story-selected') && t.classList.add('story-selected'), e.classList.contains('story-content-placeholder') && ['sid'].map((a) => {
                        t.setAttribute(a, e.getAttribute(a))
                    }), e.parentNode.insertBefore(t, e), e.parentNode.removeChild(e), !t.nextSibling) {
                    const e = s.createEmptyNode();
                    t.parentNode.append(e)
                }
                return t
            }, s.getNodeCaption = function(e) {
                const t = e.getElementsByClassName('story-editable')[0];
                return t ? t.innerHTML : ''
            }, s.setNodeCaption = function(e) {
                e.getElementsByClassName('story-editable')[0]
            }, s.isDisabledNode = function(e) {
                const t = e.textContent,
                    a = e.getAttribute('type');
                return 0 < t.length || !s.isType(a, [MediumEditor.Holonis.types.TEXT, MediumEditor.Holonis.types.UNDEFINED])
            }, s.formatNodes = function(t) {
                e.map(t.children, (e) => {
                    -1 < ['DIV'].indexOf(e.tagName) || (!e.getAttribute('type') && e.setAttribute('type', MediumEditor.Holonis.types.UNDEFINED), !e.getAttribute('sid') && e.setAttribute('sid', s.gsid()))
                })
            }, s.gsid = function() {
                return Math.floor(16777216 * (1 + Math.random())).toString(16).substring(1)
            }, s.isType = function(e, t) {
                return !1 === Array.isArray(t) ? e === t : -1 !== t.indexOf(e)
            }, s.isLink = function(e) {
                const t = e.textContent,
                    a = /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w.-]+)+[\w._~:/?#[\]@!$&'()*+,;=-]+$/;
                return a.test(t) && 5 <= t.length
            }, s.isChanged = function(t, a) {
                if (!a) return !0;
                const s = t.getAttribute('type'),
                    i = a.getAttribute('type');
                if (s !== i) return !0;
                switch (s) {
                    case MediumEditor.Holonis.types.UNDEFINED:
                    case MediumEditor.Holonis.types.TEXT:
                        return t.innerHTML !== a.innerHTML || t.classList.toString() !== a.classList.toString();
                    case MediumEditor.Holonis.types.IMAGE:
                        {
                            const s = e.first(t.getElementsByClassName('story-caption')),
                                i = e.first(a.getElementsByClassName('story-caption'));
                            return s.innerHTML !== i.innerHTML
                        }
                    case MediumEditor.Holonis.types.TILE:
                    case MediumEditor.Holonis.types.LINK:
                    case MediumEditor.Holonis.types.VIDEO:
                        return !1;
                    default:
                        return !1;
                }
            }, MediumEditor.Holonis.util = s, e.assign(MediumEditor.util.keyCode, {
                UP: 38,
                DOWN: 40
            }), s
        }])
    }(),
    function() {
        angular.module('ds.story').factory('DefaultStoryMedium', ['MediumHolonis', 'MediumHolonisExtensionAnchor', function(e) {
            return MediumEditor ? function(t, a) {
                MediumEditor.Holonis = MediumEditor.Holonis || {};
                const s = MediumEditor.Extension.extend(new e(a));
                MediumEditor.Holonis.extension = new s;
                const i = {
                        $scope: a,
                        placeholder: !1,
                        extensions: {
                            holonis: MediumEditor.Holonis.extension,
                            imageDragging: {}
                        },
                        toolbar: {
                            buttons: [{
                                name: 'h3',
                                contentDefault: '<b>T<span style="font-size: .75em; margin-left: -2px; vertical-align: -1px;">T</span></b>'
                            }, 'bold', 'italic', 'underline', 'unorderedlist', 'anchor']
                        },
                        anchor: {
                            customClassOption: null,
                            customClassOptionText: 'Button',
                            linkValidation: !0,
                            placeholderText: 'Paste or type a link',
                            targetCheckbox: !1,
                            targetCheckboxText: 'Open in new window'
                        },
                        targetBlank: !0,
                        imageDragging: !0,
                        anchorPreview: !0,
                        disableExtraSpaces: !0,
                        autoLink: !0
                    },
                    o = MediumEditor.Holonis.parser.mount(a.params.story);
                return t.val(o), new MediumEditor(t, i)
            } : void 0
        }])
    }(),
    function() {
        angular.module('ds.story').factory('StoryService', ['$rootScope', 'Restangular', '_', function(e, t) {
            return {
                save: function(e, a) {
                    const s = {
                        actions: a,
                        version: e.storyVersion
                    };
                    return t.all('/v2/stories/' + e.type + '/' + e.id + '/batch').post(s).then((e) => e.plain())
                },
                upsert: function(e, a) {
                    const s = {
                        story: a,
                        version: e.storyVersion
                    };
                    return t.all('/v2/stories/' + e.type + '/' + e.id + '/upsert').post(s).then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('ds.tags').directive('dsTags', ['$rootScope', '$q', '$log', '$timeout', 'dsModal', function(e, t, a, s, i) {
            return a.debug('Loading DsTags Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    placeholder: '@?',
                    label: '@?',
                    type: '@?',
                    model: '=?',
                    currentValue: '=?'
                },
                controller: ['$scope', '$element', function(e) {
                    e.data = {}, e.untouched = !0, e.model = e.model || [], e.change = function(t) {
                        const a = e.currentValue || '',
                            s = t.keyCode || t.charCode;
                        if (13 === s || 188 === s) return e.add(a);
                        const i = (8 === s || 46 === s) && '' === a && !!e.model.length;
                        if (i) return e.editLast()
                    }, e.remove = function(t) {
                        const a = angular.element(t.currentTarget.parentNode),
                            s = a.index();
                        e.model.splice(s, 1)
                    }, e.add = function(t) {
                        const a = t.split(',').filter((e) => e.trim()).filter((e) => e);
                        e.model = e.model.concat(a), e.currentValue = '', e.untouched = !1, i.repositionAll()
                    }, e.editLast = function() {
                        e.currentValue = e.model.pop()
                    }
                }],
                templateUrl: 'public/modules/ds/tags/templates/tags.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.tile.header').directive('dsTileHeader', ['$rootScope', '$log', 'Authentication', 'dsModal', 'LikesService', function(e, t) {
            return t.debug('Loading Engagement Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=',
                    href: '=?',
                    src: '=',
                    typeLabel: '='
                },
                controller: ['$scope', function(e) {
                    const t = e.data;
                    if (e.data.typeLabel = e.data.typeLabel || e.data.type.toLowerCase(), e.data.typeLabel = e.data.typeLabel.charAt(0).toUpperCase() + e.data.typeLabel.slice(1), t.header && !e.href) {
                        const a = window.location.protocol + '//' + window.location.host + '/',
                            s = a + t.header.author.vanityUrl;
                        e.href = s
                    }
                    e.picture = t.header.author.photo || t.header.photo, !e.picture && t.createdBy && (e.picture = t.createdBy.profilePhoto)
                }],
                templateUrl: 'public/modules/ds/tile-header/templates/tile.header.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.title').directive('dsTitle', ['$rootScope', '$log', '$timeout', function(e, t) {
            return t.debug('Loading dsTitle Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    title: '='
                },
                controller: ['$scope', function() {}],
                templateUrl: 'public/modules/ds/title/templates/title.html'
            }
        }])
    }(),
    function() {
        function e(e, a, s) {
            function i() {
                e.$apply(() => {
                    o.setTooltipPosition()
                })
            }
            const o = this;
            this.destroyed = !1, e.$emit('ds.tooltip.created', [this, e]);
            const n = angular.element('body'),
                l = angular.element(window);
            this.$scope = e, l.off('resize', i).on('resize', i), this.setTooltipPosition = function() {
                const t = e.element.currentTarget.getBoundingClientRect(),
                    a = s,
                    i = a.find('.ds-tooltip-arrow');
                let o = null;
                const n = 769 > l.width(),
                    r = n && _.get(e.responsive, 'offset.top') || e.offset.top || 0,
                    d = n && _.get(e.responsive, 'offset.left') || e.offset.left || 0,
                    c = n && _.get(e.responsive, 'offset.right') || e.offset.right || 0;
                let p = null;
                const m = e.fullscreenMobile && n;
                if (e.centered = 'center' === e.position, i.css({
                        right: e.arrow.right || 10,
                        display: m && 'none'
                    }), m) return void s.addClass('ds-tooltip--fullscreen');
                'start' === e.position && (p = 0), 'center' === e.position && (p = a.width() / 2 - t.width / 2), 'auto' === e.baseline && t.top > l.height() / 2 && (o = l.height() - t.top - l.scrollTop());
                const u = {
                    top: t.top + t.height + (e.fixed ? 0 : window.scrollY) + r,
                    bottom: o
                };
                e.right ? u.right = l.width() - t.right + window.scrollX + c : u.left = t.left + window.scrollX - (isNaN(p) ? a.width() : p) + d, s.css({
                    left: u.left,
                    right: u.right,
                    top: o ? 'auto' : u.top,
                    bottom: o || 'auto',
                    position: e.fixed && 'fixed'
                })
            }, this.destroy = function() {
                s.remove(), this.destroyed = !0, delete this
            }, this.open = function() {
                return e.$emit('ds.tooltip.open', [this, e]), this.show()
            }, this.close = function() {
                return e.$emit('ds.tooltip.close', [this, e]), this.hide().destroy()
            }, this.show = function() {
                return e.$emit('ds.tooltip.show', [this, e]), t.push(this), o.setTooltipPosition(), e.visible = !0, this
            }, this.hide = function() {
                return e.$emit('ds.tooltip.hide', [this, e]), e.visible = !1, delete t[t.indexOf(this)], this
            }
        }
        angular.module('ds.tooltip').factory('dsTooltip', ['$log', '$q', '$templateRequest', '$compile', '$timeout', '$controller', '$rootScope', 'jquery', '_', function(a, s, i, o, n, l, r) {
            function d(e) {
                if (27 === e.keyCode && t.length) {
                    const e = t.pop();
                    e && e.close()
                }
            }

            function c(e) {
                !e.target.closest('.ds-tooltip, .ds-karot') && t.length && t.map((e) => {
                    e && e.close()
                })
            }

            function p(e) {
                const t = e.$scope;
                t.close = function() {
                    e.close()
                }
            }

            function m() {
                return v ? s.resolve(v) : i(g).then((e) => v = e)
            }
            const u = {},
                g = 'public/modules/ds/tooltip/templates/tooltip.template.html';
            let v = null;
            const h = angular.element('body');
            return h.off('keydown', d).on('keydown', d), h.off('click', c).on('click', c), u.create = function(t) {
                a.debug('ds.tooltip.service : create');
                const d = r.$new();
                return s.all([m(), i(t.template)]).then((a) => {
                    Object.assign(d, t.scope), d.loaded = !0, d.data = d.data || t.data, d.element = t.element, d.right = t.right, d.offset = t.offset || {}, d.responsive = t.responsive, d.arrow = t.arrow || {}, d.fixed = t.fixed, d.fullscreenMobile = t.fullscreenMobile, u.closeAll();
                    const s = o(a[0].trim())(d),
                        i = o(a[1].trim())(d);
                    d.$main = s, d.$content = i;
                    const r = angular.element('body'),
                        c = new e(d, n, s);
                    return p(c), t.controller && l(t.controller, {
                        $scope: d,
                        $tooltip: c
                    }), s.find('.ds-tooltip-content').append(i), r.append(s), c
                })
            }, u.closeAll = function() {
                t.map((e) => {
                    e.destroy()
                }), t = []
            }, u
        }]);
        let t = []
    }(),
    function() {
        angular.module('ds.user.selection').controller('UserSelectionController', ['$scope', '$rootScope', function(e, t) {
            e.toggleSpace = function(a, s) {
                e.close(), t.state.content.accessLevel = s, t.state.content.spaceId = a
            }
        }])
    }(),
    function() {
        angular.module('ds.user.selection').directive('dsUserSelection', ['$rootScope', '$log', '$timeout', 'holospace', '_', function(e, t, a, s, i) {
            return t.debug('Loading dsUser Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    params: '=?',
                    disabled: '=?'
                },
                controller: ['$scope', function(t) {
                    function a(e) {
                        return {
                            profilePhoto: e.profilePhoto,
                            photo: e.photo,
                            name: e.name,
                            isPrivate: e.isPrivate,
                            accessLevel: e.accessLevel,
                            id: e.id,
                            active: !1
                        }
                    }

                    function o() {
                        t.data.active = {}, i.map(t.data.spaces, (a) => {
                            const s = a.id === e.state.content.spaceId;
                            a.active = s, s && (t.data.active = a, e.state.activeSpace = a)
                        })
                    }
                    t.data = {
                        active: {},
                        spaces: []
                    }, t.params = t.params || {}, s.getContentCreationSpaces().then((s) => {
                        t.data.spaces = t.params.restrict ? i.filter(s, (e) => i.includes(t.params.restrict, e.accessLevel)) : s, t.data.spaces = t.data.spaces.map(a), e.state.content.spaceId && i.find(t.data.spaces, {
                            id: e.state.content.spaceId
                        }) || (e.state.content.spaceId = e.primarySpace.id, e.state.content.accessLevel = 'owner'), o()
                    }), t.$on('user.selection.space-id', () => {
                        o()
                    })
                }],
                templateUrl: 'public/modules/ds/user-selection/templates/user.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.variants').controller('AddVariantController', ['$state', '$scope', '$log', 'VariantsService', '$timeout', 'notifyService', 'dsModal', function(e, t, a, s, i, o, n) {
            function l(e) {
                t.data.item.variants = _.map(e.variants, (e) => (e.price = e.price && e.price.toFixed(2), e)), t.data.item.variantOptions = e.variantOptions, i(() => {
                    n.repositionAll(), t.close()
                })
            }
            t.state = {}, t.newVariant = t.isEdit ? t.data.item.variantOptions[t.index] : {}, t.add = function() {
                t.loaded = !1;
                const e = !!_.get(t.data, 'item.variantOptions', []).filter((e) => e.name === t.newVariant.name).length;
                if (!!e && !t.isEdit) return t.state.error = 'custom', void(t.loaded = !0);
                t.isEdit && (t.newVariant.index = t.index), t.state.currentVariant && 0 < t.state.currentVariant.toString().trim().length && t.newVariant.values.push(t.state.currentVariant), t.state.error = !1;
                const a = s.add(t.data.id, t.newVariant).then((e) => {
                    l(e)
                }).catch((e) => {
                    o.error(e.message || 'Couldn\'t add the variant. Please try again.'), t.close()
                });
                t.tracker.addPromise(a)
            }, t.delete = function() {
                t.loaded = !1;
                const e = s.delete(t.data.id, {
                    index: t.index
                }).then((e) => {
                    l(e)
                }).catch((e) => {
                    o.error(e.message || 'Couldn\'t delete the variant. Please try again.'), t.close()
                });
                t.tracker.addPromise(e)
            }
        }])
    }(),
    function() {
        angular.module('ds.variants').controller('VariantsController', ['$state', '$scope', '$log', 'dsModal', '$timeout', 'VariantsService', 'ItemService', 'dsForm', '_', function(e, t, a, s, i, o, n, l, r) {
            function d(e, a, s) {
                return t.data.item.variants[s].enabled
            }
            const c = {};
            1 === t.data.item.variants.length && (t.data.item.variants[0].price = n.parsePrice(t.data.item.price).toFixed(2), t.data.item.variants[0].quantity = t.data.item.quantity);
            t.input = {
                params: {
                    noErrorMessage: !0
                }
            }, t.add = function() {
                s.create({
                    template: 'public/modules/ds/variants/templates/add.html',
                    controller: 'AddVariantController',
                    title: 'Add variants',
                    close: !0,
                    scope: {
                        minWidth: 320,
                        additionalClass: 'ds-variants-add-modal',
                        data: t.data,
                        tracker: t.tracker
                    }
                }).then((e) => {
                    e.show()
                })
            }, t.edit = function(e) {
                s.create({
                    template: 'public/modules/ds/variants/templates/add.html',
                    controller: 'AddVariantController',
                    title: 'Edit variants',
                    close: !0,
                    scope: {
                        minWidth: 320,
                        additionalClass: 'ds-variants-add-modal',
                        data: t.data,
                        isEdit: !0,
                        index: e,
                        tracker: t.tracker
                    }
                }).then((e) => {
                    e.show()
                })
            }, t.change = function(e) {
                if (!c[e]) {
                    c[e] = r.debounce((e) => (t.status = 'saving', o.update(t.data.id, e).then(() => {
                        t.status = 'saved'
                    })), 300)
                }
                i(() => {
                    const a = t.data.item.variants[e],
                        s = {
                            index: e,
                            price: n.parsePrice(a.price),
                            quantity: parseInt(a.quantity) || 0,
                            enabled: !!a.enabled
                        };
                    return a.price = n.parsePrice(a.price).toFixed(2), a.quantity = parseInt(s.quantity || 0).toString(), 0 === e && (t.data.item.price = a.price, t.data.item.quantity = a.quantity), c[e](s)
                })
            }, t.$on('ds.modal.close', () => {
                t.$validators && r.get(t.data, 'item.variants', []).map((e, a) => {
                    const s = t.$validators.item.variants[a];
                    s && i(() => {
                        e.enabled = !s.price && !s.quantity
                    })
                })
            })
        }])
    }(),
    function() {
        angular.module('ds.variants').factory('VariantsService', ['$rootScope', 'Restangular', '$q', function(e, t) {
            return {
                add: function(e, a) {
                    return t.one('v2/items/' + e + '/variant').post(null, a)
                },
                update: function(e, a) {
                    return t.one('v2/items/' + e + '/variant').customPUT(a)
                },
                delete: function(e, a) {
                    return t.all('v2/items/' + e + '/variant').customOperation('remove', '', {}, {
                        "Content-Type": 'application/json'
                    }, a)
                }
            }
        }])
    }(),
    function() {
        var e = Math.PI;
        angular.module('ds.video.uploader').directive('dsVideoProgress', ['$log', '$timeout', function(t, a) {
            return t.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    progressCallback: '=',
                    error: '@'
                },
                controller: ['$scope', function(t) {
                    function a(a, s) {
                        if (!(0.01 >= s)) {
                            const i = (t.options.size - t.options.lineWidth) / 2;
                            s = Math.min(Math.max(0, s || 1), 1), t.ctx.beginPath(), t.ctx.arc(0, 0, i, 0, 2 * e * s, !1), t.ctx.strokeStyle = a, t.ctx.lineCap = 'round', t.ctx.lineWidth = t.options.lineWidth, t.ctx.imageSmoothingEnabled = !0, t.ctx.stroke()
                        }
                    }

                    function s() {
                        $(t.canvasWraper).addClass('upload-hidden'), t.finished = !0
                    }

                    function i(e, a) {
                        t.drawInterval = setTimeout(() => {
                            t.currentProgress += parseFloat(t.animationAmount), o(t.currentProgress), e > t.currentProgress ? i(e, a) : 100 <= e && s()
                        }, a)
                    }

                    function o(e) {
                        t.ctx.clearRect(-t.canvas.width, -t.canvas.height, 2 * t.canvas.width, 2 * t.canvas.height), a('rgba(255, 255, 255, 1)', e / 100)
                    }
                    t.drawInterval = null, t.currentProgress = 0, t.defaultAnimation = 2e4, t.animationAmount = 0.1, t.progressCallback = function(e, a) {
                        t.finished && $(t.canvasWraper).removeClass('upload-hidden'), t.ctx && (e = parseFloat(e), t.progressCount = e, t.drawInterval && clearTimeout(t.drawInterval), a ? (o(e), t.currentProgress = e) : i(t.progressCount, 2))
                    }, t.$watch('progressCount', () => {
                        t.ctx && (t.drawInterval && clearTimeout(t.drawInterval), i(t.progressCount, 2))
                    })
                }],
                link: function(t, s) {
                    t.options = {
                        percent: 0,
                        size: 84,
                        lineWidth: 4,
                        rotate: 0
                    }, a(() => {
                        t.canvasWraper = s[0], t.canvas = document.createElement('canvas'), 'undefined' != typeof G_vmlCanvasManager && G_vmlCanvasManager.initElement(t.canvas), t.ctx = t.canvas.getContext('2d'), t.canvas.width = t.canvas.height = t.options.size, t.canvasWraper.appendChild(t.canvas), t.ctx.translate(t.options.size / 2, t.options.size / 2), t.ctx.rotate((-1 / 2 + t.options.rotate / 180) * e)
                    }, 0)
                },
                templateUrl: 'public/modules/ds/video-uploader/templates/ds.video.progress.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.video.uploader').directive('dsVideoUploader', ['_', '$q', '$log', 'Videos', 'Content', 'dsVideoUploaderUtils', 'notifyService', function(e, t, a, s, i, o, n) {
            return a.debug('Loading DsEmbed Controller'), {
                replace: !0,
                restrict: 'E',
                scope: {
                    data: '=',
                    filePicker: '=',
                    contentType: '=',
                    contentId: '=',
                    parent: '=',
                    position: '='
                },
                controller: ['$scope', '$sce', function(t) {
                    function a(e) {
                        return o.upsertContentBlock(e, t.contentType, t.contentId)
                    }
                    t.processFile = function(i) {
                        o.loadVideoData(i).then((i) => s.createInstance({
                            title: i.input.name
                        }).then((e) => (i.model = e, a(i))).then((a) => (t.parent.position = t.position, t.parent.addContentBlock(e.first(a)), a))).catch(() => {
                            n.error('Whoops, something went wrong, please try selecting the file again.')
                        })
                    }
                }],
                link: function(e, t) {
                    t.bind('change', (t) => {
                        if (t.target.files && t.target.files[0]) {
                            const a = t.target.files[0];
                            e.processFile(a), t.target.value = null
                        }
                    })
                },
                templateUrl: 'public/modules/ds/video-uploader/templates/ds.video.uploader.html'
            }
        }])
    }(),
    function() {
        angular.module('ds.video.uploader').factory('dsVideoUploaderUtils', ['_', '$q', 'AutoSaving', 'Content', function(e, t, a, s) {
            function i(e) {
                const t = atob(e.split(',')[1]),
                    a = e.split(',')[0].split(':')[1].split(';')[0],
                    s = new ArrayBuffer(t.length),
                    o = new Uint8Array(s);
                for (let a = 0; a < t.length; a++) o[a] = t.charCodeAt(a);
                const i = new Blob([s], {
                    type: a
                });
                return i
            }
            return {
                loadVideoData: function(e) {
                    const a = {
                        input: e,
                        blob: e,
                        url: URL.createObjectURL(e)
                    };
                    return function() {
                        const e = t.defer();
                        a.tag = document.createElement('video'), document.body.appendChild(a.tag), a.tag.style.visibility = 'hidden', a.tag.style.position = 'absolute', a.tag.style.left = '0px', a.tag.style.top = '0px', a.tag.style.width = '1px', a.tag.style.height = '1px', a.tag.preload = 'auto';
                        const s = (t, s) => {
                            a.tag.addEventListener(t, () => {
                                a.tag.currentTime = Math.min(a.tag.duration, 1)
                            }, !1), a.tag.addEventListener(s, () => {
                                e.resolve()
                            }, !1)
                        };
                        'iphone' === window.navigator.platform.toLowerCase() ? s('progress', 'progress') : s('loadeddata', 'seeked');
                        const i = document.createElement('source');
                        return i.setAttribute('src', a.url), a.tag.appendChild(i), e.promise
                    }(a.input).then(function() {
                        const e = document.createElement('canvas'),
                            s = e.getContext('2d'),
                            o = t.defer();
                        return e.width = a.tag.videoWidth, e.height = a.tag.videoHeight, s.drawImage(a.tag, 0, 0, a.tag.videoWidth, a.tag.videoHeight), a.info = {
                            thumb: e.toDataURL('image/jpeg', 0.8),
                            size: a.blob.size,
                            duration: a.tag.duration,
                            width: a.tag.videoWidth,
                            height: a.tag.videoHeight
                        }, a.thumb = i(a.info.thumb), 0 === a.thumb.size ? o.reject(new Error('Problem loading video thumbnail.')) : o.resolve(), o.promise
                    }).then(() => a)
                },
                upsertContentBlock: function(e, t, i) {
                    const o = {
                            id: e.content && e.content.id,
                            type: 'embed',
                            source: 'video:' + e.model.id,
                            caption: e.model.title,
                            content: ''
                        },
                        n = s.upsertContent(o, i, t).then((t) => (t.map((t) => {
                            t.uploading = !0, t.ctx.file = e
                        }), t));
                    return a.track(n), n
                }
            }
        }])
    }(),
    function() {
        angular.module('ecommerce').controller('ModalOrderUploadVideoController', ['$scope', 'OrdersService', 'notifyService', function(e, t, a) {
            function s() {
                e.videoUploadBus.onUploadStarted && e.videoUploadBus.onUploadStarted(), e.videoUploadBus.onUploadFinished && e.videoUploadBus.onUploadFinished()
            }
            e.state.uploadingVideo = !1, e.state.uploadFinished = !1, e.state.sending = !1, e.state.videoId = null, e.state.uploadsCount = 0, s(), e.$on('ds.modal.close', () => {
                e.videoUploadBus.xhrInstance && e.videoUploadBus.xhrInstance.abort(), s()
            }), e.videoUploadBus.onUploadStarted = e.videoUploadBus.$on('upload-started', () => {
                e.$apply(() => {
                    e.state.uploadingVideo = !0, e.state.uploadFinished = !1, e.state.uploadsCount++
                })
            }), e.videoUploadBus.onUploadFinished = e.videoUploadBus.$on('upload-finished', (t, a) => {
                e.$apply(() => {
                    e.state.uploadingVideo = !1, e.state.uploadFinished = !0, e.state.videoId = a.model.id
                })
            }), e.send = () => {
                if (!e.state.uploadFinished) return;
                if (e.state.sending) return;
                const s = e.order.id,
                    i = 1 < e.state.uploadsCount,
                    o = e.state.videoId;
                return e.state.sending = !0,
                    function() {
                        return t.fulfillOrderVideo(s, o, i).catch((t) => {
                            throw a.error('Error uploading video.'), e.state.sending = !1, t
                        })
                    }().then(function() {
                        return t.updateStatus(s, 'fulfilled').catch((t) => {
                            throw a.error('Error updating status.'), e.state.sending = !1, t
                        })
                    }).then((t) => {
                        e.$orderScope.updateOrder(t), e.state.sending = !1, e.close()
                    })
            }
        }])
    }(),
    function() {
        function e(e) {
            return _.assign({
                iconValidator: {
                    className: 'check'
                }
            }, e)
        }
        angular.module('shop').controller('ModalShopCheckoutController', ['$scope', '$timeout', '$location', '$filter', 'dsForm', 'CheckoutService', 'PaypalService', 'notifyService', 'creditcards', 'pixels', 'Authentication', 'dsModal', 'ConversionTrackingService', 'ConstractsService', function(t, a, s, i, o, n, l, r, d, c, p, m, u, g) {
            function v(e, t) {
                const a = [],
                    s = i('currency');
                return e.pickup && a.push({
                    id: 'pickup',
                    label: 'Local Pickup',
                    description: `${e.pickup.address}, ${e.pickup.note}`,
                    price: 0,
                    additionalPrice: 0
                }), e.collectAddress && a.push({
                    id: 'delivered',
                    label: 'Customer Location',
                    description: 'Seller delivers to you',
                    price: 0,
                    additionalPrice: 0
                }), e.shippingOptions && e.shippingOptions.length && e.shippingOptions.forEach((e) => {
                    const i = _.pick(e, ['id', 'price', 'additionalPrice']);
                    i.label = e.method, e.price && (i.description = s(e.price + e.additionalPrice * (t - 1))), a.push(i)
                }), a
            }

            function h() {
                t.main.isShippingFree = 0 === t.orderPrice.shipping, t.main.isFree && (t.data.paymentMethod = t.main.isShippingFree ? 'other' : R)
            }

            function b() {
                const e = _.pick(t.params, ['instructions', 'name', 'email', 'phone', 'ccName', 'ccNumber', 'ccExp', 'ccCvv', 'ccZip', 'saveCard']);
                t.state.isVideoService && (t.data.useAsBillingAddress = !1, !t.data.postCode && (t.data.postCode = e.ccZip)), _.assign(t.data, e)
            }

            function f() {
                if (t.state.errorsCount++, 3 < t.state.errorsCount) throw r.error(L), t.close(), new Error('Reach errors limit.')
            }

            function y(e) {
                switch (t.step.review.messageError = _.get(e, 'data.message', E), e.code) {
                    case 'PAYEE_ACCOUNT_INVALID':
                        break;
                    case 'PRICE_MISMATCH':
                        break;
                    case 'UNAVAILABLE_QUANTITY':
                        break;
                    case 'INVALID_ORDER_STATUS':
                        break;
                    default:
                }
            }

            function w(e) {
                if (e.status && 500 > e.status && 400 <= e.status) switch (e.status) {
                    case 404:
                        r.error(M), t.close();
                        break;
                    case 409:
                        y(e), f();
                        break;
                    default:
                        {
                            t.step.review.messageError = _.get(e, 'data.message', D);
                            break
                        }
                } else t.step.review.messageError = D, f()
            }

            function k() {
                const e = {
                    paymentProvider: {
                        name: 'stripe'
                    },
                    method: 'other',
                    country: q
                };
                return (t.data.useAsBillingAddress ? (_.assign(e, _.pick(t.data, ['name', 'company', 'address1', 'address2', 'city', 'region', 'phone'])), e.postCode = t.data.postCode + '', e.phoneCountryCode = F) : (e.name = _.get(t, 'data.ccName') || _.get(t, 'data.name'), e.postCode = t.data.ccZip + ''), !t.orderPrice.total) ? {
                    billing: e
                } : t.data.ccCard ? (e.paymentProvider.card = {
                    id: t.data.ccCard.id
                }, {
                    billing: e,
                    useSavedCard: !0
                }) : (e.paymentProvider.card = {
                    number: t.data.ccNumber,
                    brand: t.data.ccProvider,
                    cvv: t.data.ccCvv,
                    expMonth: t.data.ccExp.substr(0, 2),
                    expYear: `20${t.data.ccExp.substr(2)}`,
                    last4: t.data.ccLast4
                }, {
                    billing: e,
                    saveCard: t.data.saveCard
                })
            }

            function S() {
                const e = {
                    paymentProvider: {
                        name: 'paypal'
                    },
                    method: 'credit_card' === t.data.paymentMethod ? 'card' : t.data.paymentMethod
                };
                return {
                    billing: e
                }
            }

            function C() {
                switch (t.data.delivery) {
                    case 'online':
                    case 'video':
                    case 'pickup':
                        return {
                            type: t.data.delivery
                        };
                    case 'delivered':
                        {
                            const e = _.pick(t.data, ['name', 'company', 'address1', 'address2', 'city', 'region', 'phone']);
                            return e.country = q, e.phoneCountryCode = F, e.postCode = t.data.postCode + '', {
                                type: t.data.delivery,
                                serviceLocation: e
                            }
                        }
                    default:
                        {
                            const e = _.pick(t.data, ['name', 'company', 'address1', 'address2', 'city', 'region', 'phone']);
                            return e.country = q, e.phoneCountryCode = F, e.postCode = t.data.postCode + '', e.service = {
                                id: t.data.delivery
                            }, {
                                type: 'shipped',
                                shipping: e
                            }
                        }
                }
            }

            function x() {
                const e = _.pick(t.data, ['quantity', 'itemId']);
                e.variantId = t.data.variant;
                const a = t.data.idempotencyKey,
                    s = {};
                s.paymentProvider = {};
                const i = C(),
                    o = i.type,
                    n = t.data.name,
                    l = t.data.email,
                    r = t.data.notes;
                i.serviceLocation && (e.serviceLocation = i.serviceLocation);
                const d = i.shipping;
                let c, p;
                if (_.assign(s, {
                        name: n
                    }), t.stripePaymentMethod) {
                    const e = k();
                    c = e.saveCard, p = e.useSavedCard, _.assign(s, e.billing)
                } else {
                    const e = S();
                    _.assign(s, e.billing)
                }
                const m = t.orderPrice.total,
                    u = {
                        idempotencyKey: a,
                        lineItems: [e],
                        billing: s,
                        deliveryType: o,
                        email: l,
                        notes: r,
                        shipping: d,
                        saveCard: c,
                        useSavedCard: p,
                        totalPrice: m
                    };
                if (t.state.isVideoService) {
                    const e = {},
                        a = t.data.instructions;
                    e.service = {
                        instructions: a
                    }, u.contract = e
                }
                if ('offer' === t.item.pricingModel) {
                    const e = _.get(t.params, 'contract.id');
                    _.set(u, 'contract.id', e), u.pricingModel = t.item.pricingModel
                }
                return u
            }

            function T(e) {
                return n.orderCallback({
                    token: e.paymentToken
                }).then((e) => A(e.number)).catch((e) => {
                    t.step.review.purchasing = !1, w(e)
                })
            }

            function I() {
                t.step.review.purchasing = !1
            }

            function A(e) {
                t.item.conversionTrackingUrl && u.request(t.item.conversionTrackingUrl), t.step.review.purchasing = !1, t.step.confirmation.orderNumber = e;
                const a = _.get(t.tile, 'id', 0),
                    i = _.get(t.tile, 'body.name', ''),
                    o = _.get(t, 'data.quantity', 0),
                    n = _.get(t.tile, 'body.item.price', 0),
                    l = _.get(t, 'data.currency', 'USD'),
                    r = _.get(t.tile, 'body.item.type', 'product'),
                    d = {
                        eventCategory: t.tile.body.item.type + 'Action',
                        event: 'Successfully Completed the Purchase',
                        eventAction: 'Success',
                        eventLabel: t.tile.vanityUrl
                    },
                    p = Object.assign({}, d, {
                        purchase: {
                            id: a,
                            name: i,
                            quantity: o,
                            itemPrice: n,
                            currency: l,
                            contentType: r,
                            orderNumber: e
                        }
                    });
                dataLayer.push(p), _.has(t.tile, 'header.space.pixels') && c.fire({
                    pixelObject: _.get(t.tile, 'header.space.pixels'),
                    eventType: 'Purchase',
                    params: {
                        contents: [{
                            id: a,
                            name: i,
                            quantity: o,
                            item_price: n
                        }],
                        content_type: r,
                        content_category: 'default',
                        value: _.get(t, 'orderPrice.total', 0),
                        currency: l,
                        num_items: o,
                        pixelLocation: s.absUrl()
                    }
                }), t.main.step = 'confirmation', t.main.title = 'Checkout Complete'
            }

            function P() {
                const e = _.pick(t.data, ['email', 'phone']);
                return e.address = _.pick(t.data, ['name', 'city']), e.address.line1 = t.data.address1, e.address.line2 = t.data.address2, e.address.state = t.data.region, e.address.postal_code = t.data.postCode, t.stripePaymentMethod || (e.paymentMethod = t.data.paymentMethod), n.saveInformation(e).catch((e) => {
                    const t = _.get(e, 'data.message', N);
                    r.warning(t)
                })
            }

            function U() {
                j(), t.main.step = 'review', t.step.review.messageError = '', t.step.checkout.edit = !1
            }
            const E = 'There was a problem completing your purchase. Please check your information and try again.',
                L = 'There was a problem with your purchase. Please restart the checkout process.',
                M = 'This product has been deleted or is no longer available.',
                D = 'An error occurred. Please try again.',
                N = 'There was a problem with saving your info.',
                O = 'Please review your card information.',
                H = 'registered',
                q = 'US',
                F = '1',
                B = {};
            let R;
            const V = p.isLoggedOut();
            if (B.common = {
                    name: {
                        required: !0
                    },
                    company: {},
                    email: {
                        required: !0,
                        email: !0
                    },
                    address1: {
                        required: !0
                    },
                    address2: {},
                    postCode: {
                        required: !0
                    },
                    city: {
                        required: !0
                    },
                    region: {
                        required: !0
                    },
                    phone: {
                        required: !0
                    },
                    delivery: {
                        custom: () => !!t.data.delivery || !t.step.checkout.delivery.visible
                    },
                    instructions: {
                        custom: () => !t.state.isVideoService || 0 < _.size(t.data.instructions)
                    }
                }, t.saveProductUrl = () => sessionStorage.setItem('guest.product.url', s.path()), B.paypal = _.defaults({
                    paymentMethod: {
                        required: !0
                    }
                }, B.common), t.states = n.getAvailableStates(), t.countries = n.getAvailableCountries(), t.isFree = () => t.main.isShippingFree && t.main.isFree, t.ccIsValid = () => !t.step.checkout.cc.visible && t.step.checkout.edit || t.isFree(), t.state = {
                    invalid: !1,
                    errorsCount: 0
                }, t.step = {}, t.data = {}, t.$validators = {}, t.data.useAsBillingAddress = !0, t.item = _.get(t, 'tile.body.item'), !t.item) throw new Error('Item is required');
            t.state.isVideoService = _.get(t.item, 'videoDelivery.enabled'), t.stripePaymentMethod = 'stripe' === t.item.preferredPaymentMethod, t.state.itemName = _.get(t.tile, 'body.name'), t.data.quantity = t.params.quantity, t.data.itemId = t.tile.id, t.data.variant = t.params.variant, t.data.idempotencyKey = n.generateIdempotencyKey(t.data.itemId), t.data.isOffer = 'offer' === t.item.pricingModel, t.data.isOffer ? (t.state.submitText = 'Submit Offer', t.state.summaryTitle = 'Offer Summary', t.state.confirmationTitle = 'Thank you for your offer') : (t.state.submitText = 'Place my order', t.state.summaryTitle = 'Order Summary', t.state.confirmationTitle = 'Thank you for your order'), t.main = {
                firstStep: 'checkout',
                title: 'Checkout',
                step: 'loading',
                paymentMethods: {
                    credit_card: {
                        name: 'Credit Card',
                        description: 'Safely purchase from this store using your credit card.'
                    },
                    paypal: {
                        name: 'PayPal',
                        description: 'You will be redirected to PayPal to complete purchase.'
                    }
                },
                onlyContactInfo: !0,
                hasShippingPrice: !1,
                hasDiscount: !1,
                isShippingFree: !0,
                isFree: 0 === t.params.finalPrice && !t.data.isOffer,
                deliveryOptions: v(t.item, t.params.quantity),
                hasBackButton: () => 'review' === t.main.step ? 'review' !== t.main.firstStep : t.step.checkout.edit
            }, t.main.inputs = {
                name: new e({
                    errorMessage: ''
                }),
                company: {},
                email: new e({
                    errorMessage: ''
                }),
                address1: new e({
                    errorMessage: ''
                }),
                address2: {},
                postCode: new e({
                    mask: {
                        custom: '99999'
                    }
                }),
                city: new e({
                    errorMessage: ''
                }),
                region: new e({
                    errorMessage: ''
                }),
                phone: new e({
                    mask: {
                        custom: '( 999 ) 999 - 9999'
                    }
                })
            };
            const z = () => {
                    const e = t.orderPrice,
                        a = _.get(t.params, 'contract.offer');
                    e.subtotal = _.get(a, 'price.amount'), e.price = e.subtotal, e.discount = 0, e.total = _.get(a, 'price.amount') + e.shipping + e.tax
                },
                j = _.debounce(() => {
                    if (isNaN(t.data.quantity)) return;
                    const e = t.orderPrice,
                        a = _.pick(t.data, ['variant', 'quantity']);
                    return a.address = {
                        postal_code: t.data.postCode
                    }, t.main.deliveryOptions = v(t.item, a.quantity), t.main.hasShippingPrice = !_.includes(['pickup', 'online', 'delivered', 'video'], t.data.delivery), t.main.hasDiscount = t.item.discount, t.main.hasShippingPrice && (a.shipping = t.data.delivery), t.state.updatingPrice = !0, n.calculatePrice(t.data.itemId, a).then((a) => {
                        e.shipping = a.shipping || 0, e.tax = a.tax || 0, t.data.isOffer ? z() : (e.subtotal = a.price || 0, e.price = a.price - a.discount, e.discount = a.discount || 0, e.total = a.total), h(), t.state.updatingPrice = !1
                    }).catch((a) => {
                        f(), t.step.review.messageError = _.get(a, 'data.message', 'There was a problem calculating the price. Please try to purchase it again.'), e.shipping = 0, e.tax = 0, t.data.isOffer ? z() : (e.subtotal = null, e.discount = null, e.total = null), t.state.invalid = !0, t.state.updatingPrice = !1
                    })
                }, 100, {
                    maxWait: 500
                });
            t.$watch('main.step', (e) => {
                t.hideClose = 'checkout' === e && t.step.checkout.edit, 'review' !== e || t.stripePaymentMethod || l.renderButton('#ds-checkout-button-container', {
                    payment: t.processPayment,
                    onAuthorize: T,
                    onCancel: I
                })
            }), t.$watch('data.quantity', (e) => e && j()), t.$watch('data.delivery', (e) => {
                e && (t.main.onlyContactInfo = _.includes(['pickup', 'online', 'delivered', 'video'], t.data.delivery), j())
            }), t.$watch('data.paymentMethod', (e) => {
                !0 === e || (R = e)
            }), t.registeredUserSignIn = () => m.create({
                template: 'public/modules/shop/templates/modal/registered-user.template.html',
                controller: ['$scope', 'OnboardingService', function(e, a) {
                    n.emailExists(localStorage.getItem(H)).then((t) => {
                        t && (e.registeredUserName = t.name, e.registeredUserPhoto = t.profilePhoto)
                    }).catch((e) => console.log(e)), e.signin = () => a.signin(localStorage.getItem(H), t.data.passwordLogin).then((e) => {
                        localStorage.removeItem(H), window.location = e.data.success.redirectUrl
                    }).catch((e) => {
                        400 <= e.status && 500 > e.status ? r.error('Wrong password. Please try again.') : r.error('Something went wrong. Please try again.')
                    })
                }],
                allowClose: !0,
                scope: {
                    overflow: !0,
                    noHeader: !0,
                    additionalClass: 'ds-modal-signup-leads animated fadeInUp',
                    overlayAdditionalClass: 'ds-modal-signup-leades-overlay',
                    containerAdditionalClass: 'ds-modal-container-leads'
                }
            }).then((e) => {
                e.show()
            }), t.emailExists = () => n.emailExists(t.data.email).then((e) => {
                e && localStorage.setItem(H, e.email)
            }).catch((e) => console.log(e)), t.$on('ds.modal.close', () => {
                localStorage.removeItem(H)
            }), 1 === t.main.deliveryOptions.length && (t.data.delivery = t.main.deliveryOptions[0].id), t.step.checkout = {
                instructions: {
                    editTitle: 'Edit Video Service Instructions',
                    visible: !1
                },
                info: {
                    title: 'Enter Personal Information',
                    editTitle: t.state.isVideoService ? 'Edit Contact Info' : 'Edit Delivery Options',
                    visible: !0
                },
                payment: {
                    title: 'Preferred Payment Method',
                    editTitle: 'Edit Payment Options',
                    freeTitle: 'Delivery Payment Options',
                    editFreeTitle: 'Edit Delivery Payment Options',
                    visible: !t.stripePaymentMethod
                },
                cc: {
                    title: 'Enter Payment Information',
                    editTitle: 'Edit Payment Method',
                    freeTitle: 'Delivery Payment Options',
                    editFreeTitle: 'Edit Delivery Payment Options',
                    visible: t.stripePaymentMethod
                },
                delivery: {
                    title: 'Delivery Options',
                    visible: !0
                },
                button: 'Review & Complete',
                editButton: 'Save',
                edit: !1
            }, t.step.review = {
                messageError: ''
            }, t.orderPrice = {
                total: null,
                shipping: null,
                discount: null,
                tax: null,
                order: null
            }, t.step.confirmation = {};
            const Y = _.get(B, t.item.preferredPaymentMethod, B.common);
            'service' !== t.item.type || t.main.deliveryOptions.length || (Y.delivery = {}, t.data.delivery = _.get(t.item, 'videoDelivery.enabled') ? 'video' : 'online'), t.form = o.instance(t, Y);
            const W = (e) => n.buy(e).then((e) => (t.isRegisteredEmail = localStorage.getItem(H), t.step.confirmation.purchaseId = e.order.number, t.params.instructions = '', t.stripePaymentMethod || !_.has(e, 'links.approval') ? A(e.order.number) : _.last(e.links.approval.href.match(/token=([-A-Z0-9]+)$/i)))).catch((e) => {
                    t.step.review.purchasing = !1, t.data.idempotencyKey = n.generateIdempotencyKey(t.data.itemId), w(e)
                }),
                G = () => {
                    const e = _.get(t.params, 'contract');
                    return g.createOrUpdate(e).then((e) => {
                        const a = e.offer;
                        return t.params.contract = e, 0 < a.attemptsRemaining ? t.update({
                            showOfferAttempts: !0,
                            showOfferForm: !1
                        }) : 0 === a.attemptsRemaining && t.update({
                            showOfferCountdown: !0,
                            showOfferForm: !1,
                            moreAttemptsAvailableDate: a.moreAttemptsAvailableDate
                        }), void 0 === a.minimumPriceMet || a.minimumPriceMet
                    }).catch((e) => {
                        e.data && r.error(e.data.message)
                    })
                };
            t.processPayment = (e) => {
                if ('paypal' !== t.item.preferredPaymentMethod) {
                    if (t.main.deliveryOptions.length && !e.delivery) return a(() => {
                        t.step.review.messageError = 'Delivery method is required.'
                    });
                    if (!t.data.ccNumber && !t.data.ccCard) return a(() => {
                        t.step.review.messageError = O
                    })
                }
                if (!t.form.validate()) return a(() => {
                    t.step.review.messageError = O
                });
                if (t.step.review.purchasing) return;
                t.step.review.messageError = '', t.step.review.purchasing = !0;
                const s = x();
                if (t.data.isOffer) {
                    const e = _.get(s, 'contract.id');
                    return e ? W(s) : G().then((e) => {
                        if (!e) return t.close();
                        const a = _.get(t.params, 'contract.id');
                        return _.set(s, 'contract.id', a), s.pricingModel = t.item.pricingModel, W(s)
                    })
                }
                return W(s)
            }, t.review = function() {
                return t.form.validate() ? (V || P(), U()) : a(() => {
                    t.form.showError()
                })
            };
            const K = {};
            t.validate = function(e) {
                a.cancel(K[e]), K[e] = a(() => {
                    const a = _.get(t.main.inputs, e),
                        s = t.form.validateInput(e);
                    a.iconValidator && (a.iconValidator.valid = s)
                }, 300)
            }, t.back = () => {
                const e = t.step.checkout,
                    a = e.edit ? 'review' : 'checkout';
                return e.edit = !1, e.instructions.visible = !1, e.info.visible = !0, e.cc.visible = t.stripePaymentMethod, e.payment.visible = !t.stripePaymentMethod, e.delivery.visible = !0, 'review' == a ? U() : void(t.main.step = 'checkout')
            }, t.edit = (e) => {
                const a = t.step.checkout;
                a.edit = !0, a.instructions.visible = !1, a.info.visible = !1, a.cc.visible = !1, a.payment.visible = !1, a.delivery.visible = !1, a[e].visible = !0, t.main.step = 'checkout'
            }, _.has(t.tile, 'header.space.pixels') && c.fire({
                pixelObject: _.get(t.tile, 'header.space.pixels'),
                eventType: 'InitiateCheckout',
                params: {
                    content_name: _.get(t.tile, 'body.name', ''),
                    content_category: 'default',
                    content_ids: _.get(t.tile, 'id', 0),
                    content_type: _.get(t.tile, 'body.item.type', 'product'),
                    value: _.get(t, 'params.finalPrice', 0),
                    num_items: _.get(t, 'params.quantity', 0),
                    currency: _.get(t, 'params.currency', 'USD'),
                    pixelLocation: s.absUrl()
                }
            }), V ? (t.main.step = t.main.firstStep, b()) : n.getUserInformation().then((e) => {
                t.main.firstStep = 'review', _.assign(t.data, e), b(), U()
            }).catch((e) => {
                if (t.main.step = t.main.firstStep, b(), 404 !== e.status) {
                    const t = _.get(e, 'data.message', 'There was a problem retrieving your info.');
                    r.warning(t)
                }
            })
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypeActivityService', ['$log', 'Restangular', function(e, t) {
            return {
                load: function(e) {
                    return e ? t.all('/v2/activities/' + e.vanity + '/all').customGET(null, _.pick(e, ['skip', 'limit', 'page'])).then((e) => e.plain()).catch((e) => (console.error(e), e)) : void console.error('You should define the params.')
                }
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypeChannelService', ['$log', 'Restangular', function(e, t) {
            return {
                load: function(e) {
                    return e ? t.all('/v2/channels/' + e.vanity + '/all').customGET(null, _.pick(e, ['skip', 'limit', 'page'])).then((e) => e.plain()).catch((e) => (console.error(e), e)) : void console.error('You should define the params.')
                }
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypeDraftService', ['$log', '$sce', 'Restangular', function(e, t, a) {
            return {
                load: function(e) {
                    return e ? a.all('/v2/search/drafts').customGET(null, {
                        page: e.page,
                        limit: e.limit,
                        query: e.query,
                        facets: e.facets
                    }).then((e) => e.plain()).catch((e) => (console.error(e), e)) : void console.error('You should define the params.')
                }
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypeFeedService', ['$log', 'Restangular', function(e, t) {
            return {
                pagingParams: {
                    query: {}
                },
                load: function(e) {
                    return e ? t.all('/v2/feeds/social').customGET(null, {
                        skip: e.skip,
                        limit: e.limit,
                        aggregated: !0
                    }).then((e) => (e.pagination = e.settings.next, e.plain())).catch((e) => (console.error(e), e)) : void console.error('You should define the params.')
                }
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypeItemService', ['$log', 'Restangular', function(e, t) {
            return {
                load: function(e) {
                    return e ? t.all('/v2/items/' + e.vanity + '/all').customGET(null, _.pick(e, ['skip', 'limit', 'page'])).then((e) => e.plain()).catch((e) => (console.error(e), e)) : void console.error('You should define the params.')
                }
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypeLikeService', ['$log', 'Restangular', function(e, t) {
            return {
                load: function(e) {
                    return t.all('/v2/search/likes').get('', e).then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypePageService', ['$log', 'Restangular', function(e, t) {
            return {
                load: function(e) {
                    return e ? t.all('/v2/pages/' + e.vanity + '/all').customGET(null, _.pick(e, ['skip', 'limit', 'page'])).then((e) => e.plain()).catch((e) => (console.error(e), e)) : void console.error('You should define the params.')
                }
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypePostService', ['$log', 'Restangular', function(e, t) {
            return {
                load: function(e) {
                    return e ? t.all('/v2/posts/' + e.vanity + '/all').customGET(null, _.pick(e, ['skip', 'limit', 'page'])).then((e) => e.plain()).catch((e) => (console.error(e), e)) : void console.error('You should define the params.')
                }
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypeSaveService', ['$log', 'Restangular', function(e, t) {
            return {
                load: function(e) {
                    return t.all('/v2/search/saves').get('', e).then((e) => e.plain())
                }
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypeSearchService', ['$log', 'Restangular', 'jquery', function(e, t) {
            return {
                load: function(e) {
                    return e ? t.all('/v2/search/query').customGET(null, {
                        query: e.query,
                        type: e.instanceType,
                        page: e.page
                    }).then((e) => e.plain()).catch((e) => (console.error(e), e)) : void console.error('You should define the params.')
                }
            }
        }])
    }(),
    function() {
        angular.module('tiles').factory('TilesTypeVideoService', ['$log', '$sce', 'Restangular', function(e, t, a) {
            return {
                load: function(e) {
                    return e ? a.all('/v2/videos/' + e.vanity + '/all').customGET(null, _.pick(e, ['skip', 'limit', 'page'])).then((e) => e.plain()).catch((e) => (console.error(e), e)) : void console.error('You should define the params.')
                }
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionBlockService', ['$rootScope', 'holospace', function(e, t) {
            return function(a) {
                const s = e.spaces[a.data.space.vanityUrl];
                return s.isBlocked ? t.unblock(a.data.space.id).then(() => {
                    s.isBlocked = !1
                }) : t.block(a.data.space.id).then(() => {
                    s.isBlocked = !0
                })
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionCopyService', ['notifyService', function(e) {
            return function(t) {
                const a = document.createElement('textarea');
                a.className = 'hidden-textarea', a.value = t.data.url || document.URL;
                const s = angular.element('body');
                s.append(a);
                const i = angular.element('.hidden-textarea'),
                    o = i[0];
                o.select();
                try {
                    document.execCommand('copy')
                } catch (t) {
                    e.error('Failed to copy the URL to your clipboard.')
                } finally {
                    e.success('URL copied to your clipboard.')
                }
                o.remove()
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionDeleteService', ['$rootScope', '$uibModal', '$timeout', '$q', '_', 'dsModal', 'Restangular', 'ItemService', 'PostService', 'PageService', 'ChannelService', 'notifyService', '$state', 'dsConfirm', function(e, t, a, s, i, o, n, l, r, d, c, p, m, u) {
            function g(e) {
                return u.show({
                    title: 'Delete',
                    message: 'Do you want to delete this ' + e.type + '?',
                    confirm: {
                        text: 'Yes',
                        action() {
                            v(e)
                        }
                    },
                    cancel: {
                        text: 'No'
                    }
                })
            }

            function v(e) {
                if (!e) return p.error('An error occurred when trying to delete your content. Please try again.');
                const t = y[e.type],
                    a = b(e.id);
                if (!t) throw new Error('Invalid delete type: ' + e.type);
                return t(e.data, e.$scope).then(() => {
                    p.success('Your ' + e.type + ' was deleted successfully.'), a.$tileGroup.length || 'comment' === e.type || m.go('feeds')
                }).catch(() => {
                    p.error('An error occurred when trying to delete your ' + e.type + '. Please try again.')
                })
            }

            function h(e) {
                e.$element.remove(), e.$tileGroup.length && e.$tileGroup.isotope('layout')
            }

            function b(e) {
                const t = $('[data-id="' + e + '"]'),
                    a = t.closest('.tile-group-wrapper'),
                    s = t.closest('.ds-modal');
                return {
                    $element: t,
                    $tileGroup: a,
                    $modal: s
                }
            }

            function f(e, t) {
                const a = [e, t].join('/');
                return n.all(a).customPUT({
                    status: 'delete'
                })
            }
            const y = {};
            return y.comment = function(e, t) {
                    const a = s.defer();
                    return t.$emit('post.delete', e.id, a), a.promise
                }, y.post = function(e) {
                    const t = r.delete(e.id);
                    return t.then(() => {
                        const t = b(e.id);
                        h(t), o.getOpenModals().forEach((t) => {
                            t.$scope && t.$scope.data && t.$scope.data.id === e.id && i.includes(['post', 'share'], t.$scope.data.type) && t.close()
                        })
                    })
                }, y.share = y.post, y.page = function(e) {
                    const t = 'draft' === e.status ? d.deleteDraft(e.id) : d.delete(e.id);
                    return t.then(() => {
                        const t = b(e.id);
                        h(t)
                    })
                }, y.channel = function(e) {
                    const t = 'draft' === e.status ? c.deleteDraft(e.id) : c.delete(e.id);
                    return t.then(() => {
                        const t = b(e.id);
                        h(t)
                    })
                }, y.item = function(e) {
                    const t = 'draft' === e.status ? l.deleteDraft(e.id, e.type) : l.delete(e.id, e.type);
                    return t.then(() => {
                        const t = b(e.id);
                        h(t)
                    })
                }, y.video = function(e) {
                    return f('videos', e.id).then(() => {
                        const t = b(e.id);
                        h(t)
                    })
                },
                function(e) {
                    return g(e)
                }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionEditService', [function() {
            const e = {
                post: 'post.edit',
                share: 'post.edit',
                page: 'page.edit',
                channel: 'channel.edit',
                product: 'item.edit.product',
                service: 'item.edit.service',
                space: 'edit'
            };
            return function(t) {
                const a = 'item' === t.type ? t.data.body.item.type : t.type,
                    s = e[a];
                if (s) {
                    const e = 'space' === a ? {
                        holospaceName: t.space.vanityUrl
                    } : {
                        id: t.data.id
                    };
                    return t.$state.go(s, e)
                }
                throw new Error('Invalid edit type', a)
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionFeaturedContentService', ['notifyService', 'Restangular', function(e, t) {
            return function(a) {
                const s = a.data.id,
                    i = a.data.type,
                    o = a.data.featured,
                    n = () => {
                        setTimeout(() => {
                            angular.element('.tile-group-wrapper').isotope('layout')
                        })
                    };
                return o ? (() => t.one(`/v2/activities/${s}/${'share'===i?'post':i}/unfeature`).customPUT().then(() => {
                    a.data.featured = !1, e.success(`Your ${i} is no longer featured`), n()
                }).catch((e) => (console.error(e), e)))() : (() => t.one(`/v2/activities/${s}/${'share'===i?'post':i}/feature`).customPUT().then(() => {
                    a.data.featured = !0, e.success(`Your ${i} has been set as featured.`), n()
                }).catch((t) => (console.error(t), e.error('You\'ve already selected three featured tiles. Please unselect to choose a new option.'), t)))()
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionMessageService', ['$overlay', 'MessagesAsync', 'dsModal', '$timeout', function(e, t, a, s) {
            return function(i) {
                const o = i.$scope,
                    n = i.$state;
                s(() => {
                    a.closeAll()
                }, 100), o.vm = {
                    currentSpace: i.data.space,
                    mySpace: i.space
                }, o.overlays = {
                    message: 'public/modules/holospace/views/holospace-message.view.html'
                };
                const l = o.vm;
                o.sendNewMessage = function(e) {
                    t.then((t) => {
                        const a = {
                            body: e,
                            recipientId: l.currentSpace.id
                        };
                        t.createAndRedirect(a, l.mySpace.vanityUrl, n)
                    })
                }, e.show(o, 'message')
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionReportService', ['$log', '_', '$timeout', 'dsTooltip', 'report', 'notifyService', function(e, t, a, s, i, o) {
            function n(e, t) {
                e.actions = t.subActions.map(c(e))
            }

            function l(e, t) {
                e.actions = t.subActions.map(p(e))
            }

            function r(e) {
                return s.closeAll(), i.send(e.data.type, e.data.id, 0).then(() => {
                    o.success('Thank you for reporting.')
                })
            }

            function d(e, t) {
                return s.closeAll(), i.send(e.data.type, e.data.id, t.value).then(() => {
                    o.success('Thank you for reporting.')
                })
            }

            function c(e) {
                return function(t) {
                    return t.method = function(t, a) {
                        return t.stopPropagation(), 'inappropriate' === a.type ? l(e, a) : 'spam' === a.type ? r(e, a) : void 0
                    }, t.status = !0, t
                }
            }

            function p(e) {
                return function(t) {
                    return t.method = function(t, a) {
                        return t.stopPropagation(), d(e, a)
                    }, t.status = !0, t
                }
            }
            return function(e, t) {
                return n(e.$scope, t)
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionSaveService', ['holoSaveService', function(e) {
            function t(t, a) {
                return e.postSave(t, a)
            }

            function a(t, a) {
                return e.deleteSave(t, a)
            }
            return function(e, s) {
                function i(t) {
                    s.label = s.labels[t], e.data.engagement.saved = t
                }
                return e.data.engagement.saved ? a(e.id, e.type).then(() => {
                    i(0)
                }) : t(e.id, e.type).then(() => {
                    i(1)
                })
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionShareService', ['dsModal', function(e) {
            return function(t) {
                return e.create({
                    template: 'public/modules/core/templates/sharethis.modal.template.html',
                    controller: 'ShareThisController',
                    title: 'Share this content',
                    close: !0,
                    scope: {
                        minWidth: 360,
                        params: t
                    }
                }).then((e) => {
                    e.show()
                })
            }
        }])
    }(),
    function() {
        angular.module('ds.actions').factory('dsActionVideoEditService', ['EngagementService', function(e) {
            return function(t) {
                e.openPost(t.data)
            }
        }])
    }(),
    function() {
        angular.module('ds.story').factory('MediumHolonisExtensionAnchor', [function() {
            const e = MediumEditor.extensions.form.extend({
                customClassOption: null,
                customClassOptionText: 'Button',
                linkValidation: !1,
                placeholderText: 'Paste or type a link',
                targetCheckbox: !1,
                targetCheckboxText: 'Open in new window',
                name: 'anchor',
                action: 'createLink',
                aria: 'link',
                tagNames: ['a'],
                contentDefault: '<i class="fa fa-link"></i>',
                contentFA: '<i class="fa fa-link"></i>',
                init() {
                    MediumEditor.extensions.form.prototype.init.apply(this, arguments), this.subscribe('editableKeydown', this.handleKeydown.bind(this))
                },
                handleClick(e) {
                    e.preventDefault(), e.stopPropagation();
                    const t = MediumEditor.selection.getSelectionRange(this.document);
                    return 'a' === t.startContainer.nodeName.toLowerCase() || 'a' === t.endContainer.nodeName.toLowerCase() || MediumEditor.util.getClosestTag(MediumEditor.selection.getSelectedParentElement(t), 'a') ? this.execAction('unlink') : (this.isDisplayed() || this.showForm(), !1)
                },
                handleKeydown(e) {
                    MediumEditor.util.isKey(e, MediumEditor.util.keyCode.K) && MediumEditor.util.isMetaCtrlKey(e) && !e.shiftKey && this.handleClick(e)
                },
                getForm() {
                    return this.form || (this.form = this.createForm()), this.form
                },
                getTemplate() {
                    const e = ['<input type="text" class="medium-editor-toolbar-input" placeholder="', this.placeholderText, '">'];
                    return e.push('<a href="#" class="medium-editor-toolbar-save">', 'fontawesome' === this.getEditorOption('buttonLabels') ? '<i class="fa fa-check"></i>' : this.formSaveLabel, '</a>'), e.push('<a href="#" class="medium-editor-toolbar-close">', 'fontawesome' === this.getEditorOption('buttonLabels') ? '<i class="fa fa-times"></i>' : this.formCloseLabel, '</a>'), this.targetCheckbox && e.push('<div class="medium-editor-toolbar-form-row">', '<input type="checkbox" class="medium-editor-toolbar-anchor-target" id="medium-editor-toolbar-anchor-target-field-' + this.getEditorId() + '">', '<label for="medium-editor-toolbar-anchor-target-field-' + this.getEditorId() + '">', this.targetCheckboxText, '</label>', '</div>'), this.customClassOption && e.push('<div class="medium-editor-toolbar-form-row">', '<input type="checkbox" class="medium-editor-toolbar-anchor-button">', '<label>', this.customClassOptionText, '</label>', '</div>'), e.join('')
                },
                isDisplayed() {
                    return MediumEditor.extensions.form.prototype.isDisplayed.apply(this)
                },
                hideForm() {
                    MediumEditor.extensions.form.prototype.hideForm.apply(this), this.getInput().value = ''
                },
                showForm(e) {
                    const t = this.getInput(),
                        a = this.getAnchorTargetCheckbox(),
                        s = this.getAnchorButtonCheckbox();
                    if (e = e || {
                            value: ''
                        }, 'string' == typeof e && (e = {
                            value: e
                        }), this.base.saveSelection(), this.hideToolbarDefaultActions(), MediumEditor.extensions.form.prototype.showForm.apply(this), this.setToolbarPosition(), t.value = e.value, t.focus(), a && (a.checked = '_blank' === e.target), s) {
                        const t = e.buttonClass ? e.buttonClass.split(' ') : [];
                        s.checked = -1 !== t.indexOf(this.customClassOption)
                    }
                },
                destroy() {
                    return !!this.form && void(this.form.parentNode && this.form.parentNode.removeChild(this.form), delete this.form)
                },
                getFormOpts() {
                    const e = this.getAnchorTargetCheckbox(),
                        t = this.getAnchorButtonCheckbox(),
                        a = {
                            value: this.getInput().value.trim()
                        };
                    return this.linkValidation && (a.value = this.checkLinkFormat(a.value)), a.target = '_self', e && e.checked && (a.target = '_blank'), t && t.checked && (a.buttonClass = this.customClassOption), a
                },
                doFormSave() {
                    const e = this.getFormOpts();
                    this.completeFormSave(e)
                },
                completeFormSave(e) {
                    this.base.restoreSelection(), this.execAction(this.action, e), this.base.checkSelection()
                },
                ensureEncodedUri(e) {
                    return e === decodeURI(e) ? encodeURI(e) : e
                },
                ensureEncodedUriComponent(e) {
                    return e === decodeURIComponent(e) ? encodeURIComponent(e) : e
                },
                ensureEncodedParam(e) {
                    const t = e.split('='),
                        a = t[0],
                        s = t[1];
                    return a + (void 0 === s ? '' : '=' + this.ensureEncodedUriComponent(s))
                },
                ensureEncodedQuery(e) {
                    return e.split('&').map(this.ensureEncodedParam.bind(this)).join('&')
                },
                checkLinkFormat(e) {
                    const t = /^([a-z]+:)?\/\/|^(mailto|tel|maps):|^#/i,
                        a = t.test(e);
                    let s = '';
                    const i = /^\+?\s?\(?(?:\d\s?-?\)?){3,20}$/,
                        o = e.match(/^(.*?)(?:\?(.*?))?(?:#(.*))?$/),
                        n = o[1],
                        l = o[2],
                        r = o[3];
                    return i.test(e) ? 'tel:' + e : (a || (s = 'http://'), s + this.ensureEncodedUri(n) + (void 0 === l ? '' : '?' + this.ensureEncodedQuery(l)) + (void 0 === r ? '' : '#' + r))
                },
                doFormCancel() {
                    this.base.restoreSelection(), this.base.checkSelection()
                },
                attachFormEvents(e) {
                    const t = e.querySelector('.medium-editor-toolbar-close'),
                        a = e.querySelector('.medium-editor-toolbar-save'),
                        s = e.querySelector('.medium-editor-toolbar-input');
                    this.on(e, 'click', this.handleFormClick.bind(this)), this.on(s, 'keyup', this.handleTextboxKeyup.bind(this)), this.on(t, 'click', this.handleCloseClick.bind(this)), this.on(a, 'click', this.handleSaveClick.bind(this), !0)
                },
                createForm() {
                    const e = this.document,
                        t = e.createElement('div');
                    return t.className = 'medium-editor-toolbar-form', t.id = 'medium-editor-toolbar-form-anchor-' + this.getEditorId(), t.innerHTML = this.getTemplate(), this.attachFormEvents(t), t
                },
                getInput() {
                    return this.getForm().querySelector('input.medium-editor-toolbar-input')
                },
                getAnchorTargetCheckbox() {
                    return this.getForm().querySelector('.medium-editor-toolbar-anchor-target')
                },
                getAnchorButtonCheckbox() {
                    return this.getForm().querySelector('.medium-editor-toolbar-anchor-button')
                },
                handleTextboxKeyup(e) {
                    return e.keyCode === MediumEditor.util.keyCode.ENTER ? (e.preventDefault(), void this.doFormSave()) : void(e.keyCode === MediumEditor.util.keyCode.ESCAPE && (e.preventDefault(), this.doFormCancel()))
                },
                handleFormClick(e) {
                    e.stopPropagation()
                },
                handleSaveClick(e) {
                    e.preventDefault(), this.doFormSave()
                },
                handleCloseClick(e) {
                    e.preventDefault(), this.doFormCancel()
                }
            });
            return MediumEditor.extensions.anchor = e, {}
        }])
    }(),
    function() {
        function e(e) {
            return !MediumEditor.util.getClosestTag(e, 'a')
        }
        let t, a, s, i, o;
        t = [' ', '\t', '\n', '\r', '\xA0', '\u2000', '\u2001', '\u2002', '\u2003', '\u2028', '\u2029'], a = 'com|net|org|edu|gov|mil|aero|asia|biz|cat|coop|info|int|jobs|mobi|museum|name|post|pro|tel|travel|xxx|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cx|cy|cz|dd|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|ja|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zw', s = '(((?:(https?://|ftps?://|nntp://)|www\\d{0,3}[.]|[a-z0-9.\\-]+[.](' + a + ')\\/)\\S+(?:[^\\s`!\\[\\]{};:\'".,?\xAB\xBB\u201C\u201D\u2018\u2019])))|(([a-z0-9\\-]+\\.)?[a-z0-9\\-]+\\.(' + a + '))', i = new RegExp('^(' + a + ')$', 'i'), o = new RegExp(s, 'gi');
        MediumEditor.Extension.extend({
            init() {
                MediumEditor.Extension.prototype.init.apply(this, arguments), this.disableEventHandling = !1, this.subscribe('editableKeypress', this.onKeypress.bind(this)), this.subscribe('editableBlur', this.onBlur.bind(this)), this.document.execCommand('AutoUrlDetect', !1, !1)
            }, isLastInstance() {
                let e = 0;
                for (let t = 0; t < this.window._mediumEditors.length; t++) {
                    const a = this.window._mediumEditors[t];
                    null !== a && a.getExtensionByName('autoLink') !== void 0 && e++
                }
                return 1 == e
            }, destroy() {
                this.document.queryCommandSupported('AutoUrlDetect') && this.isLastInstance() && this.document.execCommand('AutoUrlDetect', !1, !0)
            }, onBlur(e, t) {
                this.performLinking(t)
            }, onKeypress(e) {
                this.disableEventHandling || MediumEditor.util.isKey(e, [MediumEditor.util.keyCode.SPACE, MediumEditor.util.keyCode.ENTER]) && (clearTimeout(this.performLinkingTimeout), this.performLinkingTimeout = setTimeout(() => {
                    try {
                        const t = this.base.exportSelection();
                        this.performLinking(e.target) && this.base.importSelection(t, !0)
                    } catch (t) {
                        window.console && window.console.error('Failed to perform linking', t), this.disableEventHandling = !0
                    }
                }, 0))
            }, performLinking(e) {
                let t = MediumEditor.util.splitByBlockElements(e),
                    a = !1;
                0 === t.length && (t = [e]);
                for (let s = 0; s < t.length; s++) a = this.removeObsoleteAutoLinkSpans(t[s]) || a, a = this.performLinkingWithinElement(t[s]) || a;
                return this.base.events.updateInput(e, {
                    target: e,
                    currentTarget: e
                }), a
            }, removeObsoleteAutoLinkSpans(t) {
                if (!t || 3 === t.nodeType) return !1;
                const a = t.querySelectorAll('span[data-auto-link="true"]');
                let s = !1;
                for (let o = 0, i; o < a.length; o++)
                    if (i = a[o].textContent, -1 === i.indexOf('://') && (i = MediumEditor.util.ensureUrlHasProtocol(i)), a[o].getAttribute('data-href') !== i && e(a[o])) {
                        s = !0;
                        const e = i.replace(/\s+$/, '');
                        if (a[o].getAttribute('data-href') === e) {
                            const t = i.length - e.length,
                                s = MediumEditor.util.splitOffDOMTree(a[o], this.splitTextBeforeEnd(a[o], t));
                            a[o].parentNode.insertBefore(s, a[o].nextSibling)
                        } else MediumEditor.util.unwrap(a[o], this.document)
                    }
                return s
            }, splitTextBeforeEnd(e, t) {
                const a = this.document.createTreeWalker(e, NodeFilter.SHOW_TEXT, null, !1);
                for (let s = !0; s;) s = null !== a.lastChild();
                let s, i, o;
                for (; 0 < t && null !== o;) s = a.currentNode, i = s.nodeValue, i.length > t ? (o = s.splitText(i.length - t), t = 0) : (o = a.previousNode(), t -= i.length);
                return o
            }, performLinkingWithinElement(e) {
                const t = this.findLinkableText(e);
                for (let a = 0; a < t.length; a++) {
                    const s = MediumEditor.util.findOrCreateMatchingTextNodes(this.document, e, t[a]);
                    this.shouldNotLink(s) || this.createAutoLink(s, t[a].href)
                }
                return !1
            }, shouldNotLink(e) {
                let t = !1;
                for (let a = 0; a < e.length && !1 == t; a++) t = !!MediumEditor.util.traverseUp(e[a], (e) => 'a' === e.nodeName.toLowerCase() || e.getAttribute && 'true' === e.getAttribute('data-auto-link'));
                return t
            }, findLinkableText(e) {
                const a = e.textContent,
                    s = [];
                for (let n = null; null !== (n = o.exec(a));) {
                    let e = !0;
                    const o = n.index + n[0].length;
                    e = (0 === n.index || -1 !== t.indexOf(a[n.index - 1])) && (o === a.length || -1 !== t.indexOf(a[o])), e = e && (-1 !== n[0].indexOf('/') || i.test(n[0].split('.').pop().split('?').shift())), e && s.push({
                        href: n[0],
                        start: n.index,
                        end: o
                    })
                }
                return s
            }, createAutoLink(e, t) {
                t = MediumEditor.util.ensureUrlHasProtocol(t);
                const a = MediumEditor.util.createLink(this.document, e, t, this.getEditorOption('targetBlank') ? '_blank' : null),
                    s = this.document.createElement('span');
                for (s.setAttribute('data-auto-link', 'true'), s.setAttribute('data-href', t), a.insertBefore(s, a.firstChild); 1 < a.childNodes.length;) s.appendChild(a.childNodes[1])
            }
        })
    }(), angular.module('app').run(['$templateCache', function(e) {
        e.put('public/modules/activity/views/activity.view.html', '<div ng-if="space.provider === \'localstack\'" class="unclaimed-holospace"><!--<div class="w-claim-this-space">--><!--Want to Claim this Space? <a href="mailto:support@holonis.com?subject=Request%20to%20claim%20this%20business:%20{{space.name}}&body=I%20am%20interested%20in%20claiming%20this%20business:%20{{space.name}}%0D%0A%0D%0AAddress:%20https://www.holonis.com/{{space.vanityUrl}}">click here</a>--><!--</div>--><section id="about" class="about"><div class="container-fluid"><div class="row"><div class="col-xs-12"><div class="w-location-info"><svg-icon icon="unclaimed-marker"></svg-icon><p>{{ space.location[0].address }}, {{ space.location[0].city }}, {{ space.location[0].stateAbbr }} {{ space.location[0].zipCode }}</p></div><div class="w-location-sub-info"><ul><li><svg-icon icon="unclaimed-phone" class="phone-rotate"></svg-icon><span>{{ space.phoneNumber }}</span></li><li><svg-icon icon="unclaimed-compass"></svg-icon><span><a ng-href="{{ vm.directions }}" target="_system">Directions</a></span></li><li class="unclaimed-hours" ng-click="toggleHours()"><svg-icon icon="unclaimed-clock"></svg-icon><span>Hours</span></li></ul><div class="hours-dialog" ng-show="hoursVisible"><h3>Hours</h3><span class="hours-close" ng-click="toggleHours()"><svg-icon icon="close"></svg-icon></span><ul><li ng-repeat="hour in formatedHours"><span>{{ hour.day }}</span> <span class="time">{{ hour.time || \'Closed\' }}</span></li></ul></div></div></div></div></div></section><div class="w-claim-this-space" ng-if="space.isClaimable">Want to Claim this Space? <a href="mailto:support@holonis.com?subject=Request%20to%20claim%20this%20business:%20{{space.name}}&body=I%20am%20interested%20in%20claiming%20this%20business:%20{{space.name}}%0D%0A%0D%0AAddress:%20https://www.holonis.com/{{space.vanityUrl}}">click here</a></div></div><div ng-if="vm.ownerHasBlocked" class="heading-intro"><p style="line-height: 1.2">User blocked.</p></div><div ng-if="!vm.ownerHasBlocked && vm.callToAction" class="heading-intro"><p class="general-holospace-text" ng-if="vm.isMySpace">Your public profile is the heart of your Holospace.<br>Start creating and sharing content on your Holospace to build your brand, attract an audience, or market what you have to offer.</p><a class="icn icn-add-content" ng-if="vm.isMySpace" ui-sref="create"></a><p style="line-height: 1.2" ng-if="!vm.isMySpace">No activity yet</p></div><div ng-show="!vm.ownerHasBlocked && !vm.callToAction"><div class="holospace-tab-content" main-content><tile-group type="activities" perpage="15" space-id="vm.spaceId" vanity="vm.vanity" ads="vm.showAds" model="items" state-pagination="true"></tile-group></div></div>'), e.put('public/modules/channels/views/detail.view.html', '<div class="channel-detail-wrapper"><div class="user-deactivate-message"><p>This content is not available anymore.</p></div><div class="share-this-custom-floating channel-share-this"><share-this share-title="vm.title" share-url="vm.permalink" class="share-this" sticky sticky-offset-top="100" sticky-hide-before=".page-wrapper .ads-bottom"></share-this></div><div class="page-wrapper page-wrapper--channel page-wrapper-light new-holospace margin-bottom-none"><mobile-header center-title="Channel" back-icon="chrevon-left"></mobile-header><header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><landingpage-header landingpage-header-info="vm.landingpageHeaderInfo" data="vm.channel" header-always-fixed="true"></landingpage-header><div class="container" style="max-width: 730px" ng-if="vm.pagePopulate"><div class="row"><div class="col-xs-12"><h1 class="new-holospace-heading">{{vm.channel.name}}</h1><h3 class="new-holospace-subheanding heading-normal-dimmed heading-small">Channel {{vm.isDraft ? \'drafted\' : \'published\'}} by <a ui-sref="holospace.home({holospaceName: vm.createdBySpace.vanityUrl})">{{vm.createdBySpace.name}}</a> on {{ (vm.channel.status === \'published\' ? vm.channel.publishDate : (vm.channel.modified || vm.channel.created)) | date:"MM/dd/yyyy \'at\' h:mma" }}</h3><div class="clearfix"></div><h2 class="new-holospace-description" ng-bind-html="vm.channel.description | sanitize"></h2></div></div><div class="row"><ds-engagement data="data.shareTile || data" type="channel" ng-if="data && data.engagement" dont-open-post="true"></ds-engagement></div></div><div ng-repeat="block in vm.contentBlocks | orderBy : \'position\' " ng-if="vm.pagePopulate"><content-viewer content="block"></content-viewer><p ng-if="block.caption">{{block.caption}}</p></div><section class="clearfix" ng-if="vm.pagePopulate"><div class="channel-action-bar" ng-if="!vm.isDraft && !vm.isOwner"><a ng-hide="isLoggedOut()" ng-click="vm.toggleFollowChannel()"><span ng-if="!vm.isFollowingChannel">Follow Channel </span><span ng-if="vm.isFollowingChannel">Unfollow Channel </span></a><a class="trigger-modal" ng-show="isLoggedOut()" data-open-modal="modal-access" data-type="signin"><span>Follow Channel</span></a></div></section></div><section class="isotope-wrap clearfix" ng-if="vm.pagePopulate"><div class="main-intro" ng-if="vm.channel.page.length > 0"></div></section><div class="tile-group-channel-details" ng-if="vm.pagePopulate && !!vm.channel.contentCount"><tile-group type="json" json-data="vm.channel.page" perpage="15" class="no-preload" space-id="vm.channel.spaceId"></tile-group></div><ds-comments object-id="vm.channel.id" object-type="channel" content="data" ng-if="!vm.isDraft"></ds-comments></div>'), e.put('public/modules/channels/views/form.view.html', '<header class="ds-product-nav--mobile"><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><ds-header-creation data="data" header-title="header.title" params="header.params" tracker="header.tracker"></ds-header-creation><div class="ds-view ds-view--creation"><div class="ds-view-container"><section class="ds-product-create-detail"><ds-title title="state.title"></ds-title><div class="form-group"><ds-input ng-model="data.name" type="text" id="title" big="true" label="Channel title" placeholder="Enter the channel name" required></ds-input><ds-text ng-model="data.description" mentions="true" class="ds-comment-input" label="About your channel" placeholder="Description or short summary of your channel" ng-click="focus($event)" tabindex="1"></ds-text></div></section></div><content-creator space-id="params.spaceId" page-id="params.contentId" content-blocks="params.contents" template="params.template" deck-collection="data.deck" embed-multiple="params.multiple" form="params.form" vanity="params.vanity">></content-creator><tile-group prepend="true" vanity="params.vanity" type="json" json-data="data.deck" perpage="15" class="channel-deck" space-id="params.spaceId"></tile-group></div>'), e.put('public/modules/channels/views/tab.view.html', '<div ng-if="vm.callToAction" class="heading-intro"><p class="general-holospace-text">Channels let you organize your pages and posts into topics, themes, or categories so users can better navigate your content.<br>This tab is where all the channels you\u2019ve created are found.</p><a class="icn icn-add-content" ui-sref="channel.create"></a></div><div ng-show="!vm.callToAction"><div class="holospace-tab-content" main-content><tile-group type="channels" perpage="15" class="" vanity="vm.vanity" ads="vm.showAds" space-id="vm.spaceId" model="items" state-pagination="true"></tile-group></div></div>'), e.put('public/modules/content-creation/views/content-type.view.html', '<ds-header-selection params="header.params" title="Create"></ds-header-selection><div class="section clearfix"><div id="modal-tips-create-post-step"><div class="modal-tips-create-post-step"><div class="modal-dialog modal-sm"><div class="modal-content"><button type="button" class="close close--tips-create-post-step" aria-label="Close">X</button><header><div class="content-type post fade-in" ui-sref="PostCreation"><div class="content-type-icon"></div></div><h1 class="fade-in">Post</h1><p class="fade-in">Broadcast to all of your connected networks at once</p><div class="intro-line fade-in-down"></div></header><section class="fade-in-up"><p>A post will enable you to share content everywhere. Tap the icon to see how easy it is</p></section></div></div></div></div><div class="content-creation step-one clearfix w-content-creation-flex"><div class="content-creation-body text-center" ng-class="{ \'content-creation-processing\' : tracker.active() }"><div class="holo-container-md wow zoomIn content-creation-flex" ng-class="{ \'authoring-in-owned-space\' : ownsSpace }" data-wow-duration=".25s" data-wow-delay=".15s"><div class="content-type post" ng-click="isOwner($event)" ng-class="{ \'content-type--not-owner\': !state.owner }" ui-sref="post.create" id="intro-post"><div class="content-type-icon"><img ng-src="{{$root.cdnBaseUrl}}/images/ds-content/post.svg" alt=""></div><div class="title">Post</div></div><div class="content-type page" ui-sref="page.create" id="intro-page"><div class="content-type-icon"><img ng-src="{{$root.cdnBaseUrl}}/images/ds-content/page.svg" alt=""></div><div class="title">Page</div></div><div class="content-type item" ui-sref="item.selection" id="intro-ecommerce"><div class="content-type-icon"><img ng-src="{{$root.cdnBaseUrl}}/images/ds-content/ecommerce.svg" alt=""></div><div class="title">eCommerce</div></div><div class="content-type channel" ui-sref="channel.create" id="intro-channel"><div class="content-type-icon"><img ng-src="{{$root.cdnBaseUrl}}/images/ds-content/channel.svg" alt=""></div><div class="title">Channel</div></div></div></div></div></div>'), e.put('public/modules/content-creation/templates/channel-picker.template.html', '<div class="holo-modal-full"><div class="modal-header"><a class="modal-cancel" href="" ng-click="vm.cancel()">Cancel</a> <span class="title" ng-if="vm.selectedChannels.length">{{vm.selectedChannels.length}} Channels Selected</span> <span class="title" ng-if="!vm.selectedChannels.length">Select Channels</span> <a class="modal-done" href="" ng-click="vm.done()">Done</a></div><div class="modal-body channel-selection"><div ng-if="vm.callToAction" class="heading-intro"><span>You don\'t have any content</span></div><div ng-if="!vm.callToAction" class="pad-isotope-top"><tile-group type="channels" selectable="multiple" selectable-data="vm.selectedChannels" perpage="15" class="" space-id="vm.spaceId"></tile-group></div></div></div>'), e.put('public/modules/content-creation/templates/info.template.html', '<div class="content-type-info"><ds-title title="\'Post\'"></ds-title><p class="content-type-info-text">Using this feature allows you to send content to all your followers on Holonis, but also out to all your connected networks like Facebook & Twitter. You can add a single image, a link to a video on Youtube, or a news article, etc... Your HoloSpace gives you all the tools you\u2019ll need to get as creative and inspiring as you want to be. Typically, \u2018Posts\u201D are a smaller amount of info and media, to tell a full story use a "Page\u201D.</p><ds-title title="\'Page\'"></ds-title><p class="content-type-info-text">A \u201CPage\u201D is a blank canvas for your creativity. It\u2019s a webpage that can be anything you want it to be, so get creative! You can create an article, a blog post, add a series of photographs, or perhaps just embed a video link with a short story. Let your imagination be found. A page is good for multiple content types, for embedding multiple things and generally handling larger amounts of information. Like a post, a page can also be shared to your social media networks.</p><ds-title title="\'eCommerce\'"></ds-title><p class="content-type-info-text">eCommerce is where you can create a product or service to sell. It is designed to empower you with the ability to conduct commerce in a creative manner and to help you unleash your financial potential. Want to go to the next level? Surround your simple product or service with a story and embed other content like images and videos to help promote their sale. Your item will be found.</p><ds-title title="\'Channel\'"></ds-title><p class="content-type-info-text">Channels are organized collections, holding grounds, or categories for your content. You can place an unlimited number of Pages or Items in any channel and you can create an unlimited number of channels. It\u2019s up to you. For example, if you\u2019re a sports enthusiast, create Pages about your favorite sports teams and place those into your own Sports Network Channel.</p></div>'), e.put('public/modules/content-creation/templates/page-picker.template.html', '<div class="holo-modal-full"><div class="modal-header"><a class="modal-cancel" href="" ng-click="vm.cancel()">Cancel</a> <a class="modal-done" href="" ng-click="vm.done()" ng-disabled="!vm.addButtonDisabled">Add</a> <span class="title" ng-if="vm.selectedPages.length == 0">Add a Page or Item</span> <span class="title" ng-if="vm.selectedPages.length > 0">{{vm.selectedPages.length}} Pages Selected</span></div><div id="embedBlock" class="modal-body modal-embed"><div id="pageBlock" class="modal-body"><page-tabs class="tabs-embed" space-id="vm.spaceId" selected-blocks="vm.selectedPages"></page-tabs></div></div></div>'), e.put('public/modules/drafts/views/drafts.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><main class="page-wrapper page-wrapper-light page-drafts page-wrapper--drafts"><mobile-header center-title="Drafts" back-icon="chrevon-left"></mobile-header><holospace-search value="vm.searchFilter" placeholder="Search drafts..."><actions-group><action icon="hicon-filters" label="Filters" opened-tab="openedTab"><div class="submenu"><div class="filters-clear-all" ng-click="vm.clearFilters()">Clear all</div><action-submenu-item label="Type"><action-submenu-dropdown controller="typeFilter" search="true" multiple="true" placeholder-text="Search by content type" callback="vm.filterCallback"></action-submenu-dropdown></action-submenu-item><action-submenu-item label="Authored To"><action-submenu-dropdown controller="authoredToFilter" search="true" multiple="true" placeholder-text="Search by author" callback="vm.filterCallback"></action-submenu-dropdown></action-submenu-item><action-submenu-item label="Authored By"><action-submenu-dropdown controller="authoredByFilter" search="true" multiple="true" placeholder-text="Search by author" callback="vm.filterCallback"></action-submenu-dropdown></action-submenu-item></div></action></actions-group></holospace-search><div class="heading-intro" ng-if="vm.callToAction"><p class="general-holospace-text">This is where content yet to be published by you or the authors you\u2019ve invited lives until you share it with the world.</p></div><section class="main-holospace-content draft-content clearfix" ng-if="!vm.callToAction"><div class="holospace-tab-content" main-content><tile-group type="drafts" perpage="15" class="" state-pagination="true" ads="false" query="vm.query" model="vm.deck" settings="vm.settings"></tile-group></div></section></main>'), e.put('public/modules/core/views/ellipsis.view.html', '<li ng-repeat="option in options"><a ng-click="option.click()">{{option.name}}</a></li>'), e.put('public/modules/core/views/header-notifications.view.html', '<div ng-controller="NotificationsListController as vm"><div class="activity-header" ng-show="state.main.title"><h2 class="activity-header__title">{{ state.main.title }}</h2><div class="activity-header__right-close"><svg-icon icon="close" ng-click="main.showBodyScroll();close();" class="close-notification activity-header__close"></svg-icon></div></div><div ng-if="state.directMessageRequests.enabled || state.followerRequests.enabled" ng-class="{\'height-zero\' : state.main.title !== \'Activity\'}" class="space-between-blue top"></div><div ng-switch="state.main.tab" ng-class="{\'header-space\' : !state.directMessageRequests.enabled && !state.followerRequests.enabled }"><div class="activity-message-requests" ng-switch-when="message-requests"><a ng-href="{{space.vanityUrl}}" ng-click="directMessageRequests.back()"><svg-icon class="icon back-icon-postion" icon="chevron-left"></svg-icon></a><div class="private-requests"><ul class="private-requests__message-container" ng-if="state.directMessageRequests.info.total"><li class="activity-notifications__content message-preview-content top" ng-repeat="request in state.directMessageRequests.data" id="{{request.space.spaceId}}"><a ng-href="{{request.space.vanityUrl}}" class="activity-notifications__profile-photo message-request-avatar" title="{{request.space.name}}"><img class="activity-notifications__profile-photo rounded" ng-src="{{ (request.space.photo.url || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid></a><div class="private-requests__body"><p ui-sref="holospace.home({holospaceName: request.space.vanityUrl })" class="private-requests__body--name"><span>{{ request.space.name }}</span></p><span class="private-requests__body--vanity"><p><a ng-href="{{request.space.vanityUrl}}">@{{ request.space.vanityUrl }} </a>- {{request.created | amUtc | amTimeAgo}}</p></span><p ng-click="directMessageRequests.select(request)" class="message-preview">{{ request.message.body | limitTo: 81 }}<span ng-if="request.message.body.length >= 81">...</span></p></div></li></ul><div class="approve-all-container" ng-if="state.directMessageRequests.info.total > 1"><a href="#" class="approve-btn" ng-click="directMessageRequests.approveAll()">Approve all</a></div><div class="private-requests-no-requests" ng-if="state.directMessageRequests.info.total <= 0"><img ng-src="{{$root.cdnBaseUrl}}/images/no_follower_request.png" alt="You have no Follow Request"><h2 class="private-requests-no-requests__title">No Messages Requests</h2><p class="private-requests-no-requests__description">There\'s no activity at the moment</p></div></div></div><div class="activity-message-request" ng-switch-when="message-request-detail"><div class="private-requests"><div class="selected-message"><div class="selected-message__header"><svg-icon class="icon back" icon="chevron-left" ng-click="directMessageRequestDetail.back()"></svg-icon><a ng-if="!vm.primarySpace.photo" ui-sref-active="active" class="item avatar" ui-sref="holospace.home({holospaceName: state.directMessageRequests.selected.space.vanityUrl})"><img class="img-circle" ng-src="{{ (state.directMessageRequests.selected.space.photo.url || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid> </a><span>{{ state.directMessageRequests.selected.space.name }}</span><svg-icon icon="close" class="icon close" ng-click="main.showBodyScroll();"></svg-icon></div><div class="selected-message__actions"><p>Requested to begin a private conversation. Blocking the user will prevent future requests.</p><div class="button-container"><a href="#" class="ds-btn ds-btn--blue ds-btn--sm" ng-click="directMessageRequestDetail.approve()">Approve</a> <a href="#" class="ds-btn ds-btn--sm ds-btn--outline" ng-click="directMessageRequestDetail.block()">Block</a></div></div><div class="selected-message__preview-container"><div class="date"><hr><span>{{ state.directMessageRequests.selected.message.created | date: \'MMM dd, yyyy\' }}</span><hr></div><div class="selected-message__content"><p><a href="#">{{ state.directMessageRequests.selected.space.name }}</a> <span>{{ state.directMessageRequests.selected.message.created | amUtc | amTimeAgo }}</span></p><p class="text">{{ state.directMessageRequests.selected.message.body }}</p></div></div></div></div></div><div class="activity-follower-requests" ng-switch-when="follower-requests"><a ng-click="main.back()"><svg-icon class="icon back-icon-postion" icon="chevron-left" ng-click="followerRequests.back()"></svg-icon></a><div class="private-requests"><ul ng-if="state.followerRequests.info.total"><li class="activity-notifications__content" ng-repeat="space in state.followerRequests.data" ng-attr-id="{{ \'follower-request-\' + space.spaceId }}"><a ng-href="{{space.vanityUrl}}" class="activity-notifications__profile-photo" title="{{space.name}}"><img class="activity-notifications__profile-photo rounded" ng-src="{{ (space.photo.url || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid></a><div class="private-requests__body"><p class="private-requests__body--name"><span>{{space.name}}</span></p><span class="private-requests__body--vanity"><p><a ng-href="{{space.vanityUrl}}">@{{space.vanityUrl}} </a>- {{space.created | amUtc | amTimeAgo}}</p></span></div><div class="private-requests__actions"><div class="private-requests__actions--accepted" ng-click="followerRequests.updateStatus(space.spaceId, \'accepted\');"><svg-icon icon="ds-check" class="icon ds-check"></svg-icon></div><div class="private-requests__actions--denied" ng-click="followerRequests.updateStatus(space.spaceId, \'ignored\')"><svg-icon icon="ds-close" class="icon ds-close"></svg-icon></div></div></li></ul><div class="private-requests-no-requests" ng-if="state.followerRequests.info.total <= 0"><img ng-src="{{$root.cdnBaseUrl}}/images/no_follower_request.png" alt="You have no Follow Request"><h2 class="private-requests-no-requests__title">No Follower Requests</h2><p class="private-requests-no-requests__description">There\'s no activity at the moment</p></div></div></div><div class="activity-loading" ng-switch-when="loading"><span class="loaderInline loaderInline-center smooth"></span></div><div class="activity-notifications" ng-switch-default><div ng-if="state.directMessageRequests.enabled" class="activity-notifications__follower-request top"><a href="#" class="activity-notifications__follower-request--action" ng-click="main.to(\'message-requests\')" title="{{ state.directMessageRequests.title }}">Direct Message Requests<div class="right-content"><span ng-class="{ \'unread\' : state.directMessageRequests.info.unread, \'read\' : !state.directMessageRequests.info.unread }">{{ state.directMessageRequests.info.total | abbreviateNumber}}</span><svg-icon class="icon" icon="chevron-right"></svg-icon></div></a></div><hr class="activity-notifications__request-line" ng-if="state.directMessageRequests.enabled && state.followerRequests.enabled"><div ng-if="state.followerRequests.enabled" class="activity-notifications__follower-request bot"><a href="#" class="activity-notifications__follower-request--action" ng-click="main.to(\'follower-requests\')" title="{{ state.followerRequests.title }}">New Follow Requests<div class="right-content"><span ng-class="{ \'unread\' : state.followerRequests.info.unread, \'read\' : !state.followerRequests.info.unread }">{{ state.followerRequests.info.total | abbreviateNumber}}</span><svg-icon class="icon" icon="chevron-right"></svg-icon></div></a></div><div ng-if="state.directMessageRequests.enabled || state.followerRequests.enabled" ng-class="{\'height-zero\' : state.main.title !== \'Activity\'}" class="space-between-blue bottom"></div><ul ng-if="state.notifications.data.length" class="u-margin-top-sm-2"><li class="activity-notifications__content top" ng-repeat="n in state.notifications.data" ng-class="{ \'notification-unread\': !n.read }" ng-click="notifications.markAsRead(n, $event)"><a ng-if="!n.isGuestNotification" href="{{n.actors[0].url}}" class="activity-notifications__profile-photo" title="{{n.actors[0].name}}"><img class="activity-notifications__profile-photo rounded" ng-src="{{ (n.actors[0].picture || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid> </a><span ng-if="n.isGuestNotification" class="activity-notifications__profile-photo" title="{{n.actors[0].name}}"><img class="activity-notifications__profile-photo rounded" ng-src="{{ (n.actors[0].picture || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid> </span><a href="{{n.media.url}}" class="notification-media" title="{{n.media.title}}" ng-if="n.media.picture"><img class="notification-media-photo" ng-src="{{n.media.picture | processImageURL : getUniqueSelector() }}" data-uid></a><div class="activity-notifications__body"><p class="activity-notifications__body--description">{{n.author ? \'Author \' : null}} <span ng-repeat="actor in n.actors"><a ng-if="!n.isGuestNotification" class="activity-notifications__body--name" href="{{actor.url}}" title="{{actor.name}}" ng-click="main.closeActivity()">{{actor.name}}</a> <span ng-if="n.isGuestNotification" title="{{actor.name}}">{{actor.name}}</span> <span ng-if="$index < n.actors.length - (n.otherActors ? 1 : 2)">, </span><span ng-if="$index === n.actors.length - 2 && !n.otherActors">and</span> </span><span ng-click="n.verb === state.notifications.verbs.follow_space ? main.openFollowModal() : \' \'" ng-if="n.otherActors > 0">and {{n.otherActors}} other Holospace <span ng-if="n.otherActors !== 1">s</span></span></p><div ng-click="n.verb === state.notifications.verbs.follow_space ? main.openFollowModal() : \' \'">{{n.verb | cut : true : 72 : \'...\'}} <span class="activity-notifications__body--time">{{n.time | amUtc | amTimeAgo}}</span></div><p></p><div class="notification-thumbs" ng-if="n.thumbs.length"><a href="{{t.url}}" class="notification-thumb" title="{{t.title}}" ng-repeat="t in n.thumbs"><img class="rounded" ng-src="{{t.picture | processImageURL : getUniqueSelector() }}" data-uid></a></div></div></li></ul><!-- Zero notification UI --> <span class="loaderInline loaderInline-center" ng-class="{ \'smooth\' : !state.notifications.loading }"></span><div ng-if="!state.notifications.data.length && !state.notifications.loading"><section class="private-requests-no-requests"><img ng-src="{{$root.cdnBaseUrl}}/images/no_follower_request.png" alt="You have no Follow Request"><h2 class="private-requests-no-requests__title">Notifications</h2><p class="private-requests-no-requests__description private-requests-no-requests__no-notification">Notifications is where you\u2019re alerted about new followers, orders, messages, replies, etc.</p></section></div></div></div><!-- Show Notifications --></div>'), e.put('public/modules/core/views/header.web.html', '<!-- DESKTOP NAVIGATION --><ng-include src="\'public/modules/core/templates/desktop-navigation.template.html\'"></ng-include><!-- MOBILE NAVIGATION --><ng-include src="\'public/modules/core/templates/mobile-navigation.template.html\'"></ng-include><div ng-show="vm.isMenuOpen" ng-click="vm.closeMenu()" class="menu-overlay"></div><modal id="modal-tips-create-post" type="modal-tips-create-post"></modal><span overlay="invite" class="hidden"></span>'), e.put('public/modules/core/views/holoLike.view.html', '<a href="" class="text-center" title="If you like this, vote it up!" ng-click="vm.doVote(currUserId)"><i class="fa fa-2x fa-heart-o"></i> <i itemprop="actionStatus" class="fa fa-2x fa-heart animated" ng-class="(vm.ply.userVotes[vm.currUserId]==1) ? \'heart-in\' : \'heart-out\'"></i> <span itemprop="userInteractioncount" class="counter" ng-bind="vm.counter" ng-if="vm.counter > -1"></span></a>'), e.put('public/modules/core/views/holoSave.view.html', '<button title="If you like this, vote it up!" ng-click="vm.doSave(currUserId)" class="button-save-option"><span ng-class="(vm.SaveText==1) ? \'saved\' : \'unsaved\'"></span><!-- <i class="fa fa-2x" ng-class="(vm.ply.userSave[vm.currUserId]==1) ? \'fa-bookmark\' : \'fa-bookmark-o\'"></i> --></button>'), e.put('public/modules/core/views/instagram.embed.view.html', '<div>{{result.data}}</div>'), e.put('public/modules/core/views/search.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><header class="header-search-mobile search-view"><div class="header-mobile-top header-mobile-top--holospace" style="position: relative" ng-if="isLoggedOut()"><img ui-sref="homescreen" style="width:118px;margin-left:-12px;margin-right:auto" ng-src="{{$root.cdnBaseUrl}}/images/svg/logo-holonis-h.svg" alt="holonis-logo"> <a class="ds-button-like ds-button-like-mobile-header" ng-click="Authentication.showSignupPrompt()">Sign up / Sign in</a></div><mobile-header center-title="Search" back-icon="chrevon-left" ng-if="!isLoggedOut()"></mobile-header><div class="search" ng-controller="HeaderController as vm" style="position: absolute;width: 100vw"><form><svg-icon icon="explore-icon" class="explore-icon"></svg-icon><input type="text" id="mobile-search" data-highlightclass="search-highlight" placeholder="Search for topics, categories, items for sale..." ng-focus="vm.focusSearch()" ng-blur="vm.blurSearch()" ng-keypress="vm.searchEnter($event);" ng-model="vm.searchString" aa-datasets="vm.updateAutocomplete()" autocomplete></form></div></header><tabs class="tabs-embed tabs-component w-search-view search-tab-position" active="vm.active" space-id="vm.spaceId" array="vm.tabsArray" on-tab-change="vm.onTabChange" drop-settings-fn="vm.dropSettingsFn" always-fixed="true"></tabs><div ng-if="vm.stauts != \'loading\' && vm.items.length > 0" class="search-result-message">Incredible, you\u2019ve reached the end of search results for <span>{{vm.query.query}}</span></div><div ng-if="vm.stauts != \'loading\' && vm.items.length < 0" class="search-result-message">Sorry, there are no results for <span>{{vm.query.query}}</span></div>'), e.put('public/modules/core/views/sharethis.view.html', '<!-- AddThis Button BEGIN --><div addthis-tool tool-class="\'addthis_inline_share_toolbox\'" share-title="shareTitle" share-url="shareUrl"></div><!-- AddThis Button END -->'), e.put('public/modules/core/views/taboola.view.html', '<div class="container content-ads" ng-show="taboolaEnabled"><div id="taboola-below-article-thumbnails"></div></div>'), e.put('public/modules/core/templates/action-sheet.template.html', '<div class="as"><a href="javascript:;" class="as-overlay"></a><div class="as-group"><div class="as-button as-label" ng-if="actionSheetLabel" ng-click="$event.stopPropagation()">{{actionSheetLabel}}</div><div class="as-button as-action as-post" ng-class="{ \'as-button-big\': actionSheet.actions.length > 4, \'action-only-mobile\': action.onlyMobile }" ng-repeat="action in actionSheet.actions" data-index="{{$index}}" ng-click="action.callback()" tabindex="0"><i class="fa fa-trash-o" ng-if="action.tilePost"></i><span>{{action.text}}</span><div ng-if="action.saveOption"><holo-save save-obj="$parent.$parent.$parent.data" space-id="$root.primarySpace.id"></holo-save></div></div><button class="as-button as-cancel" ng-if="actionSheet.cancel" ng-click="actionSheet.cancel.callback()">{{actionSheet.cancel.text}}</button></div></div>'), e.put('public/modules/core/templates/action-submenu-dropdown.template.html', '<div class="submenu-dropdown" ng-class="{ \'multiple-selection\': multiple }"><input type="text" class="submenu-dropdown-search" placeholder="{{placeholderText}}" ng-if="hasSearch" ng-model="vm.searchText"><div class="submenu-dropdown-results"><div class="submenu-dropdown-result-wrapper" ng-repeat="result in vm.results | filter: {text: vm.searchText}"><input id="{{vm.name}}_{{$index}}" class="holonis-{{multiple ? \'checkbox\' : \'implicit-radio\'}}" type="{{multiple ? \'checkbox\' : \'radio\'}}" name="{{vm.name}}" value="{{result.value}}" ng-model="result.selected" ng-click="callback(result, vm.name)"><label class="submenu-dropdown-result" for="{{vm.name}}_{{$index}}" ng-click="!multiple && $parent.$parent.$parent.toggle()">{{result.text}} <span ng-if="result.amount">({{result.amount}})</span></label></div></div></div>'), e.put('public/modules/core/templates/action-submenu-item.template.html', '<div class="submenu-item-wrapper"><div class="submenu-item" ng-class="{ opened: isOpen }" ng-click="toggle($event)">{{label}}<div class="submenu-item-content" ng-show="isOpen" ng-transclude></div></div></div>'), e.put('public/modules/core/templates/action.template.html', '<div class="action-wrapper"><button class="action" ng-class="{ opened: isOpen() }" ng-click="toggle()"><i class="{{icon}}"></i> <span>{{label}}</span></button><div ng-show="isOpen()" ng-transclude></div></div>'), e.put('public/modules/core/templates/actions-group.template.html', '<div class="actions-group" ng-transclude></div>'), e.put('public/modules/core/templates/buy.template.html', '<button class="ds-button ds-button-primary ds-button-big" ng-click="vm.checkout()" ng-disabled="!vm.params.variant || !vm.params.quantity || disabled">{{vm.params.soldOut ? \'Sold out\' : vm.params.price === 0 ? \'Free\' : \'Buy now\'}}</button>'), e.put('public/modules/core/templates/card-embedded-page.template.html', '<div class="embed-page-creation"><a ui-sref="{{disableActions ? \'.\' : \'landingpage({ holospaceName: card.space.vanityUrl, vanityUrl: card.vanityUrl })\' }}"><img class="margin-none js__wait-for-img-dimensions" ng-src="{{card.cover.url | processImageURL : cardWidth}}" alt=""></a><div class="inner"><a ui-sref="{{disableActions ? \'.\' : \'landingpage({ holospaceName: card.space.vanityUrl, vanityUrl: card.vanityUrl })\' }}"><h1 class="title">{{card.name}}</h1><p class="description">{{card.description}}</p></a></div></div>'), e.put('public/modules/core/templates/card-embedded-post.template.html', '<div class="embed-post-creation"><a ui-sref="{{disableActions ? \'.\' : \'post({ holospaceName: card.space.vanityUrl, vanityUrl: card.vanityUrl })\' }}" ui-sref-opts="{notify: false}"><img class="margin-none js__wait-for-img-dimensions" ng-src="{{card.headerMediaUrl | processImageURL : cardWidth}}" alt=""></a><div class="inner"><a ui-sref="{{disableActions ? \'.\' : \'post({ holospaceName: card.space.vanityUrl, vanityUrl: card.vanityUrl })\' }}" ui-sref-opts="{notify: false}"><h1 class="title">{{card.name}}</h1><p class="description">{{card.description}}</p></a></div><tile class="grid-item" data="card.tile || card"></tile><!-- TODO: fix tile for EMBED POST CREATION --></div>'), e.put('public/modules/core/templates/card-embedded-product.template.html', '<div class="embed-page-creation-product"><div class="relative"><a ui-sref="{{disableActions ? \'.\' : \'landingpage({ holospaceName: card.space.vanityUrl, vanityUrl: card.vanityUrl })\' }}"><img class="margin-none js__wait-for-img-dimensions" ng-src="{{(card.headerMediaUrl || card.media) | processImageURL : cardWidth}}" alt=""></a></div><div class="inner"><a ui-sref="{{disableActions ? \'.\' : \'landingpage({ holospaceName: card.space.vanityUrl, vanityUrl: card.vanityUrl })\' }}"><h1 class="title">{{card.name}}</h1><p class="description">{{card.description}}</p></a><div class="pad-md-top align-center buy-product buy-button-embed-holospace"><stripe product="card" appearance="stripeAppearance" action="\'readyToCheckout\'"></stripe></div></div></div>'), e.put('public/modules/core/templates/card-embedded-video.template.html', '<div class="embed-page-creation-video"><style type="text/css">.video-upload-wrapper {position:relative; width:583px;}\n    .video-upload-wrapper.selected {border-radius:7px; overflow:hidden;}\n    .video-upload-wrapper.selected:before {position:absolute; top:0; left:0; right:0; bottom:0; border:5px solid #4A90E2; border-radius:7px; content:\'\'; z-index:1; pointer-events:none;}\n    .video-upload-wrapper .video-upload-box {position:relative; width:583px; height:390px; background-size:cover; background-color:#000;}\n    .video-upload-wrapper .video-upload-loader {position:absolute; width:84px; height:84px; top:50%; left:50%; transform:translate3d(-50%, -50%, 0);}\n    .video-upload-wrapper .video-upload-loader:before {position:absolute; width:84px; height:84px; top:0; left:0; border:4px solid rgba(255, 255, 255, 0.2); content:\'\'; box-sizing:border-box; border-radius:100%;}\n    .video-upload-wrapper .video-upload-play {}\n    .video-upload-wrapper .video-upload-form {}</style><div class="video-upload-wrapper selected"><div id="video-upload-box" class="video-upload-box" ng-style="{\'background-image\':\'url(\' + card.thumb + \')\'}"><div id="video-upload-loader" class="video-upload-loader" ng-show="!card.upload.finished">{{card.upload.message}} {{card.upload.progress}}</div><div id="video-upload-loader" class="video-upload-loader" ng-show="card.upload.finished"></div><div class="video-upload-play"></div></div><form class="video-upload-form" ng-show="card.upload"><label><input type="text" name="" placeholder="Type a title for the video" ng-model="card.title"></label><label><input type="text" name="" placeholder="Add a description" ng-model="card.description"></label></form></div></div>'), e.put('public/modules/core/templates/card-feed.template.html', '<article class="grid-item card feed" style="display: none"><div style="padding: 0 20px" class="w-tile w-tile--{{vm.tileType || card.normalized.objectType || card.normalized.provider}}"><header class="tile-heading"><i ng-if="card.normalized.provider !== \'holonis\'" class="network-icon hicon-{{card.normalized.provider}}"></i> <a style="color: inherit;float: left;padding-right: 8px;overflow: hidden; width: 90%" ng-click="openProfile($event)" ng-if="!card.story"><!-- ui-sref="holospace.home({holospaceName: card.normalized.user.vanityUrl})" --> <span class="heading-img"><img ng-src="{{card.normalized.user.photo || $root.cdnBaseUrl + \'/images/default-user.png?1\' | processImageURL : getUniqueSelector() : true}}" data-uid alt=""></span><div class="title"><span>{{card.normalized.user.name}}</span></div><div class="date-time"><span class="text-capitalize" ng-if="card.normalized.objectType">{{card.normalized.objectType}} </span><span class="text-capitalize" ng-if="card.normalized.provider !== \'holonis\'">{{card.normalized.provider}}</span> <span ng-if="card.normalized.created || card.created">- {{ card.normalized.created || card.created | amTimeAgo }}</span></div></a><div style="color: inherit;float: left;padding-right: 8px;overflow: hidden; width: 90%" ng-if="card.story"><span class="heading-img"><a ng-click="openTaggedProfile($event,0)"><img ng-src="{{card.normalized.user.photo || $root.cdnBaseUrl + \'/images/default-user.png?1\'}}" data-uid alt=""></a></span><div class="title"><p ng-if="card.story" style="margin: 0"><span ng-bind-html="story | sanitize" class="story-link"></span></p></div><div class="date-time"><span class="text-capitalize" ng-if="card.normalized.objectType">{{card.normalized.objectType}} </span><span class="text-capitalize" ng-if="card.normalized.provider !== \'holonis\'">{{card.normalized.provider}}</span> <span ng-if="card.normalized.created || card.created">- {{ card.normalized.created || card.created | amTimeAgo }}</span></div></div></header><div class="trigger-modal" data-open-modal="modal-feeds" ng-click="openLink($event)" ng-attr-prevent-modal="{{!!card.normalized.embed}}" ng-class="{ \'card-content\': card.normalized.provider !== \'holonis\', \'tile-content\': card.normalized.provider === \'holonis\' }"><p class="blurb" ng-if="card.message">{{card.message}}</p><div ng-if="card.normalized.picture" class="card-picture tile-item-header card-picture--{{card.normalized.objectType || card.normalized.provider}}" ng-class="{ loadingImages: !imageLoaded }"><figure ng-if="card.normalized.pictureRatio" class="has-picture-ratio" ng-class="{ videoBtn: card.type === \'video\' }" style="background-image: url(\'{{card.normalized.picture | processImageURL : cardWidth}}\');\n              padding-bottom: {{100 / card.normalized.pictureRatio}}%"><img class="hidden" ng-src="{{card.normalized.picture | processImageURL : cardWidth}}" ng-load="onImageLoaded()"></figure><figure ng-if="!card.normalized.pictureRatio" class="has-picture-ratio" ng-class="{ videoBtn: card.type === \'video\' }" style="background-image: url(\'{{card.normalized.picture | processImageURL : cardWidth*2}}\');\n              padding-bottom: 50%;\n              background-position: center center"><img class="hidden" ng-src="{{card.normalized.picture | processImageURL : cardWidth}}" ng-load="onImageLoaded()"></figure></div><div class="tile-content--feed"><h3 class="title no-bold" ng-if="card.normalized.name">{{card.normalized.name}}</h3><p class="blurb" ng-if="card.normalized.description">{{card.normalized.description}}</p><div ng-if="card.normalized.objectType && card.normalized.value" class="object-type object-type--{{card.normalized.objectType}} btn-price btn-hollow-primary"><div ng-if="card.normalized.value" class="value">{{card.normalized.value}}</div></div></div><div class="channel-pages-gallery swiper-container clearfix" ng-if="card.target_object.page"><div class="swiper-wrapper"><div class="swiper-slide" ng-repeat="page in card.target_object.page | limitTo:4"><figure class="cropped-cover-figure" style="background-image: url(\'{{page.headerMediaUrl | processImageURL : getUniqueSelector() }}\')" data-uid></figure><div class="channel-page-info"><div class="title text-single-line-ellipsis">{{page.name}}</div></div><div ng-if="$index === 3 && card.target_object.page.length > 4" class="channel-has-more-pages"><div class="more-pages-text">+{{card.target_object.page.length - 4}} More</div></div></div></div><div class="swiper-pagination"></div></div><content-viewer content="card.target_object.contents[0]" modal-data="card" ng-if="card.normalized.objectType === \'post\' && card.target_object.contents.length > 0"></content-viewer><!-- <div class="socialnetworks-infos">\n            <div ng-if="card.normalized.provider === \'facebook\'">\n              <span class="info-item info-comments">\n                <i class="hicon-comments"></i>\n                <span>{{card.comment_count || 0}}</span>\n              </span>\n              <span class="info-item info-likes">\n                <i class="hicon-likes"></i>\n                <span>{{card.likes_count || 0}}</span>\n              </span>\n            </div>\n            <div ng-if="card.normalized.provider === \'twitter\'">\n              <span class="info-item info-retweets">\n                <i class="hicon-retweet"></i>\n                <span>{{card.retweet_count || 0}}</span>\n              </span>\n              <span class="info-item info-hearts">\n                <i class="hicon-heart"></i>\n                <span>{{card.favorite_count || 0}}</span>\n              </span>\n            </div>\n            <div ng-if="card.normalized.provider === \'instagram\' || card.normalized.provider === \'holonis\'">\n              <span class="info-item info-comments">\n                <i class="hicon-comments"></i>\n                <span>{{card.comments || 0}}</span>\n              </span>\n              <span class="info-item info-hearts">\n                <i class="hicon-heart"></i>\n                <span>{{card.hearts || 0}}</span>\n              </span>\n            </div>\n          </div> --></div><!-- <footer class="trigger-modal" data-open-modal="modal-card" ng-click="openLink($event)">\n          <div class="general-infos">\n            <span>{{card.views}} <small>views</small></span>\n            <span>{{card.shares}} <small>shares</small></span>\n            <span>{{card.comments}} <small>comments</small></span>\n          </div>\n        </footer> --></div></article>'), e.put('public/modules/core/templates/card-preloader.template.html', '<article class="grid-item card card-preloader" style="display: none"><div class="card-wrapper"><header class="tile-heading"><div class="pr-sqa pr-bg"></div><div class="pr-row-left"><div class="pr-bg pr-row pr-row-40"></div><div class="pr-bg pr-row pr-row-30 pr-row-small"></div><div></div></div></header><div class="card-content"><div class="pr-bg pr-row pr-row-80"></div><div class="pr-bg pr-row pr-row-100"></div><div class="pr-bg pr-row pr-row-40"></div></div></div></article>'), e.put('public/modules/core/templates/card.template.html', '<div ng-switch="card.type"><div ng-switch-when="feed" card-feed></div><div ng-switch-when="embedded-page" card-embedded-page></div><div ng-switch-when="embedded-product" card-embedded-product></div><div ng-switch-when="embedded-post" card-embedded-post></div><div ng-switch-when="embedded-video" card-embedded-video></div><tile ng-switch-default class="tile grid-item" ng-class="{ selectable: deck.selectCard, selected: deck.isCardSelected(card) }" data="card" ng-click="deck.selectCard(card)" clickable="!deck.selectCard" current-space="vm.currentSpace" user-id="vm.userId" trigger-reflow="vm.initIsotope" on-img-load="vm.onImgLoad" style="display: none"></tile><!-- <div ng-switch-default>Invalid card <code>type</code>: {{card.type}}</div> --></div>'), e.put('public/modules/core/templates/channels-actions.template.html', '<div class="add-content-wrapper"><div class="add" ng-click="vm.openPagesModal(vm.contentData.space.id)"><span class="icn icn-add-content"></span></div></div>'), e.put('public/modules/core/templates/confirmation-cancel-holospace.template.html', '<div class="modal-body"><h3>What would you like to do?</h3><div><input type="button" value="Save" class="btn btn-hollow-primary" ng-click="vm.save()"></div><div><input type="button" value="Discard changes" class="btn btn-hollow-secondary" ng-click="vm.discardChanges()"></div><div class="keep-working"><a ng-click="vm.keepWorking()">Keep Working</a></div></div>'), e.put('public/modules/core/templates/confirmation-delete.template.html', '<div class="modal-body" ng-class="{ \'modal-padding-bottom\': vm.hideDoNotShowCheckbox }"><h3>Do you want to delete this {{vm.thisBlock || "block"}}?</h3><div><input type="button" value="Yes" class="btn btn-hollow-primary" ng-click="vm.confirmDelete()"></div><div><input type="button" value="No" class="btn btn-hollow-secondary" ng-click="vm.cancel()"></div><div class="do-not-show" ng-if="!vm.hideDoNotShowCheckbox"><input type="checkbox" ng-model="vm.isHideConfirmDelete"> Don\'t show this message again.</div></div>'), e.put('public/modules/core/templates/confirmation.template.html', '<div class="modal-body"><h3>{{vm.confirmationHeader}}</h3><div><input type="button" value="{{vm.affirmativeText}}" class="btn btn-hollow-primary" ng-click="vm.affirmative()"></div><div><input type="button" value="{{vm.negativeText}}" class="btn btn-hollow-secondary" ng-click="vm.negative()"></div></div>'), e.put('public/modules/core/templates/content-creation-intro.template.html', '<div class="content-creation-page-intro"><div class="page-title-wrapper clearfix"><!-- <textarea ng-auto-update="vm.saveTitle"\n                  name="contentName"\n                  ng-model="vm.contentData[vm.contentType].name"\n                  class="page-title" ng-data="vm.contentData" ng-wait="vm.autoSaveWait"\n                  placeholder="{{vm.placeholderName}}"\n                  autosave\n                  ng-focus="contentNameFocus=true" ng-blur="contentNameFocus=false" required>\n        </textarea> --> <input ng-auto-update="vm.saveTitle" name="contentName" ng-model="vm.contentData[vm.contentType].name" class="page-title" ng-data="vm.contentData" ng-wait="vm.autoSaveWait" placeholder="{{vm.placeholderName}}" autosave ng-autosave-disabled="vm.contentData.disableAutoSave" ng-focus="contentNameFocus=true" ng-blur="contentNameFocus=false" required><span class="page-title-error" ng-show="vm.form.contentName.$invalid && !contentNameFocus">required</span></div><div class="page-content-info-wrapper clearfix"><textarea ng-auto-update="vm.saveDescription" name="contentDescription" ng-model="vm.contentData[vm.contentType].description" class="page-content-info" ng-data="vm.contentData" ng-wait="vm.autoSaveWait" ng-class="{empty: !vm.contentData[vm.contentType].description.length}" placeholder="{{vm.placeholderDescription}}" autosave ng-autosave-disabled="vm.contentData.disableAutoSave" msd-elastic ng-focus="contentDescriptionFocus=true" ng-blur="contentDescriptionFocus=false" required>\n        </textarea><span class="page-content-info-error" ng-show="vm.form.contentDescription.$invalid && !contentDescriptionFocus">required</span></div></div>'), e.put('public/modules/core/templates/content-creator-actions.template.html', '<div class="add-content-wrapper"><div ng-if="vm.template == \'channel\'" tooltip-placement="top" tooltip-is-open="vm.disableButton" tooltip-trigger="none" uib-tooltip-html="\'Channels are where you save your pages or items. <br> You can make channels for anything and everything. <br> Browse your content here, but create something first.\' | sanitize" tooltip-class="tooltip-disableButton"><button class="add" ng-click="vm.openEmbedModal()" ng-disabled="vm.disableButton"><span class="icn icn-add-content"></span></button></div><div ng-if="vm.template !== \'channel\'"><div class="text" ng-class="{\'active\': thisScope.activeButtonSet, \'selectedPosition\': vm.activeButton == \'text\' }" ng-if="vm.template !== \'post\' && (vm.activeButton == null || vm.activeButton == \'text\')" ng-click="vm.position = position; vm.activeButton == \'text\' || vm.addText();  vm.setActiveButton(\'text\'); (position === undefined) && vm.goToBottom();"><div class="ds-add-content-button ds-add-content-button-text"><i class="dsicon dsicon-text-ico"></i></div></div><div class="attach" ng-class="{\'active\': thisScope.activeButtonSet, \'selectedPosition\': vm.activeButton == \'file\', \'media-pick-disable\' : $root.pickMediaFile }" ng-if="vm.activeButton == null || vm.activeButton == \'file\'" ng-click="vm.position = position; vm.activeButton == \'file\' || vm.pickFile(vm.spaceId, vm.pageId); (position === undefined) && vm.goToBottom();"><div class="ds-add-content-button ds-add-content-button-image"><i class="dsicon dsicon-image-ico"></i></div></div><div class="video" ng-class="{\'active\': thisScope.activeButtonSet, \'selectedPosition\': vm.activeButton == \'video\'}" ng-if="vm.activeButton == null || vm.activeButton == \'video\'"><div class="ds-add-content-button ds-add-content-button-video"><label class="dsicon-video-ico" ng-class="{\'active\': vm.activeButton == \'video\'}" for="filepicker"></label><ds-video-uploader position="position" class="upload-video" parent="vm" content-id="vm.pageId" content-type="vm.template || \'page\'"></ds-video-uploader></div></div><div class="embed" ng-class="{\'active\': thisScope.activeButtonSet, \'selectedPosition\': vm.activeButton == \'embed\'}" ng-if="vm.activeButton == null || vm.activeButton == \'embed\'" ng-click="vm.position = position; vm.activeButton == \'file\' || vm.openEmbedModal();"><div class="ds-add-content-button ds-add-content-button-embed"><i class="dsicon dsicon-embed-ico"></i></div></div><div class="add" ng-class="{\'active\': thisScope.activeButtonSet }" ng-if="vm.activeButton == null" ng-click="thisScope.activeButtonSet = !thisScope.activeButtonSet;"><div class="ds-add-content-button"><i class="dsicon dsicon-plus-sign-active"></i></div></div></div></div>'), e.put('public/modules/core/templates/content-creator.template.html', '<div ng-model="vm.contentBlocks" id="contentBlocks" ng-class="{\'unselected\':!vm.activeContentBlock}" ng-if="vm.template !== \'channel\'"><div class="content-block-default" ng-repeat="contentBlock in vm.contentBlocks" class="add-content" data-id="{{contentBlock.id}}"><div class="align-center" ng-if="!vm.single"><div class="grip sortable-item-handle"><span class="icn icn-grip"></span></div><content-creation-actions position="{{ vm.addOpened }}" class="content-creation-actions" type="page" ng-if="!vm.activeContentBlock && (!vm.single || !vm.contentBlocks.length)" position="{{$index}}"></content-creation-actions></div><div><div class="content-block-editor content-block-editor--ui" ng-class="{ active: contentBlock === vm.activeContentBlock }"><content-creation-actions position="{{ vm.addOpened }}" ng-if="!vm.single && contentBlock === vm.activeContentBlock"></content-creation-actions><div class="text-area-wrapper" ng-if="!vm.single && !vm.hasEmbed(contentBlock)" ui-event="{ click: \'vm.selectContentBlock(contentBlock, $event)\' }"><!--content block description--><div ng-model="contentBlock.content" data-placeholder="Start writing something here and select text to edit..." name="contentBlockContent{{$index}}" ng-init="vm.initContentBlock(contentBlock)" ng-change="vm.mediumChange(contentBlock)" ng-focus="contentBlockContentFocus=true" ng-blur="contentBlockContentFocus=false" medium-editor bind-options="vm.mediumOptions" class="text-area" required></div><span class="required-content-creation-error" ng-show="vm.form[\'contentBlockContent{{$index}}\'].$invalid && !contentBlockContentFocus">required</span></div><div class="text-area-wrapper-embed" ng-if="vm.hasEmbed(contentBlock)" ng-class="{ \'text-area-embed-tile\' : contentBlock.tile.type === \'product\' || contentBlock.tile.type === \'embedded-page\' }"><!--content block media/embed description--><div class="text-area"><div ng-show="contentBlock.isLoading" class="media-placeholder"><span class="media-placeholder-text">Your {{contentBlock.mediaType}} is being processed</span></div><content-viewer ng-if="!contentBlock.isLoading" editor="true" content="contentBlock" disable-actions="true"></content-viewer><span class="btn-remove-content" ng-show="!vm.disableDeleteContent" ng-click="vm.delete($index, $event, contentBlock.id);"><svg-icon icon="close"></svg-icon></span><span class="content-block-border" ng-class="{ active: contentBlock === vm.activeContentBlock }"></span></div><textarea ng-model="contentBlock.caption" ng-if="!vm.single && contentBlock.tile.type !== \'video\'" ng-auto-update="vm.saveMedia" ng-data="contentBlock" ng-wait="vm.autoSaveWait" autosave placeholder="Write a caption\u2026"></textarea></div><div class="row-tool" ng-show="(vm.single || contentBlock === vm.activeContentBlock) && !vm.hasEmbed(contentBlock)"><div><input ng-if="!vm.single" type="button" value="Delete" ng-click="vm.delete($index, $event, contentBlock.id);" class="btn btn-hollow-secondary"> <input ng-if="!vm.single" type="button" value="Save" ng-click="vm.save($event,contentBlock)" class="btn btn-hollow-primary" ng-disabled="vm.form[\'contentBlockContent{{$index}}\'].$invalid"></div></div></div></div></div></div><content-creation-actions position="{{ vm.addOpened }}" type="page" ng-if="vm.template === \'channel\' || (!vm.activeContentBlock && (!vm.single || !vm.contentBlocks.length))"></content-creation-actions>'), e.put('public/modules/core/templates/content-viewer.template.html', '<div class="content-viewer" ng-switch="content.type"><figure ng-switch-when="image" class="has-picture-ratio" style="background-image: url(\'{{content.cover.url | processImageURL : Math.min(content.cover.width, 700) }}\');\n        padding-bottom: {{100 / 1}}%; margin-bottom: 20px; background-size: cover"><img class="hidden" ng-src="{{content.source | processImageURL : 700 }}" ng-load="onImageLoaded()"> <img id="show-in-page-details" ng-src="{{content.source | processImageURL : 700 }}" ng-load="onImageLoaded()" overlay-image="{{content.source | processImageURL : getUniqueSelector() }}"></figure><div ng-switch-when="media"><!-- <img ng-if="content.mediaType === \'image\'" class="js__wait-for-img-dimensions" ng-src="{{content.source | processImageURL : getUniqueSelector() }}" data-uid style="cursor: pointer;"> --><figure ng-if="content.mediaType === \'image\'" class="has-picture-ratio" style="background-image: url(\'{{content.source | processImageURL : 700 }}\');\n              padding-bottom: {{100 / 1}}%; margin-bottom: 20px; background-size: cover"><img class="hidden" ng-src="{{content.source | processImageURL : 700 }}" ng-load="onImageLoaded()"> <img id="show-in-page-details" ng-src="{{content.source | processImageURL : 700 }}" ng-load="onImageLoaded()" overlay-image="{{content.source | processImageURL : getUniqueSelector() }}"></figure><div ng-if="content.mediaType === \'video\'"><figure ng-if="modal" class="videoBtn cropped-cover-figure cropped-cover-figure-embed relative cursor-pointer" data-open-modal="modal-content" style="background-image: url(\'{{content.thumbnail | processImageURL : getUniqueSelector() }}\')" data-uid><!--  ng-class="{ loadingImages: !imageLoaded }" --><!-- <img class="js__wait-for-img-dimensions" ng-src="{{content.thumbnail | processImageURL : getUniqueSelector() }}" data-uid> --><!--  ng-load="onImageLoaded()" --></figure><videogular ng-if="!modal" vg-auto-play="videogular.autoPlay"><vg-media vg-src="content.source" vg-dash vg-native-controls="false"></vg-media><vg-overlay-play></vg-overlay-play><vg-controls vg-autohide="true" vg-autohide-time="1000"><vg-play-pause-button></vg-play-pause-button><vg-time-display>{{ currentTime | date:\'mm:ss\':\'+0000\' }}</vg-time-display><vg-scrub-bar><vg-scrub-bar-current-time></vg-scrub-bar-current-time></vg-scrub-bar><vg-time-display>{{ timeLeft | date:\'mm:ss\':\'+0000\' }}</vg-time-display><vg-volume><vg-mute-button></vg-mute-button><vg-volume-bar></vg-volume-bar></vg-volume><vg-fullscreen-button></vg-fullscreen-button></vg-controls><div class="vg-media-text" ng-show="true">{{content.title}}</div></videogular></div><audio ng-if="content.mediaType === \'audio\'" ng-src="{{content.source | trusted}}" controls></audio></div><div ng-switch-when="embedly"><figure ng-if="modal" ng-class="{ videoBtn: content.mediaType === \'video\' }" class="cropped-cover-figure cropped-cover-figure-embed relative cursor-pointer" data-open-modal="modal-content" style="background-image: url(\'{{content.thumbnail | processImageURL : getUniqueSelector() }}\')" data-uid><!--  ng-class="{ loadingImages: !imageLoaded }" --><!-- <img class="js__wait-for-img-dimensions" ng-src="{{content.thumbnail | processImageURL : getUniqueSelector() }}" data-uid> --><!--  ng-load="onImageLoaded()" --></figure><div ng-if="!modal" class="modal-feeds-content-embed"><!-- <em-embed urlsearch="{{content.source}}"></em-embed> --><embedly-card url="content.source"></embedly-card></div><!-- <div class="title embed-caption" ng-if="content.caption">{{content.caption}}</div> --></div><div ng-switch-when="embed"><ds-embed ng-if="content.tile && content.tile.type.indexOf(\'embedded-\') == -1" editor="editor" data="content.tile" file="content.file" ctx="content.ctx" uploading="content.uploading" no-interaction="false" hide-video-modal="true" hide-video="true"></ds-embed><async-card ng-if="content.tile && content.tile.type == \'embedded-page\'"></async-card><async-card ng-if="content.tile && content.tile.type == \'embedded-product\'"></async-card></div><div ng-switch-default ng-bind-html="(content.body.content || content.content) | sanitize" class="content-block-text" format-links></div></div>'), e.put('public/modules/core/templates/cover-image-edit.template.html', '<div class="content-creation-cover-image" ng-style="{ \'background-image\' : \'url(\'+ (vm.contentData[vm.contentType].headerMediaUrl | processImageURL : getUniqueSelector()) +\')\' }"><button type="button" value="change Image" ng-click="vm.pickHeader();" class="btn edit-cover-image"></button><header ng-if="vm.header"><div class="use-img" ng-click="vm.pickHeader();"><img ng-src="{{$root.cdnBaseUrl}}/images/intro/camera-icon.png" alt=""><p><span>Use an Image</span> 2200 x 1500 or greater for best results</p></div><div class="use-video" ng-click="vm.pickHeader();"><img ng-src="{{$root.cdnBaseUrl}}/images/intro/video-icon.png" alt=""><p><span>Use a Video</span> Upload or embed an existing video</p></div></header></div>'), e.put('public/modules/core/templates/delete-account-modal.template.html', '<div class="modal-body"><svg-icon icon="close" class="modal-icon" ng-click="cancel()"></svg-icon><h2>Delete Account</h2><p>To delete your account please contact customer support</p><div class="btn-group"><input type="button" value="Cancel" class="btn btn-hollow-secondary" ng-click="cancel()"> <input type="button" value="Contact Support" class="btn btn-hollow-primary" ng-click="confirm()"></div></div>'), e.put('public/modules/core/templates/desktop-navigation.template.html', '<nav class="main-navigation desktop-only" ng-class="{\'border-bottom\' : isLoggedOut()}" fast-click><div class="bg-container" ng-class="{\'no-shadow\' : isLoggedOut()}"><a ui-sref="{{ isLoggedOut() ? \'homescreen({ redirectToHolospace: false })\' : \'feeds\' }}" ui-sref-active="active" ui-sref-opts="{reload: true}" ng-click="vm.closeSearchMobile($event)"><img class="holonis-logo" ng-src="{{$root.cdnBaseUrl}}/images/svg/logo-holonis-h.svg" alt="holonis-logo"> </a><!-- SEARCH INPUT --><div class="menu-item search" id="intro-search"><a id="itemSearch" class="item search" ng-click="vm.toggleSearchMobile($event)"></a><form class="showSearchDesktop" ng-show="showSearchMobile"><span class="algolia-autocomplete"><input type="text" class="nav-search" data-highlightclass="search-highlight" placeholder="Search for topics, categories, items for sale..." ng-focus="vm.focusSearch()" ng-blur="vm.blurSearch()" ng-keypress="vm.searchEnter($event);" ng-model="vm.searchString" aa-datasets="vm.updateAutocomplete()" autocomplete></span><div class="overlay-search"></div><trending-search></trending-search><svg-icon icon="explore-icon" class="explore-icon nav-icon"></svg-icon></form></div><!-- FEEDS --> <a ui-sref="feeds" ui-sref-active="active-icon" ng-if="!isLoggedOut() && !vm.hideNavbar" class="feeds-icon-wrapper" ng-click="vm.closeSearchMobile($event)"><svg-icon icon="feeds-icon" id="intro-feeds" class="feeds-icon nav-icon"></svg-icon></a></div><div class="btn-nav-center" ng-if="!isLoggedOut()"><div class="nav-center"></div><!-- CREATE --> <a id="intro-create" ui-sref="create" ng-show="!vm.hideNavbar"><svg-icon icon="round-plus" class="plus nav-icon"></svg-icon></a></div><div class="logged-out-container" ng-if="isLoggedOut()"></div><div class="bg-container" ng-class="{\'no-shadow\' : isLoggedOut()}"><!-- Shop --> <a class="shop-icon" ui-sref-active="active-icon" ng-if="!isLoggedOut()" ui-sref="search({ tab: \'item\' })"><svg-icon id="intro-shop" icon="shop-icon" class="nav-icon"></svg-icon></a><!-- ALERT --><div class="menu-item-notifications" ng-if="!isLoggedOut()"><span class="has-unseen-notifications" ng-if="unseenNotifications"></span> <a ui-sref-active="active" class="item notifications ds-nav-option" ng-class="{ \'notification-active\' : vm.dropNotification, active: $state.current.name === \'notifications\' }" ng-click="vm.toggleDropNotification(); vm.closeSearchMobile($event);"><svg-icon icon="alert-icon" id="intro-notifications"></svg-icon></a><!-- Notification container --><div class="drop-notifications notifications"><div ng-include="\'public/modules/core/views/header-notifications.view.html\'"></div></div><div class="drop-notifications-overlay close-notification"></div></div><!-- MESSAGE --> <a ui-sref="messages({holospaceName: vm.primarySpace.vanityUrl})" class="message-icon-wrapper" ui-sref-active="active-icon"><svg-icon ng-if="!isLoggedOut()" id="intro-message" class="message-icon nav-icon" icon="message-icon"></svg-icon></a><!-- MENU --> <a uib-dropdown auto-close="outsideClick" ng-if="!isLoggedOut()" class="menu-icon-wrapper" is-open="vm.isNavMenuOpen" on-toggle="toggleSideMenu(open)"><svg-icon icon="menu-icon" class="menu-icon nav-icon" uib-dropdown-toggle id="intro-menu"></svg-icon><div uib-dropdown-menu template-url="public/modules/core/templates/nav-dropdown.template.html" aria-labelledby="button-template-url"></div></a><div class="access-loggedOut" ng-if="isLoggedOut()"><a class="ds-button-rounded" ng-click="vm.showLogin()">Sign up / Sign in</a></div></div></nav>'), e.put('public/modules/core/templates/embed-modal.template.html', '<div class="holo-modal-full modal-embed modal-embed-template-{{vm.template}}"><div class="modal-header"><a class="modal-cancel" href="" ng-click="vm.cancel()">Cancel</a> <a class="modal-done" href="" ng-click="vm.done()" ng-disabled="vm.addButtonDisabled">Add</a> <span class="title">Embed</span></div><div id="embedBlock" class="modal-body"><!-- <div class="wrap-input" ng-if="vm.template !== \'channel\'">\n            <div class="form-top-title">From the Web</div>\n            <input class="form-input-nb" ng-model="vm.embedUrl" ng-change="vm.embedUrlChange()"\n             placeholder="Paste a URL or embed code here" />\n        </div>\n        <div class="separator" ng-if="vm.template !== \'channel\'">\n            <span>or</span>\n        </div>    --><div id="pageBlock" class="modal-body"><tabs class="tabs-embed tabs-component tabs-content-creation" space-id="vm.spaceId" array="vm.tabs" on-tab-change="vm.onTabChange" drop-settings-fn="vm.dropSettingsFn" dont-toggle-modal-class="true"></tabs></div></div></div>'), e.put('public/modules/core/templates/feedmodal.view.html', '<div class="feed-modal-general-header"><a class="feed-modal-close-button" ng-click="closeModal()"><svg-icon icon="close"></svg-icon></a></div><div class="feed-modal-dialog"><div class="feed-modal-header tile-heading clearfix"><div class="feed-modal-header-photo"><div class="heading-img"><img ng-src="{{(card.header.author.avatar || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid alt=""></div></div><div class="feed-modal-header-content"><h1>{{card.header.author.name}}</h1><small>{{card.provider}} - {{card.header.author.name}} shared a link {{ card.created | amTimeAgo }}</small></div></div><div class="feed-modal-header-content-description"><p ng-bind-html="message | generateLinks:filterParam"></p></div><div class="feed-modal-media" ng-class="{ \'facebookModal\' : card.content.facebookModal, \'loaded\' : loaded, \'responsive\' : card.content.type == \'image\' || (card.content.type == \'text\' && card.content.source), \'isVideo\' : card.content.isVideo }" ng-if="card.content.source"><div class="loaderInline" ng-if="!card.content.facebookModal" ng-class="{ \'loaded\' : loaded }"></div><div class="media-content" ng-if="card.content.type == \'image\' || (card.content.type == \'text\' && card.content.source)"><img ng-src="{{card.content.source | processImageURL : false }}" data-uid alt="" ng-load="loading()"></div><div ng-if="card.content.type == \'video\' && !card.hasIframe"><div ng-if="card.content.provider == \'youtube\'"><iframe class="modal-youtube-player" type="text/html" ng-src="{{ card.content.secureSource }}" frameborder="0" allowfullscreen width="100%" height="{{ card.content.height }}px"></iframe></div><div ng-if="card.content.provider != \'youtube\'"><videogular vg-auto-play="videogular.autoPlay"><vg-media vg-src="card.content.source" vg-native-controls="false"></vg-media><vg-overlay-play></vg-overlay-play><vg-controls vg-autohide="true" vg-autohide-time="1000"><vg-play-pause-button></vg-play-pause-button><vg-time-display>{{ currentTime | date:\'mm:ss\':\'+0000\' }}</vg-time-display><vg-scrub-bar><vg-scrub-bar-current-time></vg-scrub-bar-current-time></vg-scrub-bar><vg-time-display>{{ timeLeft | date:\'mm:ss\':\'+0000\' }}</vg-time-display><vg-volume><vg-mute-button></vg-mute-button><vg-volume-bar></vg-volume-bar></vg-volume><vg-fullscreen-button></vg-fullscreen-button></vg-controls><div class="vg-media-text" ng-show="true">{{card.content.embedded[0].title}}</div></videogular></div></div><style class="embedly-css">.hdr {\n            display:none;\n          }</style><style type="text/css">.feed-modal-media { height: {{card.content.height}}px  }\n\t\t\t.feed-modal-rich-media iframe {height:{{ card.content.height }}px; margin: auto}\n            .feed-modal-media.responsive{ height: auto;}\n            .feed-modal-media.responsive .media-content:before{content: ""; display: block; padding-bottom: calc({{card.content.height}}/600 * 100% ); }</style><div ng-if="card.hasIframe" class="feed-modal-rich-media"><div ng-bind-html="card.iframe | sanitize" class="feed-modal-rich-media-wrapper"></div></div><div ng-if="card.content.facebookModal" class="feed-modal-rich-media"><!-- facebook image embed --><div class="loaderInline" ng-hide="loaded"></div><embedly-card url="card.content.source"></embedly-card></div></div><!--\n\t<div class="feed-modal-media" ng-show="card.hasEmbedPost">\n\t\t<div class="feed-modal-tile-embbed">\n\t\t\t<div class="tile-embbed-header">\n\t\t\t\t<img ng-src="{{tileCover}}" alt="">\n\t\t\t</div>\n\t\t\t<div class="tile-embbed-content">\n\t\t\t\t<h1>{{tileTitle}}</h1>\n\t\t\t\t<p>{{tileSubtitle}}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="feed-modal-footer">\n\t\t\t<a ng-href="{{tileUrl}}" class="button-provider">View content</a>\n\t\t</div>\n\t</div>\n\t--><div class="feed-modal-footer" ng-if="provider !== \'Holonis\'"><a href="{{card.content.embedded[0].source}}" class="button-provider" target="_blank">View on {{provider}}</a></div></div>'), e.put('public/modules/core/templates/field.template.html', '<div class="field"><input type="text" class="field-input" ng-model="model" ng-required="{{!!pattern}}"><label class="field-label">{{label}}</label><ng-transclude></ng-transclude><svg class="icon icon-rounded icon-success valid"><use xlink:href="#check"></use></svg> <svg class="icon icon-rounded icon-error invalid"><use xlink:href="#error"></use></svg></div>'), e.put('public/modules/core/templates/holonis-loader.template.html', '<div class="holonis-loader"><img class="icon-preloader" ng-src="{{$root.cdnBaseUrl}}/images/sprite/logo-holonis-loader.svg"></div>'), e.put('public/modules/core/templates/holospace-search.template.html', '<label for="" class="holospace-search-field"><svg-icon icon="magnifier" class="holospace-search-field-icon"></svg-icon><input type="search" class="holospace-search-field-input" ng-model="value" placeholder="{{placeholder}}"></label><ng-transclude></ng-transclude>'), e.put('public/modules/core/templates/items.template.html', '<section class="tab-embed-wrap"><tile-group type="items" perpage="15" class="" space-id="$parent.$parent.vm.spaceId" vanity="$parent.$parent.vm.vanity" selectable="{{ $parent.$parent.vm.selectableType }}" selectable-data="$parent.$parent.vm.selectedCards" container=\'"#pageBlock"\' is-loading="true" no-engagement="true"></tile-group></section>'), e.put('public/modules/core/templates/landingpage-header.template.html', '<!-- New Layout --><div class="new-holospace-header"><!-- ng-class="{ \'pad-no-bottom\': hideCover }" [[mobile-window-effect]] --><header class="new-holospace-action-bar mobile" ng-class="{\'header-cover-none\' : !data.cover, \'no-top\' : !isLoggedOut() && data.cover}" sticky sticky-always="{{ headerAlwaysFixed ? \'true\' : \'\' }}" sticky-offset-top="{{landingpageHeaderInfo.headerOffsetTop}}" ng-if="!hideUser"><div class="container" style="max-width: 730px"><div class="new-holospace-profile pull-left" itemprop="publisher" itemscope itemtype="http://schema.org/person"><!--user and follow--> <img itemprop="image" class="new-holospace-profile-photo" data-uid ng-src="{{ (landingpageHeaderInfo.holospaceDetails.photo | processImage : 50 : true) || ($root.cdnBaseUrl + \'/images/default-user.png?1\') }}" alt="{{landingpageHeaderInfo.holospaceDetails.name}}" ui-sref="holospace.home({holospaceName: landingpageHeaderInfo.holospaceDetails.vanityUrl})"> <a class="new-holospace-profile-name" ui-sref="holospace.home({holospaceName: landingpageHeaderInfo.holospaceDetails.vanityUrl})"><ds-space-name space="landingpageHeaderInfo.holospaceDetails"></ds-space-name></a></div><div class="new-holospace-actions"><a ng-if="landingpageHeaderInfo.holospaceDetails.isMySpace" class="landing-page-edit-option" ng-click="landingpageHeaderInfo.goToEditPage()">Edit</a><ds-karot data="data" type="data.type" ng-if="!selectable" ng-class="{\'karot-cover-none\' : data.cover }"></ds-karot></div></div></header></div>'), e.put('public/modules/core/templates/make-offer-banner.template.html', '<div ng-class="{\n  \'make-offer-banner-small\' : size === \'small\',\n  \'make-offer-banner\' : size === \'normal\',\n}"><p>{{ title ? title : \'Make me an offer\' }}</p><img class="ribbon-offer" ng-src="{{$root.cdnBaseUrl}}/images/sprite/badge-offer.svg" alt="badge-offer"></div>'), e.put('public/modules/core/templates/meta.template.html', '<!-- General META --><update-meta charset="utf-8"></update-meta><update-meta http-equiv="Content-type" content="text/html;charset=UTF-8"></update-meta><update-meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"></update-meta><update-meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"></update-meta><update-meta name="apple-mobile-web-app-capable" content="yes"></update-meta><update-meta name="apple-mobile-web-app-status-bar-style" content="black"></update-meta><!-- Semantic META --><update-meta name="keywords" content="{{meta_keywords}}"></update-meta><update-meta name="description" content="{{meta_description}}"></update-meta><!-- Facebook META --><update-meta property="fb:app_id" content="{{meta_fb_app_id}}"></update-meta><update-meta property="og:site_name" content="{{meta_og_site_name}}"></update-meta><update-meta property="og:title" content="{{meta_og_title}}"></update-meta><update-meta property="og:description" content="{{meta_og_description}}"></update-meta><update-meta property="og:url" content="{{meta_og_url}}"></update-meta><update-meta property="og:image" content="{{meta_og_image}}"></update-meta><update-meta property="og:type" content="{{meta_og_type}}"></update-meta><!-- Twitter META --><update-meta name="twitter:title" content="{{meta_twitter_type}}"></update-meta><update-meta name="twitter:description" content="{{meta_twitter_description}}"></update-meta><update-meta name="twitter:url" content="{{meta_twitter_url}}"></update-meta><update-meta name="twitter:image" content="{{meta_twitter_image}}"></update-meta>'), e.put('public/modules/core/templates/mobile-navigation.template.html', '<nav class="main-navigation-mobile mobile-only" fast-click ng-hide="$root.$state.params.name || isMessageDetail" id="mainNavbarMobile"><div class="icons-container" ng-class="{\'logged-out-icons\' : isLoggedOut()}"><a ng-if="isLoggedOut()" class="alert-icon" ng-click="vm.loggedOutUserAction() "><svg-icon icon="feeds-icon" class="nav-icon"></svg-icon></a><a ui-sref="feeds" ui-sref-active="active-icon" ng-if="!isLoggedOut()" class="feeds-icon"><svg-icon icon="feeds-icon" class="nav-icon" id="intro-feeds-mobile"></svg-icon></a><a ui-sref="search({ tab: \'item\' })" ui-sref-active="active-icon" class="shop-icon"><svg-icon icon="shop-icon" class="nav-icon" id="intro-shop-mobile"></svg-icon></a></div><div class="icon-center" ng-if="!isLoggedOut()"><div class="nav-center"></div><a ui-sref="create" ng-show="!vm.hideNavbar" id="intro-create-mobile"><svg-icon icon="round-plus" class="nav-icon" class="plus"></svg-icon></a></div><div class="icons-container" class="explore-icon" ng-class="{\'logged-out-icons\' : isLoggedOut()}"><a ui-sref="search({ tab: \'all\' })" ui-sref-active="active-icon"><svg-icon icon="explore-icon" class="nav-icon" id="intro-search-mobile"></svg-icon></a><a ng-if="isLoggedOut()" class="alert-icon" ng-click="vm.loggedOutUserAction()"><svg-icon icon="alert-icon" class="nav-icon"></svg-icon></a><div class="menu-item-notifications" ng-if="!isLoggedOut()"><span class="has-unseen-notifications" ng-if="unseenNotifications"></span> <a ng-if="!isLoggedOut()" class="alert-icon" ng-class="{ \'notification-active\' : vm.dropNotification, active: $state.current.name === \'notifications\' }" ng-click="vm.mobileNotification();"><svg-icon icon="alert-icon" class="nav-icon" id="intro-notifications-mobile"></svg-icon></a></div></div></nav>'), e.put('public/modules/core/templates/nav-dropdown.template.html', '<div class="main-menu" id="main-menu"><ul class="first-section"><li class="current-holospace" id="intro-holospace"><a ui-sref="holospace.home({holospaceName: vm.primarySpace.vanityUrl})"><img alt="{{ primarySpace.name }}" class="avatar" ng-src="{{ (primarySpace.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid> <span>@{{vm.primarySpace.vanityUrl | cut : true : 21 : \'...\'}}</span></a><div class="holospace-share"><svg-icon icon="icon-share" ng-click="vm.shareThisHolospace()"></svg-icon></div></li><li class="secondary-holospace" ng-if="space.vanityUrl !== vm.primarySpace.vanityUrl" ng-controller="SelectSpaceController as vm" ng-repeat="space in vm.userSpaces | limitTo: 100" ng-click="vm.selectSpace(space)"><a ng-if="space.vanityUrl !== vm.primarySpace.vanityUrl"><img alt="{{ space.name }}" class="avatar" ng-src="{{ (space.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid> <span>@{{space.vanityUrl | cut : true : 21 : \'...\'}}</span></a></li><li id="intro-add-holospace" class="menu-item-avatar--in-mobile"><a ui-sref="new({holospaceName: primarySpace.vanityUrl})"><span class="plus u-margin-right-sm">+</span> Add a Holospace</a></li><li><a ng-click="vm.logout()"><img ng-src="{{$root.cdnBaseUrl}}/images/logout-icon.png" class="u-margin-right-sm" alt="logout"> Log out of @{{vm.primarySpace.vanityUrl}}</a></li></ul><ul class="second-section"><!-- Second section --><li id="intro-messages"><a ng-click="vm.submit(\'messages\')">Messages</a></li><li><a ng-click="vm.submit(\'ecommerce.buyers.orders\')">Buying</a></li><li><a ng-click="vm.submit(\'ecommerce.sellers.orders\')">Selling</a></li><li><a ng-click="vm.submit(\'saved\')">Saved</a></li><li><a ng-click="vm.submit(\'likes\')">Likes</a></li><li><a ui-sref="pixels">Pixels</a></li><li id="intro-insights"><a ui-sref="insights.publications">Insights</a></li><li><a ng-click="vm.submit(\'drafts\')">Drafts</a></li><li id="intro-apps"><a ng-click="vm.submit(\'apps\')">Apps</a></li><!-- ACCOUNT --><li class="main-menu__section"><span>Account</span></li><li><a ng-click="vm.editProfile()">Edit Profile</a></li><li><a ng-click="vm.submit(\'settings\')">Settings</a></li><li ng-controller="HolospaceHeaderController"><a ng-click="vm.openFollowModal(null)">Followers & Following</a></li><li id="intro-team"><a ng-click="vm.goTosettingsTab(\'Team\')">Team</a></li><li><a ng-click="vm.goTosettingsTab(\'Privacy\')">Privacy</a></li><li><a ui-sref="topics({ vanityUrl: primarySpace.vanityUrl })">My Topics</a></li><li><a ng-click="vm.deleteAccount()">Delete Account</a></li><!-- HELP & SUPPORT --><li class="main-menu__section"><span>Help & Support</span></li><li uib-accordion class="tutorial-guide"><span uib-accordion-group is-open="status.open"><span uib-accordion-heading><a class="title">Tutorials <span ng-class="{ hidden: !status.open }"><svg-icon class="chevron-icon" icon="chevron-down"></svg-icon></span><span ng-class="{ hidden: status.open }"><svg-icon class="chevron-icon" icon="chevron-right"></svg-icon></span></a></span><span class="options"><a ng-click="vm.showNavigationIntro()">Navigation</a> <a ng-click="vm.showCreateIntro()">Create</a> <a ng-click="vm.showEditHolospaceIntro()">Editing your Holospace</a> <a ng-click="vm.showMenuIntro()">Holospace options</a></span></span></li><li><a ng-click="vm.openLinkInNewWindow(\'https://support.holonis.com\')">Help Center</a></li><li><a ng-click="vm.chatWithUs();vm.closeMenu()">Chat with us</a></li><!-- LEGAL --><li class="main-menu__section"><span>Legal</span></li><li><a ng-click="vm.openLinkInNewWindow(\'https://www.holonis.com/holonis/p/content-guidelines\')">Content Guidelines</a></li><li><a ng-click="vm.openLinkInNewWindow(\'https://www.holonis.com/holonis/p/privacy-policy\')">Privacy Policy</a></li><li><a ng-click="vm.openLinkInNewWindow(\'https://www.holonis.com/holonis/p/terms-of-service\')">Terms of Service</a></li></ul></div>'), e.put('public/modules/core/templates/offer-status-module.template.html', '<div class="offer"><span class="badge-offer"></span><svg-icon icon="offer-dollar"></svg-icon><div><h2>{{ ::data.offerActorTitle }}</h2><p>{{ ::data.offeredPrice }}</p><small>{{ ::data.offerActorSubTitle }}</small></div></div>'), e.put('public/modules/core/templates/page-tabs.template.html', '<div id="tabs"><div class="sticky-tabs" sticky sticky-always="{{alwaysFixed}}"><a class="back-arrow-transactions" ng-click="appBackFn()"><i class="hicon-chevron-left"></i></a><div class="hide-scroll"><div class="tabs-wrap"><ul class="holo-tabs list-blank clearfix page-tabs"><li ng-repeat="tab in tabs" ng-class="{active:isActiveTab(tab.url)}"><a id="{{ tab.title }}" ng-click="onClickTab(tab, $event)">{{tab.title}}</a></li></ul></div></div></div><div class="hidden sticky-tabs-placeholder" style="height: 50px"></div><div ng-transclude></div><div id="mainView"><div ng-include="currentTab"></div></div></div>'), e.put('public/modules/core/templates/pages.template.html', '<section class="tab-embed-wrap"><tile-group type="pages" perpage="15" class="" space-id="$parent.$parent.vm.spaceId" vanity="$parent.$parent.vm.vanity" selectable="{{ $parent.$parent.vm.selectableType }}" selectable-data="$parent.$parent.vm.selectedCards" is-loading="true" container=\'"#pageBlock"\' no-engagement="true"></tile-group></section>'), e.put('public/modules/core/templates/post-actions.template.html', '<div class="add-content-wrapper"><div class="attach" ng-class="{\'active\': vm.activeButtonSet, \'selectedPosition\': vm.activeButton == \'file\'}" ng-if="vm.activeButton == null || vm.activeButton == \'file\'" ng-click="vm.activeButton == \'file\' || vm.pickFile(vm.spaceId);"><span class="icn icn-attach-media"></span> <span><small>Media</small></span></div><div class="embed" ng-class="{\'active\': vm.activeButtonSet, \'selectedPosition\': vm.activeButton == \'embed\'}" ng-if="vm.activeButton == null || vm.activeButton == \'embed\'" ng-click="vm.activeButton == \'file\' || vm.openEmbedModal();"><span class="icn icn-embed-content"></span> <span><small>Embed</small></span></div><div class="add" ng-class="{\'active\': vm.activeButtonSet }" ng-if="vm.activeButton == null" ng-click="vm.activeButtonSet = !vm.activeButtonSet;"><span class="icn icn-add-content"></span></div></div>'), e.put('public/modules/core/templates/posts.template.html', '<section class="tab-embed-wrap"><tile-group type="posts" perpage="15" class="" space-id="$parent.$parent.vm.spaceId" vanity="$parent.$parent.vm.vanity" selectable="{{ $parent.$parent.vm.selectableType }}" selectable-data="$parent.$parent.vm.selectedCards" is-loading="true" no-engagement="true" container=\'"#pageBlock"\'></tile-group></section>'), e.put('public/modules/core/templates/profile-image-edit.template.html', '<div class="form-group"><ul class="list-blank list-inline list-vert-middle border-btm pad-md-bottom clearfix"><li class="img-md-circle"><img class="img-responsive" ng-src="{{ vm.contentData[vm.contentType].profilePhoto | processImageURL : getUniqueSelector() : true }}" alt=""></li><div class="button-change-avatar" ng-click="vm.pickHeader(1);"><svg-icon icon="camera-icon" ng-if="!vm.contentData[vm.contentType].profilePhoto"></svg-icon><svg-icon icon="pencil-clean" ng-if="vm.contentData[vm.contentType].profilePhoto"></svg-icon></div></ul></div>'), e.put('public/modules/core/templates/redirect-loader.template.html', '<div class="wrapper-preloader" style="flex-direction: column; align-items: center; margin-top: calc(100vh / 2 - 74px)"><holonis-loader><h6>Holonis Social Commerce Platform</h6></div>'), e.put('public/modules/core/templates/report-action-sheet.template.html', '<div class="ras-{{::instanceType}}-{{::instanceId}}"><div class="more-options"><div class="report-action-sheet holo-popover holo-popover-menu holo-popover-left dsicon-chevron-bottom-small" action-sheet="vm.reportOptions" action-sheet-position="{{::actionSheetPosition}}" action-sheet-classes="{{::actionSheetClasses}}"></div></div><div class="more-options"><div class="report-action-sheet-inappropriate holo-popover holo-popover-menu holo-popover-left dsicon-chevron-bottom-small" action-sheet="vm.inappropriateReportOptions" action-sheet-label="Choose a reason for this report" action-sheet-position="{{::actionSheetPosition}}" action-sheet-classes="{{::actionSheetClasses}}"></div></div></div>'), e.put('public/modules/core/templates/sharethis.modal.template.html', '<div class="ds-share-this-modal modal-body" itemprop="potentialAction"><share-this share-title="shareTitle" share-url="permalink" class="share-this" ng-if="permalink"></share-this></div>'), e.put('public/modules/core/templates/social-provider-textfield.template.html', '<div class="form-group"><ul class="list-blank list-icn-inputs clearfix"><li><span class="icn icn-soc {{vm.icon}}"></span></li><li><label>{{vm.contentData.name}}/</label><input type="text" ng-model="vm.contentData.link" class="form-control"></li></ul></div>'), e.put('public/modules/core/templates/social-provider-view.template.html', '<div class="form-group"><ul class="list-blank list-icn-inputs clearfix"><li><a href="{{vm.contentData.link}}" target="_blank"><span class="icn icn-soc {{vm.icon}}"></span></a></li></ul></div>'), e.put('public/modules/core/templates/suggestions.template.html', '<span class="suggestions-label">To:</span><div class="suggestions-item" ng-repeat="s in selected track by s.id"><a class="remove-selected-item" href="javascript:;" ng-click="unselect(s, $event)"><svg-icon icon="close"></svg-icon></a><img ng-if="s.profilePhoto" ng-src="{{s.profilePhoto}}">{{s.name}}</div><input type="text" class="suggestions-field" ng-model="search" ng-model-options="{ debounce: searchDelay }" ng-hide="limitExceeded"><div class="suggestions-list" ng-hide="!search.length" ng-if="!limitExceeded"><button class="suggestions-list-item" ng-repeat="s in suggestions | notInArray : selected : \'id\' track by s.id" ng-click="select(s)"><img ng-src="{{(s.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : 50 : true }}" data-uid> <span>{{s.name}} </span><span ng-if="s.local">{{s.local}}</span></button></div>'), e.put('public/modules/core/templates/svg-icon.template.html', '<svg ng-hide="::isPrerender" class="icon" ng-class="classNameScope"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="" ng-attr-xlink:href="{{baseUrl + \'#\' + icon}}"></use></svg>'), e.put('public/modules/core/templates/tab-embed.template.html', '<div class="wrap-input"><input class="form-input-nb" id="embed-paste-link" ng-model="$parent.$parent.vm.embedUrl" ng-keydown="$parent.$parent.vm.enterSubmit($event)" placeholder="Paste a URL here..."> <span ng-click="$parent.$parent.vm.embedUrlChange()">Preview</span></div><div class="embed-visualizer"><div ng-show="$parent.$parent.vm.embedStatus === \'valid\'"><embedly-card url="$parent.$parent.vm.embedSource"></embedly-card></div></div><div class="embed-error" ng-if="$parent.$parent.vm.embedStatus === \'invalid\'"><div class="embed-error-body"><svg-icon icon="emoticon-crying"></svg-icon><p>Aww Shucks!</p><p>Try again, if that doesn\u2019t work then that link may be broken.</p></div></div>'), e.put('public/modules/core/templates/tags.template.html', '<div ng-class="{ \'notags\' : tags.length < 1 }"><tags-input ng-model="tags" placeholder="{{ placeholder }}" class="holo-tags-custom"></tags-input></div><!-- </div> --><!-- <div class="row add-tags-wrapper">\n    <div class="col-xs-9 col-ms-10">\n        <input type="text" class="form-control" placeholder="#" ng-keypress="vm.submitTags($event)" ng-model="vm.addTag" maxlength="70">\n    </div>\n    <div class="col-xs-3 col-ms-12">\n        <button type="button" value="Add" class="btn btn-hollow-primary" ng-disabled="!(!!vm.addTag)" ng-click="vm.addTags()">Add</button>\n    </div>\n</div> -->'), e.put('public/modules/core/templates/trendingSearch.template.html', '<div class="drop-menu-trending drop-menu-trending--mobile"><!-- dropdown menu trending search on focus --><div class="inner-trending"><ul ng-if="!vm.isLoggedOut && historyVisible"><li class="title-trending">SEARCH HISTORY</li><span class="loaderInline historyLoading" ng-if="historyLoading"></span><li ng-repeat="item in history" ng-mousedown="goSearch(item)" ng-if="item">{{item}}</li></ul></div></div>'), e.put('public/modules/core/templates/vanity-url-field.template.html', '<div><field model="model" label="holonis.com/" class="field--vanity-url" ng-class="{invalid: validModel === false || !model, valid: validModel === true}"><br><p class="invalid" ng-show="validModel === false">Sorry, that name has already been<br>taken. Try another combination.</p></field></div>'), e.put('public/modules/core/templates/variant-select.template.html', '<div class="ds-variant-select"><ds-select class="ds-select-combo" ng-model="buyParams.selected[$index]" ng-change="initializingWithData || change($index)" id="{{ select.label }}" placeholder="{{ select.label }}" class="ds-select-input" options="select.options" ng-repeat="select in buyParams.selects track by $index" required></ds-select></div>'), e.put('public/modules/core/templates/videos.template.html', '<section class="tab-embed-wrap"><tile-group type="videos" perpage="15" class="" space-id="$parent.$parent.vm.spaceId" vanity="$parent.$parent.vm.vanity" selectable="{{ $parent.$parent.vm.selectableType }}" selectable-data="$parent.$parent.vm.selectedCards" container=\'"#pageBlock"\' is-loading="true"></tile-group></section>'), e.put('public/modules/ecommerce/views/buyers.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><section class="ds-header mobile-only"><i class="ds-back-icon dsicon-chrevon-left" ng-click="state.appBackFn();"></i><h2 class="ds-mobile-header-title">Purchases</h2><div class="right-actions"><div ng-controller="HeaderController as vm" uib-dropdown auto-close="outsideClick" is-open="vm.isNavMenuOpenMobile" on-toggle="toggleSideMenu(open)"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/menu-icon.svg" uib-dropdown-toggle data-uid is-open="vm.isNavMenuOpenMobile"><div uib-dropdown-menu template-url="public/modules/core/templates/nav-dropdown.template.html" aria-labelledby="button-template-url"></div></div></div></section><div ng-include="\'public/modules/ecommerce/templates/orders-list.template.html\'"></div>'), e.put('public/modules/ecommerce/views/order-details-buyer.view.html', '<header ng-if="!orderDetailModal"><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><a ng-if="!orderDetailModal" class="back-action desktop-only" ng-attr-href="{{ ::state.backLink }}"><i class="dsicon-chrevon-left"></i> <span>Back to Orders</span></a><ds-header ng-if="!orderModal" left-action="back()" left-icon="dsicon-chrevon-left" center-title="{{ state.centerTitle }}" class="mobile-only"></ds-header><div class="order" ng-class="{\'margin-top\' : !orderModal}"><section class="order__header mobile-only" ng-if="state.order" ng-class="{\'link-no-events\' : !state.order.buyer }"><ds-avatar avatar="::state.order.seller.photo" ui-sref="holospace.home({ holospaceName: state.order.seller.vanityUrl })" size="36"></ds-avatar><div class="buyer-info"><small ng-if="::state.order.buyer.type !== \'space\'" style="display:block">Guest user</small><ds-space-name class="buyer-info-name capitalize" space="::state.order.seller"></ds-space-name><em class="buyer-info-timestamp"><span>{{ ::state.order.created | amUtc | amTimeAgo }}</span></em></div><div class="order-id"><span class="desktop-only">Order #</span> {{ ::state.order.number }}</div></section><div class="order__container" ng-class="{\'no-modal\' : !orderModal}" ng-if="state.order"><i class="dsicon-close" ng-click="close()" ng-if="orderModal" ng-hide="hideClose"></i><section class="order__header desktop-only" ng-class="{\'link-no-events\' : !state.order.buyer }"><ds-avatar avatar="::state.order.seller.photo" ui-sref="holospace.home({ holospaceName: state.order.seller.vanityUrl })" size="36"></ds-avatar><div class="buyer-info"><small ng-if="state.order.buyer.type !== \'space\'" style="display:block">Guest user</small><ds-space-name class="buyer-info-name capitalize" space="::state.isBuyer ? state.order.seller : state.order.buyer || state.order.billing"></ds-space-name><em class="buyer-info-timestamp"><span>{{ ::state.order.created | amUtc | amTimeAgo }}</span></em></div><div class="order-id"><span class="desktop-only">Order #</span> {{ ::state.order.number }}</div></section><div class="order__video-player" ng-if="state.isVideoService && state.order.displayStatus === \'fulfilled\'"><h2>Video from {{ ::state.order.seller.name }}</h2><hr class="order-summary-line"><video-input-player video="state.order.fulfillment.video"></video-input-player><a href="{{ state.order.fulfillment.video.sources.original.location }}" class="ds-btn ds-btn--default ds-btn--full-width ds-btn--blue" id="order-video-download-button">{{ state.downloadButtonText }}</a><div class="rate-transaction-wrapper" ng-if="!state.reviewed"><div class="ds-form-wrapper"><label class="ds-input-label">How would you rate {{ ::state.order.seller.name }} video?</label><ds-rating level="data.reviewRating" editable="!state.order.rating"></ds-rating></div><ds-text ng-model="data.reviewText" validate="$validators.reviewText" class="ds-comment-input" label="Write a review" params="inputs.review" placeholder="Got any feedback?" tabindex="1" max-characters="inputs.review.maxCharacters"></ds-text><button type="button" class="rate-transaction-send ds-button-reset ds-hoverable-link" ng-click="review()">Send</button></div></div><h2>{{ ::state.orderTitle }}</h2><hr class="order-summary-line"><section class="order__content"><a class="order-info" ng-attr-href="{{ ::state.itemLink }}" target="_blank"><div class="order-image-container"><img ng-src="{{ ::state.item.cover.url | processImageURL : state.item.cover.width : true }}" ng-attr-alt="{{ ::state.item.name }}"></div><div class="order-description"><span class="order-item-name" title="{{ ::state.orderItemName }}">{{ ::state.orderItemName | cut : true : 120 : \'...\' }}</span><div class="order-variant" ng-if="state.showQuantity">QTY: <span>{{ ::state.lineItem.quantity }}</span><div ng-repeat="variant in state.lineItem.variant.values" class="side-line">{{ ::variant.name | capitalize }}: <span>{{ ::variant.value }}</span></div></div><p class="order-details-item-price">{{ ::state.lineItem.finalPrice.formatted }} <span class="order-details-price-discount" ng-if="state.lineItem.discounts.length"><s class="order-details-price-discount-old">{{ state.lineItem.originalPrice.formatted }}</s> <span class="order-details-price-discount-amount">{{ state.lineItem.discounts[0].percent }}% OFF</span></span></p></div></a><div ng-if="state.isVideoService && state.order.contract.service.instructions" class="order__instructions"><h3>Instructions for the content of the video</h3><p>{{ state.order.contract.service.instructions }}</p></div><offer-status-module data="state" ng-if="state.showOffer && state.order.displayStatus === \'pendingOffer\'"></offer-status-module><div class="order-details-row"><div class="order-details-label">Card / Billing</div><div class="order-details-value" ng-if="::state.billing.paymentProvider.name.toLowerCase() === \'stripe\'">{{ ::state.billing.paymentProvider.card.brand }} &bull;&bull;&bull;&bull; {{ state.billing.paymentProvider.card.last4 }}</div><div class="order-details-value" ng-if="::state.billing.paymentProvider.name.toLowerCase() === \'paypal\'">{{ ::state.paymentMethods[state.billing.method] }}</div></div><div class="order-details-row"><div class="order-details-label">{{ state.onlyContactInfo ? \'Contact Info\' : \'Shipping\' }}</div><div class="order-details-value order-details-value-multiline" ng-if="!state.onlyContactInfo"><span>{{ ::state.order.shipping.name }}</span> <span>{{ ::state.order.shipping.address1 }} {{ ::state.order.shipping.address2 }}</span> <span>{{ ::state.order.shipping.city }}, {{ ::state.order.shipping.region }} {{ ::state.shipping.postCode }}</span></div><div class="order-details-value order-details-value-multiline" ng-if="state.onlyContactInfo"><span>{{ ::state.order.seller.name }}</span> <span><a ui-sref="holospace.home({holospaceName: state.order.seller.vanityUrl})">@{{::state.order.seller.vanityUrl}}</a></span></div></div><div class="order-details-row"><div class="order-details-label">{{ ::state.order.deliveryType === \'pickup\' ? \'Local pick up\' : \'Delivery\' }}</div><div class="order-details-value"><div class="order-details-single-shipping" ng-if="::state.order.deliveryType !== \'pickup\' && !state.isVideoService">{{ ::state.order.shipping.service.name }}</div><div class="order-details-single-shipping" ng-if="::state.order.deliveryType === \'pickup\'"><span>{{ ::state.item.pickup.address }}</span> <span>{{ ::state.item.pickup.notes }}</span></div><div class="order-details-single-shipping" ng-if="state.isVideoService"><span>Delivery via email</span> <small>{{ ::state.order.email }}</small></div><div class="order-details-value order-details-value-multiline" ng-if="::state.serviceLocation"><span>{{ ::state.serviceLocation.address1 }} {{ ::state.serviceLocation.address2 }}</span> <span>{{ ::state.serviceLocation.city }}<em ng-if="state.serviceLocation">,</em> {{ ::state.serviceLocation.region }} {{ ::state.serviceLocation.postCode }}</span></div></div></div><div class="order__total"><p>Subtotal <span>{{ ::state.order.lineItemTotal.formatted }}</span></p><p ng-if="state.order.deliveryType === \'shipped\'">Shipping <span>{{ ::state.order.shipmentTotal.formatted }}</span></p><p ng-if="state.order.discountTotal.amount > 0">Discount <span>{{ ::state.order.discountTotal.formatted }}</span></p><p>Tax <span>{{ ::state.order.taxTotal.formatted }}</span></p><hr><p class="bold">Order Total <span>{{ ::state.order.grandTotal.formatted }}</span></p></div><div class="order__review"><order-review order="state.order" actor="state.actor" only-list="state.isVideoService"></order-review></div><div class="order__actions" ng-if="!state.showOffer"><button class="order__actions-contact capitalize" ng-click="message()">Contact seller</button><order-status class="order-status-md" order="state.order" options="state.orderStatus" modal="orderDetailModal"></order-status></div><div class="offer-actions" ng-if="state.showOffer"><span class="badge-offer"></span><div class="offer-actions__text"><h2>{{ state.offerActionModuleTitle }}</h2><p>{{ state.offerActionModuleSubtitle }}</p></div><div class="offer-actions__buttons"><button ng-click="message()">Contact seller</button><order-status style="width:100%" class="order-status-md" order="state.order" options="state.orderStatus" modal="orderDetailModal"></order-status></div></div></section></div><div class="loader-position" ng-class="{\'no-modal\' : !orderModal}" ng-if="!state.order"><holonis-loader></div></div>'), e.put('public/modules/ecommerce/views/order-details-seller.view.html', '<header ng-if="!orderDetailModal"><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><a ng-if="!orderDetailModal" class="back-action desktop-only" ng-attr-href="{{ ::state.backLink }}"><i class="dsicon-chrevon-left"></i> <span>Back to Orders</span></a><ds-header ng-if="!orderModal" left-action="back()" left-icon="dsicon-chrevon-left" center-title="{{ state.centerTitle }}" class="mobile-only"></ds-header><div class="order" ng-class="{\'margin-top\' : !orderModal}"><section class="order__header mobile-only" ng-if="state.order" ng-class="{\'link-no-events\' : !state.order.buyer }"><ds-avatar avatar="::state.order.buyer.photo" ui-sref="holospace.home({ holospaceName: state.order.buyer.vanityUrl })" size="36"></ds-avatar><div class="buyer-info"><small ng-if="::state.order.buyer.type !== \'space\'" style="display:block">Guest user</small><ds-space-name class="buyer-info-name capitalize" space="::state.order.buyer || state.order.billing"></ds-space-name><em class="buyer-info-timestamp"><span>{{ ::state.order.created | amUtc | amTimeAgo }}</span></em></div><div class="order-id"><span class="desktop-only">Order #</span> {{ ::state.order.number }}</div></section><div class="order__container" ng-class="{\'no-modal\' : !orderModal}" ng-if="state.order"><i class="dsicon-close" ng-click="close()" ng-if="orderModal" ng-hide="hideClose"></i><section class="order__header desktop-only" ng-class="{\'link-no-events\' : !state.order.buyer }"><ds-avatar avatar="::state.order.buyer.photo" ui-sref="holospace.home({ holospaceName: state.order.buyer.vanityUrl})" size="36"></ds-avatar><div class="buyer-info"><small ng-if="state.order.buyer.type !== \'space\'" style="display:block">Guest user</small><ds-space-name class="buyer-info-name capitalize" space="::state.order.buyer || state.order.billing"></ds-space-name><em class="buyer-info-timestamp"><span>{{ ::state.order.created | amUtc | amTimeAgo }}</span></em></div><div class="order-id"><span class="desktop-only">Order #</span> {{ ::state.order.number }}</div></section><div class="order__video-player" ng-if="state.isVideoService && state.order.displayStatus === \'fulfilled\'"><h2>Your delivered video</h2><hr class="order-summary-line"><video-input-player video="state.order.fulfillment.video"></video-input-player><a href="{{ state.order.fulfillment.video.sources.original.location }}" class="ds-btn ds-btn--default ds-btn--full-width ds-btn--blue" id="order-video-download-button">{{ state.downloadButtonText }}</a></div><h2>{{ ::state.orderTitle }}</h2><hr class="order-summary-line"><section class="order__content"><a class="order-info" ng-attr-href="{{ ::state.itemLink }}" target="_blank"><div class="order-image-container"><img ng-src="{{ ::state.item.cover.url | processImageURL : state.item.cover.width : true }}" ng-attr-alt="{{ ::state.item.name }}"></div><div class="order-description"><span class="order-item-name" title="{{ ::state.orderItemName }}">{{ ::state.orderItemName | cut : true : 120 : \'...\' }}</span><div class="order-variant" ng-if="state.showQuantity">QTY: <span>{{ ::state.lineItem.quantity }}</span><div ng-repeat="variant in state.lineItem.variant.values" class="side-line">{{ ::variant.name | capitalize }}: <span>{{ ::variant.value }}</span></div></div><p class="order-details-item-price">{{ ::state.lineItem.finalPrice.formatted }} <span class="order-details-price-discount" ng-if="state.lineItem.discounts.length"><s class="order-details-price-discount-old">{{ state.lineItem.originalPrice.formatted }}</s> <span class="order-details-price-discount-amount">{{ state.lineItem.discounts[0].percent }}% OFF</span></span></p></div></a><div ng-if="state.isVideoService && state.order.contract.service.instructions" class="order__instructions"><h3>Instructions for the content of the video</h3><p>{{ state.order.contract.service.instructions }}</p></div><div class="offer" ng-if="state.showOffer && state.order.displayStatus === \'pendingOffer\'"><span class="badge-offer"></span><svg-icon icon="offer-dollar"></svg-icon><div><h2>{{ ::state.offerActorTitle }}</h2><p>{{ ::state.offeredPrice }}</p><small>{{ ::state.offerActorSubTitle }}</small></div></div><div ng-if="state.actor === \'seller\' && state.isVideoService && state.order.status === \'processing\'"><video-input-picker id="order-video-upload" bus="videoUploadBus"></video-input-picker><label for="order-video-upload" class="ds-btn-video-upload" id="order-video-upload-button"><svg-icon icon="video-upload-add"></svg-icon><span class="button-text">Upload a Video</span> <span class="badge-offer"></span></label></div><div class="order-details-row"><div class="order-details-label">Card / Billing</div><div class="order-details-value" ng-if="::state.billing.paymentProvider.name.toLowerCase() === \'stripe\'">{{ ::state.billing.paymentProvider.card.brand }} &bull;&bull;&bull;&bull; {{ state.billing.paymentProvider.card.last4 }}</div><div class="order-details-value" ng-if="::state.billing.paymentProvider.name.toLowerCase() === \'paypal\'">{{ ::state.paymentMethods[state.billing.method] }}</div></div><div class="order-details-row"><div class="order-details-label">{{ state.onlyContactInfo ? \'Contact Info\' : \'Shipping\' }}</div><div class="order-details-value order-details-value-multiline" ng-if="!state.onlyContactInfo"><span>{{ ::state.order.shipping.name }}</span> <span>{{ ::state.order.shipping.address1 }} {{ ::state.order.shipping.address2 }}</span> <span>{{ ::state.order.shipping.city }}, {{ ::state.order.shipping.region }} {{ ::state.shipping.postCode }}</span></div><div class="order-details-value order-details-value-multiline" ng-if="state.onlyContactInfo"><span>{{ ::state.order.buyer.name }}</span> <span ng-if="state.isSeller">{{ ::state.order.email }}</span></div></div><div class="order-details-row"><div class="order-details-label">{{ ::state.order.deliveryType === \'pickup\' ? \'Local pick up\' : \'Delivery\' }}</div><div class="order-details-value"><div class="order-details-single-shipping" ng-if="::state.order.deliveryType !== \'pickup\' && !state.isVideoService">{{ ::state.order.shipping.service.name }}</div><div class="order-details-single-shipping" ng-if="::state.order.deliveryType === \'pickup\'"><span>{{ ::state.item.pickup.address }}</span> <span>{{ ::state.item.pickup.notes }}</span></div><div class="order-details-single-shipping" ng-if="state.isVideoService"><span>Delivery via email</span> <small>{{ ::state.order.email }}</small></div><div class="order-details-value order-details-value-multiline" ng-if="::state.serviceLocation"><span>{{ ::state.serviceLocation.address1 }} {{ ::state.serviceLocation.address2 }}</span> <span>{{ ::state.serviceLocation.city }}<em ng-if="state.serviceLocation">,</em> {{ ::state.serviceLocation.region }} {{ ::state.serviceLocation.postCode }}</span></div></div></div><div class="order__total"><p>Subtotal <span>{{ ::state.order.lineItemTotal.formatted }}</span></p><p ng-if="state.order.deliveryType === \'shipped\'">Shipping <span>{{ ::state.order.shipmentTotal.formatted }}</span></p><p ng-if="state.order.discountTotal.amount > 0">Discount <span>{{ ::state.order.discountTotal.formatted }}</span></p><p>Tax <span>{{ ::state.order.taxTotal.formatted }}</span></p><hr><p class="bold">Order Total <span>{{ ::state.order.grandTotal.formatted }}</span></p></div><div class="order__terms" ng-if="state.isVideoService && state.actor === \'seller\' && state.order.displayStatus === \'new\'"><p ng-if="!state.showOffer">Please deliver this video service to your buyer within 48 hours as per our <a href="http://holonis.com/" target="_blank">Terms & Conditions</a>.</p></div><div class="order__review" ng-if="state.order.buyer"><order-review order="state.order" actor="state.actor" only-list="state.isVideoService"></order-review></div><div class="order__actions" ng-if="!state.showOffer"><button class="order__actions-contact capitalize" ng-click="message()" ng-if="state.order.buyer">Contact buyer</button><order-status class="order-status-md" order="state.order" options="state.orderStatus" modal="orderDetailModal"></order-status></div><div class="offer-actions" ng-if="state.showOffer"><span class="badge-offer"></span><div class="offer-actions__text"><h2>{{ state.offerActionModuleTitle }}</h2><p>{{ state.offerActionModuleSubtitle }}</p></div><div class="offer-actions__buttons"><button ng-click="message()" ng-if="state.order.buyer">Contact buyer</button><order-status style="width:100%" class="order-status-md" order="state.order" options="state.orderStatus" modal="orderDetailModal"></order-status></div></div></section></div><div class="loader-position" ng-class="{\'no-modal\' : !orderModal}" ng-if="!state.order"><holonis-loader></div></div>'), e.put('public/modules/ecommerce/views/sellers.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><section class="ds-header mobile-only"><i class="ds-back-icon dsicon-chrevon-left" ng-click="state.appBackFn();"></i><h2 class="ds-mobile-header-title">Orders Received</h2><div class="right-actions"><div ng-controller="HeaderController as vm" uib-dropdown auto-close="outsideClick" is-open="vm.isNavMenuOpenMobile" on-toggle="toggleSideMenu(open)"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/menu-icon.svg" uib-dropdown-toggle data-uid is-open="vm.isNavMenuOpenMobile"><div uib-dropdown-menu template-url="public/modules/core/templates/nav-dropdown.template.html" aria-labelledby="button-template-url"></div></div></div></section><ecommerce-header active-tab="orders"></ecommerce-header><div ng-include="\'public/modules/ecommerce/templates/orders-list.template.html\'"></div>'), e.put('public/modules/ecommerce/templates/header.template.html', '<div class="ecommerce-header"><nav><a ng-class="{ active: activeTab === \'orders\' }" ui-sref="ecommerce.sellers.orders">Orders</a> <a ng-class="{ active: activeTab === \'inventory\' }" ui-sref="ecommerce.inventory">Inventory</a></nav></div>'), e.put('public/modules/ecommerce/templates/item-reviews.template.html', '<div class="ds-comments item-review" ng-class="{ \'hidden\' : isHidden() }"><span ng-if="state.loading" class="item-review-loading"><holonis-loader></span><div ng-if="!state.loading" class="ds-comments-wrapper"><div ng-include="\'public/modules/ecommerce/templates/reviews.template.html\'"></div></div></div>'), e.put('public/modules/ecommerce/templates/order-export-csv.template.html', '<div class="orders__csv"><div class="title"><i class="ds-modal-close dsicon-close ng-scope" ng-if="close" ng-click="close()" ng-hide="hideClose"></i><h2>Enter Tracking on Multiple Items</h2></div><div class="content"><div><label for="1" ng-class="{ \'label-checkbox__checked\' : standardCsv }" class="label-checkbox"></label><input type="checkbox" id="1" ng-model="standardCsv" name="feature" value="1"><label for="1">CSV for Excel, Numbers, and other spreadsheet programs</label></div><div class="actions"><a class="cancel" ng-click="close()">Cancel</a> <a class="export" ng-click="state.importCSV()" ng-class="{ \'is-disabled\' : !standardCsv }">Save</a></div></div></div>'), e.put('public/modules/ecommerce/templates/order-review.template.html', '<div class="order-review" ng-class="{ \'order-review-hidden\' : isHidden() }"><span ng-if="state.loading"><holonis-loader></span><div ng-if="!state.loading"><!-- Rate Button --> <a ng-if="state.showRateButton" ng-click="rate()" class="order-review-btn">Rate this transaction</a><!-- Reviews --><div ng-if="state.showReviews"><hr><h3>Review</h3><div ng-include="\'public/modules/ecommerce/templates/reviews.template.html\'"></div></div></div></div>'), e.put('public/modules/ecommerce/templates/order-status.template.html', '<div><!-- Not an Offer and Order Details page --><div class="order-status" ng-class="{ \'options-visible\': state.showOptions, \n         \'status-changeable\': changeable && !state.updating, \n         \'status-updating\': state.updating,\n         \'order-status-md\' : !state.orderListPage && !state.isOffer || modal}" ng-if="!state.isOffer"><label ng-click="toggleOptions()" ng-style="{ \'background-color\' : state.selected.color, \'cursor\': state.cursor }" ng-if="!state.invalid"><svg-icon icon="tip-down" ng-if="changeable"></svg-icon>{{ state.selected.displayName }}</label><label class="order-status-invalid" ng-if="state.invalid">{{ order.status }}</label><div class="order-status-options" ng-if="changeable"><ul><li ng-repeat="action in actions track by $index" ng-click="selectAction(action,order)" ng-class="{ \'status-with-color\': action.color }"><span class="status-color-hover" ng-style="{ \'background-color\': action.color }"></span> <span class="status-color" ng-style="{ \'background-color\': action.color }"></span>{{ action.title }}</li></ul></div></div><!-- Offer and Order List page --><div class="order-status" ng-class="{\'options-visible\': state.showOptions, \n    \'status-changeable\': changeable && !state.updating, \n    \'status-updating\': state.updating,\n    \'order-status-md\' : !state.orderListPage && !state.isOffer}" ng-if="state.isOffer && state.orderListPage && !modal"><label ng-click="toggleOptions()" ng-style="{ \'background-color\' : state.selected.color, \'cursor\': state.cursor }" ng-if="!state.invalid"><svg-icon icon="tip-down" ng-if="changeable"></svg-icon>{{ state.offerActionButtonName }}</label><label class="order-status-invalid" ng-if="state.invalid">{{ order.status }}</label><div class="order-status-options" ng-if="changeable"><ul><li ng-repeat="action in actions track by $index" ng-click="selectAction(action,order)" ng-class="{ \'status-with-color\': action.color }"><span class="status-color-hover" ng-style="{ \'background-color\': action.color }"></span> <span class="status-color" ng-style="{ \'background-color\': action.color }"></span>{{ action.title }}</li></ul></div></div><!-- Offer and Order Details page --><div ng-if="!state.orderListPage && state.isOffer || (state.isOffer && modal)" class="btn-group dropup dropdown offer-status-select-modal" uib-dropdown is-open="status.isopen"><button id="single-button" type="button" class="btn btn-primary offer-status-select-modal__title" uib-dropdown-toggle ng-style="{ \'background-color\' : state.selected.color, \'cursor\': state.cursor}" ng-click="toggleOptions()"><span class="triangle-icon" ng-show="state.showDropdownOptions"></span> {{ state.offerActionButtonName }}</button><ul class="dropdown-menu offer-status-select-modal__options" uib-dropdown-menu role="menu" aria-labelledby="single-button" ng-show="state.showDropdownOptions"><h2>Select Response</h2><li ng-repeat="action in actions" ng-click="selectAction(action,order)">{{ action.title }}</li></ul></div></div>'), e.put('public/modules/ecommerce/templates/orders-list.template.html', '<div class="orders"><div class="orders-header"><h2>{{ ::state.orderListTitle }}</h2><a ng-click="state.exportCsv()" class="desktop-only" ng-if="state.isSales"><svg-icon icon="download"></svg-icon>Export</a></div><div class="filter-overlay" ng-if="state.isFilterOpen" ng-click="state.filterOverlay()" ng-model-options="{ debounce: 10 }"></div><div class="order-wrapper"><div class="orders-filter"><input type="checkbox" class="orders-filter-checkbox" id="select-order-filter"><label for="select-order-filter" class="filter-label" ng-click="state.isFilterOpen = true"><div class="orders-filter-container" ng-class="{\'selected\' : state.selectedStatus }"><span class="capitalize">{{ state.selectedStatus ? state.selectedStatus : \'Filter\' }}</span><svg-icon icon="chevron-down"></svg-icon></div></label><div class="orders-filter-search-container"><i class="dsicon-glass dsicon-glass-mobile"></i> <input type="text" id="orderSearchInput" class="desktop-only" ng-model="orderSearchInput" ng-change="getOrdersByStatusOnSearch(state.selectedStatus, orderSearchInput)" placeholder="Search orders by number, product name, SKU, and {{ ::state.searchBuyerOrSeller }}"> <input type="text" id="orderSearchInput" class="mobile-only" ng-model="orderSearchInput" ng-change="getOrdersByStatusOnSearch(state.selectedStatus, orderSearchInput)" placeholder="Search orders"></div><div class="orders-filter-options"><ul><label for="select-order-filter"><li ng-click="getAll()"><div class="all"></div>All</li><li ng-repeat="orderStatus in state.orderStatus" ng-click="getOrderByStatus(orderStatus, orderSearchInput)"><div ng-style="{ \'background-color\': orderStatus.color }"></div>{{ ::orderStatus.displayName}}<hr></li></label></ul></div></div><div class="orders-list" infinite-scroll="infiniteScroll()" infinite-scroll-distance="0.2" infinite-scroll-container="container" infinite-scroll-disabled="state.infiniteScrollLoading || state.loading || !state.pagination.next"><table cellpadding="0" cellspacing="0" ng-if="!state.loading"><thead><tr><th class="row-order-date">Date</th><th class="row-order-customer">{{ ::state.customerHeader }}</th><th class="row-order-status">Status</th><th class="row-order-number">Order#</th><th class="row-order-total">Total</th></tr></thead><tbody><tr ng-repeat="order in state.orders track by $index" ng-class="{ odd: $odd }" ng-if="state.orders.length"><td class="row-order-date"><small ng-if="::state.getDateDiffFromTodayAsDays(order.created) <= 1">{{ ::order.created | amUtc | amTimeAgo }}</small> <small ng-if="::state.getDateDiffFromTodayAsDays(order.created) >= 2">{{ ::order.created | date: "MM/dd/yyyy" }}</small></td><td class="row-order-customer"><a ng-if="::order[state.actor].vanityUrl" ui-sref="holospace.home({ holospaceName: order[state.actor].vanityUrl })"><ds-avatar avatar="::order[state.actor].photo" size="22"></ds-avatar><span class="no-mobile">{{ ::order[state.actor].name | cut : true : 16 }}</span> <small class="only-mobile" ng-if="::state.getDateDiffFromTodayAsDays(order.created) <= 1">{{ ::order.created | amUtc | amTimeAgo }}</small> <small class="only-mobile" ng-if="::state.getDateDiffFromTodayAsDays(order.created) >= 2">{{ ::order.created | date: "MM/dd/yyyy" }}</small> </a><a ng-if="!order[state.actor].vanityUrl" class="cursor-default"><ds-avatar avatar="::order[state.actor].photo" size="22"></ds-avatar><span class="no-mobile">{{ ::order.billing.name | cut : true : 16 }}</span> <small class="only-mobile">{{ ::order.created | amUtc | amTimeAgo }}</small></a><div class="orders__customer-hover desktop-only"><ds-avatar avatar="::order[state.actor].photo" size="100"></ds-avatar><div class="customer-info"><span class="customer-info--name">{{ ::order[state.actor].name || order.billing.name | cut : true : 35 }}</span><div class="customer-info--address" ng-if="state.isActorBuyer"><span>{{ ::order.billing.address1 }}</span> <span>{{ ::order.billing.city }} <span ng-show="order.billing.city && order.billing.region">,</span> {{::order.billing.region }} {{ ::order.billing.postCode }}</span> <span>{{ ::order.email }}</span> <span>{{ ::order.billing.phone }}</span></div><span ng-if="::order[state.actor].vanityUrl" class="customer-info--vanity">@{{ ::order[state.actor].vanityUrl | cut : true : 16 }}</span> <span ng-if="!order[state.actor].vanityUrl" class="customer-info--vanity">Guest user</span></div></div></td><td class="row-order-status"><order-status order="order" options="::state.orderStatus"></order-status></td><td class="row-order-number"><a ng-attr-href="{{ ::getOrderLink(order) }}" ng-click="saveUserSearch()">{{ ::order.number }}</a><div class="orders__detail-hover desktop-only"><div class="image-container"><img ng-src="{{order.lineItems[0].item.cover.url}}" alt="Product Image"></div><div class="info"><p class="info--name capitalize">{{ ::order.lineItems[0].item.name | cut : true : 41 }}</p><p class="info--quantity">QTY: <span>{{ ::order.lineItems[0].quantity }}</span></p><p class="info--total">{{ ::order.grandTotal.formatted }}</p></div></div></td><td class="row-order-total"><b>{{ ::order.grandTotal.formatted }}</b></td></tr><tr ng-if="!state.orders.length"><td colspan="5" class="row-no-order" ng-class="{\'showMessage\': !state.orders.length && !state.loading}"><b>{{ ::state.noOrdersMessage }}</b></td></tr></tbody></table><div ng-if="state.infiniteScrollLoading" class="infinite-scroll-loader"><holonis-loader></div><div ng-if="state.loading" class="general-loader"><holonis-loader></div></div></div></div>'), e.put('public/modules/ecommerce/templates/reviews.template.html', '<ul class="ds-comment-list"><li class="ds-comment ds-comment-box" ng-repeat="review in state.reviews" id="review:{{review.id}}"><a ui-sref="holospace.home({ holospaceName: review.buyer.vanityUrl })"><span class="ds-comment-thumb"><img ng-src="{{ (review.buyer.photo | processImage : 24 : true) || ($root.cdnBaseUrl + \'/images/default-user.png?1\') }}" data-uid></span></a><div><a ui-sref="holospace.home({ holospaceName: review.buyer.vanityUrl })" class="ds-comment-name"><ds-space-name class="ds-comment-owner ds-heading-default" space="review.buyer"></ds-space-name><ds-rating level="review.rating"></ds-rating></a><p class="ds-comment-body ds-body-large" ng-bind-html="review.body | escapeHTML "></p><small class="ds-comment-time-ago ds-caption-default">{{ review.created | amUtc | amTimeAgo }}</small></div></li></ul>'), e.put('public/modules/explore/views/dir-category-links.html', '<div id="dvCategoryList" infinite-scroll="nextPage()"><ol class="list-group link-1cl" style="list-style:none"><li ng-repeat="obj in categories" class="col-md-5"><a href="/cat/{{obj.url}}">{{obj.name}}</a></li></ol></div>'), e.put('public/modules/explore/views/directory-main.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'/public/modules/core/views/header.web.html\'" top-nav></div></header><div class="paging paging-center"><div class="places-title"><p class="helpText">Latin Character Names</p></div><p class="char"><span ng-repeat="al in vm.alphabet"><a ui-sref="directoryHolospacesAlpha({holospaceType:vm.directoryType,index:al})">{{al}}</a></span></p><p class="helpText">Non Latin Character Names</p><p class="char"><span ng-repeat="d in vm.digit"><a ui-sref="directoryHolospacesAlpha({holospaceType:vm.directoryType,index:d})">{{d}}</a></span></p><h4>Results</h4><div><ul class="result"><li ng-repeat="b in vm.businesses"><a ng-if="vm.buisnesesType==\'holospaces\'" ui-sref="holospace.home({holospaceName:b.vanityUrl})">{{b.name}}</a> <a ng-if="vm.buisnesesType==\'groups\'" ui-sref="directoryHolospacesAlpha({holospaceType:vm.directoryType,index:b.vanityUrl})">{{b.first.name}} - {{b.last.name}}</a></li></ul><p ng-show="busy">Loading..</p></div></div><style>.paging-center {margin:100px 5% 50px 5%}\n.paging .helpText{border-bottom:0.6px solid; font-size: 12px; }\n.char{border-bottom: 0.6px solid;}\n.char a {padding-right: 10px;}\n.result li{float: left; width: 33.3%; list-style: none; font-size: 14px;}</style>'), e.put('public/modules/explore/views/directory-page.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><main class="page-wrapper page-places-list w-directory"><div class="container"><div class="row"><div class="col-xs-12 custom-gap"><nav class="breadcrumb"><li class="breadcrumb-item"><a class="breadcrumb-link" ui-sref="places">United States</a></li><li class="breadcrumb-item" ng-if="vm.state.name"><a class="breadcrumb-link" ui-sref="holospace.explore({holospaceName:vm.state.vanityUrl})">{{vm.state.name}}</a></li><li class="breadcrumb-item"><a class="breadcrumb-link" ui-sref="holospace.explore({holospaceName:vm.holospaceName})">{{vm.cityName}}</a></li><li class="breadcrumb-item active">{{vm.neighborhoodName || vm.cityName}} {{vm.categoryName}}</li><!-- <li class="breadcrumb-item" ui-sref="geoCategoryPage({holospaceName: $stateParams.holospaceName, categoryName: $stateParams.categoryName})" ng-if="vm.neighborhoodName">{{vm.neighborhoodName}}</li> --></nav></div></div><div class="row"><div class="col-xs-12 col-sm-8 custom-gap"><div class="box"><ul class="places-contacts-list list-unstyled"><li class="places-contacts-list-item heading"><!-- <p class="places-contacts-list-sorter">Sort by: Relevance\n                <img ng-src="{{$root.cdnBaseUrl}}/images/chevron-down.svg" class="icon">\n              </p> --><h1>{{vm.neighborhoodName || vm.cityName}} {{vm.categoryName}} Businesses</h1><h2><address>Search the {{vm.categoryLength | lowercase }} {{vm.categoryName | lowercase }} category in {{ vm.neighborhoodName ? (vm.neighborhoodName + \' - \') : \'\' }}{{ vm.cityName}}, {{vm.stateAbbr}}</address></h2></li><li class="places-contacts-list-item" ng-repeat="holon in vm.holospaces track by $index" ng-class="{ \'item-ads\': holon.type == \'ads\' }"><div ng-if="holon.type != \'ads\'"><h3><a class="places-holospace-name" ui-sref="holospace.home({ holospaceName: holon.vanityUrl })" class="title-link">{{holon.name}}</a></h3><span class="places-contacts-list-categories" ng-repeat="category in holon.categories | limitTo: 4 track by $index"><a ui-sref="geoNeighborhoodPage({ holospaceName: vm.holospaceName, categoryName: category.parsedTitle, neighborhoodName: vm.neighborhoodName })" ng-if="vm.stateParams.neighborhoodName">{{category.title}}</a> <span ng-if="vm.stateParams.neighborhoodName" ng-hide="$last">|</span> <a ui-sref="geoCategoryPage({ holospaceName: vm.holospaceName, categoryName: category.parsedTitle, neighborhoodName: vm.neighborhoodName })" ng-if="!vm.stateParams.neighborhoodName">{{category.title}}</a> <span ng-if="!vm.stateParams.neighborhoodName" ng-hide="$last">|</span></span><address><p>{{holon.location[0].address}} <span ng-if="holon.location[0].address2">{{holon.location[0].address2}}</span></p><p></p><p>{{holon.location[0].city}}, {{holon.location[0].state}}</p><p></p><p ng-if="holon.phoneNumber">{{holon.phoneNumber}}</p><p></p></address><img ng-src="{{$root.cdnBaseUrl}}/images/chevron-right.svg" class="arrow"></div></li></ul></div><div style="text-align: center"><!-- `&#8203;` is a zero-width space. The boundary links\' text must appear empty but angular-ui\'s pagination will not accept an empty or whitespace-only value, it would apply the default text in that case. --><ul ng-if="vm.holospacesCount" uib-pagination ng-change="vm.getHolospaces()" total-items="vm.holospacesCount" items-per-page="vm.itemsPerPage" ng-model="vm.currentPage" max-size="14" class="pagination" boundary-links="true" first-text="&#8203;" next-text="&#8203;" previous-text="&#8203;" last-text="&#8203;"></ul></div></div><aside class="col-sm-4 aside custom-gap"><div ng-if="vm.mapIsReady"><ng-map zoom="14" id="dynamicDirMap" lazy-load="true" class="maps" zoom-to-include-markers="true"><marker ng-repeat="holon in vm.holospaces | limitTo: 10 | filter:{ type: \'!\'+\'ads\' } track by $index" position="[{{holon.location[0].latitude}}, {{holon.location[0].longitude}}]" title="{{holon.name}}"></marker></ng-map></div><div class="box first"><p class="lead">Top Categories</p><p ng-repeat="cat in vm.categories | limitTo: 10 track by $index"><a ui-sref="geoNeighborhoodPage({ holospaceName: vm.holospaceName, categoryName: cat.parsedName, neighborhoodName: vm.neighborhoodName })" ng-if="vm.stateParams.neighborhoodName">{{cat.name}}</a> <a ui-sref="geoCategoryPage({ holospaceName: vm.holospaceName, categoryName: cat.parsedName, neighborhoodName: vm.neighborhoodName })" ng-if="!vm.stateParams.neighborhoodName">{{cat.name}}</a></p></div><div class="box" ng-if="vm.neighborhoods.length"><p class="lead">Local Neighborhoods</p><p ng-repeat="neighborhood in vm.neighborhoods track by $index"><a ui-sref="geoNeighborhoodPage({ holospaceName: vm.holospaceName, categoryName: vm.categoryName, neighborhoodName: neighborhood.parsedName })">{{ neighborhood.name }}</a></p></div><!--<img ng-src="{{$root.cdnBaseUrl}}/images/deal1.jpg">--></aside></div></div></main>'), e.put('public/modules/explore/views/explore.view.html', '<div class="w-explorer-place"><div ng-if="vm.space.subType == \'state\'" class="page-places"><div class="container"><div class="row"><div class="col-xs-12"><p class="lead">{{stateName}} Cities</p><div class="live-search"><label class="live-search-label"><input type="search" class="live-search-field" placeholder="Find great stuff in every city\u2026" ng-model="search"></label></div></div></div><div class="row"><div class="places-list col-xs-12"><span ng-repeat="city in cities | filter: search"><a class="places-list-item" ui-sref="holospace.explore({holospaceName:city.vanityUrl})">{{city.name}}</a></span></div></div><div class="row"><div class="col-xs-12"><a href="javascript:;" class="places-see-more" ng-click="vm.seeMore()" ng-show="!hideSeeMore">see more</a></div></div></div></div><div ng-if="vm.space.subType == \'city\'" class="page-places"><div class="container"><div class="row"><div class="col-xs-12"><p class="lead">Browse by Categories in {{vm.space.name}}</p><div class="live-search"><label class="live-search-label"><input type="search" class="live-search-field" placeholder="Finding something fun, flavorful or even adventurous is easy\u2026" ng-model="search"></label></div></div></div><div class="row"><div class="places-list col-xs-12"><span ng-repeat="category in categories | filter: search | limitTo: limit.number"><a class="places-list-item" ui-sref="geoCategoryPage({ holospaceName: vm.space.vanityUrl, categoryName: category.vanityUrl})">{{category.name}}</a></span></div></div><div class="row"><div class="col-xs-12"><a href="javascript:;" class="places-see-more" ng-click="vm.seeMore()" ng-show="!hideSeeMore">see more</a></div></div></div></div></div>'), e.put('public/modules/explore/views/reviews.view.html', '<!-- About --><section id="top" class="h-card unclaimed-holospace--reviews"><div class="w-claim-this-space">Want to Claim this Space? <a href="mailto:support@holonis.com?subject=Request%20to%20claim%20this%20business%20:%20{{vm.space.name}}&body=I%20am%20interested%20in%20claiming%20this%20business:%20{{vm.space.name}}%0D%0A%0D%0AAddress:%20https://www.holonis.com/{{vm.space.vanityUrl}}">click here</a></div><div class="w-body-reviews"><div ng-if="vm.yelp" ng-repeat="review in vm.yelp.reviews" class="body-reviews body-reviews--yelp"><header><div class="space clearfix"><a ng-href="{{ \'https://www.yelp.com/user_details?userid=\' + review.user.id }}" target="_system"><img ng-src="{{review.user.imageUrl || vm.space.name.profilePhoto || \'http://lorempixel.com/35/35\' }}"> <span>{{review.user.name || vm.space.name}}</span></a></div><div class="date-post"><span class="w-stars"><img ng-src="{{review.ratingImageUrl}}"> </span><span>{{review.created * 1000| date:\'longDate\'}}</span> <a ng-href="{{ vm.yelp.url }}" target="_system"><svg-icon icon="logo-yelp"></svg-icon></a></div></header><div class="content"><a ng-href="{{ vm.yelp.url }}" target="_system"><p>{{review.text}}</p></a><!--<img src="http://lorempixel.com/600/600" />--></div><!-- <div class="line-divider"></div> --></div><div ng-if="vm.foursquare" ng-repeat=" review in vm.foursquare.reviews" class="body-reviews"><header><div class="space clearfix"><a ng-href="{{ \'https://foursquare.com/user/\' + review.user.id }}" target="_system"><img ng-src="{{review.user.imageUrl || vm.space.name.profilePhoto || \'http://lorempixel.com/35/35\' }}"> <span>{{review.user.name || vm.space.name}}</span></a></div><div class="date-post"><span>{{review.created * 1000 | date:\'longDate\'}}</span> <a ng-href="{{ review.url }}" target="_system"><svg-icon icon="logo-foursquare"></svg-icon></a></div></header><div class="content"><a ng-href="{{ review.url }}" target="_system"><p>{{review.text}}</p></a><!--<img src="http://lorempixel.com/600/215" />--></div><div class="line-divider"></div></div></div></section>'), e.put('public/modules/feeds/views/feeds.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><section class="inside-nav no-hero feeds-ui mobile-only" ng-controller="HeaderController as vm"><h2 class="title">Holonis</h2><a uib-dropdown auto-close="outsideClick" ng-if="!isLoggedOut()" is-open="vm.isNavMenuOpenMobile" on-toggle="toggleSideMenu(open)"><svg-icon icon="menu-icon" class="menu-icon-mobile" id="intro-menu-mobile-feeds" uib-dropdown-toggle></svg-icon><div uib-dropdown-menu template-url="public/modules/core/templates/nav-dropdown.template.html" aria-labelledby="button-template-url"></div></a><div ng-show="vm.isMenuOpen" ng-click="vm.closeMenu()" class="menu-overlay"></div></section><div class="placeholder-feeds-sticky-header"></div><div class="w-conect-feeds-apps hidden"><section><div class="inner"><ul><li><i class="fa fa-facebook"></i></li><li><i class="fa fa-instagram"></i></li><li><i class="fa fa-twitter"></i></li><li><i class="fa fa-tumblr"></i></li><li><i class="fa fa-pinterest"></i></li><li><i class="fa fa-google-plus"></i></li><li><i class="fa fa-linkedin"></i></li><li><i class="fa fa-wordpress"></i></li></ul><img ng-src="{{$root.cdnBaseUrl}}/images/placeholder-feeds.png" alt="feeds"><p>Start Connecting Apps Now</p><a href="#0"><svg-icon icon="plus" class="icon-plus"></svg-icon></a></div></section></div><section class="wrapper-feeds"><ds-recommendations></ds-recommendations><div class="w-blank-feeds" ng-show="vm.showMessageFeed" ng-class="{ \'no-recommendation-list\': hasHolospaceRecommendationList }"><section><p class="general-holospace-text hide-br-mobile">Your private feed is where you view content from Holospaces and Channels you follow.</p><p class="general-holospace-text hide-br-mobile">Follow other Holospaces for inspiration and discover content and products that interest you.</p></section></div><div id="navigationTutorialMobile" class="no-header clearfix" main-content><tile-group type="feeds" perpage="15" class="content-padding-mobile" space-id="vm.spaceId" model="vm.dataFeeds" background-fetch="vm.backgroundFetch"></tile-group></div></section><modal id="modal-feeds" type="feed"></modal>'), e.put('public/modules/followers/views/followeroptions.view.html', '<ul class="followers-more-options-list"><li><a href="">Follow</a></li><li><a href="">Send Message</a></li></ul>'), e.put('public/modules/followers/views/followers.view.html', '<div class="w-modal-follow"><span class="ds-modal-close dsicon-close" ng-click="vm.closeModal()"></span><div class="modal-header"><!-- Nav tabs --><div class="hide-scroll"><div class="tabs-wrap"><ul class="nav nav-tabs followers-tabs" role="tablist"><li role="presentation" class="active" ng-click="vm.onClickTab($event, \'followers\')"><a href="#followersTab" aria-controls="followersTab" role="tab" data-toggle="tab">Followers <span ng-show="::vm.relationships.followers.loadedInitial">({{vm.relationships.followers.total | abbreviateNumber}})</span> <span ng-hide="::vm.relationships.followers.loadedInitial">\u2026</span></a></li><li role="presentation" ng-click="vm.onClickTab($event, \'following\')"><a href="#followingTab" aria-controls="followingTab" role="tab" data-toggle="tab">Following <span ng-show="::vm.relationships.following.loadedInitial">({{vm.relationships.following.total | abbreviateNumber}})</span> <span ng-hide="::vm.relationships.following.loadedInitial">\u2026</span></a></li></ul></div></div></div><div class="modal-body"><div><!-- Tab panes --><div class="tab-content"><div role="tabpanel" class="tab-pane active" id="followersTab"><div class="loaderInline loadingRelationship" ng-show="vm.loading"></div><div class="modal-title followers"><div class="modal-title-input"><label class="search-glass dsicon-glass dsicon-glass-mobile" for="input-search"></label><input type="text" class="people-search" id="holospace-follow" placeholder="Search the Holospaces following you..." ng-model="vm.searchUsers"></div></div><div ng-if="vm.relationships.followers.items.length === 0 && !vm.relationships.followers.loading" class="w-create-new-content"><div><p ng-if="!vm.searchUsers.trim()"><span>{{ (vm.isOwnSpace) ? "You don\u2019t" : vm.thisSpace.name + \' doesn\\\'t\' }} have any followers</span> <small ng-if="vm.isOwnSpace">Post something and get noticed!</small></p><div ng-if="vm.isOwnSpace" class="w-search-new-content" ng-click="vm.closeModalFocusSearch()"><a class="search-new-content" ui-sref="create"><svg-icon icon="plus"></svg-icon></a></div><p></p><p ng-if="vm.searchUsers.trim()"><span>Your search criteria has no results</span></p></div></div><div class="w-modal-follow-list w-modal-followers"><div infinite-scroll="vm.loadMore(\'followers\')" infinite-scroll-distance="0" infinite-scroll-parent="true" infinite-scroll-disabled="vm.currentTab !== \'followers\'" infinite-scroll-listen-for-event="loadedfollowers" ng-if="!notParent"><div ng-repeat="relationship in vm.relationships.followers.items" class="relationship-row row"><button class="btn btn-follow-follower" ng-class="{ \'following\' : relationship.isFollowing, \'feedbackFollow\' : vm.feedbackFollow  }" ng-mouseleave="vm.feedbackFollowFunc()" ng-click="vm.mySpace ? vm.follow(relationship) : vm.openAccessModal()" ng-if="relationship.spaceId !== vm.mySpace.id"><span>{{ relationship.isFollowing ? \'Following\' : \'Follow\' }}</span></button><div class="follower-image"><a ui-sref="holospace.home({holospaceName: relationship.vanityUrl})"><img class="img-circle" ng-src="{{ (relationship.photo | processImage : 50 : true) || ($root.cdnBaseUrl + \'/images/default-user.png?1\') }}" data-uid></a></div><div class="followers-info-wrapper"><ds-space-name class="name" space="relationship"></ds-space-name><span class="metrics"><b>{{(relationship.postCount | number) || \'\u2026\'}}</b> Post{{relationship.postCount === 1 ? \'\' : \'s\'}}<div class="horizontal-separator">|</div><b>{{relationship.followerCount | number}}</b> Follower{{relationship.followerCount === 1 ? \'\' : \'s\'}}</span></div><div class="followers-btns-wrapper"><div class="more-options" ng-click="isActive = !isActive"><holo-popover class="holo-popover holo-popover-menu holo-popover-followers-modal" show-icon="true" ng-if="relationship.spaceId !== vm.mySpace.id"><ul class="holo-popover-content popover-menu holo-popover-left"><li><a ng-click="vm.mySpace ? vm.follow(relationship) : vm.openAccessModal()"><span ng-show="relationship.isFollowing">Unfollow</span> <span ng-show="!relationship.isFollowing">Follow</span></a></li><li><a ng-click="vm.handleSendMessage(relationship)">Send a Message</a></li></ul></holo-popover></div></div></div></div><div infinite-scroll="vm.loadMore(\'followers\')" infinite-scroll-distance="0" infinite-scroll-disabled="vm.currentTab !== \'followers\'" infinite-scroll-listen-for-event="loadedfollowers" ng-if="notParent"><div ng-repeat="relationship in vm.relationships.followers.items" class="relationship-row row"><button class="btn btn-follow-follower" ng-class="{ \'following\' : relationship.isFollowing, \'feedbackFollow\' : vm.feedbackFollow  }" ng-mouseleave="vm.feedbackFollowFunc()" ng-click="vm.mySpace ? vm.follow(relationship) : vm.openAccessModal()" ng-if="relationship.spaceId !== vm.mySpace.id"><span>{{ relationship.isFollowing ? \'Following\' : \'Follow\' }}</span></button><div class="follower-image"><a ui-sref="holospace.home({holospaceName: relationship.vanityUrl})"><img class="img-circle" ng-src="{{ (relationship.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid></a></div><div class="followers-info-wrapper"><ds-space-name class="name" space="relationship"></ds-space-name><span class="metrics"><b>{{(relationship.postCount | number) || \'\u2026\'}}</b> Post{{relationship.postCount === 1 ? \'\' : \'s\'}}<div class="horizontal-separator">|</div><b>{{relationship.followerCount | number}}</b> Follower{{relationship.followerCount === 1 ? \'\' : \'s\'}}</span></div><div class="followers-btns-wrapper"><div class="more-options" ng-click="isActive = !isActive"><holo-popover class="holo-popover holo-popover-menu holo-popover-followers-modal" show-icon="true" ng-if="relationship.spaceId !== vm.mySpace.id"><ul class="holo-popover-content popover-menu holo-popover-left"><li><a ng-click="vm.mySpace ? vm.follow(relationship) : vm.openAccessModal()"><span ng-show="relationship.isFollowing">Unfollow</span> <span ng-show="!relationship.isFollowing">Follow</span></a></li><li><a ng-click="vm.handleSendMessage(relationship)">Send a Message</a></li></ul></holo-popover></div></div></div></div></div></div><div role="tabpanel" class="tab-pane" id="followingTab"><div class="modal-title followers"><div class="modal-title-input"><label class="search-glass dsicon-glass dsicon-glass-mobile" for="holospace-youfollow"></label><input type="text" class="people-search" placeholder="Search the Holospaces you follow\u2026" id="holospace-youfollow" ng-model="vm.searchUsers"></div></div><div ng-if="vm.relationships.following.items.length === 0 && !vm.relationships.following.loading" class="w-create-new-content"><div><p ng-if="!vm.searchUsers.trim()"><span>{{ (vm.isOwnSpace) ? "You\u2019re " : vm.thisSpace.name + " is "}}not following anyone</span> <small ng-if="vm.isOwnSpace">Search for content that interests you!</small></p><div ng-if="vm.isOwnSpace && !vm.searchUsers.trim()" class="w-search-new-content" ng-click="vm.closeModalFocusSearch()"><div class="search-new-content"><span class="hicon-search"></span></div></div><p ng-if="vm.searchUsers.trim()"><span>Your search criteria has no results</span></p></div></div><div class="w-modal-follow-list w-modal-following"><div infinite-scroll="vm.loadMore(\'following\')" infinite-scroll-parent="true" infinite-scroll-disabled="vm.currentTab !== \'following\'" infinite-scroll-listen-for-event="loadedfollowing"><div ng-repeat="relationship in vm.relationships.following.items" class="relationship-row row"><button class="btn btn-follow-follower" ng-class="{ \'following\' : relationship.isFollowing}" ng-click="vm.mySpace ? vm.follow(relationship) : vm.openAccessModal()" ng-if="relationship.spaceId !== vm.mySpace.id"><span>{{ relationship.isFollowing ? \'Following\' : \'Follow\' }}</span></button><div class="follower-image"><a ui-sref="holospace.home({holospaceName: relationship.vanityUrl})"><img class="img-circle" ng-src="{{ (relationship.photo | processImage : 50 : true) || ($root.cdnBaseUrl + \'/images/default-user.png?1\') }}" data-uid></a></div><div class="followers-info-wrapper"><ds-space-name class="name" space="relationship"></ds-space-name><span class="metrics"><b>{{(relationship.postCount | number) || \'\u2026\'}}</b> Post{{relationship.postCount === 1 ? \'\' : \'s\'}}<div class="horizontal-separator">|</div><b>{{relationship.followerCount | number}}</b> Follower{{relationship.followerCount === 1 ? \'\' : \'s\'}}</span></div><div class="followers-btns-wrapper"><div class="more-options" ng-click="isActive = !isActive"><holo-popover class="holo-popover holo-popover-menu holo-popover-followers-modal" show-icon="true" ng-if="relationship.spaceId !== vm.mySpace.id"><ul class="holo-popover-content popover-menu holo-popover-left"><li><a ng-click="vm.mySpace ? vm.follow(relationship) : vm.openAccessModal()"><span ng-show="relationship.isFollowing">Unfollow</span> <span ng-show="!relationship.isFollowing">Follow</span></a></li><li><a ng-click="vm.handleSendMessage(relationship)">Send a Message</a></li></ul></holo-popover></div></div></div></div></div></div></div></div></div></div>'), e.put('public/modules/holospace/views/all-search.html', '<section class="tab-embed-wrap" data-ng-controller="SearchController as vm"><section class="clearfix" ui-view="holotab"><tile-group type="search" perpage="15" query="vm.query" class="content-padding-mobile search-tile-group" space-id="\'anyone\'" model="vm.items" status="vm.status"></tile-group></section><div ng-if="vm.status != \'loading\' && vm.items.length > 0" class="search-result-message">Incredible, you\u2019ve reached the end of search results for <span>{{vm.query.query}}</span></div><div ng-if="vm.status != \'loading\' && vm.items.length < 1" class="search-result-message">Sorry, there are no results for <span>{{vm.query.query}}</span></div></section>'), e.put('public/modules/holospace/views/app.view.eventbrite.html', '<div ng-if="vm.checkLinkedNetwork(\'eventbrite\')"><div class="app-name app-source">Shopify</div><div id="eventbrite-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox"><span></span></label></div></div><div class="w-list"><ul><li><div class="w-profile"><img ng-src="{{ vm.networks.eventbrite.picture }}" alt=""> <span>{{ vm.networks.eventbrite.displayName }}</span></div></li></ul></div></div><div ng-if="!vm.checkLinkedNetwork(\'eventbrite\')" class="w-create-account"><a href=""><button></button></a><p><span>You don\u2019t have Eventbrite yet</span> <small>Start by adding the app</small> <a href="http://eventbrite.com/">Create an account</a></p></div>'), e.put('public/modules/holospace/views/app.view.facebook.html', '<div ng-include="\'public/modules/holospace/views/app.view.ui-route.html\'"></div><div class="app-display hidden"><div class="inner"><div ng-if="vm.isAppConnected.facebook"><div class="w-connect connected app-block"><div class="app-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><small>Disconnect</small><label><input type="checkbox" ng-model="vm.isAppConnected[\'facebook\']" ng-model-options="{ debounce: { \'default\': 300 } }"><span></span></label></div></div><i class="fa fa-facebook" aria-hidden="true"></i><p class="label-name">Facebook</p><div class="desc-connect"><p><a ng-href="https://www.facebook.com/{{vm.networks.facebook.id}}" target="_blank">{{vm.networks.facebook.displayName}}</a> is now connected</p><br><p>Feeds are flowing and updated. Sharing is activated and ready. Insights and data are being collected.</p></div></div><div class="w-list w-list--connected app-block"><ul><li><div class="info-app-aside"><input type="checkbox" class="holonis-checkbox" name="appaccount-profile" id="appaccount-profile" ng-model="vm.isAppConnected[\'facebook\']"><label class="submenu-dropdown-result" for="appaccount-profile"></label></div><div class="w-profile"><img ng-src="{{ vm.networks.facebook.picture | processImageURL : getUniqueSelector() : true }}" data-uid alt=""> <span>{{ vm.networks.facebook.displayName }}</span><div class="info-app"><small>Profile - </small><small>12.2K Likes</small></div></div></li><li class="addpage" ng-if="vm.networks.facebook.pages"><p>Pages</p><small>Would you also like to connect any of the pages you manage?</small></li><li ng-repeat="element in vm.networks.facebook.pages"><div class="info-app-aside"><input type="checkbox" class="holonis-checkbox" name="appaccount-{{element.id}}" id="appaccount-{{element.id}}"><label class="submenu-dropdown-result ng-binding" for="appaccount-{{element.id}}"></label></div><div class="w-profile"><!--<img ng-src="{{ element.picture }}" alt="">--><p>{{ element.name }}</p><div class="info-app"><small>Page -</small> <small>12.2K Likes</small></div></div></li></ul></div></div><div ng-if="!vm.isAppConnected.facebook" class="w-create-account"><div class="w-connect app-block"><i class="fa fa-facebook" aria-hidden="true"></i><p class="label-name">Facebook</p><div class="wrap-buttons-connect"><a class="btn btn-hollow-primary" ng-href="/link/facebook?spaceId={{ vm.spaceId }}&space_token={{ vm.spaceToken }}" ng-if="!vm.networks.facebook">Connect Facebook</a> <a class="btn btn-hollow-primary" ng-click="vm.reActivateAccount(\'facebook\')" ng-if="vm.networks.facebook">Connect Facebook</a></div><div class="desc-connect"><p>The Facebook app activates:</p><br><p>Sharing content to Facebook.</p></div><div class="footer-connect"><a role="button" ng-click="vm.learnMore()">Learn more about connecting Facebook</a> <a ng-href="https://www.facebook.com/legal/terms" target="_blank">Review the Facebook Terms of Service</a></div></div></div></div></div>'), e.put('public/modules/holospace/views/app.view.foursquare.html', '<div ng-include="\'public/modules/holospace/views/app.view.ui-route.html\'"></div><div class="app-display app-display--foursquare hidden"><div class="inner"><div ng-show="vm.isAppConnected.foursquare"><div class="w-connect connected app-block"><div class="app-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><small>Disconnect</small><label><input type="checkbox" ng-model="vm.isAppConnected[\'foursquare\']" ng-model-options="{ debounce: { \'default\': 300 } }"><span></span></label></div></div><img src="/images/foursquare-app.png" alt="foursquare"><div class="desc-connect"><!--{{vm.networks.foursquare | json}}--> <a ng-href="https://foursquare.com/v/{{vm.networks.foursquare.id}}" target="_blank">View Listing on Foursquare</a><p class="fz">{{vm.networks.foursquare.name}}</p><br><p>{{vm.networks.foursquare.location.formattedAddress[0]}}</p><p>{{vm.networks.foursquare.location.formattedAddress[1]}}<br>{{vm.networks.foursquare.contact.formattedPhone}}</p></div></div></div><div ng-hide="vm.isAppConnected.foursquare" class="w-create-account"><div class="w-connect app-block"><img src="/images/foursquare-app.png" alt="foursquare"><div class="view-connecting step-1"><div class="desc-connect"><p class="fz">The Foursquare Business app activates:</p><br><p>Display a business location & hours<br>Add a phone number<br>Directions with Google maps<br>Show the latest tips and media<br>uploaded by customer check-ins<br>Link to your profile</p></div><div class="footer-connect"><form action="/link/foursquare"><div><input type="text" name="name" value="" placeholder="Business name" ng-model="vm.foursquareName" required></div><div><input type="text" name="address" value="" placeholder="Address" id="form-address" style="padding:0" ng-model="vm.foursquareAddress"></div><div><input type="text" name="city" value="" placeholder="City" class="input-city" id="form-city" ng-model="vm.foursquareCity"><div class="w-select"><input type="text" name="" value="" id="form-address2" placeholder="State" ng-model="vm.foursquareState"></div><input type="text" name="zip" placeholder="Zip" class="input-zip" id="form-zip" ng-model="vm.foursquareZip"></div><div><input type="text" name="phone" value="" placeholder="Phone" ng-model="vm.foursquarePhone"></div><a class="btn btn-hollow-primary scan" ng-click="vm.scanFoursquare($event)">Scan</a><!-- ng-href="/link/foursquare?spaceId={{ vm.spaceId }}&space_token={{ vm.spaceToken }}&q={{vm.fs.name}}&ll={{vm.fs.ll.lat}}{{vm.fs.ll.lng}}&a={{vm.fs.address}}&c={{vm.fs.city}}&s={{vm.fs.state}}&z={{vm.fs.zip}}&p={{vm.fs.phone}}"--></form></div></div><div class="view-connecting step-2 hide"><div class="desc-connect"><p class="fz">Connect a Foursquare Business Profile</p><br><p class="lighten">SCANNING\u2026</p><i class="fa fa-spinner fa-spin"></i></div><div class="footer-connect"><div><input type="text" name="name" value="" ng-model="vm.foursquareName" readonly="readonly"></div></div></div></div></div></div></div>'), e.put('public/modules/holospace/views/app.view.instagram.html', '<div ng-include="\'public/modules/holospace/views/app.view.ui-route.html\'"></div><div class="app-display hidden"><div class="inner"><div ng-if="vm.isAppConnected.instagram"><div class="w-connect connected app-block"><div class="app-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><small>Disconnect</small><label><input type="checkbox" ng-model="vm.isAppConnected[\'instagram\']" ng-model-options="{ debounce: { \'default\': 300 } }"><span></span></label></div></div><i class="fa fa-instagram" aria-hidden="true"></i><p class="label-name">Instagram</p><div class="desc-connect"><p><a ng-href="https://www.instagram.com/{{vm.networks.instagram.displayName}}" target="_blank">@{{vm.networks.instagram.displayName}}</a> is now connected</p><br><p>Feeds are flowing and updated. Sharing is activated and ready. Insights and data are being collected.</p></div></div></div><div ng-if="!vm.isAppConnected.instagram" class="w-create-account"><div class="w-connect app-block"><i class="fa fa-instagram" aria-hidden="true"></i><p class="label-name">Instagram</p><div class="wrap-buttons-connect"><a class="btn btn-hollow-primary" ng-href="/link/instagram?spaceId={{ vm.spaceId }}&space_token={{ vm.spaceToken }}" ng-if="!vm.networks.instagram">Connect Instagram</a> <a class="btn btn-hollow-primary" ng-click="vm.reActivateAccount(\'instagram\')" ng-if="vm.networks.instagram">Connect Instagram</a></div><div class="desc-connect"><p>The Instagram app activates:</p><br><p>Public posts appear in your feed. Share and schedule content on mobile devices. Get insights and data about activity.</p></div><div class="footer-connect"><a>Learn more about connecting Instagram</a> <a>Review the Instagram Terms of Service</a></div></div></div></div></div>'), e.put('public/modules/holospace/views/app.view.mailchimp.html', '<div ng-if="vm.checkLinkedNetwork(\'mailchimp\')"><div class="app-name app-source">MailChimp Account</div><div id="youtube-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox"><span></span></label></div></div><div class="w-list"><ul><li><div class="w-profile"><img ng-src="{{ vm.networks.mailchimp.picture }}" alt=""> <span>{{ vm.networks.mailchimp.displayName }}</span></div></li></ul></div></div><div ng-if="!vm.checkLinkedNetwork(\'mailchimp\')" class="w-create-account"><a href=""><button></button></a><p><span>You don\u2019t have MailChimp yet</span> <small>Start by adding the app</small> <a href="https://www.mailchimp.com/">Create an account</a></p></div>'), e.put('public/modules/holospace/views/app.view.medium.html', '<div ng-if="vm.checkLinkedNetwork(\'medium\')"><div class="app-name app-source">Shopify</div><div id="medium-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox"><span></span></label></div></div><div class="w-list"><ul><li><div class="w-profile"><img ng-src="{{ vm.networks.medium.picture }}" alt=""> <span>{{ vm.networks.medium.displayName }}</span></div></li></ul></div></div><div ng-if="!vm.checkLinkedNetwork(\'medium\')" class="w-create-account"><a href=""><button></button></a><p><span>You don\u2019t have Medium yet</span> <small>Start by adding the app</small> <a href="http://medium.com/">Create an account</a></p></div>'), e.put('public/modules/holospace/views/app.view.paypal.html', '<div class="app-display-full app-paypal" ng-class="{ \'app-display-full connected\' : !modal}"><div class="app-display-header" ng-if="!modal"><a ui-sref="apps()"><i class="hicon-chevron-left"></i> <span>Back to Apps</span></a></div><div class="app-display-loader" ng-if="state.loading"><holonis-loader></div><h1 class="holonis-payment desktop-only">{{ state.connected ? \'Your shop is connected to PayPal\' : \'Holonis Payments\' }}</h1><div class="app-display-content" ng-if="!state.loading"><img class="app-logo" src="{{$root.cdnBaseUrl}}/images/paypal.png"><div ng-if="!state.connected"><p class="app-text-description">Paypal, the safer and easier way to pay is a globally recognized payments processing provider that helps you to establish trust with customers for your online business.</p><p class="app-text-description with-link">You can also connect using an <a ng-click="connect()" class="app-text-description-link">existing Paypal Account</a></p></div><div ng-if="state.connected" class="app-status"><p class="app-status-success" ng-if="state.confirmed">Your shop is connected to PayPal and accepting payments</p><div class="app-status-with-description" ng-if="!state.confirmed"><p class="app-status-warning"><svg-icon icon="check-red"></svg-icon>PayPal needs to verify your email before you can start selling</p><small>Check your inbox to complete your new PayPal account set up</small></div></div><div class="app-actions"><a ng-click="connect();setPaypalEmailReminder();" ng-if="!state.connected" class="app-button app-button-connect">Connect to <img src="{{$root.cdnBaseUrl}}/images/paypal-white.png"> </a><a ng-click="close();cancelPaypalEmailReminder()" ng-if="!state.connected && modal" class="app-button app-button-outline">Cancel</a> <a ng-if="state.connected" target="_blank" ng-href="https://www.paypal.com/signin" class="app-button app-button-connect">View Payouts</a> <a ui-sref="apps" ng-if="!state.connected && !modal" ng-click="cancelPaypalEmailReminder();" class="app-button app-button-outline">Cancel</a> <a ng-if="state.connected" ng-click="disconnect()" ng-model-options="{ debounce: { \'default\': 300 } }" class="app-button app-button-outline">Disconnect</a></div><div ng-if="!state.connected"><p class="app-text-invite">Don\u2019t have a PayPal account? You\u2019ll be prompted to create one. It\u2019s fast and free! <a href="https://www.paypal.com/us/webapps/mpp/how-paypal-works/overview" target="_blank" class="app-text-invite-link">Learn More.</a></p><div class="app-text-subtitle"><h2>When you connect with PayPal:</h2><hr></div><ul class="app-benefits"><li><svg-icon icon="check"></svg-icon>Customers can buy and pay in one single action.</li><li><svg-icon icon="check"></svg-icon>Your store can accept major credit cards, Paypal and other forms of payment.</li><li><svg-icon icon="check"></svg-icon>Payments can be made in almost any currency.</li></ul></div><div class="app-text-subtitle"><h2>Processing Fee</h2><hr></div><p class="app-text-fee-description">Each transaction carries a 8.5% + 30\xA2 fee. Funds deposited into your account have this amount withdrawn automatically.</p><p class="app-text-footer"><small ng-if="state.connected">Usage of the eCommerce services on Holonis to monetize your passions strickly adheres to the</small><br><a href="https://www.paypal.com/us/webapps/mpp/ua/useragreement-full" target="_blank">Terms of Use </a><span>&</span> <a href="https://www.holonis.com/holonis/p/privacy-policy" target="_blank">Privacy Policy</a></p></div></div>'), e.put('public/modules/holospace/views/app.view.pinterest.html', '<div ng-if="vm.checkLinkedNetwork(\'pinterest\')"><div class="app-name app-source">Pinterest Account</div><div id="pinterest-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox"><span></span></label></div></div><div class="w-list"><ul><li><div class="w-profile"><img ng-src="{{ vm.networks.pinterest.picture }}" alt=""> <span>{{ vm.networks.pinterest.displayName }}</span></div></li></ul></div></div><div ng-if="!vm.checkLinkedNetwork(\'pinterest\')" class="w-create-account"><a href="/link/pinterest?spaceId={{ vm.spaceId }}&space_token={{ vm.spaceToken }}"><button></button></a><p><span>You don\u2019t have Pinterest yet</span> <small>Start by adding the app</small> <a href="https://www.pinterest.com/">Create an account</a></p></div>'), e.put('public/modules/holospace/views/app.view.shopify.html', '<div ng-if="vm.checkLinkedNetwork(\'shopify\')"><div class="app-name app-source">Shopify</div><div id="shopify-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox"><span></span></label></div></div><div class="w-list"><ul><li><div class="w-profile"><img ng-src="{{ vm.networks.shopify.picture }}" alt=""> <span>{{ vm.networks.shopify.displayName }}</span></div></li></ul></div></div><div ng-if="!vm.checkLinkedNetwork(\'shopify\')" class="w-create-account"><a href=""><button></button></a><p><span>You don\u2019t have Shopify yet</span> <small>Start by adding the app</small> <a href="http://shopify.com/">Create an account</a></p></div>'), e.put('public/modules/holospace/views/app.view.soundcloud.html', '<div ng-if="vm.checkLinkedNetwork(\'soundcloud\')"><div class="app-name app-source">Shopify</div><div id="soundcloud-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox"><span></span></label></div></div><div class="w-list"><ul><li><div class="w-profile"><img ng-src="{{ vm.networks.soundcloud.picture }}" alt=""> <span>{{ vm.networks.soundcloud.displayName }}</span></div></li></ul></div></div><div ng-if="!vm.checkLinkedNetwork(\'soundcloud\')" class="w-create-account"><a href=""><button></button></a><p><span>You don\u2019t have Soundcloud yet</span> <small>Start by adding the app</small> <a href="http://soundcloud.com/">Create an account</a></p></div>'), e.put('public/modules/holospace/views/app.view.stripe.html', '<div ng-include="\'public/modules/holospace/views/app.view.ui-route.html\'"></div><div class="app-display-full stripe app-display-full connected"><h1 class="holonis-payment desktop-only">{{ vm.isAppConnected.stripe ? \'Your shop is connected to Stripe\' : \'Connect Stripe to accept payments\'}}</h1><div class="app-display-content"><img src="{{$root.cdnBaseUrl}}/images/stripe-logo-big.png" class="app-stripe-logo"><p class="service-description">You can process payments for your shop using Stripe. When you finish creating an item (product or service) and click publish, Stripe will send you an email at the address below to create your account.</p><p class="app-text-description with-link">You can also connect using an <a ng-href="#" ng-click="vm.connectStripe()" class="app-text-description-link">existing Stripe Account</a>.</p><div class="app-text-subtitle"><h2>Processing Fee</h2><hr></div><p class="text-description">Each transaction carries 8.5% + 30\xA2 fee. Funds deposited into your account have this amount withdrawn automatically.</p><div class="app-actions"><a class="app-button app-button-connect" ng-click="vm.connectStripe()" ng-if="!vm.isAppConnected.stripe">Connect Stripe</a> <a ui-sref="apps" ng-if="!vm.isAppConnected.stripe" class="app-button app-button-outline">Cancel</a> <a ng-if="vm.isAppConnected.stripe" ng-click="vm.disconnectStripe()" ng-model="vm.isAppConnected[\'stripe\']" ng-model-options="{ debounce: { \'default\': 300 } }" class="app-button app-button-outline">Disconnect</a></div><p class="app-text-footer"><a href="https://www.paypal.com/us/webapps/mpp/ua/useragreement-full" target="_blank">Terms of Use </a><span>&</span> <a href="https://www.holonis.com/holonis/p/privacy-policy" target="_blank">Privacy Policy</a></p><div class="ds-messagebox ds-messagebox-warning" ng-if="warning"><div class="ds-messagebox-icon"></div><p class="ds-messagebox-text">A Stripe account with this e-mail address already exists. Please use a different email address or <a ng-href="{{ stripeConnectLink }}">connect your shop with and existing account.</a></p></div></div></div>'), e.put('public/modules/holospace/views/app.view.tumblr.html', '<div ng-if="vm.checkLinkedNetwork(\'tumblr\')"><div class="app-name app-source">Tumblr Account</div><div id="tumblr-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox"><span></span></label></div></div><div class="w-list"><ul><li><div class="w-profile"><img ng-src="{{ vm.networks.tumblr.picture }}" alt=""> <span>{{ vm.networks.tumblr.displayName }}</span></div></li></ul></div></div><div ng-if="!vm.checkLinkedNetwork(\'tumblr\')" class="w-create-account"><a href="/link/tumblr?spaceId={{ vm.spaceId }}&space_token={{ vm.spaceToken }}"><button></button></a><p><span>You don\u2019t have Tumblr yet</span> <small>Start by adding the app</small> <a href="https://www.tumblr.com/">Create an account</a></p></div>'), e.put('public/modules/holospace/views/app.view.twitter.html', '<div ng-include="\'public/modules/holospace/views/app.view.ui-route.html\'"></div><div class="app-display hidden"><div class="inner"><div ng-if="vm.isAppConnected.twitter"><div class="w-connect connected app-block"><div class="app-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><small>Disconnect</small><label><input type="checkbox" ng-model="vm.isAppConnected[\'twitter\']" ng-model-options="{ debounce: { \'default\': 300 } }"><span></span></label></div></div><i class="fa fa-twitter" aria-hidden="true"></i><p class="label-name">Twitter</p><div class="desc-connect"><p><a ng-href="https://twitter.com/{{vm.networks.twitter.displayName}}" target="_blank">@{{vm.networks.twitter.displayName}}</a> is now connected</p><br><p>Feeds are flowing and updated. Sharing is activated and ready. Insights and data are being collected.</p></div></div></div><div ng-if="!vm.isAppConnected.twitter" class="w-create-account"><div class="w-connect app-block"><i class="fa fa-twitter" aria-hidden="true"></i><p class="label-name">Twitter</p><div class="wrap-buttons-connect"><a class="btn btn-hollow-primary" ng-href="/link/twitter?spaceId={{ vm.spaceId }}&space_token={{ vm.spaceToken }}" ng-if="!vm.networks.twitter">Connect Twitter</a> <a class="btn btn-hollow-primary" ng-click="vm.reActivateAccount(\'twitter\')" ng-if="vm.networks.twitter">Connect Twitter</a></div><div class="desc-connect"><p>The Twitter app activates:</p><br><p>Sharing content to Twitter.</p></div><div class="footer-connect"><a role="button" ng-click="vm.learnMore()">Learn more about connecting Twitter</a> <a ng-href="https://twitter.com/en/tos" target="_blank">Review the Twitter Terms of Service</a></div></div></div></div></div>'), e.put('public/modules/holospace/views/app.view.ui-route.html', '<div class="apps-views-header desktop-only apps-views-header--appActive"><a ui-sref="apps" style="color: inherit"><i class="hicon-chevron-left"></i> <span>Back to Apps</span></a></div><div class="loader-apps"><holonis-loader></div>'), e.put('public/modules/holospace/views/app.view.vimeo.html', '<div ng-if="vm.checkLinkedNetwork(\'vimeo\')"><div class="app-name app-source">Shopify</div><div id="vimeo-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox"><span></span></label></div></div><div class="w-list"><ul><li><div class="w-profile"><img ng-src="{{ vm.networks.vimeo.picture }}" alt=""> <span>{{ vm.networks.vimeo.displayName }}</span></div></li></ul></div></div><div ng-if="!vm.checkLinkedNetwork(\'vimeo\')" class="w-create-account"><a href=""><button></button></a><p><span>You don\u2019t have Vimeo yet</span> <small>Start by adding the app</small> <a href="http://vimeo.com/">Create an account</a></p></div>'), e.put('public/modules/holospace/views/app.view.wordpress.html', '<div ng-if="vm.checkLinkedNetwork(\'wordpress\')"><div class="app-name app-source">Wordpress</div><div id="wordpress-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox"><span></span></label></div></div><div class="w-list"><ul><li><div class="w-profile"><img ng-src="{{ vm.networks.wordpress.picture }}" alt=""> <span>{{ vm.networks.wordpress.displayName }}</span></div></li></ul></div></div><div ng-if="!vm.checkLinkedNetwork(\'wordpress\')" class="w-create-account"><a href=""><button></button></a><p><span>You don\u2019t have Wordpress yet</span> <small>Start by adding the app</small> <a href="https://wordpress.com/">Create an account</a></p></div>'), e.put('public/modules/holospace/views/app.view.yelp.html', '<div ng-include="\'public/modules/holospace/views/app.view.ui-route.html\'"></div><div class="app-display app-display--yelp hidden"><div class="inner"><div ng-show="vm.isAppConnected.yelp" class="isAppConnected" ng-class=\'{ "anim" :  vm.isAppConnected.yelp}\'><div class="w-connect connected app-block"><div class="app-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><small>Disconnect</small><label><input type="checkbox" ng-model="vm.isAppConnected[\'yelp\']" ng-model-options="{ debounce: { \'default\': 300 } }"><span></span></label></div></div><img src="/images/yelp-app.png" alt="yelp"><div class="desc-connect"><a ng-href="{{vm.networks.yelp.url}}" target="_blank">View Listing on Yelp</a><p class="fz">{{vm.networks.yelp.displayName}}</p><br><p>{{vm.networks.yelp.location.address[0]}}, {{vm.networks.yelp.location.address[1]}}</p><p>{{vm.networks.yelp.location.city}}, {{vm.networks.yelp.location.stateAbbr}} {{vm.networks.yelp.location.zipCode}}<br>{{vm.networks.yelp.phone}}</p></div></div></div><div ng-show="!vm.isAppConnected.yelp" class="w-create-account"><div class="w-connect app-block"><img src="/images/yelp-app.png" alt="yelp"><div class="view-connecting step-1"><div class="desc-connect"><p class="fz">The Yelp Business app activates:</p><br><p>Display a business location & hours<br>Add a phone number<br>Directions with Google maps<br>Show the latest reviews from Yelp<br>Link to your profile</p></div><a class="btn btn-hollow-primary scan scan--yelp" ng-click="vm.scanYelp($event)">Scan</a><!-- ng-href="/link/yelp?spaceId={{ vm.spaceId }}&space_token={{ vm.spaceToken }}&url={{ vm.yelpUrl }}" --><!-- <a class="btn btn-hollow-primary scan" ng-click="vm.reActivateAccount(\'yelp\')" ng-if="vm.networks.yelp">Scan</a> --></div><div class="view-connecting step-2 hide"><div class="desc-connect"><p class="fz">Connect a Yelp Business Profile</p><br><p class="lighten">SCANNING\u2026</p><i class="fa fa-spinner fa-spin"></i></div></div><div class="footer-connect"><label for=""><span>www.yelp.com/biz/</span> <input type="text" ng-model="vm.yelpUrl" id="input-yelp"></label></div></div></div></div></div>'), e.put('public/modules/holospace/views/app.view.youtube.html', '<div ng-if="vm.isAppConnected.youtube"><div class="w-connect connected app-block"><div class="app-accounts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><small>Disconnect</small><label><input type="checkbox" ng-model="vm.isAppConnected[\'youtube\']" ng-model-options="{ debounce: { \'default\': 300 } }"><span></span></label></div></div><i class="fa fa-facebook" aria-hidden="true"></i><p class="label-name">YouTube</p><div class="desc-connect"><p><a ng-href="https://www.facebook.com/{{vm.networks.youtube.id}}" target="_blank">{{vm.networks.youtube.displayName}}</a> is now connected</p><br><p>YouTube is activated and ready.</p></div></div><div class="w-list w-list--connected app-block"><ul><li><div class="info-app-aside"><input type="checkbox" class="holonis-checkbox" name="appaccount-profile" id="appaccount-profile" ng-model="vm.isAppConnected[\'facebook\']"><label class="submenu-dropdown-result" for="appaccount-profile"></label></div><div class="w-profile"><img ng-src="{{ vm.networks.youtube.picture | processImageURL : getUniqueSelector() : true }}" data-uid alt=""> <span>{{ vm.networks.youtube.displayName }}</span><div class="info-app"><small>Channels - </small><small>Playlists</small></div></div></li></ul></div></div><div ng-if="!vm.isAppConnected.youtube" class="w-create-account"><a href="/link/google?spaceId={{ vm.spaceId }},{{ vm.spaceVanity }}&space_token={{ vm.spaceToken }}"><button></button></a><p><span>You don\'t have YouTube yet</span> <small>Start by adding the app</small> <a href="https://www.youtube.com/">Create an account</a></p></div>'), e.put('public/modules/holospace/views/businesses-search.html', '<section class="tab-embed-wrap" data-ng-controller="SearchController as vm"><section class="clearfix" ui-view="holotab"><tile-group type="search" perpage="15" filter="{indices:\'pages\', instanceType:\'business\'}" query="vm.query" class="content-padding-mobile search-tile-group" space-id="\'anyone\'" model="vm.items" status="vm.status"></tile-group></section><div ng-if="vm.status != \'loading\' && vm.items.length > 0" class="search-result-message">Incredible, you\u2019ve reached the end of search results for <span>{{vm.query.query}}</span></div><div ng-if="vm.status != \'loading\' && vm.items.length < 1" class="search-result-message">Sorry, there are no results for <span>{{vm.query.query}}</span></div></section>'), e.put('public/modules/holospace/views/channel-search.html', '<section class="tab-embed-wrap" data-ng-controller="SearchController as vm"><section class="clearfix" ui-view="holotab"><tile-group type="search" perpage="15" filter="{indices:\'channels\', instanceType:\'channel\'}" query="vm.query" class="content-padding-mobile" space-id="\'anyone\'" model="vm.items" status="vm.status"></tile-group></section><div ng-if="vm.status != \'loading\' && vm.items.length > 0" class="search-result-message">Incredible, you\u2019ve reached the end of search results for <span>{{vm.query.query}}</span></div><div ng-if="vm.status != \'loading\' && vm.items.length < 1" class="search-result-message">Sorry, there are no results for <span>{{vm.query.query}}</span></div></section>'), e.put('public/modules/holospace/views/followers-message.view.html', '<div class="msg-modal msg-modal-active" overlay-close><div class="msg-modal-content"><button class="close-btn" overlay-close></button><div class="msg-modal-header"><button class="back-btn" overlay-close></button> <span class="msg-modal-heading">Message Holospace</span></div><div class="msg-modal-to">To: <img ng-src="{{ relationship.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\' }}"> {{relationship.name}}</div><textarea class="msg-modal-textarea" placeholder="Write your message..." ng-model="newMessage"></textarea><div class="msg-modal-footer"><div class="cancel-btn" overlay-close>Cancel</div><div class="send-btn" ng-click="relationship.sendNewMessage(newMessage)" overlay-close>Send</div></div></div></div>'), e.put('public/modules/holospace/views/holospace-analytics-directive.view.html', '<div class="holospace-analytics-container"><ul class="holospace-analytics">{{vm.scope.score}}<li itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter" class="cursor-pointer holospace-analytics-followers" ng-click="$parent.vm.openFollowModal()"><span class="stat-value" itemprop="userInteractionCount">{{ vm.analyticData.space.followersCount | number }}</span> <span class="stat-label" itemprop="name">Followers</span></li><li itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter" class="holospace-analytics-reach" ng-show="vm.pageViewsLoaded"><span class="stat-value" itemprop="userInteractionCount">{{ vm.pageViews | number }}</span><!-- <span class="stat-label">VIEWS</span> --> <span class="stat-label" itemprop="name">Views</span></li></ul></div>'), e.put('public/modules/holospace/views/holospace-apps.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><!-- Start Apps Feature --><section class="app-connections"><div class="apps-views"><mobile-header center-title="Apps" back-icon="chrevon-left"></mobile-header><div class="apps-view apps-view-nav"><nav class="nav-sidebar"><h1>Connect Applications<hr class="mobile-only"></h1><ul class="app-list"><li ng-click="vm.appActiveFn($event)" data-name="facebook"><img src="{{$root.cdnBaseUrl}}/images/sprite/logo-facebook.svg" class="app-logo" alt="Facebook logo"><label class="social-settings">Facebook</label><svg-icon icon="chevron-right" class="space-icon"></svg-icon></li><li ng-click="vm.appActiveFn($event)" data-name="twitter"><img src="{{$root.cdnBaseUrl}}/images/sprite/logo-twitter.svg" class="app-logo" alt="Twitter logo"><label class="social-settings">Twitter</label><svg-icon icon="chevron-right" class="space-icon"></svg-icon></li><li ng-click="vm.appActiveFn($event)" data-name="stripe"><img src="{{$root.cdnBaseUrl}}/images/sprite/logo-stripe.svg" class="app-logo" alt="Stripe logo"><label class="social-settings">Stripe</label><svg-icon icon="chevron-right" class="space-icon"></svg-icon></li><li ng-show="paypalIsEnabled" ng-click="vm.appActiveFn($event)" data-name="paypal"><img src="{{$root.cdnBaseUrl}}/images/ico-paypal.png" class="app-logo" alt="PayPal logo"><label class="social-settings">Paypal</label><svg-icon icon="chevron-right" class="space-icon"></svg-icon></li></ul></nav></div><section class="apps-view apps-view-content" ui-view="social"></section></div><!-- End container-fluid --></section><!-- End Apps Feature -->'), e.put('public/modules/holospace/views/holospace-draft.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><br><br><br><h1>Drafts View</h1>'), e.put('public/modules/holospace/views/holospace-edit.view.html', '<section class="wrap-fixed-header edit-holospace-app" ng-class="{ \'ds-holospace--is-editing\': vm.editingImage }"><ds-header-creation data="vm.contentData.space" status="header.status" params="header.params"></ds-header-creation><ds-holospace data="vm.space" ng-if="vm.space" editable="true" editing-cover="vm.editingImage"></ds-holospace><section class="inside-nav w-tabs-component w-tabs-component--edit" id="insideNav"><hol-tab-switcher id="navTabs" class="inside-nav-wrapper tabs-component tabs-edit" tabs="vm.holospaceTabs" opt="vm.tabsEdit"></hol-tab-switcher></section><div class="holo-container-md wrap-md-pad content-edit content-creation-body" ng-show="params.length !== undefined && !params.length"><div class="w-about-edit"><p class="general-holospace-text">This is where you can craft the information that gets displayed in your About tab.<br>You have some great features here like adding videos, text, images, maps, etc.. so get some inspiration, get creative and show the world who you are and what you\u2019re all about.</p></div></div><div ng-class="{ \'bg-edit\' : !vm.arrowActive }"><div class="holo-container-md wrap-md-pad content-edit content-creation-body"><ds-story show-title="About you" params="params" type="holospace" ng-if="params"></ds-story><div id="bottom"></div></div></div></section><script type="text/ng-template" id="spaceLinks.html"><div class="holo-modal-temp links-modal w-modal-links-edit">\n        <div class="modal-header">\n            <button class="ds-header-left-button" ng-click="vm.cancel()">Cancel</button>\n            <div class="title">Links</div>\n            <button class="ds-header-right-button ds-header-link" ng-disabled="vm.disableBtn" ng-class="vm.isDisabled" ng-click="vm.cancel()">Done</button>\n        </div>\n        <div class="modal-body scroll-y">\n            <div class="holo-container-md margin-auto">\n                <p class="general-holospace-text" style="margin-bottom: 30px" ng-show="vm.spaceLinks.length <= 0">\n                  Link all your social profiles, websites, blogs, storefronts, etc. to your Holospace to share and get discovered by followers, audiences, and customers across the Internet, all from Holonis.\n                </p>\n                <ul class="list-blank list-links">\n                    <li class="list-links-item" ng-form name="social_form" ng-repeat="item in vm.spaceLinks track by $index" ng-class="{ \'errorList\': social_form.social_links.$error.pattern === true }">\n                        <svg-icon icon="{{ vm.getProviderIcon(item.name) }}" class-name="list-links-logo"></svg-icon>\n                            <div class="social-form">\n                                <input ng-model-options=\'{ debounce: 100 }\'\n                                        id="list-links-link-{{$index}}"\n                                        type="text"\n                                        class="holospace-list-input"\n                                        name="social_links"\n                                        ng-model="item.href"\n                                        placeholder="{{item.name === \'Website\' ? \'Website\' : item.name + \' URL\'}}"\n                                        require\n                                        ng-change="vm.checkUrl($index)">\n                                <div class="validate-url" ng-if="item.error === true">\n                                    <span class="error-links">Check the URL</span>\n                                    <img src="{{$root.cdnBaseUrl}}/images/sprite/red-alert.svg" class="hexagon-error"/>\n                                </div>\n                                <svg-icon icon="close" class-name="list-links-remove" ng-click="vm.removeLink($index)"></svg-icon>\n                            </div>\n                    </li>\n                    <li class="list-links-item list-links-more" overlay="providers">\n                        <span>New Link</span>\n                        <svg-icon icon="plus" class-name="icon-rounded"></svg-icon>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div></script><script type="text/ng-template" id="providers.html"><div class="holo-modal-full providers-modal">\n        <div class="modal-content">\n            <div class="holo-modal-temp">\n                <div class="modal-header">\n                  <i class="ds-back-icon dsicon-chrevon-left " overlay-close></i>\n                  <div class="title">Links</div>\n                </div>\n                <div class="modal-body scroll-y">\n                    <div class="margin-auto providers-grid">\n                      <ul>\n                        <li ng-repeat="provider in vm.providers track by $index" ng-click="vm.selectProvider(provider)" overlay-close>\n                          <svg-icon icon="{{ vm.getProviderIcon(provider.name) }}" overlay-close></svg-icon>\n                          <p overlay-close>{{provider.name}}</p>\n                        </li>\n                      </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div></script>'), e.put('public/modules/holospace/views/holospace-feed.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><br><br><br><h1>Feed View</h1>'), e.put('public/modules/holospace/views/holospace-header.view.html', '<div class="header-mobile-top header-mobile-top--holospace" ng-class="{ \'header-mobile-top-loggedIn\' : !isLoggedOut(), \'header-mobile-top-loggedOut\' : isLoggedOut() }"><a ui-sref="feeds" ng-if="!isLoggedOut()"><i class="ds-back-icon dsicon-chrevon-left" ng-if="!vm.isMySpace"></i></a><h1 ng-if="!isLoggedOut()">{{vm.headerTitle | limitTo: 30}}</h1><div ng-controller="HeaderController as vm"><a uib-dropdown auto-close="outsideClick" ng-if="!isLoggedOut()" is-open="vm.isNavMenuOpenMobile" on-toggle="toggleSideMenu(open)"><svg-icon icon="menu-icon" class="menu-icon-mobile" id="intro-menu-mobile-holospace" uib-dropdown-toggle></svg-icon><div uib-dropdown-menu template-url="public/modules/core/templates/nav-dropdown.template.html" aria-labelledby="button-template-url"></div></a><div ng-show="vm.isMenuOpen" ng-click="vm.closeMenu()" class="menu-overlay"></div></div><img ui-sref="homescreen" class="mobile-holonis-logo" ng-if="isLoggedOut()" ng-src="{{$root.cdnBaseUrl}}/images/svg/logo-holonis-h.svg" alt="holonis-logo"> <a ng-if="isLoggedOut()" class="ds-button-like ds-button-like-mobile-header" ng-click="Authentication.showSignupPrompt()">Sign up / Sign in</a></div><div class="holospace-header" ng-if="vm.currentSpace.provider == \'localstack\'"><div class="new-holospace-cover-wrapper holospace-cover-map"><section id="contact" class="map h-geo"><data class="p-longitude" value="{{ vm.currentSpace.mainLocation.longitude }}"></data><data class="p-latitude" value="{{ vm.currentSpace.mainLocation.latitude }}"></data><div map-lazy-load="https://maps.google.com/maps/api/js?libraries=places&js&key={{vm.mapApiKey}}" ng-if="vm.currentSpace.provider == \'localstack\' && vm.currentSpace.mainLocation"><ng-map center="{{ vm.currentSpace.mainLocation.latitude }}, {{ vm.currentSpace.mainLocation.longitude }}" zoom-to-include-markers="false"><marker position="{{ vm.currentSpace.mainLocation.latitude }}, {{ vm.currentSpace.mainLocation.longitude }}"></marker></ng-map></div></section></div><div class="w-holospace-info clearfix"><div class="holospace-info"><div itemprop="author" itemscope itemtype="http://schema.org/person"><div itemprop="image" class="user-image" overlay-image="{{ ( vm.currentSpace.profilePhoto ) }}"><img ng-show="vm.currentSpaceLoaded" ng-class="{ \'smooth\' : vm.currentSpaceLoaded }" class="img-circle u-photo" ng-src="{{ ( vm.currentSpace.profilePhoto ) | processImageURL : getUniqueSelector() : true }}" data-uid></div></div><div class="user-name-wrapper"><div itemprop="author" itemscope itemtype="http://schema.org/person"><ds-space-name class="user-name" space="vm.currentSpace"></ds-space-name><div class="user-desc" itemprop="description" ng-if="!vm.ownerHasBlocked"><div class="desc">{{vm.currentSpace.information.tagline | limitTo: 50}}</div></div></div><div class="user-analytics" ng-if="!vm.ownerHasBlocked"><div ng-if="vm.currentSpace.provider == \'localstack\'" class="address"><span>{{ vm.currentSpace.mainLocation.city }}</span>, <span>{{ vm.currentSpace.mainLocation.stateAbbr }}</span></div><holospace-analytics analytic-data="vm.analyticData" ng-show="vm.analyticData"></holospace-analytics><div itemprop="author" itemscope itemtype="http://schema.org/person" class="social"><a itemprop="sameAs" ng-repeat="socialMedia in vm.currentSpace.links | limitTo: 5" ng-href="{{ socialMedia.href }}" ng-click="vm.socialClick(socialMedia)" target="_blank" class="u-url holo-social-links" ng-if="socialMedia.href"><svg-icon icon="{{ vm.getProviderIcon(socialMedia.name) }}"></svg-icon></a><a ng-if="vm.currentSpace.links.length > 5" ng-click="vm.modalLinks()"><svg-icon icon="links-more"></svg-icon></a></div><div class="edit-holo-link" ng-show="vm.isMySpace"><a ng-click="vm.toggleEdit();">Edit Profile</a></div><div class="w-follow" ng-if="!isLoggedOut()" ng-show="!vm.isMySpace && vm.flagIsMySpace" itemprop="potentialAction" itemscope itemtype="http://schema.org/FollowAction"><button class="btn" ng-class="{ \'preventClick\' : vm.followLoading }" ng-click="vm.toggleFollow()" ng-if="vm.currentSpaceLoaded && vm.flagFollowText"><span ng-class="{ \'v-hidden\' : vm.followLoading, \'holospace-button-is-following\': vm.isfollowing }"><span ng-show="!vm.isBlocked" class="holospace-button-follow" itemprop="actionStatus">Follow</span> <span ng-show="!vm.isBlocked" class="holospace-button-unfollow">Following</span> </span><span ng-show="vm.isBlocked">Unblock</span><div ng-class="{ \'v-visible\' : vm.followLoading }" class="loaderInline loaderInline--followButton"></div></button></div><div class="w-follow" ng-if="isLoggedOut()" itemprop="potentialAction" itemscope itemtype="http://schema.org/FollowAction"><button itemprop="actionStatus" class="btn" class="trigger-modal" data-open-modal="modal-access" data-type="signin"><span>Follow</span></button></div></div></div><div class="options" action-sheet="vm.holospaceOptions" action-sheet-position="left-center"><svg-icon icon="ellipsis-horizontal"></svg-icon></div></div></div></div><div class="modalLinks" ng-class="{ \'showLinks\' : vm.showLinks }"><header><h6>Links</h6><div class="close-links" ng-click="vm.modalLinks()"><svg-icon icon="close"></svg-icon></div></header><ul><a ng-href="{{ socialMedia.href }}" target="_blank" class="u-url holo-social-links" ng-repeat="socialMedia in vm.currentSpace.links"><li><svg-icon icon="{{ vm.getProviderIcon(socialMedia.name) }}"></svg-icon><p>{{socialMedia.name}}</p></li></a></ul></div>'), e.put('public/modules/holospace/views/holospace-likes.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><mobile-header center-title="Likes" back-icon="chrevon-left"></mobile-header><tabs class="tabs-embed tabs-component w-tabs-likes-saved" space-id="vm.spaceId" array="vm.tabsArray" on-tab-change="vm.onTabChange" drop-settings-fn="vm.dropSettingsFn" always-fixed="true"></tabs>'), e.put('public/modules/holospace/views/holospace-message.view.html', '<div class="msg-modal msg-modal-active animated fadeIn" overlay-close><div class="msg-modal-content"><i class="ds-modal-close dsicon-close msg-close desktop-only" overlay-close></i><div class="msg-modal-header"><button class="back-btn" overlay-close></button> <span class="msg-modal-heading">Message Holospace</span></div><div class="msg-modal-to">To: <img ng-src="{{ vm.currentSpace.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\' }}"> {{vm.currentSpace.name}}</div><textarea class="msg-modal-textarea" placeholder="Write your message..." ng-model="newMessage"></textarea><div class="msg-modal-footer"><div class="cancel-btn" overlay-close>Cancel</div><div class="send-btn" ng-click="sendNewMessage(newMessage)" overlay-close>Send</div></div></div></div>'), e.put('public/modules/holospace/views/holospace-new-info.view.html', '<div class="new-holospace-info-wrapper" ng-class="{ \'loading\' : creating }"><div class="loading-message"><p>Your Holospace is being created.</p></div><div ng-if="selected.provider === \'facebook\'" class="timeline-animation timeline-animation-1"><h1 ng-hide="vm.newAccount">Awesome, your Facebook {{ selected.type | lowercase }} is now connected, let\u2019s confirm a few things. <small class="subtitle-small-create-holospace">You can edit the info below before moving forward</small></h1><h1 ng-show="vm.newAccount">Create your new Holospace account. <small class="subtitle-small-create-holospace">Fill the form below before moving forward</small></h1></div><h1 ng-if="selected.provider === \'google\'" class="timeline-animation timeline-animation-1">Fantastic, your Google profile is now connected, let\u2019s confirm a few things</h1><div class="card timeline-animation timeline-animation-2"><div class="card-content custom-card" ng-class="{ invalid: validation.email === false }"><p>This email will be used for notifications and orders.</p><input ng-model="selected.email" placeholder="email"></div></div><div class="card timeline-animation timeline-animation-3"><div class="card-content custom-card" ng-class="{ invalid: validation.name === false }"><p>This will be name or title to your Holospace. It can be changed at any time.</p><input ng-model="selected.name" placeholder="Full name"></div></div><div class="card timeline-animation timeline-animation-4"><div class="card-content custom-card" ng-class="{ invalid: validation.slug === false }"><!-- <p>Username</p> --><p>Once set the URL cannot be changed.</p><div class="input-with-prefix"><small>holonis.com/</small> <input ng-model="selected.slug" placeholder="username" maxlength="30" ng-change="applyUsernameRules()"><!-- <p class="invalid">Sorry, that name has already been<br> taken. Try another combination.</p> --></div><span class="card-btn card-btn-circle username-status" ng-class="{ invalid: (selected.valid === false), valid: (selected.valid === true) }"><i class="fa fa-check valid"></i> <i class="fa fa-times invalid"></i> </span><a class="card-btn username-generate" ng-click="vm.randomUsername()"><i class="fa fa-repeat"></i></a></div></div><holonis-loader ng-show="creating" class="-center -absolute-center"></div>'), e.put('public/modules/holospace/views/holospace-new-profiles.view.html', '<div class="new-holospace-profiles-wrapper"><div ng-if="!creating"><div ng-if="!vm.firstHolospace"><div class="card" ng-class="{\'active\': selected === rawSpace}"><div class="card-content" ng-click="vm.select(rawSpace)"><div class="card-content-flex"><div class="card-avatar"><a class="btn-rounded"><svg-icon icon="plus"></svg-icon></a></div><h4>Create your Holospace from scratch</h4></div></div></div><p ng-if="vm.provider === \'facebook\' || vm.providers.facebook" class="profile-cards-section-title">Or get a headstart and use your Facebook account</p></div><!-- <h1 ng-if="vm.firstHolospace">Here\u2019s what we found using Facebook, select an account to get started.</h1> --><h1 ng-if="vm.firstHolospace">Select an account to begin building your first Holospace. <small class="subtitle-small-create-holospace">Holonis will import your profile photo, cover image and name.</small></h1><div class="card card-clickable card-separator" ng-repeat="l in links" ng-class="{\'active\': selected === l}"><div class="card-content" ng-click="vm.select(l)"><div class="card-content-flex"><div class="card-avatar"><a class="avatar-rounded" ng-style="{\'background-image\': \'url(\' + (l.profilePhoto | processImageURL : getUniqueSelector()) + \')\'}" data-uid><span class="icn icn-soc icn-fb-color" ng-if="l.provider"></span></a></div><div><h4>{{l.name}}</h4><p>{{l.type}}</p></div></div></div><div class="card-overlay" ng-if="l.spaceId"><div class="card-overlay-content">Holospace created<svg-icon icon="check" class="icon-rounded icon-success"></svg-icon></div></div></div></div><holonis-loader ng-show="creating" class="-center -absolute-center"></div>'), e.put('public/modules/holospace/views/holospace-new.view.html', '<section class="wrap-fixed-header edit-holospace"><div class="header-fixed align-center clearfix newHolospace"><span class="align-center">Create a Holospace</span> <button type="button" class="btn left-position" ng-click="vm.cancel()" ng-if="primarySpace">Back</button> <button type="button" class="btn right-position" ng-click="vm.next()" ng-disabled="(vm.currentState === vm.states.profiles && !vm.hasSelected)">Next</button><div class="loaderInline" ng-class="{ \'loaded\' : vm.loaded }"></div><!-- || creating --></div><div class="edit-holospace-container" ng-include="vm.currentState"></div></section>'), e.put('public/modules/holospace/views/holospace-notification.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><section class="inside-nav inside-nav--notification" id="insideNav"><hol-tab-switcher ng-if="vm.holospaceTabs && vm.holospaceName" id="navTabs" class="inside-nav-wrapper" tabs="vm.holospaceTabs" holospacename="vm.holospaceName"></hol-tab-switcher></section><section class="main-holospace-content clearfix" ui-view="holotab"><!-- TODO: make a piece html  --><div class="wrap-notification"><div class="drop-notifications drop-notifications--page-notification"><ul><li class="unread"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"><p class="dib"><span class="highlighted">Zachary Schenkler </span>started following your channel <span class="highlighted">18 dope things to love.</span></p><img src="http://lorempixel.com/42/42/" alt="" class="dib"><br><span class="time">5 hrs ago</span></li><li class="unread"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"><p class="dib"><span class="highlighted">Zachary Schenkler </span>started following your channel <span class="highlighted">18 dope things to love.</span></p><img src="http://lorempixel.com/42/42/" alt="" class="dib"><br><span class="time">5 hrs ago</span></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"><p class="dib"><span class="highlighted">Zachary Schenkler </span>started following your channel <span class="highlighted">18 dope things to love.</span></p><img src="http://lorempixel.com/42/42/" alt="" class="dib"><br><span class="time">5 hrs ago</span></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"><p class="dib"><span class="highlighted">Zachary Schenkler </span>started following your channel <span class="highlighted">18 dope things to love.</span></p><img src="http://lorempixel.com/42/42/" alt="" class="dib"><br><span class="time">5 hrs ago</span></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"><p class="dib"><span class="highlighted">Zachary Schenkler </span>started following your channel <span class="highlighted">18 dope things to love.</span></p><img src="http://lorempixel.com/42/42/" alt="" class="dib"><br><span class="time">5 hrs ago</span></li><li class="has-thumbs"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"><p class="dib"><span class="highlighted">Zachary Schenkler </span>started following your channel <span class="highlighted">18 dope things to love.</span></p><img src="http://lorempixel.com/42/42/" alt="" class="dib"><br><div class="in-thumbs"><img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"></div><span class="time">5 hrs ago</span></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"><p class="dib"><span class="highlighted">Zachary Schenkler </span>started following your channel <span class="highlighted">18 dope things to love.</span></p><img src="http://lorempixel.com/42/42/" alt="" class="dib"><br><span class="time">5 hrs ago</span></li><li class="has-thumbs"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"><p class="dib"><span class="highlighted">Zachary Schenkler </span>started following your channel <span class="highlighted">18 dope things to love.</span></p><img src="http://lorempixel.com/42/42/" alt="" class="dib"><br><div class="in-thumbs"><img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"></div><span class="time">5 hrs ago</span></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"><p class="dib"><span class="highlighted">Octavio Dope </span>published a new post video<span class="highlighted">Unboxing Ipad Pro</span></p><img src="http://lorempixel.com/69/42/" alt="" class="dib"><br><span class="time">Sept 24 at</span><br><span class="time" style="top:-10px">10:27pm</span></li></ul></div></div></section>'), e.put('public/modules/holospace/views/holospace-notification.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><br><br><br><div class="dropNotificationMobile" ng-click="vm.dropNotification()">All notifications</div><tabs class="tabs-embed tabs-embed--notification" space-id="vm.spaceId" array="vm.tabsArray"></tabs>'), e.put('public/modules/holospace/views/holospace-saved.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><mobile-header center-title="Saved" back-icon="chrevon-left"></mobile-header><tabs class="tabs-embed tabs-component w-tabs-likes-saved" space-id="vm.spaceId" array="vm.tabsArray" on-tab-change="vm.onTabChange" drop-settings-fn="vm.dropSettingsFn" always-fixed="true"></tabs>'), e.put('public/modules/holospace/views/holospace-settings.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><mobile-header center-title="Settings" back-icon="chrevon-left"></mobile-header><tabs class="tabs-embed tabs-component tabs-embed--settings" space-id="vm.spaceId" array="vm.tabsArray" on-tab-change="vm.onTabChange" drop-settings-fn="vm.dropSettingsFn" always-fixed="true"></tabs>'), e.put('public/modules/holospace/views/holospace-transactions.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><mobile-header center-title="Transactions" back-icon="chrevon-left"></mobile-header><tabs class="tabs-embed tabs-component tabs-transaction" array="vm.tabsArray" always-fixed="true"></tabs>'), e.put('public/modules/holospace/views/holospace-widgets.view.html', '<div class="row" style="width: 700px;margin-left: auto;margin-right: auto"><div ng-if="vm.networkName === \'facebook\'" class="fb-page" data-href="https://www.facebook.com/{{vm.facebook.handle}}/" data-tabs="timeline" data-small-header="false" data-adapt-container-width="true" data-hide-cover="false" data-show-facepile="true"><blockquote cite="https://www.facebook.com/{{vm.facebook.handle}}/" class="fb-xfbml-parse-ignore"><a href="https://www.facebook.com/{{vm.facebook.handle}}/">{{vm.facebook.name}}</a></blockquote></div><div ng-if="vm.networkName === \'twitter\'"><a class="twitter-timeline" href="https://twitter.com/{{vm.twitter.handle}}">Tweets by {{vm.twiiter.name}}</a><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div><div ng-if="vm.networkName === \'media\'" style="margin-left:10%"><div ng-repeat="media in vm.media"><div ng-if="media.network === \'facebook\'" class="fb-post" data-href="{{media.src}}"></div><div ng-if="media.network === \'twitter\'"><twitter-widget twitter-widget-id="vm.getTweetId(media.src)"></twitter-widget></div><!-- <div ng-if ="media.network === \'instagram\'">          --></div></div></div>'), e.put('public/modules/holospace/views/holospace.notification.html', ''), e.put('public/modules/holospace/views/holospace.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><ds-holospace data="vm.currentSpace" ng-if="vm.currentSpace.provider != \'localstack\'"></ds-holospace><section class="mobile-only"><div data-ng-include="\'public/modules/holospace/views/holospace-header.view.html\'" ng-controller="HolospaceHeaderController as vm"></div></section><!-- TODO: Fix zindex with login  --><div ng-if="vm.space.isPrivate && !vm.space.isFollowing && !vm.space.isMySpace" class="holospace-private"><div ng-if="vm.space.isPrivate" class="holospace-private-filter"></div><div class="holospace-private-container"><img src="{{$root.cdnBaseUrl}}/images/sprite/lock-private.svg" alt="Private Account"><h2 class="holospace-private-container-title">This Account is Private</h2><p class="holospace-private-container-description" ng-if="!isLoggedOut()">Want to see what {{vm.space.name}} creates?<br>Ask them for a follow.</p><p class="holospace-private-container-description" ng-if="vm.space.isPrivate && isLoggedOut() && !isFollowing">Already following {{vm.space.name}}? You need to be connected<br>to see what they\u2019ve created.</p><a href="javascript:;" ng-if="vm.space.isPrivate && isLoggedOut() && !isFollowing" class="ds-btn ds-btn--md-2 ds-btn--black btn-private-container" ng-click="Authentication.showLoginPrompt()">Log In or Sign Up</a></div></div><div class="hidden sticky-tabs-placeholder-home" style="height: 50px"></div><div ng-if="!vm.space.isPrivate || vm.space.isFollowing || vm.space.isMySpace"><section class="inside-nav w-tabs-component" ng-class="{\'logged-in-bar\' : !isLoggedOut()}" id="insideNav" sticky sticky-offset-top="60"><hol-tab-switcher ng-if="vm.holospaceTabs && vm.holospaceName" id="navTabs" class="inside-nav-wrapper tabs-component" tabs="vm.holospaceTabs" holospacename="vm.holospaceName"></hol-tab-switcher></section><div class="hidden sticky-tabs-placeholder-home" style="height: 50px"></div><section class="main-holospace-content clearfix" ui-view="holotab"></section><div class="w-footer-places" ng-if="vm.space.location"><div class="place-notification"><a href="#0">Is this your business? You can claim this space!</a></div><div class="footer-places"><a ui-sref="directory">{{vm.space.location[0].country}}</a> <span class="separator">&gt;</span> <a ng-if="vm.space.subType != \'state\'" ui-sref="holospace.explore({holospaceName:vm.space.location[0].stateVanityUrl})">{{vm.space.location[0].state}}</a> <span ng-if="vm.space.subType != \'state\'" class="separator">&gt;</span> <a ng-if="vm.space.subType != \'city\' && vm.space.subType != \'state\'" ui-sref="holospace.explore({holospaceName:vm.space.location[0].cityVanityUrl})">{{vm.space.location[0].city}}</a> <span ng-if="vm.space.subType != \'city\' && vm.space.subType != \'state\'" class="separator">&gt;</span> <span ng-repeat="category in vm.space.categories | limitTo:3"><a ui-sref="geoCategoryPage({holospaceName: vm.space.location[0].cityVanityUrl || vm.space.location[0].stateVanityUrl, categoryName: category.slug})" title="{{category.title}}">{{category.title}}</a> <span class="separator">&gt;</span> </span><span>{{vm.space.name}}</span></div></div></div>'), e.put('public/modules/holospace/views/item-search.html', '<section class="tab-embed-wrap" data-ng-controller="SearchController as vm"><section class="clearfix" ui-view="holotab"><tile-group type="search" perpage="15" filter="{indices:\'pages\', instanceType:\'item\'}" query="vm.query" class="content-padding-mobile" space-id="\'anyone\'" model="vm.items" status="vm.status"></tile-group></section><div ng-if="vm.status != \'loading\' && vm.items.length > 0" class="search-result-message">Incredible, you\u2019ve reached the end of search results for <span>{{vm.query.query}}</span></div><div ng-if="vm.status != \'loading\' && vm.items.length < 1" class="search-result-message">Sorry, there are no results for <span>{{vm.query.query}}</span></div></section>'), e.put('public/modules/holospace/views/learn.view.html', '<div class="apps-views-learn-more">Authorizing social media apps enables you to directly share any content you create or find to your accounts on those platforms.</div>'), e.put('public/modules/holospace/views/likes-all.view.html', '<section class="wrapper-likes" data-ng-controller="HolospaceLikesController as vm"><div class="w-blank-reactions" ng-if="vm.emptyContent"><section><p class="general-holospace-text">This private feed is where everything that you\'ve Liked on Holonis can be viewed.</p></section></div><tile-group type="likes" query="vm.query" limit="15" class="" space-id="vm.spaceId" model="items"></tile-group></section>'), e.put('public/modules/holospace/views/likes-channels.view.html', '<section class="wrapper-likes" data-ng-controller="HolospaceLikesController as vm"><div class="w-blank-reactions" ng-if="vm.emptyContent"><section></section></div><tile-group type="likes" query="vm.query" filter="{type:\'channel\'}" limit="15" class="" space-id="vm.spaceId" model="items"></tile-group></section>'), e.put('public/modules/holospace/views/likes-item.view.html', '<section class="wrapper-likes" data-ng-controller="HolospaceLikesController as vm"><div class="w-blank-reactions" ng-if="vm.emptyContent"><section></section></div><tile-group type="likes" query="vm.query" filter="{type:\'item\'}" limit="15" class="" space-id="vm.spaceId" model="items"></tile-group></section>'), e.put('public/modules/holospace/views/likes-pages.view.html', '<section class="wrapper-likes" data-ng-controller="HolospaceLikesController as vm"><div class="w-blank-reactions" ng-if="vm.emptyContent"><section></section></div><tile-group type="likes" query="vm.query" filter="{type:\'page\'}" limit="15" class="" space-id="vm.spaceId" model="items"></tile-group></section>'), e.put('public/modules/holospace/views/likes-places.view.html', '<section class="wrapper-likes" data-ng-controller="HolospaceLikesController as vm"><div class="w-blank-reactions" ng-if="vm.likes.length <= 0"><section></section></div><!-- <tile-group type="places" perpage="15" class="" space-id="vm.spaceId"></tile-group> --></section>'), e.put('public/modules/holospace/views/likes-posts.view.html', '<section class="wrapper-likes" data-ng-controller="HolospaceLikesController as vm"><div class="w-blank-reactions" ng-if="vm.emptyContent"><section></section></div><tile-group type="likes" query="vm.query" filter="{type:\'post\'}" limit="15" class="" space-id="vm.spaceId" model="items"></tile-group></section>'), e.put('public/modules/holospace/views/likes-spaces.view.html', '<section class="wrapper-likes" data-ng-controller="HolospaceLikesController as vm"><div class="w-blank-reactions" ng-if="vm.likes.length <= 0"><section></section></div><tile-group type="" perpage="15" class="" space-id="vm.spaceId"></tile-group></section>'), e.put('public/modules/holospace/views/notifications-initial.view.html', '<section class="tab-embed-wrap"><section class="main-holospace-content clearfix" ui-view="holotab"><!-- TODO: make a piece html  --><div class="wrap-notification"><div class="drop-notifications drop-notifications--page-notification"><ul><li class="unread"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="unread"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="has-thumbs"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a></p><div class="in-thumbs"><img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"><br style="clear:both"><span class="time">5 hrs ago</span></div><p></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="has-thumbs"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a></p><div class="in-thumbs"><img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"><br style="clear:both"><span class="time">5 hrs ago</span></div><p></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/69/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">Sept 24 at</span><br><span class="time" style="top:-3px">10:27pm</span></p><br></li></ul></div></div></section></section>'), e.put('public/modules/holospace/views/notifications-tab1.view.html', '<section class="tab-embed-wrap"><section class="main-holospace-content clearfix" ui-view="holotab"><!-- TODO: make a piece html  --><div class="wrap-notification"><div class="drop-notifications drop-notifications--page-notification"><ul><li class="unread"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="unread"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="has-thumbs"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a></p><div class="in-thumbs"><img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"><br style="clear:both"><span class="time">5 hrs ago</span></div><p></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="has-thumbs"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a></p><div class="in-thumbs"><img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"><br style="clear:both"><span class="time">5 hrs ago</span></div><p></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/69/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">Sept 24 at</span><br><span class="time" style="top:-3px">10:27pm</span></p><br></li></ul></div></div></section></section>'), e.put('public/modules/holospace/views/notifications-tab2.view.html', '<section class="tab-embed-wrap"><section class="main-holospace-content clearfix" ui-view="holotab"><!-- TODO: make a piece html  --><div class="wrap-notification"><div class="drop-notifications drop-notifications--page-notification"><ul><li class="unread"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="unread"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="has-thumbs"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a></p><div class="in-thumbs"><img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"><br style="clear:both"><span class="time">5 hrs ago</span></div><p></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="has-thumbs"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a></p><div class="in-thumbs"><img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"><br style="clear:both"><span class="time">5 hrs ago</span></div><p></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/69/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">Sept 24 at</span><br><span class="time" style="top:-3px">10:27pm</span></p><br></li></ul></div></div></section></section>'), e.put('public/modules/holospace/views/notifications-tab3.view.html', '<section class="tab-embed-wrap"><section class="main-holospace-content clearfix" ui-view="holotab"><!-- TODO: make a piece html  --><div class="wrap-notification"><div class="drop-notifications drop-notifications--page-notification"><ul><li class="unread"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="unread"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="has-thumbs"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a></p><div class="in-thumbs"><img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"><br style="clear:both"><span class="time">5 hrs ago</span></div><p></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">5 hrs ago</span></p><br></li><li class="has-thumbs"><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/42/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a></p><div class="in-thumbs"><img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"> <img src="http://lorempixel.com/30/30/" alt="" class="rounded dib"><br style="clear:both"><span class="time">5 hrs ago</span></div><p></p><br></li><li><img src="http://lorempixel.com/39/39/" alt="" class="rounded dib"> <img src="http://lorempixel.com/69/42/" alt="" class="dib"><p class="dib"><a href="" class="highlighted">Zachary Schenkler </a>started following your channel <a href="" class="highlighted">18 dope things to love.</a><br><span class="time">Sept 24 at</span><br><span class="time" style="top:-3px">10:27pm</span></p><br></li></ul></div></div></section></section>'), e.put('public/modules/holospace/views/notifications-tab4.view.html', '<section class="tab-embed-wrap"><section class="main-holospace-content clearfix" ui-view="holotab"><div class="wrap-notification"><div class="drop-notifications drop-notifications--page-notification">No more notifications</div></div></section></section>'), e.put('public/modules/holospace/views/options.view.html', '<ul class="more-options-list"><li><a ng-click="vm.openFollowModal()">Follow</a></li><li><a ng-click="vm.openMessageModal(null, vm.parent.space.id)">Send Message</a></li><li><a href="">Sharing</a></li></ul>'), e.put('public/modules/holospace/views/pages-search.html', '<section class="tab-embed-wrap" data-ng-controller="SearchController as vm"><section class="clearfix" ui-view="holotab"><tile-group type="search" perpage="15" filter="{indices:\'pages\', instanceType:\'page\'}" query="vm.query" class="content-padding-mobile" space-id="\'anyone\'" model="vm.items" status="vm.status"></tile-group></section><div ng-if="vm.status != \'loading\' && vm.items.length > 0" class="search-result-message">Incredible, you\u2019ve reached the end of search results for <span>{{vm.query.query}}</span></div><div ng-if="vm.status != \'loading\' && vm.items.length < 1" class="search-result-message">Sorry, there are no results for <span>{{vm.query.query}}</span></div></section>'), e.put('public/modules/holospace/views/posts-search.html', '<section class="tab-embed-wrap" data-ng-controller="SearchController as vm"><section class="clearfix" ui-view="holotab"><tile-group type="search" perpage="15" filter="{indices:\'posts\', instanceType:\'post\'}" query="vm.query" class="content-padding-mobile" space-id="\'anyone\'" model="vm.items" status="vm.status"></tile-group></section><div ng-if="vm.status != \'loading\' && vm.items.length > 0" class="search-result-message">Incredible, you\u2019ve reached the end of search results for <span>{{vm.query.query}}</span></div><div ng-if="vm.status != \'loading\' && vm.items.length < 1" class="search-result-message">Sorry, there are no results for <span>{{vm.query.query}}</span></div></section>'), e.put('public/modules/holospace/views/saved-all.view.html', '<section class="wrapper-saved" data-ng-controller="HolospaceSavedController as vm"><div class="w-blank-reactions" ng-if="vm.emptyContent"><section><p class="general-holospace-text">This private feed is where everything you\'ve saved on Holonis can be viewed.<br>Filter this section to quickly find a specific piece of content.</p></section></div><tile-group type="saves" query="vm.query" perpage="15" class="" space-id="vm.spaceId" model="items"></tile-group></section>'), e.put('public/modules/holospace/views/saved-channels.view.html', '<section class="wrapper-saved" data-ng-controller="HolospaceSavedController as vm"><div class="w-blank-reactions" ng-if="vm.emptyContent"><section></section></div><tile-group type="saves" query="vm.query" filter="{type:\'channel\'}" perpage="15" class="" space-id="vm.spaceId" model="items"></tile-group></section>'), e.put('public/modules/holospace/views/saved-item.view.html', '<section class="wrapper-saved" data-ng-controller="HolospaceSavedController as vm"><div class="w-blank-reactions" ng-if="vm.emptyContent"><section></section></div><tile-group type="saves" query="vm.query" filter="{type:\'item\'}" perpage="15" class="" space-id="vm.spaceId" model="items"></tile-group></section>'), e.put('public/modules/holospace/views/saved-pages.view.html', '<section class="wrapper-saved" data-ng-controller="HolospaceSavedController as vm"><div class="w-blank-reactions" ng-if="vm.emptyContent"><section></section></div><tile-group type="saves" query="vm.query" filter="{type:\'page\'}" perpage="15" class="" space-id="vm.spaceId" model="items"></tile-group></section>'), e.put('public/modules/holospace/views/saved-posts.view.html', '<section class="wrapper-saved" data-ng-controller="HolospaceSavedController as vm"><div class="w-blank-reactions" ng-if="vm.emptyContent"><section></section></div><tile-group type="saves" query="vm.query" filter="{type:\'post\'}" perpage="15" class="" space-id="vm.spaceId" model="items"></tile-group></section>'), e.put('public/modules/holospace/views/saved-spaces.view.html', '<section class="wrapper-saved" data-ng-controller="HolospaceSavedController as vm"><div class="w-blank-reactions" ng-if="vm.saves.length <= 0"><section></section></div><tile-group type="" perpage="15" class="" space-id="vm.spaceId"></tile-group></section>'), e.put('public/modules/holospace/views/settings-account.view.html', '<section class="tab-embed-wrap w-settings w-settings--accounts" data-ng-controller="HolospaceSettingsAccountController as vm"><!-- Start Account Tab pane --><div class="container-fluid settings--accounts"><div class="row"><div class="col-sm-12"><div class="settings-block" ng-if="vm.canUpdateEmail"><header><p ng-if="vm.space.primary">Change basic account settings.</p><p ng-if="!vm.space.primary">Change your communication email.</p></header><form class="basic"><div class="row settings-form-container"><ds-input id="new-email" ng-model="vm.space.email" type="text" label="Email" placeholder="Enter your email"></ds-input><small ng-if="vm.space.primary">Email will not be publicly displayed.</small> <small ng-if="!vm.space.primary">Used for orders, messages and notifications.</small></div><div class="row"><div class="col-xs-12 tac"><button class="btn mt30" ng-click="vm.saveAccountSettings()" ng-class="{ \'settings-saving\': vm.saving }">Save Changes</button></div></div></form></div><div class="settings-block" ng-if="vm.canUpdatePassword"><header><p>Change, set or recover a password.</p></header><form class="pass"><div class="row settings-form-container"><ds-input id="current-password" validate="$validators.current" type="password" ng-model="vm.data.currentPassword" type="text" label="Current password" placeholder="Enter current password"></ds-input><small class="settings-forgot-pass forgot-pass" ng-click="vm.reset()" ng-class="{ \'settings-fort-pass--error\': $validators.current }">Forgot your password?</small></div><div class="row settings-form-container"><ds-password id="new-password" validate="$validators.newPassword" params="vm.inputs.password" level="vm.state.passwordLevel" ng-model="vm.data.newPassword" type="password" ng-change="vm.matchPasswords()" label="Password" placeholder="Type a password"></ds-password></div><div class="row settings-form-container .settings-form-container--last"><ds-input id="confirm-new-password" validate="$validators.confirm" params="vm.inputs.confirm" change="vm.matchPasswords()" ng-model="vm.data.confirmNewPassword" type="password" label="Confirm password" placeholder="Retype the password" required></ds-input></div><div class="row"><div class="col-xs-12 tac"><button class="btn" ng-disabled="!(vm.inputs.confirm.iconValidator.valid && vm.data.currentPassword && vm.data.newPassword && vm.data.confirmNewPassword)" ng-click="vm.changePassword()">Save Changes</button></div></div></form></div></div></div></div><!-- End Account Tab pane --></section>'), e.put('public/modules/holospace/views/settings-followers.view.html', '<section class="tab-embed-wrap w-settings w-settings--followers" data-ng-controller="HolospaceSettingsFollowersController as vm" ng-class="{ \'w-settings--followers--loading\': state.loading }"><div class="loaderInline" ng-if="state.loading"></div><!-- Start Account Tab pane --><div role="tabpanel" class="tab-pane active" id="followersTab" infinite-scroll="vm.loadMore()" infinite-scroll-distance="0" infinite-scroll-listen-for-event="loadedfollowers"><div class="container-fluid settings"><!-- Start Profile Avatar Row --><div class="row"><div class="col-md-12 items-followers"><div class="w-search"><svg-icon icon="magnifier"></svg-icon><input type="text" placeholder="Search the Holospaces that follow you..." ng-model="vm.searchUsers" ng-change="search()"></div><p class="general-holospace-text general-holospace-text--followers" ng-show="vm.relationships.followers.length <= 0"><span>Discover: Followers</span><br>Your Followers tab is where you can message, search, view, and manage Holospaces that follow you.</p><div ng-repeat="relationship in vm.relationships.followers track by $index " class="relationship-row clearfix"><div class="follower-image"><a ui-sref="holospace.home({holospaceName: relationship.vanityUrl})"><img data-uid class="img-circle" ng-src="{{ (relationship.photo | processImage : 50 : true) || ($root.cdnBaseUrl + \'/images/default-user.png?1\') }}"></a></div><div class="followers-info-wrapper"><a ui-sref="holospace.home({holospaceName: relationship.vanityUrl})"><ds-space-name class="name" space="relationship"></ds-space-name></a><span class="metrics"><b>{{relationship.postCount || 0}}</b> Post | <b>{{relationship.followerCount | abbreviateNumber }}</b> Followers</span><div class="followers-options-wrapper"><button class="btn" ng-class="{ \'following\' : relationship.isFollowing }" ng-click="vm.toggleFollow(relationship)"><span>{{ relationship.isFollowing ? \'Following\' : \'Follow\' }}</span></button><div class="more-options" ng-click="isActive = !isActive"><holo-popover class="holo-popover holo-popover-menu holo-popover-left icn-more-options holo-popover-followers-modal holo-popover-followers-settings" ng-if="relationship.id !== vm.space.id"><ul class="holo-popover-content popover-menu holo-popover-left"><li ng-click="vm.toggleFollow(relationship)" class="follow-option"><a>{{ relationship.isFollowing ? \'Following\' : \'Follow\' }}</a></li><li><a ui-sref="holospace.home({holospaceName: relationship.vanityUrl})">Profile</a></li><li><a ng-click="vm.shareModal()">Share</a></li><li><a overlay="message">Message</a></li></ul></holo-popover></div></div></div></div></div></div></div></div></section>'), e.put('public/modules/holospace/views/settings-preferences.view.html', '<section class="tab-embed-wrap w-settings w-settings--preferences"><!-- Preference Settings with bootstrap titatoggle Buttons/Elements --><div class="container-fluid settings"><!-- Login Alerts Toggle --><div class="row"><div class="col-md-12 list-item-settings-tab"><label class="toggle-label">Login&nbsp;Alerts</label><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox" checked="checked"><span></span></label></div></div><br><label class="toggle-desc">Get notified when logging in from mobile browsers</label></div></div><!-- End Login-Alerts-Toggle --><!-- Activity Toggle --><div class="row"><div class="col-md-12 list-item-settings-tab"><label class="toggle-label">Activity</label><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox" checked="checked"><span></span></label></div></div><br><label class="toggle-desc">Get a notification whenever there is an activity that involves you</label></div></div><!-- End Activity-Toggle --><!-- Mobile Notifications Toggle --><div class="row"><div class="col-md-12 list-item-settings-tab"><label class="toggle-label">Mobile&nbsp;Notifications</label><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox" checked="checked"><span></span></label></div></div><br><label class="toggle-desc">Turn mobile notifications on/off</label></div></div><!-- End Mobile Notifications-Toggle --><!-- Notifications Toggle --><div class="row"><div class="col-md-12 list-item-settings-tab"><label class="toggle-label">Notifications</label><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox" checked="checked"><span></span></label></div></div><br><label class="toggle-desc">Comments on your pages</label></div></div><!-- End Notifications-Toggle --><!-- Comments After Toggle --><div class="row"><div class="col-md-12 list-item-settings-tab"><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox" checked="checked"><span></span></label></div></div><br><label class="toggle-desc">Comments after you on other pages</label></div></div><!-- End Comments After-Toggle --><!-- New Followers Toggle --><div class="row"><div class="col-md-12 list-item-settings-tab"><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox" checked="checked"><span></span></label></div></div><br><label class="toggle-desc">New followers</label></div></div><!-- End New Followers-Toggle --><!-- New messages Toggle --><div class="row"><div class="col-md-12 list-item-settings-tab"><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox"><span></span></label></div></div><br><label class="toggle-desc">New messages</label></div></div><!-- End New messages-Toggle --><!-- Replies & Conversations Toggle --><div class="row"><div class="col-md-12 list-item-settings-tab"><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox" checked="checked"><span></span></label></div></div><br><label class="toggle-desc">Replies&nbsp;&#x26;&nbsp;Conversations</label></div></div><!-- End New Replies & Conversations-Toggle --><!-- New orders Toggle --><div class="row"><div class="col-md-12 list-item-settings-tab"><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox" checked="checked"><span></span></label></div></div><br><label class="toggle-desc">New orders</label></div></div><!-- End New orders-Toggle --><!-- New pages in draft Toggle --><div class="row"><div class="col-md-12 list-item-settings-tab"><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox" checked="checked"><span></span></label></div></div><br><label class="toggle-desc">New pages in draft</label></div></div><!-- End New pages in draft-Toggle --><!-- Comments after you on other pages--><div class="row"><div class="col-md-12 list-item-settings-tab"><div id="login-alerts-toggle"><div class="checkbox-slider--b checkbox-slider-md tita"><label><input type="checkbox" checked="checked"><span></span></label></div></div><br><label class="toggle-desc">Comments after you on other pages</label></div></div><!-- End Comments after you on other pages--></div><!-- End container-fluid --></section>'), e.put('public/modules/holospace/views/settings-privacy.view.html', '<section data-ng-controller="HolospaceSettingsPrivacyController"><div class="settings-privacy"><div class="settings-privacy-card"><div class="settings-privacy-card-container"><h2 class="settings-privacy-card-container-content__title"><div class="checkbox switcher" ng-class="{ \'is-processing\' : state.isUpdating }"><label><span class="checkbox-label">Approve Message Requests</span> <input ng-click="changeMessagingRequestStatus()" ng-model="state.messagingPermissionRequired" type="checkbox"> <span><small></small></span></label></div></h2><p ng-if="!state.isProcessing" class="settings-privacy-card-container-content__description">You can choose to require that people ask for permission when they want to have a conversation with you.</p><hr><div class="settings-privacy-card-container-content"><h2 class="settings-privacy-card-container-content__title"><div class="checkbox switcher" ng-class="{ \'is-processing\' : state.isProcessing }"><label><span class="checkbox-label">Private Account</span> <input ng-click="changePrivateStatus()" ng-model="state.isPrivate" type="checkbox"> <span><small></small></span></label></div></h2><p ng-if="!state.isProcessing" class="settings-privacy-card-container-content__description">When your account is set to private, only people you approve can see the content you publish or make purchases from your shop. Your existing followers will not be affected.</p><div ng-model="state.isProcessing"><h2 ng-if="state.isProcessing" class="settings-privacy-card-container-content__title">Content is processing</h2><p ng-if="state.isProcessing" class="settings-privacy-card-container-content__description">This shouldn\u2019t take long. We\'re working to make your content <span>{{state.isPrivate ? \'invisible\' : \'visible\'}}</span> to all the connected functions in Holonis.</p></div></div></div></div></div></section>'), e.put('public/modules/holospace/views/settings-refer.view.html', '<section class="tab-embed-wrap w-settings w-settings--refer" data-ng-controller="HolospaceSettingsController as vm"><!-- Start Account Tab pane --><div role="tabpanel" class="tab-pane active" id="referTab"><div class="container-fluid settings w-refer"><!-- Start Profile Avatar Row --><div class="row"><div class="col-md-12 bdb items-refer"><h1>Earn App Credits For Every Friend You Invite To Holonis</h1></div><div class="col-md-12 bdb items-refer" style="padding-top: 15px; padding-bottom: 10px; margin-bottom: 15px"><form class="form-horizontal"><div class="form-group"><div class="holosettings-profile-avatar">Rewards</div><div class="w-info-refer"><div class="info-refer"><span class="currency">{{25 | currency}}</span><br><span class="text-highlight" style="position: relative; top: -4px">Whoa, Thats serious invitation flow</span> <span class="hicon-menu-dots"></span></div></div></div></form></div><div class="col-md-12 items-refer"><form class="form-horizontal"><div class="form-group"><div class="holosettings-profile-avatar">Create Invitations<br><span class="text-highlight">Your Unique Share Address</span></div><div class="w-info-refer"><div class="info-refer url"><span class="text-highlight">Https//:california-paint-paint-experts.holonis.com</span></div></div></div></form></div><div class="col-md-12 w-tabs-share items-refer"><form class="form-horizontal"><div class="form-group"><ul><li class="active" ng-click="vm.tabsShareFn(\'Facebook\', $event)"><span class="hicon-facebook"></span></li><li ng-click="vm.tabsShareFn(\'Instagram\', $event)"><span class="hicon-instagram"></span></li><li ng-click="vm.tabsShareFn(\'Twitter\', $event)"><span class="hicon-twitter"></span></li><li ng-click="vm.tabsShareFn(\'E-mail\', $event)"><span class="hicon-email"></span></li><li ng-click="vm.tabsShareFn(\'Linkedin\', $event)"><span class="hicon-linkedin"></span></li></ul><div class="tab-share"><p class="text-highlight">Share to {{vm.tabsShare}}</p><div class="tab-share-content"><p>Hi everyone, I wanted to let you konw abouthis fantastic destination where iam managing my digital persence, It\u2019s nothing you\u2019ve ever experienced</p><p>Where else can you be all you can be! Follow the link to get cresits for both of us!</p><p><a href="">Https//:california-paint-paint-experts.holonis.com/BGGDEE54</a></p></div></div></div></form><button type="button" class="btn btn-default">Post Invite</button></div></div></div><div class="w-table-list-refer"><div class="container-fluid settings w-refer"><div class="cold-md-12"><div class="table-list-refer"><table class="table"><thead><tr class="bdb"><th class="first-column">Accepted</th><th>Joined</th><th class="last-column">Credits</th></tr></thead><tbody><tr class="bdb"><td><div class="holosettings-profile-avatar"><a ng-if="!vm.currentSpace.profilePhoto" ui-sref-active="active" class="item avatar"></a> <a ng-if="vm.currentSpace.profilePhoto" ui-sref-active="active" class="item signed-in"><img ng-src="{{ vm.currentSpace.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\' }}"> </a><a class="holosetting-username">{{vm.currentSpace.name}} </a><a class="holosetting-url">Via Facebook</a></div></td><td>Dec 28, 2016</td><td>5</td></tr><tr class="bdb"><td><div class="holosettings-profile-avatar"><a ng-if="!vm.currentSpace.profilePhoto" ui-sref-active="active" class="item avatar"></a> <a ng-if="vm.currentSpace.profilePhoto" ui-sref-active="active" class="item signed-in"><img ng-src="{{ vm.currentSpace.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\' }}"> </a><a class="holosetting-username">{{vm.currentSpace.name}} </a><a class="holosetting-url">Via Instagram</a></div></td><td>Dec 28, 2016</td><td>5</td></tr><tr class="bdb"><td><div class="holosettings-profile-avatar"><a ng-if="!vm.currentSpace.profilePhoto" ui-sref-active="active" class="item avatar"></a> <a ng-if="vm.currentSpace.profilePhoto" ui-sref-active="active" class="item signed-in"><img ng-src="{{ vm.currentSpace.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\' }}"> </a><a class="holosetting-username">{{vm.currentSpace.name}} </a><a class="holosetting-url">Via Email</a></div></td><td>Dec 28, 2016</td><td>5</td></tr><tr class="bdb"><td><div class="holosettings-profile-avatar"><a ng-if="!vm.currentSpace.profilePhoto" ui-sref-active="active" class="item avatar"></a> <a ng-if="vm.currentSpace.profilePhoto" ui-sref-active="active" class="item signed-in"><img ng-src="{{ vm.currentSpace.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\' }}"> </a><a class="holosetting-username">{{vm.currentSpace.name}} </a><a class="holosetting-url">Via Facebook</a></div></td><td>Dec 28, 2016</td><td>5</td></tr><tr class="bdb"><td><div class="holosettings-profile-avatar"><a ng-if="!vm.currentSpace.profilePhoto" ui-sref-active="active" class="item avatar"></a> <a ng-if="vm.currentSpace.profilePhoto" ui-sref-active="active" class="item signed-in"><img ng-src="{{ vm.currentSpace.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\' }}"> </a><a class="holosetting-username">{{vm.currentSpace.name}} </a><a class="holosetting-url">Via Instagram</a></div></td><td>Dec 28, 2016</td><td>5</td></tr><tr class="bdb"><td><div class="holosettings-profile-avatar"><a ng-if="!vm.currentSpace.profilePhoto" ui-sref-active="active" class="item avatar"></a> <a ng-if="vm.currentSpace.profilePhoto" ui-sref-active="active" class="item signed-in"><img ng-src="{{ vm.currentSpace.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\' }}"> </a><a class="holosetting-username">{{vm.currentSpace.name}} </a><a class="holosetting-url">Via Email</a></div></td><td>Dec 28, 2016</td><td>5</td></tr></tbody></table></div></div></div></div></div></section>'), e.put('public/modules/holospace/views/settings-team.view.html', '<section class="tab-embed-wrap w-settings w-settings--team" data-ng-controller="HolospaceSettingsTeamController as vm"><!-- Start Account Tab pane --><div role="tabpanel" class="tab-pane active clearfix" id="teamTab"><div class="w-teams-pages"><ul><li class="active" ng-click="vm.pageTeams(\'members\', $event)">Members</li><li ng-click="vm.pageTeams(\'invite\', $event)">Invite<ul ng-if="vm.teamPage === \'invite\'"></ul></li></ul></div><div ng-show="vm.teamPage === \'members\'" class="wrapper-team-content"><div class="container-fluid settings w-refer w-team"><!-- Start Profile Avatar Row --><div class="row"><div class="col-md-12 bdb items-refer" style="position: relative"><div class="add-team"><input type="text" class="search-team" placeholder="Search within invited authors\u2026" ng-model="searchItem"><svg-icon icon="explore-icon" class="hicon-search"></div><p class="general-holospace-text general-holospace-text--settings" ng-show="vm.listTeams.length == 0 && !vm.isLoading">Here you can invite and manage other authors to contribute content to your Holospace.</p></div></div></div><div class="w-search-team-result"><div class="container-fluid settings w-refer"><div class="loaderInline" ng-class="{ \'isHidden\' : !vm.isLoading}"></div><div class="cold-md-12 items-team" ng-repeat="team in vm.listTeams | filter: { name: searchItem }"><div class="items-team-image"><a ui-sref="holospace.home({holospaceName: team.vanityUrl})"><img data-uid ng-src="{{ (team.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}"></a></div><div class="items-team-info-wrapper"><a ui-sref="{{team.memberId ? \'holospace.home({holospaceName: team.vanityUrl})\' : \'.\'}}"><span class="name">{{team.name}}</span> </a><span class="metrics"><b>{{team.postCount || 0}}</b> Post | <b>{{team.followerCount || 0}}</b> Followers | <b>{{team.pageViews || 0}}</b> Views | <b>{{team.status || \'pending\'}}</b></span><div class="items-team-options-wrapper" ng-if="team.memberId"><div class="more-options" ng-click="isActive = !isActive"><holo-popover class="holo-popover holo-popover-menu holo-popover-left icn-more-options holo-popover-followers-modal holo-popover-team-settings" ng-if="relationship.id !== vm.space.id"><ul class="holo-popover-content popover-menu holo-popover-left"><li><a ui-sref="holospace.home({holospaceName: team.vanityUrl})">Profile</a></li><li><a ng-click="vm.shareModal()">Share</a></li><li><a overlay="message">Message</a></li></ul></holo-popover></div></div></div></div></div></div></div><div ng-show="vm.teamPage === \'invite\'" class="wrapper-team-content"><div class="container-fluid settings w-refer w-team"><div class="container-fluid settings w-refer w-team"><!-- Start Profile Avatar Row --><div class="row"><div class="col-md-12 bdb items-refer" style="position: relative"><div class="add-team"><input type="text" class="search-team" placeholder="Search for someone to invite\u2026" ng-model="addItem" ng-model-options="{ debounce: searchDelay }"><svg-icon icon="explore-icon" class="hicon-search"></div><div class="search-result-team"><div class="inner animate-show" ng-show="addItem"><div class="cold-md-12 items-team" ng-repeat="item in vm.searchingResultTeam | filter:addItem "><form class="form-horizontal"><div class="form-group"><div class="holosettings-profile-avatar"><a ng-if="!item.profilePhoto" ui-sref-active="active" class="item avatar"><img data-uid ng-src="{{ $root.cdnBaseUrl + \'/images/default-user.png?1\' | processImageURL : getUniqueSelector() : true }}"> </a><a ng-if="item.profilePhoto" ui-sref-active="active" class="item signed-in"><img data-uid ng-src="{{ (item.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}"></a><ds-space-name class="holosetting-username" space="item"></ds-space-name><a class="holosetting-url">{{ item.status }}</a></div></div></form><button class="btn btn-invite" ng-click="vm.addTeamItemFn(item)">Invite</button></div></div></div></div></div></div></div></div></div><div class="modal-invite" ng-if="vm.inviteBy"><svg-icon icon="close" ng-click="vm.inviteBy = null;"></svg-icon><div class="inner" ng-if="vm.inviteBy === \'email\'"><h1>Invite Team Members</h1><hr><p>We\u2019ll send a brief email inviting your friends to join by clicking a link.</p><form><textarea name="emails" ng-model="vm.emails" placeholder="Add multiple emails separated by comma(s)..."></textarea><button class="btn" ng-click="vm.sendEmailInvite()">Send Invite</button></form></div><div class="inner" ng-if="vm.inviteBy === \'contacts\'"><h1>Invite Team Members</h1><hr><p>We\u2019ll send a brief email inviting your friends to join by clicking a link.</p><form><textarea name="emails" ng-model="vm.emails" placeholder="Add multiple emails separated by commas\u2026"></textarea><button class="btn" ng-click="vm.sendEmailInvite()">Send Invite</button></form></div></div></section>'), e.put('public/modules/holospace/views/space-search.html', '<section class="tab-embed-wrap" data-ng-controller="SearchController as vm"><section class="clearfix" ui-view="holotab"><tile-group type="search" perpage="15" filter="{indices:\'spaces\', instanceType:\'space\'}" query="vm.query" class="content-padding-mobile search-tile-group" space-id="\'anyone\'" model="vm.items" status="vm.status"></tile-group></section><div ng-if="vm.status != \'loading\' && vm.items.length > 0" class="search-result-message">Incredible, you\u2019ve reached the end of search results for <span>{{vm.query.query}}</span></div><div ng-if="vm.status != \'loading\' && vm.items.length < 1" class="search-result-message">Sorry, there are no results for <span>{{vm.query.query}}</span></div></section>'), e.put('public/modules/holospace/views/space-tab.view.html', '<div ng-if="vm.callToAction" class="heading-intro"><span>You don\'t have any content</span></div><div ng-if="!vm.callToAction"><div class="holospace-tab-content" main-content><tile-group type="" perpage="15" class="" space-id="vm.spaceId"></tile-group></div></div>'), e.put('public/modules/holospace/views/tab-switcher.view.html', '<div class="shadow-before"></div><div class="hide-scroll"><div class="tabs-wrap tabs-wrap--holospace"><ul class="holo-tabs" style="padding-left:0"><li ng-repeat="tab in vm.tabs | orderBy : \'weight\'" class="tab-dropdown-item tab-item--{{tab.routeState}}" ui-sref-active="active" ng-click="vm.scrollTo($event); privacyStatus();" ng-if="!vm.opt"><a ui-sref="holospace.{{tab.routeState}}({{tab.sref}})">{{tab.tabText}}</a></li><!-- edit tabs --><li ng-repeat="tab in vm.tabs | orderBy : \'weight\'" class="tab-dropdown-item tab-item--{{tab.routeState}}" ng-click="vm.scrollTo($event);" ng-if="vm.opt">{{tab.tabText}}</li></ul></div></div><div class="shadow-after"></div>'), e.put('public/modules/holospace/views/teams-message.view.html', '<div class="msg-modal msg-modal-active" overlay-close><div class="msg-modal-content"><div class="msg-modal-header"><button class="back-btn dsicon-close" overlay-close></button> <span class="msg-modal-heading">Message Holospace</span></div><div class="msg-modal-to">To: <img ng-src="{{ team.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\' }}"> {{team.name}}</div><textarea class="msg-modal-textarea" placeholder="Write your message..." ng-model="newMessage"></textarea><div class="msg-modal-footer"><div class="cancel-btn" overlay-close>Cancel</div><div class="send-btn" ng-click="sendNewMessage(team.memberId, newMessage)" overlay-close>Send</div></div></div></div>'), e.put('public/modules/holospace/views/unclaimed-holospace.view.html', '<!-- About --><section id="top" class="h-card unclaimed-holospace--about"><section id="about" class="about"><div class="container-fluid"><div class="row"><div class="col-xs-12"><div class="w-location-info"><svg-icon icon="unclaimed-marker"></svg-icon><p>631 B Street, San Diego, CA 92101</p></div><div class="w-location-sub-info"><ul><li><svg-icon icon="unclaimed-phone" class-name="phone-rotate"></svg-icon><span>888-123-4567</span></li><li><svg-icon icon="unclaimed-compass"></svg-icon><span><a ng-href="{{ $parent.vm.directions }}" target="_system">Directions</a></span></li><li><svg-icon icon="unclaimed-clock"></svg-icon><span>Hours</span></li></ul></div></div></div></div><div class="container-fluid bordered"><div class="row"><div class="col-xs-12"><div class="w-location-extra-info"><svg-icon icon="unclaimed-info"></svg-icon><p>Info</p></div><div class="w-location-extra-sub-info"><p class="title">Services</p><p>Walk-ins welcome, Good for Groups, Good for Kids, Take Out, Delivery and Catering</p></div></div></div></div></section><div class="w-decks-unclaimed"><p>Want to Claim this Space? <a href="">click here</a></p></div></section>'), e.put('public/modules/home/views/home.view.html', '<section class="content clearfix container-unclaimed holospace-about"><div class="wrapper-preloader" ng-if="vm.loading"><holonis-loader></div><div ng-if="!vm.loading"><div ng-if="vm.callToAction" class="heading-intro"><p class="general-holospace-text" ng-if="vm.isMySpace">Your About section is where you show the world what you\'re all about.<br>Showcase your personal brand with videos, text, images, maps, and more.</p><a class="icn icn-add-content" ng-if="vm.isMySpace" ng-click="vm.toggleEdit()"></a><p style="line-height: 1.2" ng-if="!vm.isMySpace">No activity yet</p></div><div ng-if="!vm.callToAction" class="container holo-container-md pad-md-bottom margin-auto holo-width"><div ng-if="vm.parent.vm.space.provider == \'localStack\'" class="address"><unclaimed-holospace space="vm.parent.vm.space"></unclaimed-holospace></div><div ng-if="params" class="row"><div class="col-xs-12"><ds-story-view params="params"></ds-story-view></div></div></div></div></section>'), e.put('public/modules/insights/views/commerce.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><mobile-header center-title="Insights" back-icon="chrevon-left"></mobile-header><div><div id="insights"><div id="insights-wrapper"><div id="insights-nav"><h2>Holonis Insights</h2><ul><li><a ui-sref="insights.publications" title="Publications">Publications</a></li><li><a ui-sref="insights.commerce" title="Commerce" class="active">Commerce</a></li><li><a ui-sref="insights.followers" title="Followers">Followers</a></li></ul></div><div id="insights-container"><div class="insights-banner" ng-if="banner.visible"><div class="insights-banner-content"><img ng-src="{{$root.cdnBaseUrl}}/images/insights-ico.png" class="insights-icon"><h4>Holonis Insights</h4><p class="insights-banner--items">See how your commerce efforts are paying off. Record every transaction, find your overall revenue and how people engage with your items.</p><button ng-click="banner.close()" class="close-button dsicon-close"></button></div></div><div id="insights-publications-container" class="insights-content" ng-class="{ \'insights-loading\': tracker.active() }"><div class="loaderInline insights-main-loader"></div><div><div class="insights-content-block"><h3>Commerce</h3><div class="insights-filter"><ds-select class="ds-select-combo" ng-model="selectGroup.items.period.selected" ng-change="updateData()" id="{{ select.label }}" class="ds-select-input" options="selectGroup.items.period.select.options" params="value,name" required></ds-select></div><div class="insights-content-block" ng-if="isSharingAdRevenue"><ul class="insights-chart-tabs"><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Today\'s Ad Revenue</span> <span class="insights-chart-tabs-total">{{ adRevenue.new | currency }}</span></a></li><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Total Ad Revenue</span> <span class="insights-chart-tabs-total">{{ adRevenue.total | currency }}</span></a></li></ul><div class="container-chart"><canvas class="chart chart-line" chart-colors="colors" chart-data="adRevenueData" chart-labels="adRevenueLabels" chart-options="adRevenueOptions"></canvas></div></div><ul class="insights-chart-tabs"><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type"><span class="insights-legend insights-legend--blue"></span>Gross Order Value</span> <span class="insights-chart-tabs-total">{{ sellingRevenue.gross | currency }}</span></a></li><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type"><span class="insights-legend insights-legend--green"></span>Cancelled Order Value</span> <span class="insights-chart-tabs-total">{{ sellingRevenue.cancelled | currency }}</span></a></li><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type"><span class="insights-legend insights-legend--orange"></span>Net Revenue</span> <span class="insights-chart-tabs-total">{{ sellingRevenue.net | currency }}</span></a></li></ul><div id="insights-chart-group-items-revenue" class="insights-chart-group insights-chart-group--videos active"><div class="container-chart"><canvas class="chart chart-line" chart-colors="colors" chart-data="revenueData" chart-labels="revenueLabels" chart-options="revenueOptions"></canvas></div></div></div></div><div class="insights-content-block insights-content-block--multi"><div class="insights-chart-block"><ul class="insights-chart-tabs" ng-if="!tracker.active()"><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type"><span class="insights-legend insights-legend--green"></span>Unique Buyers</span> <span class="insights-chart-tabs-total">{{ customers.total }}</span></a></li></ul><div id="insights-chart-group-items-customers" class="insights-chart-group insights-chart-group--videos active"><div class="container-chart"><canvas class="chart chart-line" chart-colors="colors" chart-data="customersData" chart-labels="customersLabels" chart-options="customersOptions"></canvas></div></div></div><div class="insights-chart-block"><ul class="insights-chart-tabs" ng-if="!tracker.active()"><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type"><span class="insights-legend insights-legend--orange"></span>Available Inventory</span> <span class="insights-chart-tabs-total">{{ inventory.current }}</span></a></li></ul><div id="insights-chart-group-items-inventory" class="insights-chart-group insights-chart-group--videos active"><div class="container-chart"><canvas class="chart chart-line" chart-colors="colors" chart-data="inventoryData" chart-labels="inventoryLabels" chart-options="inventoryOptions"></canvas></div></div></div></div><div class="insights-content-block"><p class="last-updated" ng-if="lastUpdated">Chart data last updated {{ lastUpdated }}</p></div><!-- <div class="insights-content-block" ng-if="!state.error && publications.length">\n                <h4>Best Selling</h4>\n                <div class="swiper-container insights-content-block-swiper">\n                  <ul class="insights-top-group swiper-wrapper">\n                    <li class="insights-item-wrapper swiper-slide" ng-repeat="publication in publications | limitTo: 3">\n                      <a ng-click="showPublication(publication)" href="javascript:;" class="insights-item" ng-style="{ \'background-image\': \'url(\\\'\' + (publication.thumb | processImageURL : getUniqueSelector()) + \'\\\')\' }" data-uid>\n                        <div class="insights-top-content-title">{{ publication.title }}</div>\n                        <div class="insights-top-content-engagement">\n                          <span>{{ publication.views | abbreviateNumber }} Sold units</span>\n                          <span>{{ publication.timeWatched | currency }} Revenue</span>\n                        </div>\n                      </a>\n                      <div class="insights-play-button" ng-click="showPublication(publication)">\n                      </div>\n                    </li>\n                  </ul>\n                  <div class="swiper-pagination"></div>\n                </div>\n              </div> --><div class="insights-content-block"><h4>All Products and Services</h4><table class="insights-table insights-table--items"><thead><tr><th class="insights-table-date">Published</th><th class="insights-table-detail">Product</th><th class="insights-table-metrics insights-table-metrics--revenue">Net Revenue</th><th class="insights-table-metrics insights-items-mobile-hidden">Sold units</th><th class="insights-table-metrics insights-items-mobile-hidden">Rating</th><th class="insights-table-metrics insights-items-mobile-hidden insights-table-metrics--views">Views</th></tr></thead><tbody><tr ng-repeat="publication in publications" ng-click="showPublication(publication)"><td class="insights-table-date"><span>{{ publication.activity.published | amUtc | amDateFormat:\'h:mm a\' }}</span> {{ publication.activity.published | amUtc | amDateFormat:\'MM/DD/YYYY\' }}</td><td class="insights-table-detail"><span class="insights-thumb-wrapper--video"><img ng-if="publication.activity.cover.url" class="insights-thumb-wrapper-image" ng-src="{{ publication.activity.cover.url | processImageURL : 55 : true }}"></span><div class="insights-table-detail-title">{{ publication.title || \'\u2014\' | cut:true:35: "..." }}</div></td><td class="insights-table-metrics insights-table-metrics--revenue">{{ publication.totals.ordersNetRevenue | currency }}</td><td class="insights-table-metrics">{{ publication.totals.ordersQuantitySold | abbreviateNumber }}</td><td class="insights-table-metrics"><ds-rating level="publication.rating"></ds-rating><span ng-if="!publication.rating">None</span></td><td class="insights-table-metrics insights-table-metrics--views">{{ publication.totals.viewsNew | abbreviateNumber }}</td></tr></tbody></table><div ng-if="publicationsPagination.hasMorePages" class="see-more" ng-class="{ \'see-more-loading\': itemsLoading.active() }" ng-click="updatePublications(publicationsPagination.page + 1)"><div class="loaderInline"></div><a href="javascript:;" class="see-more-text">See More</a></div></div></div></div></div></div></div>'), e.put('public/modules/insights/views/followers.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><mobile-header center-title="Insights" back-icon="chrevon-left"></mobile-header><div id="insights"><div id="insights-wrapper"><div id="insights-nav"><h2>Holonis Insights</h2><ul><li><a ui-sref="insights.publications" title="Publications">Publications</a></li><li><a ui-sref="insights.commerce" title="Commerce">Commerce</a></li><li><a ui-sref="insights.followers" title="Followers" class="active">Followers</a></li></ul></div><div id="insights-container"><div class="insights-banner" ng-if="banner.visible"><div class="insights-banner-content"><img ng-src="{{$root.cdnBaseUrl}}/images/insights-ico.png" class="insights-icon"><h4>Holonis Insights</h4><p class="insights-banner--followers">Track the daily growth of your network on Holonis. Follow people of interest and start conversations.</p><button ng-click="banner.close()" class="close-button dsicon-close"></button></div></div><div id="insights-followers-container" class="insights-content" ng-class="{ \'insights-loading\': tracker.active() }"><div class="loaderInline insights-main-loader"></div><div><div class="insights-content-block"><h3>Followers</h3><div class="insights-filter"><ds-select class="ds-select-combo" ng-model="selectGroup.followers.period.selected" ng-change="filterPeriod()" id="{{ select.label }}" class="ds-select-input" options="selectGroup.followers.period.select.options" params="value,name" required></ds-select></div><div ng-if="!tracker.active() && state.noData" class="insights-no-data-wrapper"><div class="insights-no-data">No data available for this period.</div></div><div ng-if="!tracker.active() && state.error" class="insights-no-data-wrapper"><div class="insights-no-data">An error occurred while retrieving insights.</div></div><div class="insights-chart" ng-if="!state.noData && !state.error"><div id="insights-chart-group-followers-interactions" class="insights-chart-group active"><ul class="insights-chart-tabs"><li><a href="javascript:;" class="insights-chart-tab active"><span class="insights-chart-tabs-type">Total Followers</span> <span class="insights-chart-tabs-total">{{ spaceData.totals.followersTotal | number }}</span></a></li></ul><div class="container-chart"><canvas class="chart chart-bar" chart-data="followersData" chart-labels="followersLabels" chart-dataset-override="followersOverride" chart-options="followersOptions"></canvas></div><p class="last-updated" ng-if="lastUpdated">Chart data last updated {{ lastUpdated }}</p></div></div><div class="insights-content-block"><h4 class="insights-followers-list-title">Following You</h4><div ng-include="\'public/modules/followers/views/followers.view.html\'" ng-controller="InsightsFollowersListController"></div></div></div></div></div></div></div></div>'), e.put('public/modules/insights/views/publications.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><mobile-header center-title="Insights" back-icon="chrevon-left"></mobile-header><div id="insights"><div id="insights-wrapper"><div id="insights-nav"><h2>Holonis Insights</h2><ul><li><a ui-sref="insights.publications" title="Publications" class="active">Publications</a></li><li><a ui-sref="insights.commerce" title="Commerce">Commerce</a></li><li><a ui-sref="insights.followers" title="Followers">Followers</a></li></ul></div><div id="insights-container"><div class="insights-banner" ng-if="banner.visible"><div class="insights-banner-content"><img ng-src="{{$root.cdnBaseUrl}}/images/insights-ico.png" class="insights-icon"><h4>Holonis Insights</h4><p class="insights-banner--publications">Get a deep view of how all of your content is performing. Track likes, shares &amp; views for everything you\u2019ve ever published.</p><button ng-click="banner.close()" class="close-button dsicon-close"></button></div></div><div id="insights-publications-container" class="insights-content" ng-class="{ \'insights-loading\': tracker.active() }"><div class="loaderInline insights-main-loader"></div><div><div class="insights-content-block"><h4>Engagement</h4><div class="insights-filter"><ds-select class="ds-select-combo" ng-model="selectGroup.publications.period.selected" ng-change="filterPeriod()" id="{{ select.label }}" class="ds-select-input" options="selectGroup.publications.period.select.options" params="value,name" required></ds-select></div><div ng-if="!tracker.active() && state.noData" class="insights-no-data-wrapper"><div class="insights-no-data">No data available for this period.</div></div><div ng-if="!tracker.active() && state.error" class="insights-no-data-wrapper"><div class="insights-no-data">An error occurred while retrieving insights.</div></div><div class="insights-chart" ng-if="!state.noData && !state.error"><ul class="insights-chart-tabs"><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type"><span class="insights-legend insights-legend--blue"></span>Likes</span> <span class="insights-chart-tabs-total">{{ spaceData.totals.likesNew | abbreviateNumber }}</span></a></li><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type"><span class="insights-legend insights-legend--orange"></span>Comments</span> <span class="insights-chart-tabs-total">{{ spaceData.totals.commentsNew | abbreviateNumber }}</span></a></li><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type"><span class="insights-legend insights-legend--green"></span>Shares</span> <span class="insights-chart-tabs-total">{{ spaceData.totals.sharesNew | abbreviateNumber }}</span></a></li></ul><div id="insights-chart-group-publications-interactions" class="insights-chart-group active"><div class="container-chart"><canvas class="chart chart-bar" chart-colors="colors" chart-data="engagementData" chart-labels="engagementLabels" chart-series="engagementSeries" chart-options="engagementOptions" chart-dataset-override="engagementOverride"></canvas></div></div></div><div class="insights-content-block"><h4>Views</h4><div ng-if="!tracker.active() && state.noData" class="insights-no-data-wrapper"><div class="insights-no-data">No data available for this period.</div></div><div ng-if="!tracker.active() && state.error" class="insights-no-data-wrapper"><div class="insights-no-data">An error occurred while retrieving insights.</div></div><div class="insights-chart" ng-if="!state.noData && !state.error"><div id="insights-chart-group-traffic-interactions" class="insights-chart-group active"><ul class="insights-chart-tabs"><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type"><span class="insights-legend insights-legend--blue"></span>Total Unique Views</span> <span class="insights-chart-tabs-total">{{ spaceData.totals.uniqueViewsNew | number }}</span></a></li><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type"><span class="insights-legend insights-legend--green"></span>Visits from Social</span> <span class="insights-chart-tabs-total">{{ spaceData.totals.refererMediumSocial | number }}</span></a></li></ul><div class="container-chart"><canvas class="chart chart-line" chart-colors="colors" chart-data="viewsData" chart-labels="viewsLabels" chart-options="viewsOptions"></canvas></div></div></div></div><div class="insights-content-block" ng-if="data.resultsOverview.metricTotalTrafficLocations.length"><h4>Locations</h4><ul class="insights-locations"><li ng-repeat="location in data.resultsOverview.metricTotalTrafficLocations"><span class="insights-location-name">{{:: location.city }}, {{:: location.region }}</span> <span class="insights-location-value" ng-style="::{ width: location.percent + \'%\' }"></span> <span class="insights-location-counter">{{ location.value }} visits</span> <span class="insights-location-bar-placeholder"></span></li></ul></div><div class="insights-content-block"><h4>Top Viewed</h4><div class="swiper-container insights-content-block-swiper"><ul class="insights-top-group swiper-wrapper"><li class="insights-item-wrapper swiper-slide" ng-repeat="publication in top3publications | limitTo: 3"><a ng-click="showPublication(publication)" href="javascript:;" class="insights-item" ng-style="{ \'background-image\': \'url(\\\'\' + (publication.activity.cover | processImage : 301 : false) + \'\\\')\' }" data-uid><span class="insights-top-content-type">{{ publication.activity.type | capitalize }}</span><div class="insights-top-content-title">{{ publication.title }}</div><div class="insights-top-content-engagement"><span>{{ publication.totals.likesNew | abbreviateNumber }} Likes</span> <span>{{ publication.totals.sharesNew | abbreviateNumber }} Shares</span> <span>{{ publication.totals.uniqueViewsNew | abbreviateNumber }} Views</span></div></a></li></ul><div class="swiper-pagination"></div></div></div><div class="insights-content-block" ng-show="!state.error"><h4>All Publications</h4><table class="insights-table"><thead><tr><th class="insights-table-date">Published</th><th class="insights-table-detail">Type: All</th><th class="insights-table-metrics">Likes</th><th class="insights-table-metrics">Comments</th><th class="insights-table-metrics">Shares</th><th class="insights-table-metrics">Views</th></tr></thead><tbody><tr ng-repeat="publication in publications" ng-click="showPublication(publication)"><td class="insights-table-date"><span>{{ publication.activity.published | amUtc | amLocal | amDateFormat:\'h:mm a\' }}</span> {{ publication.activity.published | amUtc | amLocal | amDateFormat:\'MM/DD/YYYY\' }}</td><td class="insights-table-detail"><img ng-if="publication.activity.cover" ng-src="{{ publication.activity.cover | processImage : 55 : true }}" width="55" height="55"> <span>{{ publication.activity.type | capitalize }}</span><div>{{ publication.title | cut:true:100: \' ...\'}}</div></td><!-- TODO display these metrics on mobile too --><td class="insights-table-metrics">{{ publication.totals.likesNew| abbreviateNumber }}</td><td class="insights-table-metrics">{{ publication.totals.commentsNew | abbreviateNumber }}</td><td class="insights-table-metrics">{{ publication.totals.sharesNew | abbreviateNumber }}</td><td class="insights-table-metrics">{{ publication.totals.uniqueViewsNew | abbreviateNumber }}</td></tr></tbody></table><div ng-if="publicationsPagination.hasMorePages" class="see-more" ng-class="{ \'see-more-loading\': publicationsLoading.active() }" ng-click="updatePublications(publicationsPagination.page + 1)"><div class="loaderInline"></div><a href="javascript:;" class="see-more-text">See More</a></div></div></div></div></div></div></div></div>'), e.put('public/modules/insights/views/videos.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><mobile-header center-title="Insights" back-icon="chrevon-left"></mobile-header><div><div id="insights"><div id="insights-wrapper"><div id="insights-nav"><h2>Holonis Insights</h2><ul><li><a ui-sref="insights.publications" title="Publications">Publications</a></li><li><a ui-sref="insights.commerce" title="Commerce">Commerce</a></li><li><a ui-sref="insights.followers" title="Followers">Followers</a></li><li><a ui-sref="insights.videos" title="Videos" class="active">Videos</a></li></ul></div><div id="insights-container"><div class="insights-banner" ng-if="banner.visible"><div class="insights-banner-content"><img ng-src="{{$root.cdnBaseUrl}}/images/insights-ico.png" class="insights-icon"><h4>Holonis Insights</h4><p class="insights-banner--video">Measure every video you upload and get statistics that let you know what people are watching.</p><button ng-click="banner.close()" class="close-button dsicon-close"></button></div></div><div id="insights-publications-container" class="insights-content" ng-class="{ \'insights-loading\': tracker.active() }"><div class="loaderInline insights-main-loader"></div><div><div class="insights-content-block"><h3>Videos</h3><div class="insights-filter"><ds-select class="ds-select-combo" ng-model="selectGroup.publications.period.selected" ng-change="filterPeriod()" id="{{ select.label }}" class="ds-select-input" options="selectGroup.publications.period.select.options" params="value,name" required></ds-select></div><div ng-if="!tracker.active() && state.noData" class="insights-no-data-wrapper"><div class="insights-no-data">No data available for this period.</div></div><div ng-if="!tracker.active() && state.error" class="insights-no-data-wrapper"><div class="insights-no-data">An error occurred while retrieving insights.</div></div><div class="insights-chart" ng-if="!state.noData && !state.error"><ul class="insights-chart-tabs"><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Total Plays</span> <span class="insights-chart-tabs-total">{{ spaceData.totals.videoVideoStarts | abbreviateNumber }}</span></a></li></ul><div id="insights-chart-group-publications-interactions" class="insights-chart-group insights-chart-group--videos active"><div class="container-chart"><canvas class="chart chart-line" chart-colors="lineColors" chart-data="videoStartsData" chart-labels="lineLabels" chart-options="videoOptions"></canvas></div></div><ul class="insights-chart-tabs"><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Minutes viewed</span> <span class="insights-chart-tabs-total">{{ spaceData.totals.videoTimeWatched | abbreviateNumber }}</span></a></li><li><a href="javascript:;" class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Uploads</span> <span class="insights-chart-tabs-total">{{ spaceData.totals.uploads | abbreviateNumber }}</span></a></li></ul></div></div><div class="insights-content-block" ng-if="!state.error && top3videos.length"><h4>Top Viewed</h4><div class="swiper-container insights-content-block-swiper"><ul class="insights-top-group swiper-wrapper"><li class="insights-item-wrapper swiper-slide" ng-repeat="video in top3videos | limitTo: 3"><a ng-click="showVideo(video)" href="javascript:;" class="insights-item" ng-style="{ \'background-image\': \'url(\\\'\' + (video.activity.cover.url | processImageURL : getUniqueSelector()) + \'\\\')\' }" data-uid><div class="insights-top-content-title">{{ video.title }}</div><div class="insights-top-content-engagement"><span>{{ video.activity.engagement.views | abbreviateNumber }} Views</span> <span>{{ video.totals.videoTimeWatched | millisecondsToMinutes }} Min viewed</span></div></a><div class="insights-play-button" ng-click="showVideo(video)"></div></li></ul><div class="swiper-pagination"></div></div></div><div class="insights-content-block" ng-if="!state.error && videos.length"><h4>All Publications</h4><table class="insights-table"><thead><tr><th class="insights-table-date">Published</th><th class="insights-table-detail insights-table-filter--videos">Type: All</th><th class="insights-table-metrics">Total Plays</th><th class="insights-table-metrics">Min Viewed</th><th class="insights-table-metrics">Avg Watch Time</th></tr></thead><tbody><tr ng-repeat="video in videos" ng-click="showVideo(video)"><td class="insights-table-date"><span>{{ video.activity.published | amUtc | amDateFormat:\'h:mm a\' }}</span> {{ video.activity.published | amUtc | amDateFormat:\'MM/DD/YYYY\' }}</td><td class="insights-table-detail insights-table-detail--video"><span class="insights-thumb-wrapper--video"><img ng-if="video.activity.cover.url" ng-src="{{ video.activity.cover.url | processImageURL : 55 : true }}"><div class="insights-play-button insights-play-button--small"></div></span><div class="insights-table-detail-title">{{ publication.title || \'\u2014\' | cut:true:35: "..." }}</div></td><td class="insights-table-metrics">{{ video.totals.videoVideoStarts | abbreviateNumber }}</td><td class="insights-table-metrics">{{ video.totals.videoTimeWatched | millisecondsToMinutes }}</td><td class="insights-table-metrics">{{ video.averageTime || \'\u2014\' | millisecondsToHours }}</td></tr></tbody></table><div ng-if="videosPagination.hasMorePages" class="see-more" ng-class="{ \'see-more-loading\': videosLoading.active() }" ng-click="updateVideos(videosPagination.page + 1)"><div class="loaderInline"></div><a href="javascript:;" class="see-more-text">See More</a></div></div></div></div></div></div></div></div>'), e.put('public/modules/inventory/modals/edit.modal.html', '<div class="inventory-modal"><article class="inventory-modal-row" ng-repeat="variantOption in data.changes"><ds-input ng-model="variantOption.name" type="text" disabled="true"></ds-input><ds-tags model="variantOption.values" placeholder="Separate with comma(s)"></ds-tags><i class="inventory-modal-dump dsicon-dump" ng-click="delete($index)"></i></article><div class="inventory-modal-add" ng-click="add()">Add variant</div></div>'), e.put('public/modules/inventory/views/items.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><section ng-controller="HeaderController as vm" class="message-inside-nav inside-nav no-hero nav-shadow to-front"><tab-snap><h2 class="page-title"><div uib-dropdown auto-close="outsideClick" is-open="vm.isNavMenuOpenMobile"><i class="ds-back-icon dsicon-chrevon-left" uib-dropdown-toggle data-uid is-open="vm.isNavMenuOpenMobile"></i><div uib-dropdown-menu template-url="public/modules/core/templates/nav-dropdown.template.html" aria-labelledby="button-template-url"></div><span class="title-text-message">Inventory</span></div></h2></tab-snap></section><ecommerce-header active-tab="inventory"></ecommerce-header><div class="ds-view inventory" infinite-scroll-parent="true"><div class="ds-view-container"><br class="mobile-only"><ds-title class="desktop-only" title="\'Inventory\'"></ds-title><div class="inventory-filters inventory-filters--items"><ds-search data="filters" ng-model="state.query" placeholder="Search items" params="search.params" ng-change="query()"></ds-search><ds-select class="ds-select-combo" ng-model="state.type" class="ds-select-input" params="value,name" options="filters" change="type()" required></ds-select><button type="button" class="inventory-create-item ds-button-big ds-button-primary" ui-sref="item.selection">Create item</button></div><table class="ds-table inventory-table--items" infinite-scroll="loadMore()" infinite-scroll-distance="0" ng-class="{ \'inventory-table--loading\': state.loading }"><thead class="ds-table-head"><tr class="ds-table-row"><th class="ds-table-cell ds-table-cell--header"></th><th class="ds-table-cell ds-table-cell--header"><div class="ds-table-cell-container">Items</div></th><th class="ds-table-cell ds-table-cell--header"><div class="ds-table-cell-container">Inventory</div></th><th class="ds-table-cell ds-table-cell--header ds-table-cell--spacer"><div class="ds-table-cell-container"></div></th></tr></thead><tbody class="ds-table-body"><tr class="ds-table-row" ng-repeat="item in items" ui-sref="inventory.variants({ holospaceName: item.header.space.vanityUrl, id: item.id })"><td class="ds-table-cell"><div class="ds-table-cell-container"><div class="ds-table-cell-thumb" style="background-image: url(\'{{ item.cover.url | processImageURL : item.cover.width : true }}\')"></div></div></td><td class="ds-table-cell"><div class="ds-table-cell-container"><span class="ds-table-cell-caption ds-table-cell-caption--type">{{ getItemType(item) }} </span><span class="ds-table-cell-text">{{ item.body.name }}</span></div></td><td class="ds-table-cell"><span class="ds-table-cell-text"><span ng-if="item.body.item.unlimited">Unlimited</span> <span ng-if="!item.body.item.unlimited">{{ item.body.item.totalAvailable || \'0\' }} available</span> <span ng-if="!item.body.item.unique">/ {{ item.body.item.variantAvailable }} variants</span></span></td><td class="ds-table-cell ds-table-cell--spacer"><span class="ds-table-cell-text"><i class="ds-table-chevron dsicon-chrevon-left"></i></span></td></tr></tbody></table><em class="ds-table--empty" ng-hide="!!items.length">Couldn\'t fetch any items.</em><div class="loaderInline" ng-if="state.loadingMore"></div></div></div>'), e.put('public/modules/inventory/views/variants.view.html', '<style>@media only screen and (max-width: 760px),\n    (min-device-width: 768px) and (max-device-width: 1024px) {\n\n      /* Force table to not be like tables anymore */\n      table, thead, tbody, th, td, tr {\n        display: block;\n      }\n\n      /* Hide table headers (but not display: none;, for accessibility) */\n      thead tr {\n        position: absolute;\n        top: -9999px;\n        left: -9999px;\n      }\n\n      tr {\n        border: 1px solid #ccc;\n      }\n\n      td {\n        /* Behave  like a "row" */\n        border: none;\n        border-bottom: 1px solid #eee;\n        position: relative;\n        padding: 10px 55%;\n      }\n\n      td:before {\n        /* Now like a table header */\n        position: absolute;\n        /* Top/left values mimic padding */\n        top: 6px;\n        left: 6px;\n        width: 45%;\n        padding-right: 10px;\n      }\n      .ds-table.inventory-table--variants .ds-table-body .ds-table-row {\n        height: 100%;\n        margin-bottom: 15px;\n      }\n      .ds-table.inventory-table--variants .ds-table-row .ds-table-cell {\n        width: 100%;\n      }\n\n      .ds-table.inventory-table--variants .ds-table-row .ds-table-cell .ds-table-cell-container {\n        padding-right: 0;\n        padding: 0;\n      }\n      /*\n    Label the data\n    */\n      td:nth-of-type(1):before {\n        content: "Enabled";\n      }\n      td:nth-of-type(2):before {\n        content: "Product variant";\n      }\n      td:nth-of-type(3):before {\n        content: "SKU/ID";\n      }\n      td:nth-of-type(4):before {\n        content: "Pricing";\n      }\n      td:nth-of-type(5):before {\n        content: "Stock";\n      }\n\n    .inventory .inventory-filters {\n      margin-bottom: 30px;\n    }\n\n    .ds-button-big {\n      min-width: 100px;\n      margin-left: 5px;\n    }\n\n    .ds-search {\n      margin-right: 10px;\n    }\n\n    .inventory .inventory-variants-header {\n      position: absolute;\n    }\n\n    .inventory-variants-header-text {\n      line-height: 0px!important;\n    }\n  }</style><header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><div class="ds-view inventory inventory--variants"><div class="inventory-variants-header"><i class="inventory-variants-header-chevron dsicon-chrevon-left" ui-sref="inventory.items"></i><div class="inventory-variants-header-container"><span class="inventory-variants-header-text">{{ item.body.name }}</span></div></div><div class="ds-view-container"><div class="inventory-filters inventory-filters--variants"><ds-search loading="state.loading" ng-model="query.sku" placeholder="Search SKU/ID" data="variants" params="params.search" filtered="filtered"></ds-search><a href="javascript();" type="button" class="inventory-variants-pull ds-button-big" ui-sref="item.detail({ space: item.header.createdBy.vanityUrl, vanityUrl: item.vanityUrl })" target="_blank">View {{ item.body.item.type }} </a><button type="button" class="ds-button-big" ng-hide="isOffer || isVideoService" ng-click="editVariants()">Edit variants</button></div><table class="ds-table inventory-table--variants" ng-class="{ \'inventory-table--no-variants\': item.body.item.unique, \'ds-table-table--loading\': state.loading }"><thead class="ds-table-head"><tr class="ds-table-row"><th class="ds-table-cell ds-table-cell--header"><div class="ds-table-cell-container">Enabled</div></th><th class="ds-table-cell ds-table-cell--header"><div class="ds-table-cell-container">{{ item.body.item.type | ucfirst }} variant</div></th><th class="ds-table-cell ds-table-cell--header"><div class="ds-table-cell-container">SKU/ID</div></th><th class="ds-table-cell ds-table-cell--header ds-table-cell--pricing"><div class="ds-table-cell-container">{{ isOffer ? \'Offer Mimimum Price \' : \'Pricing\' }}</div></th><th class="ds-table-cell ds-table-cell--header ds-table-cell--quantity"><div class="ds-table-cell-container">Stock</div></th><th class="ds-table-cell ds-table-cell--header ds-table-cell--spacer"><div class="ds-table-cell-container"></div></th></tr></thead><tbody class="ds-table-body"><tr class="ds-table-row" ng-class="{ \'ds-table-row--editing\': variant.editing }" ng-repeat="variant in item.body.item.variants | filter: query as filtered track by $index"><td class="ds-table-cell"><div class="ds-table-cell-container"><ds-checkbox ng-model="item.body.item.variants[$index].enabled" ng-disabled="!variant.editing || item.body.item.unique"></ds-checkbox></div></td><td class="ds-table-cell"><div class="ds-table-cell-container"><span class="ds-table-cell-type" ng-repeat="value in variant.values track by $index">{{ value }} <span class="inventory-cell-type--bar">/&nbsp;</span> </span><span class="ds-table-cell-type" ng-if="!isVariantOptions">No variants</span></div></td><td class="ds-table-cell"><div class="inventory-cell-container">{{ variant.sku }}</div></td><td class="ds-table-cell ds-table-cell--pricing"><div class="ds-table-cell-container"><span class="ds-table-cell-text"><ds-input ng-if="!isOffer" ng-model="item.body.item.variants[$index].price" validate="$validators.body.item.variants[$index].price" type="text" disabled="!variant.editing" params="{ mask: { currency: true } }" placeholder="$0" required></ds-input><span ng-if="!isOffer" class="ds-table-cell-caption ds-table-cell-caption--sale">{{ variant.changedPrice }}</span><ds-input ng-if="isOffer" ng-model="item.body.item.minimumAcceptedOffer.formatted" validate="$validators.body.item.variants[$index].price" type="text" disabled="true" params="{ mask: { currency: true } }" placeholder="$0" class="minimum-accepted-offer-price" required></ds-input></span></div></td><td class="ds-table-cell ds-table-cell--quantity"><div class="ds-table-cell-container"><span class="ds-table-cell-text"><ds-counter params="params.counter" model="item.body.item.variants[$index].quantity" disabled="!variant.editing" id="amount" max="999" required></ds-counter></span></div></td><td class="ds-table-cell ds-table-cell--spacer inventory-cell--actions desktop-only"><div class="ds-table-cell-container"><button class="ds-button-dotted inventory-cell--actions-placeholder">&nbsp;</button> <button class="ds-button-dotted inventory-cell--actions-edit" ng-click="edit($index)" ng-if="!variant.editing">Edit</button> <button class="ds-button-dotted inventory-cell--actions-save" ng-click="save($index)" ng-if="variant.editing">Save</button> <button class="ds-button-dotted ds-button-dotted--delete inventory-cell--actions-discard" ng-click="discard($index)" ng-if="variant.editing">Cancel</button></div></td></tr></tbody></table><em class="inventory-table--empty" ng-hide="!!filtered.length">Couldn\'t fetch variants with these parameters.</em></div></div>'), e.put('public/modules/items/templates/item-price.html', '<div ng-switch="type"><p ng-switch-when="sold-out">Sold out</p><p ng-switch-when="free">Free</p><p ng-switch-default><span ng-if="interval">From {{ data.minPrice | currency }} - {{data.maxPrice | currency}}</span> <span ng-if="!interval">{{data.finalPrice | currency}}</span> <span class="ds-product-price-discount" ng-if="data.discount"><s class="ds-product-price-discount-old">{{ data.price | currency }}</s> <span class="ds-product-price-discount-amount">{{ data.discount }}% OFF</span></span></p></div>'), e.put('public/modules/items/templates/service-tab.template.html', '<div ng-class="{ \'is-disabled\' : state.uploadingVideo }"><ul class="nav nav-tabs" role="tablist"><li id="standardServiceTab" class="active"><a href="#standardService" role="tab" ng-click="state.serviceTabSelected(\'standardService\')" data-toggle="tab">Standard Service</a></li><li id="videoServiceTab"><a href="#videoService" ng-click="state.serviceTabSelected(\'videoService\')" role="tab" data-toggle="tab"><svg-icon icon="video-flat-grey" ng-if="!state.videoServiceTab" class="video-flat-icon"></svg-icon><svg-icon icon="video-flat-white" ng-if="state.videoServiceTab" class="video-flat-icon"></svg-icon>Video Service</a></li></ul></div><div class="tab-content"><div class="tab-pane active" id="standardService"><section class="ds-product-container-section ds-product-create-delivery"><ds-show-hide label="Shipping" ng-model="state.shipping" focus="true" ng-if="data.item.type === \'product\'"><ds-dynamic-input ng-model="data.item.shippingOptions" validate="$validators.item.shippingOptions"></ds-dynamic-input><span class="ds-input-error-message ds-input-error-message--required" style="top:80px" ng-if="$validators.item.shippingOptionsGeneral">{{ \'Please fill in the shipping fields.\' }}</span></ds-show-hide><div class="ds-checkbox-group" ng-if="data.item.type === \'service\'"><ds-checkbox label="Collect the Customer\u2019s Address during Checkout" ng-model="data.item.collectAddress"></ds-checkbox></div><ds-show-hide label="{{ data.item.type === \'product\' ? \'Local Pick-up\' : \'Local Address\' }}" ng-model="state.pickup" focus="true"><ds-address model="data.item.pickup" placeholder="Address of business"></ds-address></ds-show-hide><span class="ds-input-error-message ds-input-error-message--required" ng-if="$validators.delivery == \'custom\'">{{ \'At least one delivery method is required.\' }}</span></section></div><div class="tab-pane" id="videoService"><div class="how-does-container"><a href="https://www.holonis.com/holonis-support/p/video-services" target="_blank"><svg-icon icon="video-round-border"></svg-icon><span>How does it work?</span></a></div></div></div>'), e.put('public/modules/items/templates/terms-and-conditions.template.html', '<div class="modal-body" ng-form name="terms_conditions"><svg-icon icon="close" class="modal-icon" ng-click="cancel()"></svg-icon><h2 ng-bind="::title"></h2><p class="danger-text" ng-bind="::subTitle"></p><div class="terms-container"><div class="checkbox-modal" ng-repeat="term in termsCondition track by term.id"><input id="{{ term.id }}" type="checkbox" ng-required="true" ng-model="checkboxInput" ng-value="term.id"><label for="{{ term.id }}" ng-bind="::term.text"></label></div></div><div class="btn-group no-footer"><input type="button" ng-value="::button_title_cancel" class="btn btn-hollow-secondary" ng-click="cancel(term)"> <input type="submit" ng-value="::button_title_confirm" ng-disabled="terms_conditions.$invalid" class="btn btn-hollow-primary" ng-click="confirm(termsCondition)"></div></div>'), e.put('public/modules/items/views/detail.view.html', '<div class="header-back-arrow-content mobile-only"><mobile-header center-title="Product" back-icon="chrevon-left"></mobile-header></div><header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><div vocab="http://schema.org/" typeof="Offer" class="ds-view ds-product" ng-if="data"><div class="ds-product-top" ng-class="{ \'ds-product-top--loading\': state.loading, \'ds-product-top--no-gallery\': data.body.item.previews < 1 }"><ds-gallery ng-if="!!data.body.item.previews.length" images="data.body.item.previewCovers"></ds-gallery><div class="ds-product-info"><div class="ds-product-header"><a ui-sref="holospace.home( { holospaceName: data.header.space.vanityUrl } )"><ds-avatar class="ds-product-header-avatar" size="28" resize="50" avatar="data.header.space.photo" src="data.header.space.profilePhoto"></ds-avatar><div class="ds-product-header-text-content"><ds-space-name space="data.header.space" class="ds-product-header-name"></ds-space-name><h3 class="ds-caption-default ds-product-caption">{{ state.itemType }}</h3></div></a><ds-karot data="data" type="data.type"></ds-karot></div><h1 property="name" class="ds-heading-large ds-product-title">{{ data.body.name }}</h1><ds-rating level="data.body.rating"></ds-rating><em property="price" content="{{data.body.item.finalPrice.toFixed(2)}}" class="ds-product-price ds-price" ng-class="{ \'loading-price\': buyParams.loadingTracker.active() }" ng-if="state.showPrice"><div class="loaderInline"></div><span ng-if="buyParams.variant || (data.body.item.maxPrice == data.body.item.minPrice)">{{ data.body.item.finalPrice > 0 ? (\'$\' + data.body.item.finalPrice.toFixed(2)) : \'Free\' }}</span> <span ng-if="!buyParams.variant && (data.body.item.maxPrice != data.body.item.minPrice)"><small class="ds-product-price-small">From</small> {{ data.body.item.minPrice | currency }} - {{ data.body.item.maxPrice | currency }}</span> <span class="ds-product-price-discount" ng-if="data.body.item.discount"><s class="ds-product-price-discount-old">${{ data.body.item.price.toFixed(2) }}</s> <span class="ds-product-price-discount-amount">{{ data.body.item.discount }}% OFF</span></span></em><h2 property="description" class="ds-body-large ds-product-description">{{ data.body.description | cut:true:500 }}</h2><div class="ds-product-detail-wrapper"><variant-select buy-params="buyParams" data="::data"></variant-select><ds-counter ng-if="state.showQuantity" params="{ combo: true }" model="buyParams.quantity" id="amount" singular="Item" plural="Items" min="1" max="buyParams.maxQuantity" required></ds-counter><div class="ds-button-group ds-button-group--left"><buy class="ds-product-button-buy" ng-class="{\'is-disabled\' : state.isDraft }" ng-if="state.showPurchaseActionModule" tile="data" params="buyParams"></buy></div><div ng-if="state.isVideoService" class="video-service-about"><a href="https://www.holonis.com/holonis-support/p/video-services" target="_blank">Learn more about Video Services</a></div><ds-engagement class="ds-product-engagement" type="item" data="normalizedData" ng-class="{ \'is-disabled\': state.isDraft }"></ds-engagement></div></div></div><div ng-class="{ \'is-disabled\': state.isDraft }" class="ds-product-video-service"><div class="ds-product-video-instructions" ng-if="state.isVideoService && !buyParams.soldOut && !state.showBuyerOfferedModule"><h3>Enter your information</h3><div class="ds-form-field"><ds-text params="inputs.instructions" ng-model="buyParams.instructions" id="video-service-instructions" label="Instructions for the content of the video" placeholder="My dad Cliff is your superfan and I want him to know I love him very much on Father\u2019s Day." validate="$validators.instructions" max-characters="500" ng-change="onInputChange(\'instructions\')"></ds-text></div><ds-input params="inputs.name" ng-model="buyParams.name" type="text" id="video-service-name" label="Your Name" placeholder="Type name for video delivery here" validate="$validators.name" change="onInputChange(\'name\')" maxlength="200"></ds-input><ds-input params="inputs.email" ng-model="buyParams.email" type="email" id="make-offer-email" label="Your email" placeholder="Type email for video delivery here" validate="$validators.email" change="onInputChange(\'email\')"></ds-input><div class="ds-form-field-30"><ds-input params="inputs.phone" ng-model="buyParams.phone" type="text" id="make-offer-phone" label="Your phone number" placeholder="( 334 ) 555 - 5555" validate="$validators.phone" change="onInputChange(\'phone\')"></ds-input></div><div class="ds-form-field"><div ng-if="state.paypalPayment"><p class="ds-form-field-paypal-title">Payment Method</p><p class="ds-form-field-paypal-description">After submitting your offer, you will be redirected to PayPal to use your PayPal account or credit card.</p></div><ds-stripe-form parent-form="form" data="buyParams" validators="$validators" ng-if="state.stripePayment"></ds-stripe-form></div></div><div ng-if="state.isOffer"><div class="offer-status" ng-if="state.showBuyerOfferedModule"><h2 class="offer-status__title">You made an offer!</h2><div class="offer-status__video-instruction" ng-if="state.contractVideoInstructions"><h5>Instructions you submitted for the video</h5><p>{{state.contractVideoInstructions}}</p><hr></div><offer-status-module data="state"></offer-status-module></div><span ng-if="!state.showBuyerOfferedModule"><div class="ds-offer-price" ng-if="state.showOfferForm"><img class="ribbon-offer" ng-src="{{$root.cdnBaseUrl}}/images/sprite/badge-offer.svg" alt="badge-offer"><div class="ds-offer-price__container"><h2 class="ds-offer-price__title">How much would you offer for it?</h2><ds-input params="inputs.offerPrice" ng-model="buyParams.offerPrice" maxlength="10" type="text" class="offer-price-input" id="offer-price-input" validate="$validators.offerPrice" change="onInputChange(\'offerPrice\')" placeholder="$0"></ds-input><small>You won\u2019t be charged until your offer is accepted</small> <a class="ds-offer-price__button" ng-class="state.offerButtonClass" ng-click="PAMNext()">Next</a></div></div><div class="ds-offer-price ds-offer-price-attempts ds-offer-price--{{buyParams.contract.offer.attemptsRemaining}}-left" ng-if="state.showOfferAttempts"><img class="ribbon-offer" ng-src="{{$root.cdnBaseUrl}}/images/sprite/badge-offer.svg" alt="badge-offer"><div class="ds-offer-price__container"><img ng-show="buyParams.contract.offer.attemptsRemaining !== 0" ng class="number-left" ng-src="{{$root.cdnBaseUrl}}/images/sprite/offer-{{buyParams.contract.offer.attemptsRemaining}}-left.png" alt="Offers Left"><div><h2 class="ds-offer-price__title">Your offer amount didn\u2019t meet the minimum price set by the seller.</h2><small>You only have three attempts in 24 hours.</small></div><button class="ds-offer-price__button ds-offer-price__button--valid" id="pamTryAgain" ng-click="tryOfferAgain()">Try Again</button></div></div><div class="ds-offer-price ds-offer-price--0-left" ng-if="state.showOfferCountdown"><img class="ribbon-offer" ng-src="{{$root.cdnBaseUrl}}/images/sprite/badge-offer.svg" alt="badge-offer"><div class="ds-offer-price__container"><div class="offer-timer"><p><span class="offer-timer--hour">{{ state.offerCountdown.hours }}</span>:<span class="offer-timer--minutes">{{ state.offerCountdown.minutes }}</span>:<span class="offer-timer--seconds">{{ state.offerCountdown.seconds }}</span></p></div><div><h2 class="ds-offer-price__title">You have run out of attempts to hit the minimum price set.</h2><small>You only have three attempts in 24 hours.</small></div></div></div></span></div><buy ng-if="state.showPurchaseActionModuleForm" class="ds-product-button-buy" on-checkout="onCheckout" on-close="onCheckoutClose" ng-class="{\'is-disabled\' : state.isDraft }" tile="data" params="buyParams"></buy><div class="ds-product-video-promo" ng-if="state.promoVideo"><h3>What\u2019s it like?</h3><div class="ds-product-video-service-player"><ds-player ng-if="playing" autoplay="true" video-id="state.promoVideo.body.id" oo-id="state.promoVideo.body.ooId"></ds-player><div class="ds-product-player-cover" ng-click="playing = true" ng-class="{ \'playing\': playing }" ng-style="{\'background-image\':\'url(\' + (state.promoVideo.cover.url | processImageURL : 800) + \')\' }"></div></div></div></div><div class="ds-product-body"><div class="ds-product-story" ng-if="data.body.story && !!data.body.story.length"><ds-story-view params="data.body"></ds-story-view></div><ds-product-listing items="data.recommendations" ng-if="data.body.item.showRecommendations"></ds-product-listing></div><item-reviews item="data"></item-reviews></div>'), e.put('public/modules/items/views/form.view.html', '<header class="ds-product-nav--mobile"><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><ds-header-creation data="data" header-title="header.title" params="header.params" tracker="header.tracker"></ds-header-creation><div class="ds-view ds-view--creation ds-product-create"><div class="ds-view-container"><section class="ds-product-create-detail"><ds-title title="state.sectionTitle"></ds-title><ng-include ng-if="isService" src="\'public/modules/items/templates/service-tab.template.html\'"></ng-include><section><!--  NAME --><div class="ds-form-wrapper"><h3 class="ds-title" ng-if="isService">About your {{data.item.type}}</h3><ds-input ng-model="data.name" type="text" id="title" big="true" label="Item title" placeholder="{{ \'Enter a \' + data.item.type + \' name\' }}" validate="$validators.name" maxlength="200"></ds-input><label class="ds-input-label">About your item</label><div class="ds-textarea-container textarea-with-stretchy"><textarea placeholder="Description or short summary of your item" class="ds-textarea stretchy text-limit" name="description" ng-model="data.description" ng-click="focus($event)" validate="$validators.description" ng-trim="false" maxlength="500" required></textarea><div><span ng-if="500 - data.description.length <= 0" class="ds-input-limit-error-message text-warning--grey">You\'ve reached the maximum number of characters</span><div class="ds-input-limit-error-message text-warning--grey pull-right" style="position:relative;bottom:-4px">{{ data.description.length || 0 }} / 500</div><span class="ds-input-error-message ds-input-error-message--required" ng-if="!data.description.length && $validators.description == \'required\'">This field is required</span></div></div></div><!-- IMAGE --><div class="ds-form-wrapper ds-product-create-image"><label class="ds-input-label">Image</label><ds-image-uploader input-id="image-uploader" files="data.item.previews" space-id="data.id" validate="$validators.item.previews"></ds-image-uploader></div></section><div ng-if="!state.variantsVisible" ng-class="{ \'ds-product-variants--editing-page\': data.published }"><div class="ds-view-container"><!-- PRICE --><section class="ds-product-container-section ds-product-create-pricing"><ds-title title="\'Pricing\'"></ds-title><ds-input-group><ds-conditional-input model="data.item.price" checked="data.item.free" type="tel" id="free-product-checkbox" label-input="Price" label-checkbox="Make this free" params="{ mask: { currency: 2, currencyMax: 9999.99 } }" placeholder="$0.00" disabled-label="Free" disabled-value="0" ng-if="!state.makeOfferChecked"></ds-conditional-input><ds-conditional-input model="data.item.quantity" checked="data.item.unlimited" type="tel" id="unlimited-product-checkbox" label-input="Quantity" label-checkbox="Make this unlimited" params="{ mask: { custom: \'9?9?9\', placeholder: \'   \' } }" placeholder="0" disabled-label="Unlimited" disabled-value="99"></ds-conditional-input></ds-input-group><div class="price-and-quantity-error"><span class="ds-input-error-message ds-input-error-message--required" ng-if="$validators.item.price_and_quantity == \'custom\'">Price and quantity are required.</span></div><span class="ds-product-variants--editing-message ds-product-variants--editing-message--mobile" ng-if="data.published">Visit this item on the web to modify it\'s price and variants. </span><span class="ds-product-variants--editing-message desktop-only" ng-if="data.published">Visit your <a ui-sref="inventory.variants({ holospaceName: data.header.space.vanityUrl, id: data.id })" target="_blank">inventory</a> {{state.isOffer ? \'to modify your stock quantity.\' : \'to modify your pricing and variants.\' }} </span><!-- MAKE OFFER --><div class="make-offer-container"><div class="ds-conditional-input make-offer-checkbox" ng-class="{\'is-disabled\' : data.published}"><ds-checkbox ng-model="state.makeOfferChecked"></ds-checkbox><div class="ds-make-offer-content"><p class="ds-make-offer-content__title">Make me an offer</p><small>{{ state.makeOfferSubtitle }} <a href="https://support.holonis.com/hc/en-us/articles/360020444031" target="_blank">Learn more.</a></small></div></div><div class="make-offer-price" ng-show="state.makeOfferChecked" ng-class="{ \'fadeInUp\' : state.makeOfferChecked, \'fadeOutDown\' : !state.makeOfferChecked}"><set-minimum-price-input model="state.minimumAcceptedOffer" checked="state.minimumPriceCheckbox" type="tel" id="make-offer-price-checkbox" label-input="Set Minimum Price" params="{ mask: { currency: 2, currencyMax: 9999.99 } }" maxlength="10" placeholder="$0.00" disabled-label="$0.00" class="make-offer-price__input"></set-minimum-price-input><p>Offers below this price will be automatically rejected. Buyers will have 3 attempts every 24 hours to meet your minimum price.</p></div></div></section></div><!-- VARIANTS --><section ng-if="!state.videoServiceTab" ng-hide="state.makeOfferChecked || data.published" class="ds-product-stripe ds-product-variants ds-product-add-variants"><div class="ds-view-container ds-product-stripe-wrapper"><div class="ds-product-story"><ds-add label="Add variants" description="Multiple sizes, color or material? Start creating options and manage your products variants." action="addVariants()"></ds-add></div></div></section></div><div class="ds-view-container ds-product-input-action-container" ng-if="state.variantsVisible" ng-class="{ \'ds-product-variants--editing-page\': data.published }"><ds-input-action class="ds-product-input-action" id="editVariants" label="Product variants" model="state.variantsValue" action-label="Edit" action="addVariants()"></ds-input-action><div><span class="ds-input-error-message ds-input-error-message--required" ng-if="$validators.item.price_and_quantity == \'custom\'">At least one of the variants should have price and quantity.</span></div><span class="ds-product-variants--editing-message" ng-if="data.published">Visit your <a ui-sref="inventory.variants({ holospaceName: data.header.space.vanityUrl, id: data.id })" target="_blank">inventory</a> to modify your pricing and variants.</span></div><!-- DELIVERY OPTIONS --><section ng-if="!isService" class="ds-product-container-section ds-product-create-delivery"><ds-title title="\'Delivery Options\'"></ds-title><ds-show-hide label="Shipping" ng-model="state.shipping" focus="true" ng-if="data.item.type === \'product\'"><ds-dynamic-input ng-model="data.item.shippingOptions" validate="$validators.item.shippingOptions"></ds-dynamic-input><span class="ds-input-error-message ds-input-error-message--required" style="top:80px" ng-if="$validators.item.shippingOptionsGeneral">{{ \'Please fill in the shipping fields.\' }}</span></ds-show-hide><div class="ds-checkbox-group" ng-if="data.item.type === \'service\'"><ds-checkbox label="Collect the Customer\'s Address during Checkout" ng-model="data.item.collectAddress"></ds-checkbox></div><ds-show-hide label="{{ data.item.type === \'product\' ? \'Local Pick-up\' : \'Local Address\' }}" ng-model="state.pickup" focus="true"><ds-address model="data.item.pickup" placeholder="Address of business"></ds-address></ds-show-hide><span class="ds-input-error-message ds-input-error-message--required" ng-if="$validators.delivery == \'custom\'">{{ \'At least one delivery method is required.\' }}</span></section><div class="ds-view-container"><!-- More products --><section class="ds-product-container-section"><ds-title title="\'More products\'"></ds-title><div class="ds-checkbox-group"><ds-checkbox label="Show more of your products as a recommendation to the buyers" ng-model="data.item.showRecommendations"></ds-checkbox></div></section><!-- Discount --><section class="ds-product-container-section" ng-if="!state.makeOfferChecked"><ds-title title="\'Discount\'"></ds-title><ds-show-hide label="{{ \'Apply discount to this \' + data.item.type }}" ng-model="state.discount"><ds-input ng-model="data.item.discount" params="{ mask: { custom: \'9?9%\', placeholder: \'   \' } }" type="text" id="discount" label="Percentage" placeholder="e.g. 60%" required></ds-input></ds-show-hide></section><section class="ds-product-container-section" ng-if="state.conversionTrackingUrlEnabled"><ds-title title="\'Conversion Tracking\'"></ds-title><ds-show-hide label="{{ \'Apply conversion tracking to this \' + data.item.type }}" ng-model="state.conversionTracking"><ds-input ng-model="data.item.conversionTrackingUrl" type="text" id="conversion-tracking-url" label="Conversion Tracking Url" placeholder="Type a valid conversion tracking url" required></ds-input></ds-show-hide></section></div><div class="ds-view-container"><ds-text ng-if="data.item.type == \'service\'" ng-model="data.termsAndConditions" class="ds-comment-input" label="Terms and conditions" placeholder="Describe the agreement of this service" tabindex="1"></ds-text></div><!-- PROMO VIDEO --><section class="promotial-video" ng-if="state.videoServiceTab"><ds-title title="\'Promotional Video\'"></ds-title><p>A promotional video is shown on your video service detail screen and gives your audience an idea of what to expect from your video service. <a href="https://holonis.com" target="_blank">See an example.</a></p><video-input-player ng-show="state.showPromoVideoPlayer" bus="videoUploadBus" video="state.promoVideo"></video-input-player><video-input-picker id="video-service" bus="videoUploadBus"></video-input-picker><label for="video-service" class="ds-btn ds-btn--full-width ds-btn--blue" ng-class="{\'ds-btn--outline\' : state.reUploadVideo, \'is-disabled\' : state.uploadingVideo}">{{state.videoButtonLabel}}</label></section></section></div><ds-story class="ds-story-main-dark" type="{{data.item.type}}" ng-if="params" params="params" ng-class="{ \'ds-product-story--not-last\': data.item.type == \'service\' }"></ds-story><div class="create-content-loader" ng-show="state.loading"><holonis-loader></div></div>'), e.put('public/modules/items/views/selection.view.html', '<div class="ds-content-selection"><ds-header-selection title="Choose an ecommerce type"></ds-header-selection><div class="ds-content-selection__container"><article class="ds-content-selection__item" ng-click="selectItemType(\'product\')"><div class="ds-content-selection__circle"><svg-icon icon="product" class="ds-content-selection__icon"></svg-icon></div><h2 class="ds-content-selection__title">Product</h2><p class="ds-content-selection__description">Sell physical products with shipping and local pick-up options.</p></article><article class="ds-content-selection__item" ng-click="selectItemType(\'service\')"><div class="ds-content-selection__circle"><svg-icon icon="service" class="ds-content-selection__icon"></svg-icon></div><h2 class="ds-content-selection__title">Service</h2><p class="ds-content-selection__description">Sell services, meet with customers locally or deliver videos.</p></article></div></div>'), e.put('public/modules/items/views/tab.view.html', '<div ng-if="vm.callToAction" class="heading-intro"><p class="general-holospace-text">This is your e-commerce storefront, where you manage the products or services you sell across the Internet.<br>This tab is where all the products or services you\u2019ve created are found.</p><a class="icn icn-add-content" ui-sref="item.selection"></a></div><div ng-show="!vm.callToAction"><div class="holospace-tab-content" main-content><tile-group type="items" perpage="15" class="" vanity="vm.vanity" ads="vm.showAds" space-id="vm.spaceId" model="items" state-pagination="true"></tile-group></div></div>'), e.put('public/modules/items/tooltips/certified.tooltip.html', '<section class="ds-product-certified"><img class="ds-product-certified__icon" ng-src="{{$root.cdnBaseUrl}}/images/certified.svg" alt="Certified seller"><h2 class="ds-product-certified__title">Gold Member</h2><p class="ds-product-certified__feedback">1589K Total sold</p><p class="ds-product-certified__feedback">100% Positive feedback</p></section>'), e.put('public/modules/landingpage/templates/tile.channel.template.html', '<div class="u-margin-right-big"><div class="small-tile u-margin-top-sm-1" ng-style="::{ \'background-image\': \'linear-gradient(-180deg, rgba(0,0,0,0.00) 34%, #000000 120%),\n  url(\' + (cover | processImage : 500 : true) + \')\', \'background-size\': \'cover\', \'background-position\': \'center\', \'background-repeat\': \'no-repeat\' }" ng-class="::{ \'no-image\' : cover == null }"><div class="small-tile__filter"><a ui-sref="holospace.home({ holospaceName: data.header.space.vanityUrl })"><div class="small-tile-header"><div class="small-tile__avatar"><img ng-src="{{ ::(data.header.space.photo | processImage : 100 : true) ||  $root.cdnBaseUrl + \'/images/default-user.png?1\' }}" alt="{{ ::data.header.space.name }}"></div><span class="small-tile__vanity">@{{ ::data.header.space.vanityUrl | limitTo: 15 }}<span ng-if="data.header.space.vanityUrl.length >= 15">...</span> <span ng-if="::data.header.space.isVerified" class="ds-space-name-icon-container" title="Verified Holospace.&#10;Holonis confirmed this is an authentic account for this person, business, public figure, influencer or brand."><img ng-src="{{ ::data.header.space.badges[0].icon}}.svg" class="ds-space-name-verified icon" alt="{{ ::data.header.space.badges[0].title }}"></span></span></div></a><a ui-sref="channel.detail({ space: data.header.space.vanityUrl , vanityUrl: data.vanityUrl })"><div class="small-tile__footer"><p ng-if="cover" class="small-tile__description--text">{{ ::data.body.name | limitTo: 50 }} <span ng-if="data.body.name.length >= 50">...</span></p><p ng-if="!cover" class="small-tile__description--no-image">{{ ::data.body.name | limitTo: 30 }} <span ng-if="data.body.name.length >= 30">...</span></p><div class="small-tile__views">{{ ::data.engagement.views | abbreviateNumber }} Views</div></div></a></div></div></div>'), e.put('public/modules/landingpage/templates/tile.item.template.html', '<div class="u-margin-right-big"><div class="small-tile u-margin-top-sm-1" ng-style="::{ \'background-image\': \'linear-gradient(-180deg, rgba(0,0,0,0.00) 34%, #000000 120%),\n  url(\' + (data.cover | processImage : 500 : true) + \')\', \'background-size\': \'cover\', \'background-position\': \'center\', \'background-repeat\': \'no-repeat\' }"><div class="small-tile__filter"><a ui-sref="holospace.home({ holospaceName: data.header.space.vanityUrl })"><div class="small-tile-header"><div class="small-tile__avatar"><img ng-src="{{ ::(data.header.space.photo | processImage : 100 : true) ||  $root.cdnBaseUrl + \'/images/default-user.png?1\' }}" alt="{{ ::data.header.space.name }}"></div><span class="small-tile__vanity">@{{ ::data.header.space.vanityUrl | limitTo: 15 }}<span ng-if="data.header.space.vanityUrl.length >=15">...</span> <span ng-if="::data.header.space.isVerified" class="ds-space-name-icon-container" title="Verified Holospace.&#10;Holonis confirmed this is an authentic account for this person, business, public figure, influencer or brand."><img ng-src="{{ ::data.header.space.badges[0].icon}}.svg" class="ds-space-name-verified icon" alt="{{ ::data.header.space.badges[0].title }}"></span></span></div></a><a ui-sref="item.detail({ space: data.header.space.vanityUrl , vanityUrl: data.vanityUrl })"><div class="small-tile__footer"><p class="small-tile__description">{{ data.body.name | limitTo: 50 }} <span ng-if="data.body.name.length >= 50">....</span></p><div class="small-tile__rating"><svg-icon icon="shape-star" class="rating-star" ng-repeat="i in rating track by $index"></svg-icon></div><p class="small-tile__price"><item-price data="data.body.item"></item-price></p></div></a></div></div></div>'), e.put('public/modules/landingpage/templates/tile.page.template.html', '<div class="u-margin-right-big"><div class="small-tile u-margin-top-sm-1" ng-style="::{ \'background-image\': \'linear-gradient(-180deg, rgba(0,0,0,0.00) 34%, #000000 120%),\n  url(\' + (data.cover | processImage : 500 : true) + \')\', \'background-size\': \'cover\', \'background-position\': \'center\', \'background-repeat\': \'no-repeat\' }" ng-class="::{ \'no-image\' : data.cover == null }"><div class="small-tile__filter"><a ui-sref="holospace.home({ holospaceName: data.header.space.vanityUrl })"><div class="small-tile-header"><div class="small-tile__avatar"><img ng-src="{{ ::(data.header.space.photo | processImage : 100 : true) ||  $root.cdnBaseUrl + \'/images/default-user.png?1\' }}" alt="{{ ::data.header.space.name }}"></div><span class="small-tile__vanity">@{{ ::data.header.space.vanityUrl | limitTo: 15 }}<span ng-if="data.header.space.vanityUrl.length >= 15">...</span> <span ng-if="::data.header.space.isVerified" class="ds-space-name-icon-container" title="Verified Holospace.&#10;Holonis confirmed this is an authentic account for this person, business, public figure, influencer or brand."><img ng-src="{{ ::data.header.space.badges[0].icon}}.svg" class="ds-space-name-verified icon" alt="{{ ::data.header.space.badges[0].title }}"></span></span></div></a><a ui-sref="page.detail({ space: data.header.space.vanityUrl , vanityUrl: data.vanityUrl })"><div class="small-tile__footer"><p ng-if="data.cover" class="small-tile__description--text">{{ ::data.body.name | limitTo: 50 }} <span ng-if="data.body.name.length >= 50">...</span></p><p ng-if="!data.cover" class="small-tile__description--no-image">{{ ::data.body.name | limitTo: 30 }} <span ng-if="data.body.name.length >= 30">...</span></p><div class="small-tile__views">{{ ::data.engagement.views | abbreviateNumber }} Views</div></div></a></div></div></div>'), e.put('public/modules/landingpage/templates/tile.post.template.html', '<div class="u-margin-right-big"><div class="small-tile u-margin-top-sm-1" ng-style="::{ \'background-image\': \'linear-gradient(-180deg, rgba(0,0,0,0.00) 34%, #000000 120%),\n  url(\' + (data.cover | processImage : 500 : true) + \')\', \'background-size\': \'cover\', \'background-position\': \'center\', \'background-repeat\': \'no-repeat\' }" ng-class="::{ \'no-image\' : data.cover == null, \'small-tile-post-video\': data.body.story.type === \'video\' }"><div ng-class="::{ \'small-tile__filter\' : data.cover }"><a ui-sref="holospace.home({ holospaceName: data.header.space.vanityUrl })"><div class="small-tile-header"><div class="small-tile__avatar"><img ng-src="{{ ::(data.header.space.photo | processImage : 100 : true) ||  $root.cdnBaseUrl + \'/images/default-user.png?1\' }}" alt="{{ ::data.header.space.name }}"></div><span class="small-tile__vanity">@{{ ::data.header.space.vanityUrl | limitTo: 15 }}<span ng-if="data.header.space.vanityUrl.length >= 15">...</span> <span ng-if="::data.header.space.isVerified" class="ds-space-name-icon-container" title="Verified Holospace.&#10;Holonis confirmed this is an authentic account for this person, business, public figure, influencer or brand."><img ng-src="{{ ::data.header.space.badges[0].icon}}.svg" class="ds-space-name-verified icon" alt="{{ ::data.header.space.badges[0].title }}"></span></span></div></a><a ng-href="{{ data.url }}" ng-click="open($event)"><div class="small-tile__footer"><p ng-class="{ \'small-tile__description--text\': data.cover, \'small-tile__description--no-image\': !data.cover }">{{ ::data.body.description | limitTo: 50 }}<span ng-if="data.body.description.length >= 50">...</span></p><div class="small-tile__views">{{ ::data.engagement.views | abbreviateNumber }} Views</div></div></a></div></div></div>'), e.put('public/modules/landingpage/views/landingpage.view.html', '<style>/* Reset CSS */\n\ta,\n\tabbr,\n\tacronym,\n\taddress,\n\tapplet,\n\tarticle,\n\taside,\n\taudio,\n\tb,\n\tbig,\n\tblockquote,\n\tbody,\n\tcanvas,\n\tcaption,\n\tcenter,\n\tcite,\n\tcode,\n\tdd,\n\tdel,\n\tdetails,\n\tdfn,\n\tdiv,\n\tdl,\n\tdt,\n\tem,\n\tembed,\n\tfieldset,\n\tfigcaption,\n\tfigure,\n\tfooter,\n\tform,\n\th1,\n\th2,\n\th3,\n\th4,\n\th5,\n\th6,\n\theader,\n\thgroup,\n\thtml,\n\ti,\n\tiframe,\n\timg,\n\tins,\n\tkbd,\n\tlabel,\n\tlegend,\n\tli,\n\tmark,\n\tmenu,\n\tnav,\n\tobject,\n\tol,\n\toutput,\n\tp,\n\tpre,\n\tq,\n\truby,\n\ts,\n\tsamp,\n\tsection,\n\tsmall,\n\tspan,\n\tstrike,\n\tstrong,\n\tsub,\n\tsummary,\n\tsup,\n\ttable,\n\ttbody,\n\ttd,\n\ttfoot,\n\tth,\n\tthead,\n\ttime,\n\ttr,\n\ttt,\n\tu,\n\tul,\n\tvar,\n\tvideo {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tborder: 0;\n\t\tfont: inherit;\n\t\tvertical-align: baseline\n\t}\n\n\thtml {\n\t\toverflow-x: hidden\n\t}\n\n\tarticle,\n\taside,\n\tdetails,\n\tfigcaption,\n\tfigure,\n\tfooter,\n\theader,\n\thgroup,\n\tmenu,\n\tnav,\n\tsection {\n\t\tdisplay: block\n\t}\n\n\tbody {\n\t\tline-height: 1;\n\t\tbox-sizing: border-box;\n\t\tbackground-color: #fff\n\t}\n\n\tol,\n\tul {\n\t\tlist-style: none\n\t}\n\n\tblockquote,\n\tq {\n\t\tquotes: none\n\t}\n\n\tblockquote:after,\n\tblockquote:before,\n\tq:after,\n\tq:before {\n\t\tcontent: "";\n\t\tcontent: none\n\t}\n\n\ttable {\n\t\tborder-collapse: collapse;\n\t\tborder-spacing: 0\n\t}</style><header class="landing-header"><div class="landing-header__logo-box"><a ng-href="{{:: logoUrl }}" title="Holonis"><img id="logo" class="landing-header__logo" ng-src="{{$root.cdnBaseUrl}}/images/svg/logo-holonis-h.svg" alt="Holonis"></a><div class="landing-header__right-container"><div class="landing-header__search"><i class="dsicon-glass dsicon-glass-mobile margin-right-md desktop-only"></i> <input type="text" placeholder="Search on Holonis" class="desktop-only" name="search-input" ng-keypress="searchEnter($event);" ng-model="searchString"> <i class="dsicon-glass dsicon-glass-mobile mobile-only" ng-click="setFocus()"></i> <input id="showSearch" type="text" class="mobile-only" id="mobileSearch" placeholder="Search..." name="search-input" ng-keypress="searchEnter($event);" ng-model="searchString"></div><a ng-click="Authentication.showSignupPrompt()" class="btn-landing btn-landing--black" ng-if="isLoggedOut()">Get Started</a> <a ui-sref="feeds" class="btn-landing btn-landing--black" ng-if="!isLoggedOut()">Go to feeds</a></div></div></header><main class="content"><section class="section-product-showcase"><!-- Swiper --><div class="swiper-container-main-slide"><div class="swiper-wrapper"><div class="swiper-slide swiper-slide--image-1 wrapper-color-1" data-swiper-autoplay="6000"><div class="slide-left-content"><h1 class="slide-title" data-swiper-parallax="-300">Everything You<br>Love Online</h1><div class="slide-title--description" data-swiper-parallax="-400"><p>Holonis is the evolution of social media and <span style="white-space: nowrap">e-commerce</span>, the social commerce platform. Meet the website with a follow button.</p></div></div></div><div class="swiper-slide swiper-slide--image-2 wrapper-color-2" data-swiper-autoplay="6000"><div class="slide-left-content"><h2 class="slide-title" data-swiper-parallax="-300">Discover Everything</h2><div class="slide-title--description" data-swiper-parallax="-400"><p>Find stories that hit the heart, memes that hit the funny bone, lots of pics, GIFs, playlists, videos, epic blogs, animals, cool products, services, quotes that inspire, and artsy stuff.</p></div></div></div><div class="swiper-slide swiper-slide--image-3 wrapper-color-3" data-swiper-autoplay="6000"><div class="slide-left-content"><h2 class="slide-title" data-swiper-parallax="-300">Tell Your Story,<br>Build Your Brand</h2><div class="slide-title--description" data-swiper-parallax="-400"><p>You are a brand, you just may not realize it yet. By creating content that other people relate to, you can build your following and monetize it.</p></div></div></div><div class="swiper-slide swiper-slide--image-4 wrapper-color-4" data-swiper-autoplay="6000"><div class="slide-left-content"><h2 class="slide-title" data-swiper-parallax="-300">Be Found Across<br>the Internet</h2><div class="slide-title--description" data-swiper-parallax="-400"><p>Nobody has followers on Google search, but when you publish on Holonis, your content is automatically indexed on search engines, which drives traffic for free, forever. SEO...it\u2019s what we do to get you found.</p></div></div></div><div class="swiper-slide swiper-slide--image-5 wrapper-color-5" data-swiper-autoplay="6000"><div class="slide-left-content"><h2 class="slide-title" data-swiper-parallax="-300">Set Up Shop</h2><div class="slide-title--description" data-swiper-parallax="-400"><p>So you want to make money online? Set up shop on Holonis and sell anything. Create products like your very own fashion line or services like your personal training programs. Be your own boss, build your empire.</p></div></div></div><div class="swiper-slide swiper-slide--image-6 wrapper-color-6" data-swiper-autoplay="6000"><div class="slide-left-content"><h2 class="slide-title learn-from-your-data" data-swiper-parallax="-300">Own Your Data</h2><div class="slide-title--description" data-swiper-parallax="-400"><p>You don\u2019t have to be an Internet wizard to capture your data. Simply add your pixel IDs from Facebook, Google, and other platforms so you can track and retarget your audiences.</p></div></div></div></div><div class="swiper-pagination"></div></div></section><section data-section="space" class="section section-holospaces u-margin-bottom-md-n"><div class="section-container"><h2 class="title-unlimited-publishing">Holonis is the evolution of social media and e-commerce</h2><div class="section__header"><h2 class="section__title u-margin-top-big-1">Trendsetters on Holonis</h2><a ui-sref="search({ tab: \'space\' })" class="text-link text-link--semibold text-link--dark-sky-blue">More</a></div><p class="section__description u-margin-top-sm">Check out other entrepreneurs who are building their brand and making money from their products, services, and audiences with Holonis.</p><div class="swiper-container-popular-holospace" data-type="space"><div class="swiper-button-prev desktop-only-2"></div><div class="swiper-button-next desktop-only-2"></div><div class="swiper-wrapper"><div class="swiper-slide holospaces-container u-margin-bootom-sm-n" ng-repeat="space in activities.space"><a ui-sref="holospace.home({ holospaceName: space.header.space.vanityUrl })"><img class="holospaces-container__avatar" ng-src="{{ ::(space.header.space.photo | processImage : 100 : true) || $root.cdnBaseUrl + \'/images/default-user.png?1\'  }}" alt="{{ ::space.header.space.name }}"><p class="holospaces-container__vanity">@{{ ::space.header.space.vanityUrl | limitTo: 15}} <span ng-if="space.header.space.vanityUrl.length >= 15">...</span> <span ng-if="::space.header.space.isVerified" class="ds-space-name-icon-container" title="Verified Holospace.&#10;Holonis confirmed this is an authentic account for this person, business, public figure, influencer or brand."><img ng-src="{{ ::space.header.space.badges[0].icon}}.svg" class="ds-space-name-verified icon" alt="{{ ::space.header.space.badges[0].title }}"></span></p><p class="holospaces-container__followers">{{ ::space.header.space.followerCount | abbreviateNumber }} Followers</p></a></div></div></div><hr></div></section><section data-section="item" class="section section-item"><div class="section-container"><div class="section__header"><h2 class="section__title">Shop Products and Services</h2><a ui-sref="search({ tab: \'item\' })" class="text-link text-link--semibold text-link--dark-sky-blue">More</a></div><p class="section__description u-margin-top-sm">Explore products and services offered by other Holonis users. You can create your own e-commerce storefront to sell products or services and transact with customers all within Holonis.</p><div class="swiper-container-small-tile item-tiles" data-type="item"><div class="swiper-button-prev desktop-only-2"></div><div class="swiper-button-next desktop-only-2"></div><div class="swiper-wrapper"><!-- slides --><tile-item class="swiper-slide" data="::item" ng-repeat="item in activities.item"></tile-item></div></div><hr></div></section><section data-section="post" class="section section-post"><div class="section-container"><div class="section__header"><h2 class="section__title">Discover Pics, Videos, and More</h2><a ui-sref="search({ tab: \'post\' })" class="text-link text-link--semibold text-link--dark-sky-blue">More</a></div><p class="section__description u-margin-top-sm">Posts are a quick way to share status updates, images, videos, or links to content with your audience and customers.</p><div class="swiper-container-small-tile post-tiles" data-type="post"><div class="swiper-button-prev desktop-only-2"></div><div class="swiper-button-next desktop-only-2"></div><div class="swiper-wrapper"><!-- Slides --><tile-post class="swiper-slide" data="::post" ng-repeat="post in activities.post"></tile-post></div></div><hr></div></section><section data-section="page" class="section section-page"><div class="section-container"><div class="section__header"><h2 class="section__title">Read Blogs, Get Knowledge</h2><a ui-sref="search({ tab: \'page\' })" class="text-link text-link--semibold text-link--dark-sky-blue">More</a></div><p class="section__description u-margin-top-sm">Create or embed multiple content types to build your brand, your audience, and market what you have to offer. You can even make money off your traffic and directly sell your products and services from your content.</p><div class="swiper-container-small-tile page-tiles" data-type="page"><div class="swiper-button-prev desktop-only-2"></div><div class="swiper-button-next desktop-only-2"></div><div class="swiper-wrapper"><!-- Slides --><tile-page class="swiper-slide" data="::page" ng-repeat="page in activities.page"></tile-page></div></div><hr></div></section><section data-section="channel" class="section section-channel"><div class="section-container"><div class="section__header"><h2 class="section__title">Explore Channels Around Your Favorite Topics</h2><a ui-sref="search({ tab: \'channel\' })" class="text-link text-link--semibold text-link--dark-sky-blue">More</a></div><p class="section__description u-margin-top-sm">Channels let you organize your content into topics, themes, or categories to help you, your audience, and your customers better navigate what you\u2019ve shared from Holonis.</p><div class="swiper-container-small-tile channel-tiles" data-type="channel"><div class="swiper-button-prev desktop-only-2"></div><div class="swiper-button-next desktop-only-2"></div><div class="swiper-wrapper"><!-- Slides --><tile-channel class="swiper-slide" data="::channel" ng-repeat="channel in activities.channel"></tile-channel></div></div></div></section><section class="section-footer-image u-image-cover"><div class="section-footer-image__content"><h2 class="section-footer-image__title">Start Your Journey</h2><div class="btn-container"><a ng-click="Authentication.showSignupPrompt()" class="btn-landing btn-landing--white btn-landing--md" ng-if="isLoggedOut()">Get Started</a> <a ui-sref="feeds" class="btn-landing btn-landing--white btn-landing--md" ng-if="!isLoggedOut()">Go to feeds</a></div></div></section></main><footer class="section-footer"><div class="section-footer__content"><div class="section-footer__btn-container"><a href="https://itunes.apple.com/us/app/holonis/id1033050415?mt=8" target="_blank" class="btn-outline u-margin-right-md"><span class="u-btn-store-icon-container"><img ng-src="{{$root.cdnBaseUrl}}/images/homescreen/apple-store.svg" alt="Apple Store">iPhone </span></a><a href="https://play.google.com/store/apps/details?id=com.holonis&hl=en" target="_blank" class="btn-outline"><span class="u-btn-store-icon-container"><img ng-src="{{$root.cdnBaseUrl}}/images/homescreen/google-play.svg" alt="Google Play"> Android</span></a></div><div class="section-footer__list-container"><ul class="section-footer__list"><li class="section-footer__list-item"><a href="https://www.holonis.com/holonis/about" target="_blank" class="section-footer__list-item-link">About</a></li><li class="section-footer__list-item u-padding-left-sm"><a href="https://support.holonis.com" target="_blank" class="section-footer__list-item-link">Help</a></li><li class="section-footer__list-item u-padding-left-sm"><a href="https://holonis.breezy.hr/" target="_blank" class="section-footer__list-item-link">Careers</a></li><li class="section-footer__list-item u-padding-left-sm"><a href="https://www.holonis.com/holonis/p/terms-of-service" target="_blank" class="section-footer__list-item-link">Terms</a></li><li class="section-footer__list-item"><a href="https://www.holonis.com/holonis/p/privacy-policy" target="_blank" class="section-footer__list-item-link">Privacy</a></li><li class="section-footer__list-item"><a ng-href="directory" target="_blank" class="section-footer__list-item-link">Directory</a></li><li class="section-footer__list-item u-padding-left-sm"><a ng-href="mailto:support@holonis.com" class="section-footer__list-item-link">Contact us</a></li></ul></div></div><div class="u-margin-top-big-1"><a ng-href="{{:: logoUrl }}" title="Holonis"><img class="section-footer__logo" ng-src="{{$root.cdnBaseUrl}}/images/svg/logo-holonis-h.svg" alt="Holonis"></a><p class="section-footer__text u-margin-top-sm">Made with <img ng-src="{{$root.cdnBaseUrl}}/images/homescreen/heart-red.svg" style="margin-top:-1px" class="animated infinite pulse" alt="Love"> in San Diego, CA</p><p class="section-footer__copyright u-margin-top-sm-1 u-margin-bottom-medium">&copy; Holonis <span id="year"></span>, Inc. All rights reserved.</p></div></footer>'), e.put('public/modules/messages/views/messages-view.view.html', '<div class="messages-view" ng-class="{ \'message-opened\': selected && showMessage }"><div class="messages-search-wrapper" ng-style="{\'cursor\' :$parent.videoLoading === true ? \'progress\' : \'\'}" ng-class="{\'show-search\' : $root.$state.current.name == \'messages\'}"><div class="search-container"><i class="dsicon-glass dsicon-glass-mobile"></i> <input class="messages-list-search mobile-text" placeholder="Search messages" ng-model="search.recipient.name"></div><button class="btn-compose" overlay="compose" ng-class="{ \'video-uploading\' : $parent.videoLoading }" overlay-scope="$parent" ng-click="$parent.loading = false"><svg-icon icon="new-conversation"></svg-icon></button></div><div class="header-details"><h2 ng-show="!selected.to" class="messaging-center">Messaging Center</h2><img ng-show="selected.to" ui-sref="holospace.home({holospaceName: selected.to.vanityUrl})" class="header-photo" ng-src="{{ (selected.to.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid alt="{{message.to.name}}"><div ng-show="selected.to" class="header-content"><a ui-sref="holospace.home({holospaceName: selected.to.vanityUrl})"><span class="header-name">{{selected.to.name }}</span> <span class="header-vanity">@{{selected.to.vanityUrl }}</span></a></div></div><!-- Conversation List --><div class="messages-list" ng-class="{\'bdr\': messages.length > 0}" ng-style="{\'cursor\' :$parent.videoLoading === true ? \'progress\' : \'\'}" ng-show="selected"><div ng-class="{\'video-uploading\' : $parent.videoLoading }"><div class="messages-list-scroll"><div class="message clearfix" ng-repeat="message in conversations | orderBy: \'-modified\' | filter:search" ng-class="{ \'message-opened\': selected.conversationId === message.conversationId && showMessage}" ui-sref="messages.conversation({id: message.conversationId, name: message.to.name, url: message.to.vanityUrl})"><img class="message-sender-photo" ng-src="{{ (message.to.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid alt="{{message.to.name}}"><div class="message-right-content"><div class="message-name-time-container"><span class="message-sender-name">{{message.to.name | cut : true : 30 : \'...\' }}</span><div class="message-time" ng-class="{ \'unread-badge\': message.read }">{{message.timeAgo}}</div><div class="message-date capitalize">{{message.created | date: \'MMM dd\' }}</div></div><span class="message-sender-vanity">@{{message.to.vanityUrl | cut : true : 30 : \'...\' }}</span><div class="description" ng-show="!message.isInvite">{{ message.body | cut : true : 90 : \'...\' }}</div><div class="description" ng-show="message.isInvite">{{ message.info }}</div><hr class="mobile-only"></div></div></div></div></div><!-- Conversation Detail --><div class="message-view message-view-detail" ng-show="selected && showMessage"><div class="container-message-detail" scroll-glue><div ng-repeat="entry in messages" id="message-{{ entry._id }}" ng-class="{ \'message-sending\' : entry.sending }" ng-show="entry.visible"><div class="message-entry message-entry-info" ng-if="$parent.messages[$index - 1].created.split(\'T\')[0] !== entry.created.split(\'T\')[0]"><div class="message-entry-details"><div class="message-entry-content">{{entry.created | date: \'MMM dd, yyyy\'}}</div></div></div><div class="message-entry message-entry-message" ng-class="{\'message-entry-details--mySpace\': entry.sender._id == $root.primarySpace.id}" ng-show="!entry.isInvite"><img class="message-entry-photo desktop-only" ng-src="{{ (entry.sender.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : 30 : true }}" ui-sref="holospace.home({ holospaceName: entry.sender.vanityUrl })" ng-class="{\'receiver\' : selected.sender._id !== entry.sender._id, \'sender\' : selected.sender._id === entry.sender._id}"><div class="message-entry-details"><p class="message-entry-name desktop-only"><a ui-sref="holospace.home({ holospaceName: entry.sender.vanityUrl })">{{ entry.sender.name }}</a> <span class="message-entry-time">{{ entry.created | date:\'h:mm a\'}}</span></p><p class="message-entry-content" ng-class="{\'mySpace\' : entry.sender._id === $root.primarySpace.id, \'notMySpace\' : entry.sender._id !== $root.primarySpace.id}" ng-if="entry.type === \'text\'"><span>{{ entry.body }}</span></p><div class="message-image-container" ng-class="{\'mySpace\' : entry.sender._id === $root.primarySpace.id, \'notMySpace\' : entry.sender._id !== $root.primarySpace.id}" ng-if="entry.type === \'image\'"><img ng-src="{{entry.data.url}}" overlay-image="{{entry.data.url}}" class="message-image" alt="{{entry.body}}"> <a ng-href="{{entry.data.url}}?dl=true" download><svg-icon icon="download"></svg-icon></a></div><div class="video-container" ng-if="entry.type === \'video\'"><video-message message="entry" file="entry.file"></video-message></div></div></div><!-- Author invite --><div class="message-entry message-entry-message" ng-show="entry.isInvite"><img class="message-entry-photo desktop-only" ng-src="{{ (entry.sender.profilePhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : 30 : true }}" ui-sref="holospace.home({ holospaceName: entry.sender.vanityUrl })"><div class="message-entry-details"><p class="message-entry-name"><a ui-sref="holospace.home({holospaceName: entry.sender.vanityUrl })">{{ entry.sender.name }}</a> <span class="time-sent">{{ entry.created | date: \'hh:mm a\' }}</span></p><div class="message-entry-content"><div class="main-modal"><div class="main-modal-header">You\'re Invited</div><div class="main-modal-body" ng-show="entry.accepted === undefined"><p>Hey {{ selected.recipient.name }},</p><p><a ui-sref="holospace.home({ holospaceName: entry.sender.vanityUrl })">{{ entry.sender.name }}</a> just invited you to be an author for their Holospace.</p><p>Being an author opens a world of opportunity.</p></div><div class="main-modal-actions" ng-show="entry.accepted === undefined"><button class="main-modal-action accept" ng-click="$parent.$parent.acceptInvite(entry)">Accept</button> <button class="main-modal-action decline" ng-click="$parent.$parent.declineInvite(entry)">Decline</button></div><div class="main-modal-body" ng-show="entry.accepted !== undefined"><p>You {{(entry.accepted) ? \'accepted\' : \'declined\'}} the invitation!</p></div></div></div></div></div></div><div class="image-preloader" ng-show="$parent.imageLoading"><holonis-loader></div></div><form class="message-reply-form mobile-only" ng-hide="$parent.noConversations" ng-submit="$parent.sendMessage()" id="scrollAnchor" ng-class="{\'is-processing\' : $parent.imageLoading || $parent.videoLoading}"><div class="messaging-media" ng-show="$parent.hasMediaMessageAction"><input type="checkbox" class="checkbox" id="media-toggle-mobile"><label class="plus-button" for="media-toggle-mobile"><i class="dsicon dsicon-plus-sign-active"></i></label><div class="messaging-media__actions"><span class="media-icon"><i class="dsicon dsicon-image-ico media-icon--image" ng-click="$parent.uploadImage()"></i> </span><span class="media-icon"><label for="message-video-mobile"><i class="dsicon dsicon-video-ico media-icon--video"></i></label></span><input id="message-video-mobile" type="file" class="input-video" ng-model="$parent.video" ng-change="$parent.uploadVideo()" accept="video/mp4,video/x-m4v" file-picker></div></div><textarea ng-class="{\'no-media\' : !$parent.hasMediaMessageAction}" placeholder="Write a message\u2026" ng-model="$parent.body" required="required" ng-keydown="$parent.enterSubmit($event)" holonis-autofocus></textarea><button type="submit" ng-class="{\'has-content\' : $parent.body.length >= 1}" class="btn-send is-processing">Send</button></form><div class="wrapper-preloader" ng-show="$parent.loading"><holonis-loader></div></div><form class="message-reply-form desktop-only" ng-hide="$parent.noConversations" ng-submit="$parent.sendMessage()" id="scrollAnchor"><div ng-show="$parent.videoLoading" class="video-preloader"><span>We\'re uploading your video, please wait...</span></div><div class="messaging-media" ng-show="$parent.hasMediaMessageAction"><input type="checkbox" class="checkbox" id="media-toggle"><label class="plus-button" for="media-toggle"><i class="dsicon dsicon-plus-sign-active"></i></label><div class="messaging-media__actions"><span class="media-icon"><i class="dsicon dsicon-image-ico media-icon--image" ng-click="$parent.uploadImage()"></i> </span><span class="media-icon"><label for="message-video"><i class="dsicon dsicon-video-ico media-icon--video"></i></label></span><input id="message-video" type="file" class="input-video" ng-model="$parent.video" ng-change="$parent.uploadVideo()" accept="video/mp4,video/x-m4v" file-picker></div></div><textarea ng-class="{\'no-media\' : !$parent.hasMediaMessageAction}" placeholder="Write a message\u2026" ng-model="$parent.body" required="required" ng-keydown="$parent.enterSubmit($event)" holonis-autofocus></textarea><button type="submit" ng-class="{\'has-content\' : $parent.body.length >= 1 && $parent.body !== \' \'}" class="btn-send is-processing">Send</button></form><div class="w-no-messages" ng-show="$parent.noConversations"><p class="general-holospace-text">Messages is where you chat privately with other Holospaces.<br>Connect on messages to develop relationships, open new opportunities, and share successes.</p></div></div>'), e.put('public/modules/messages/views/messages.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><section class="ds-header mobile-only"><a ui-sref="messages"><i ng-if="$root.$state.params.name" class="ds-back-icon dsicon-chrevon-left"></i> </a><a ui-sref="holospace.home({holospaceName: selected.to.vanityUrl})" ng-class="{\'link-no-events\' : !$root.$state.params.name}"><h2 class="ds-mobile-header-title" ng-class="{\'message-title-center\' : !$root.$state.params.name}">{{$root.$state.params.name || "Messages"}}</h2></a><div class="right-actions"><a ng-if="!$root.$state.params.name" href="javascript:;" class="btn-compose mobile-only" overlay="compose" overlay-scope="$parent"><svg-icon icon="new-conversation"></svg-icon></a><div ng-controller="HeaderController as vm" uib-dropdown auto-close="outsideClick" is-open="vm.isNavMenuOpenMobile" on-toggle="toggleSideMenu(open)"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/menu-icon.svg" uib-dropdown-toggle data-uid is-open="vm.isNavMenuOpenMobile"><div uib-dropdown-menu template-url="public/modules/core/templates/nav-dropdown.template.html" aria-labelledby="button-template-url"></div></div></div></section><section><div class="clearfix" main-content><messages-view selected="selected" conversations="conversations" messages="messages" show-message="showMessage"></messages-view></div></section>'), e.put('public/modules/messages/views/overlay-compose.view.html', '<div class="msg-modal msg-modal-active animated fadeIn" overlay-close><div class="msg-modal-content"><i class="ds-modal-close dsicon-close msg-close desktop-only" overlay-close></i><suggestions class="msg-modal-to" suggestions="suggestions" limit="1" search="vm.composeSpaceSearch"></suggestions><textarea class="msg-modal-textarea" placeholder="Write your message..." ng-model="newMessage"></textarea><div class="msg-modal-footer"><button class="cancel-btn message-modal-button" overlay-close>Cancel</button> <button class="send-btn message-modal-button" ng-disabled="!selected.length || !newMessage.length" ng-click="createConversation(newMessage)" overlay-close>Send</button></div></div></div>'), e.put('public/modules/messages/views/video-message.view.html', '<article class="ds-embed ds-embed-post"><div class="ds-upload-wrapper --selected"><ds-player api="player" autoplay="true" ng-if="finished && playing" video-id="message.source" oo-id="message.data.ooId" editing="true"></ds-player><a ng-href="{{ content.url }}" ng-click="playVideo($event)" ng-show="!finished || !playing"><div ng-show="!finished || !playing" id="video-upload-box" class="ds-upload-box" ng-style="{\'background-image\':\'url(\' + thumb.url + \')\'}"><ds-video-progress ng-class="{error:error}" progress-callback="progressCallback"></ds-video-progress><div ng-show="!error" class="ds-upload-play"></div><a ng-show="error" ng-click="processUpload()" class="video-upload-tryagain">Try Again</a></div></a></div></article>'), e.put('public/modules/messaging/views/message.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><section class="message-inside-nav inside-nav no-hero nav-shadow"><tab-snap><h2 class="page-title" ng-click="openedMessage = null"><span ng-class="{\'icon-show\':openedMessage}" class="hicon-chevron-left mobile-only"></span> Messages</h2><button type="button" class="btn btn-hollow-primary pull-right desktop-only" overlay="compose"><span class="hicon-compose"></span> Compose</button> <a class="btn-compose mobile-only hicon-compose" overlay="compose"></a><fly-menu class="mobile-only"><a>Recent (12)</a> <a>Ubread (12)</a> <a>Option (2)</a> <a>Option (3)</a></fly-menu></tab-snap></section><section><div class="clearfix" main-content><messages-view messages="messages" opened-message="openedMessage"></messages-view></div></section>'), e.put('public/modules/messaging/views/overlay-compose.view.html', '<div class="msg-modal msg-modal-active animated fadeIn" overlay-close><div class="msg-modal-content"><i class="ds-modal-close dsicon-close msg-close" overlay-close></i><div class="msg-modal-header"><i class="dsicon-chrevon-left back-arrow-messages" overlay-close></i> <span class="msg-modal-heading">New Message</span></div><suggestions class="msg-modal-to"></suggestions><textarea class="msg-modal-textarea" placeholder="Write your message..."></textarea><div class="msg-modal-footer"><div class="cancel-btn" overlay-close>Cancel</div><div class="send-btn">Send</div></div></div></div>'), e.put('public/modules/messaging/views/overlay-test.view.html', '<div class="msg-modal msg-modal-active" overlay-close><div class="msg-modal-content"><button class="close-btn" overlay-close></button><div class="msg-modal-header"><button class="back-btn" overlay-close></button> <span class="msg-modal-heading">Are you sure?</span> <span class="send-btn" overlay-close-all>Yes</span></div><div class="msg-modal-footer"><div class="cancel-btn" overlay-close>No</div><div class="send-btn" overlay-close-all>Yes</div></div></div></div>'), e.put('public/modules/onboarding/templates/login.view.html', '<div class="onboarding-content"><div class="onboarding-action" ng-switch="onboarding.active"><i class="onboarding-action--back onboarding-action-icon dsicon-chrevon-left" ng-switch-default ng-click="back()"></i> <i class="onboarding-action--close onboarding-action-icon dsicon-close" ng-switch-when="selection" ng-click="close()"></i></div><!-- STEP 1 --><div class="onboarding-switch" ng-switch="onboarding.active" ng-class="{ \'onboarding-switch--loading\': state.loading, \'onboarding-switch--changing\': state.changing }"><article class="onboarding-step onboarding-step__hello" ng-switch-default><div class="onboarding-step__content"><svg-icon icon="holonis-onboarding" class="onboarding-step__child onboarding-step__hello-logo"></svg-icon><div class="onboarding--heading"></div><p class="onboarding-step__child onboarding-step__hello-message">Sign in or sign up using the options below.</p></div><div role="button" class="onboarding-step__child onboarding-step__hello-button onboarding-step__hello-button--border" ng-click="loginSms()"><div class="onboarding-step__hello-button-logo sms-background"><svg-icon icon="sms-bubble" class="onboarding-step__sms-logo"></svg-icon></div><span class="onboarding-step__hello-button-name">Continue with SMS</span></div><div role="button" class="onboarding-step__child onboarding-step__hello-button onboarding-step__hello-button--border" ng-click="loginFacebook()"><img src="{{$root.cdnBaseUrl}}/images/sprite/logo-facebook.svg" class="onboarding-step__hello-button-logo" alt="\n          Facebook logo"> <span class="onboarding-step__hello-button-name">Continue with Facebook</span></div><div role="button" class="onboarding-step__child onboarding-step__hello-button onboarding-step__hello-button--border" ng-click="loginGoogle()"><svg-icon icon="gplus-login" class="onboarding-step__hello-button-logo"></svg-icon><span class="onboarding-step__hello-button-name">Continue with Google</span></div><div role="button" class="onboarding-step__child onboarding-step__hello-button onboarding-step__hello-button--email" ng-click="loginEmail()"><span class="onboarding-step__hello-button-name">Continue with E-mail</span></div><p class="ds-input-error-message ds-input-error-message--required ng-binding ng-scope" style="position: relative" ng-if="authError">{{ authError }}</p></article><!-- STEPS EMAIL & SMS --><!-- STEP 1 EMAIL --><article class="onboarding-step onboarding-step__email-1" ng-switch-when="email.1"><form ng-submit="emailExists()"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/mail.svg" alt="mail"></div><div class="onboarding-text"><h2 class="onboarding-title">Create an account or sign in</h2><p class="onboarding-description">Use a new email to create an account or log in with your existing one.</p></div><ds-input params="inputs.email" change="verifyEmail()" ng-model="data.email" type="email" id="email" label="E-mail" placeholder="youremail@youremail.com" validate="$validators.email" required ds-autofocus="true"></ds-input><button class="clearfix ds-button ds-button-primary ds-button-big" type="submit">Next</button><div class="onboarding-bottom onboarding-terms"><a href="https://www.holonis.com/holonis/p/terms-of-service" target="_blank" class="onboarding-terms-link">Terms &amp; Conditions</a>, <a href="https://www.holonis.com/holonis/p/privacy-policy" target="_blank" class="onboarding-terms-link">Privacy Policy</a></div></form></article><!-- STEP 1 SMS --><article class="onboarding-step onboarding-step__email-1" ng-switch-when="sms.1"><form ng-submit="smsExists()"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon phone" ng-src="{{$root.cdnBaseUrl}}/images/sprite/sms-phone.svg" alt="phone"></div><div class="onboarding-text"><h2 class="onboarding-title">What\u2019s your phone number?</h2></div><div class="onboarding-step__input-container"><div class="onboarding-step__input-content"><select name="text" ng-model="data.smsContryCode" ng-init="data.smsContryCode = LastCountyCode"><option ng-repeat="code in countriesDialCode" value="{{ code.code }} {{code.dial_code}}">{{ code.name }} ({{ code.dial_code }})</option></select><ds-input ng-model="data.phoneNumber" type="number" id="sms" label="Mobile number" ds-autofocus="true" placeholder="Only numbers" required></ds-input><i class="ds-input-icon-validator dsicon-check" ng-class="{ \'valid\' : data.phoneNumber.toString().length >= 10 }"></i> <input type="text" class="onboarding-step__sms-code uppercase" ng-model="data.smsContryCode"></div><p class="onboarding-description-sms">We\u2019ll send you an SMS verification code.</p></div><div class="onboarding-bottom onboarding-terms"><p>You agree to our <a href="https://www.holonis.com/holonis/p/terms-of-service" target="_blank" class="onboarding-terms-link">Terms &amp;</a> <a href="https://www.holonis.com/holonis/p/privacy-policy" target="_blank" class="onboarding-terms-link">Privacy Policy</a></p><button class="clearfix ds-button ds-button-primary ds-button-big is-processing" ng-class="{\'input-valid\' : data.phoneNumber.toString().length >= 10}" type="submit">Next</button></div></form></article><!-- STEP 2 EMAIL --><article class="onboarding-step onboarding-step__email-2" ng-switch-when="email.2"><form name="createPassword" class="create-password" ng-submit="goToChooseName()"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/asterisk.svg" alt="asterisk"></div><div class="onboarding-text"><h2 class="onboarding-title">Create a password</h2><p class="onboarding-description">For your security, create a password with at least <span ng-class="{\'text-error\' : data.password.length < 8 && createPassword.$submitted}">8 characters</span> using <span ng-class="{\'text-error\' : data.password === data.password.toLowerCase() && createPassword.$submitted}">1 capital letter</span>, <span ng-class="{\'text-error\' : !hasNumber && createPassword.$submitted}">1 number</span> and <span ng-class="{\'text-error\' : hasSpecialChar && createPassword.$submitted}">1 special character</span>.</p></div><ds-password validate="$validators.password" params="inputs.password" level="state.passwordLevel" ng-model="data.password" ng-change="matchPasswords()" label="Password" placeholder="Type a password" required ds-autofocus="true"></ds-password><div class="onboarding-step__confirm-pw-container"><ds-input ng-model="data.confirm" type="password" params="inputs.confirm" id="confirmPw" label="Confirm password" change="matchPasswords()" placeholder="Retype the password" validate="$validators.confirm" required></ds-input><div ng-if="data.password === data.confirm && data.password.length > 1" class="onboarding-step__confirm-pw-container__content"><span>match</span> <img src="{{$root.cdnBaseUrl}}/images/sprite/green-check.svg" alt="checked"></div><div ng-if="data.confirm.length > 1 && data.password !== data.confirm" class="onboarding-step__confirm-pw-container__content"><span class="text-error">not a match</span> <img src="{{$root.cdnBaseUrl}}/images/sprite/red-alert.svg" alt="checked"></div></div><button ng-class="{\'is-processing\' : createPassword.$submitted && !inputs.confirm.iconValidator.valid }" class="clearfix ds-button ds-button-primary ds-button-big" type="submit">Next</button><div class="onboarding-bottom onboarding-terms">By continuing, you agree to Holonis\'&nbsp;<br><a href="https://www.holonis.com/holonis/p/terms-of-service" target="_blank" class="onboarding-terms-link">Terms &amp; Conditions</a>, <a href="https://www.holonis.com/holonis/p/privacy-policy" target="_blank" class="onboarding-terms-link">Privacy Policy</a></div></form></article><!-- STEP 3 EMAIL --><article class="onboarding-step onboarding-step__email-3" ng-switch-when="email.3"><form ng-submit="goToUsername()"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/person.svg" alt="person"></div><div class="onboarding-text"><h2 class="onboarding-title">What\'s your full name?</h2><p class="onboarding-description">Your name is used for your Holospace, this can be changed at any time.</p></div><ds-input ng-model="data.name" change="validateName()" validate="$validators.name" params="inputs.name" type="text" label="Full name" placeholder="Your full name" ds-autofocus="true" required></ds-input><button class="clearfix ds-button ds-button-primary ds-button-big" type="submit">Next</button></form></article><!-- CONFIRM EMAIL CODE --><article class="onboarding-step onboarding-step__code" ng-switch-when="confirmCode"><form ng-submit="sendCode()" class="onboarding-step__code-form"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/mail.svg" alt="mail"></div><div class="onboarding-text"><h2 class="onboarding-title">Check your inbox</h2><h2 class="onboarding-description">Finish creating your account for the full Holonis experience.</h2></div><ds-code init-focus="true" params="inputs.confirmCode" validate="$validators.confirmCode" digits="CODELENGTH" model="data.confirmCode"></ds-code><span class="onboarding-description-sub">Please enter the 4 digit code sent to <span class="onboarding-description-mail">{{ data.email }}</span></span><div class="onboarding-step__code-form-text-spam-warn"><p>Don\u2019t see the email? Check your spam folder.</p></div><button class="clearfix ds-button ds-button-primary ds-button-big" type="submit">Create account</button></form><div class="onboarding-bottom">Didn\'t get a verification code? <span ng-click="resendCode()" class="ds-hoverable-link">Send again</span>.</div><div class="onboarding-bottom">Sign up with a <span ng-click="loginDifferentEmail()" class="ds-hoverable-link">different email</span>.</div></article><!-- CONFIRM SMS CODE --><article class="onboarding-step onboarding-step__code" ng-switch-when="confirmCodeSms"><form ng-submit="sendSmsCode()" class="onboarding-step__code-form"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/sprite/sms-phone.svg" alt="phone"></div><div class="onboarding-text"><h2 class="onboarding-title">Check phone for verification code</h2><h2 class="onboarding-description">Finish creating your account for the full Holonis experience.</h2></div><ds-code init-focus="true" params="inputs.confirmCode" validate="$validators.confirmCode" digits="CODELENGTH" model="data.confirmSmsCode"></ds-code><span class="onboarding-description-sub">Please enter the 4 digit code sent to <span class="onboarding-description-mail">{{ countryNumber }}{{ data.phoneNumber }}</span></span><div class="onboarding-bottom">Didn\'t get a verification code? <span ng-click="resendSmsCode()" class="ds-hoverable-link">Send again</span>.</div><hr><button class="clearfix ds-button ds-button-primary ds-button-big is-processing" ng-class="{\'input-valid\' : data.confirmSmsCode.toString().length === 4}" type="submit">Create account</button></form></article><!-- LOGIN WITH SMS CODE --><article class="onboarding-step onboarding-step__code" ng-switch-when="loginCodeSms"><form ng-submit="loginWithPhoneNumber()" class="onboarding-step__code-form"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/sprite/sms-phone.svg" alt="phone"></div><div class="onboarding-text"><h2 class="onboarding-title">Check phone for your sign in code</h2></div><ds-code init-focus="true" params="inputs.confirmCode" validate="$validators.confirmCode" digits="CODELENGTH" model="data.confirmSmsCode"></ds-code><span class="onboarding-description-sub">Please enter the 4 digit code sent to <span class="onboarding-description-mail">{{ countryNumber }}{{ data.phoneNumber }}</span></span><div class="onboarding-bottom">Didn\u2019t get a sign in code? <span ng-click="resendSmsCode()" class="ds-hoverable-link">Send again</span>.</div><hr><button class="clearfix ds-button ds-button-primary ds-button-big is-processing" ng-class="{\'input-valid\' : data.confirmSmsCode.toString().length === 4}" type="submit">Login with SMS</button></form></article><!-- EXPIRED EMAIL --><article class="onboarding-step onboarding-step__expired" ng-switch-when="expiredEmail"><form ng-submit="switch(\'confirmCode\')" class="onboarding-step-form"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/at.svg" alt="link"></div><div class="onboarding-text"><h2 class="onboarding-title">Your link has expired</h2><h2 class="onboarding-description">The previous verification link has expired. For your security we\'ve sent a new email to <span class="ds-hoverable-link">{{ data.email }}</span>. Click the link or enter the code to complete your account set-up.</h2></div><button class="clearfix ds-button ds-button-primary ds-button-big" type="submit">OK</button></form><div class="onboarding-bottom"><span class="ds-hoverable-link" ng-click="switch(\'email.1\')">Sign up with a different email.</span></div></article><!-- USERNAME --><article class="onboarding-step onboarding-step__username" ng-switch-when="username"><form ng-submit="signup()"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/at.svg" alt="username"></div><div class="onboarding-text"><h2 class="onboarding-title">Your username</h2><h2 class="onboarding-description">Add a username or use our suggestion. This is also your unique address and once set this can\u2019t be changed.</h2></div><ds-input validate="$validators.username" params="inputs.username" change="validateSpaceName()" ng-keydown="isValid($event)" ng-model="data.username" type="text" label="Username" placeholder="username" ds-autofocus="true" required></ds-input><button class="clearfix ds-button ds-button-primary ds-button-big" type="submit" ng-disabled="!inputs.username.iconValidator.valid">Next</button></form></article><!-- IF HAS ACCOUNT --><article class="onboarding-step onboarding-step__login-user" ng-class="{ \'onboarding-step__login-user--loaded\': user.loaded }" ng-switch-when="hasAccount"><form ng-submit="signin()"><div class="onboarding--heading">We found your account</div><div class="onboarding-step-avatar"><div class="onboarding-step-avatar-wave onboarding-step-avatar-wave-1"></div><div class="onboarding-step-avatar-wave onboarding-step-avatar-wave-2"></div><div class="onboarding-step-avatar-wave onboarding-step-avatar-wave-3"></div><div class="onboarding-step-avatar-wave onboarding-step-avatar-wave-4"></div><ds-avatar class="onboarding-step-user" src="user.identity.profilePhoto" class="ds-mentions-avatar" size="100"></ds-avatar></div><ds-input validate="$validators.passwordLogin" params="inputs.loginPassword" ng-model="data.passwordLogin" class="onboarding-last-input" type="password" label="Password" placeholder="Type your password to sign in" required ds-autofocus="true"></ds-input><div role="button" class="onboarding-login-helptext onboarding-login-helptext--reset" ng-click="goToReset()">Reset password</div><button class="clearfix ds-button ds-button-primary ds-button-big" type="submit" ng-disabled="!data.passwordLogin"><span class="ds-button-wrapper">Continue as {{ user.identity.name }}</span></button><div role="button" class="onboarding-login-helptext onboarding-login-helptext--switch" ng-click="switch(\'\', null, true)">Switch account</div></form></article><!-- RESET PASSWORD --><article class="onboarding-step onboarding-step__reset" ng-switch-when="reset"><form ng-submit="askPasswordReset()"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/asterisk.svg" alt="Reset password"></div><div class="onboarding-text"><h2 class="onboarding-title">Reset password</h2><p class="onboarding-description">Type your email or username. You will receive an email with a link to reset your password.</p></div><div class="onboarding-reset-center"><ds-input validate="$validators.resetEmail" change="verifyEmail(true)" params="inputs.resetEmail" ng-model="data.resetEmail" type="text" label="E-mail or username" placeholder="Type your email or username" required ds-autofocus="true"></ds-input></div><button class="clearfix ds-button ds-button-primary ds-button-big" type="submit">Reset password</button></form></article><!-- RESET PASSWORD SUCCESS --><article class="onboarding-step onboarding-step__reset" ng-switch-when="reset.success"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/asterisk.svg" alt="Reset password"></div><div class="onboarding-text"><h2 class="onboarding-title">Reset password</h2></div><div class="onboarding-reset-center"><span class="onboarding-reset-center--text">Now go to your e-mail and click the "reset your password" link to create a new password.</span></div><button class="clearfix ds-button ds-button-primary ds-button-big" ng-click="switch(\'\')">Ok</button></article></div></div>'), e.put('public/modules/onboarding/templates/new.view.html', '<div class="onboarding-content"><div class="onboarding-action"><i class="onboarding-action--back onboarding-action-icon dsicon-chrevon-left" ng-if="onboarding.active != \'multipleAccounts\' && state.loading" ng-click="switch(\'multipleAccounts\')"></i></div><div class="onboarding-switch" ng-class="{ \'onboarding-switch--loading\': state.loading, \'onboarding-switch--changing\': state.changing }" ng-switch="onboarding.active"><article class="onboarding-step onboarding-step__facebook" ng-switch-when="multipleAccounts"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><svg-icon icon="facebook-hexagon" class="onboarding-hexagon-icon"></svg-icon></div><div class="onboarding-text"><h2 class="onboarding-title">Facebook Login</h2><h2 class="onboarding-description">Choose an account to continue your sign up on Holonis.</h2></div><ul class="onboarding-step-facebook-accounts" ng-class="{ \'onboarding-step-facebook-accounts--has-selected\': onboarding.selected }"><li class="onboarding-step-facebook-account" ng-class="{ \'onboarding-step-facebook-account--selected\': account === onboarding.selected }" ng-repeat="account in onboarding.identities"><label for="{{ account.id }}" class="onboarding-step-facebook-account-container"><ds-avatar class="onboarding-step-facebook-account--avatar" size="50" src="account.picture"></ds-avatar><em class="onboarding-step-facebook-account--name">{{ account.displayName }}</em><ds-radio ng-model="onboarding.selected" input-id="{{ account.id }}" name="fabriciomatte9999" type="radio" ng-value="account"></ds-radio></label></li></ul><button class="clearfix ds-button ds-button-primary ds-button-big" ng-disabled="!onboarding.selected" ng-click="selectAccount()">Next</button></article><article class="onboarding-step onboarding-step__username" ng-switch-default><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/at.svg" alt=""></div><div class="onboarding-text"><h2 class="onboarding-title">Your username</h2><h2 class="onboarding-description">Add a username or use our suggestion. This is also your unique address and once set this can\u2019t be changed.</h2></div><ds-input validate="$validators.vanityUrl" params="inputs.vanityUrl" change="validateSpaceName()" ng-model="data.vanityUrl" type="text" label="Username" placeholder="username" required></ds-input><button class="clearfix ds-button ds-button-primary ds-button-big" ng-click="signup()">Next</button><div class="onboarding-bottom onboarding-terms">By continuing, you agree to Holonis\'&nbsp;<br><a href="https://www.holonis.com/holonis/p/terms-of-service" target="_blank" class="onboarding-terms-link">Terms &amp; Conditions</a>, <a href="https://www.holonis.com/holonis/p/privacy-policy" target="_blank" class="onboarding-terms-link">Privacy Policy</a></div></article></div></div>'), e.put('public/modules/onboarding/templates/preferences.view.html', '<div ng-if="isEdit"><mobile-header center-title="Preferences" back-icon="chrevon-left"></mobile-header><header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header></div><div class="onboarding-content" ng-class="{ \'onboarding-content--edit\': isEdit }"><!-- STEP 1 --><div class="onboarding-switch" ng-switch="onboarding.active" ng-class="{ \'onboarding-switch--loading\': state.loading, \'onboarding-switch--changing\': state.changing }"><!-- CATEGORIES --><article class="onboarding-step onboarding-step__categories" ng-switch-default><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/sharp.svg" alt=""></div><div class="onboarding-text"><h2 class="onboarding-title" ng-if="!isEdit">My Holospace category</h2><h2 class="onboarding-title" ng-if="isEdit">My Topics</h2><h2 class="onboarding-description" ng-if="!isEdit">Choose a category for your Holospace. This will help people find and engage with you and can be changed later from your profile.</h2><h2 class="onboarding-description" ng-if="isEdit">Customize your interests. Select or remove any topics that are relevant to you to receive fresh recommendations and discover new content.</h2></div><ul class="onboarding-categories" ng-class="{ \'onboarding-categories--has-checked\': data.categoryID }"><li class="onboarding-categories-item" ng-repeat="category in categories track by $index" ng-class="{ \'onboarding-categories-item--checked\': category.checked }"><label class="onboarding-categories-label" for="category-{{category.id}}"><div class="onboarding-categories-container"><img ng-src="{{$root.cdnBaseUrl}}/images/categories/{{ category.icon }}@2x.png" class="onboarding-categories-icon onboarding-categories-icon--local"></div><em class="onboarding-categories-tagline">{{ category.name }}</em><ds-checkbox input-id="category-{{category.id}}" ng-model="category.checked" name="categories" change="updateCategory(category)"></ds-checkbox></label></li></ul><div class="onboarding-step-floating"><button class="clearfix ds-button ds-button-big" ng-class="{ \'ds-button-primary\': data.categoryID }" ng-click="getTopics()">{{ data.categoryID ? \'Next\' : \'Skip\' }}</button></div></article><!-- TOPICS --><article class="onboarding-step onboarding-step__topics" ng-switch-when="topics"><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/stars.svg" alt=""></div><div class="onboarding-text" ng-if="!isEdit"><h2 class="onboarding-title">Pick interesting topics</h2><h2 class="onboarding-description">Select at least 5 topics that interest you and Holonis will deliver fresh relevant recommendations every day. You can edit these later from your settings.</h2></div><div class="onboarding-text" ng-if="isEdit"><h2 class="onboarding-title">My Topics</h2><h2 class="onboarding-description">Customize your interests. Select or remove any topics that are relevant to you to receive fresh recommendations and discover new content.</h2></div><ul class="onboarding-topics"><li class="onboarding-topics-item" ng-repeat="topic in topics track by $index" ng-click="toggleTopic(topic)" ng-class="{ \'onboarding-topics-item--checked\': topic.checked }"><em class="onboarding-topics-name">{{ topic.name }}</em></li></ul><div class="onboarding-step-floating width--overflow"><button class="clearfix ds-button ds-button-big" ng-class="{ \'ds-button-primary\': !!data.interestIds.length }" ng-click="confirmCategory()" ng-disabled="(isEdit && !preferencesChanges) || state.loading">{{ isEdit ? \'Save\' : (!!data.interestIds.length ? (\'Next (\' + data.interestIds.length + \')\') : \'Skip\') }}</button></div></article><!-- RECOMMENDED --><article class="onboarding-step onboarding-step__recommended" ng-switch-when="recommended"><div class="onboarding-hexagon"><img ng-src="{{$root.cdnBaseUrl}}/images/svg/logo-holonis-solo.svg" class="onboarding-holonis-logo"></div><div class="onboarding-text"><h2 class="onboarding-title">Personalize Your Holospace</h2><h2 class="onboarding-description">Here are some amazing people, brands, & causes to follow and see in your feed. Click to follow or unfollow. You\u2019ll be able to add more or make changes any time.</h2></div><ul class="onboarding-recommended-list"><li class="onboarding-recommended-item" ng-repeat="recommended in recommendations track by $index"><article class="onboarding-recommended-left"><ds-avatar class="onboarding-avatar" avatar="recommended.photo" resize="50" size="50"></ds-avatar><div class="onboarding-recommended-user"><ds-space-name view-name="recommended.vanityUrl" space="recommended" class="onboarding-recommended-user__username"></ds-space-name><i class="onboarding-recommended-user__verified dsicon-verified" ng-if="!recommended.isVerified"></i> <em class="onboarding-recommended-user__fullname">{{ recommended.name }}</em></div></article><article class="onboarding-recommended-right"><div class="onboarding-recommended-follow"><div class="onboarding-recommended-follow-buttons" ng-click="toggleFollow(recommended)"><button class="clearfix ds-button-primary ds-button-like-active" ng-if="recommended.following">Following</button> <button class="clearfix ds-button-like-default" ng-if="!recommended.following">Follow</button></div></div></article></li></ul><div class="onboarding-step-floating"><button class="clearfix ds-button ds-button-primary ds-button-big" ng-click="setFollowers()">Done</button></div></article></div></div>'), e.put('public/modules/messaging/templates/messages-view.template.html', '<div class="messages-view" ng-class="{ \'message-opened\': openedMessage }"><div class="messages-list"><div class="messages-search-wrapper"><span class="hicon-search"></span> <input class="messages-list-search" placeholder="Search"></div><div ng-repeat="message in messages" class="message" ng-class="{ \'message-opened\': $parent.openedMessage === message }" ng-click="$parent.openedMessage = message"><div class="view-message hicon-chevron-right"></div><div class="message-time" ng-class="{ \'unread-badge\': !message.read }">{{message.timeAgo}}</div><img class="message-sender-photo" ng-src="{{message.senderPhoto | processImageURL : getUniqueSelector() : true }}" data-uid alt="{{message.senderName}}"> <span class="message-sender-name">{{message.senderName}}</span><div class="description">{{message.shortMessage}}</div></div></div><div class="message-view message-view-detail" ng-show="openedMessage"><div ng-repeat="entry in openedMessage.entries" class="message-entry message-entry-{{entry.type}}"><img class="message-entry-photo" ng-src="{{ (entry.senderPhoto || $root.cdnBaseUrl + \'/images/default-user.png?1\') | processImageURL : getUniqueSelector() : true }}" data-uid ng-if="entry.senderPhoto"><div class="message-entry-name mobile-only">{{entry.senderName}}</div><div class="message-entry-details"><div class="message-entry-content">{{entry.content}}</div><div class="message-entry-time" ng-if="entry.time">{{entry.time}}</div></div></div><form class="message-reply-form"><div class="message-reply-field"><textarea placeholder="Write a reply..."></textarea></div><div class="message-reply-form-actions"><button type="button" class="btn btn-hollow-primary pull-right">Reply</button></div></form></div></div>'), e.put('public/modules/overlay/views/invite.view.html', '<div class="main-modal invite-modal" ng-controller="inviteModalController"><div class="main-modal-header">You\'re Invited</div><div class="main-modal-body"><p>Hey {{primarySpace.name}}</p><p><a ui-sref="holospace.home({holospaceName: teamOwnerSpace.vanityUrl})">{{teamOwnerSpace.name}}</a> just invited you to be an author for their Holospace.</p><p>Being an author opens a world of opportunity.</p><hr><p>Please enter the confirmation code: <input type="text" class="confirmation-code-input" name="code" ng-model="code"></p></div><div class="main-modal-actions"><button class="main-modal-action" ng-disabled="submitting" ng-click="confirm()">Accept</button></div></div>'), e.put('public/modules/overlay/views/overlay-example.view.html', '<p>01234567489</p>'), e.put('public/modules/overlay/views/overlay-image.view.html', '<img ng-src="{{overlayImage}}" class="overlay-image" ng-if="!isLoading" ng-class="{loaded: !isLoading}" overlay-close> <span class="overlay-loading" ng-if="isLoading">Loading...</span>'), e.put('public/modules/overlay/views/overlay.view.html', '<a class="overlay z-index-max" overlay-close><div data-ng-include="overlayContent"></div></a>'), e.put('public/modules/pages/views/detail.view.html', '<div class="user-deactivate-message"><p>This content is not available anymore.</p></div><div class="page-wrapper page-wrapper-light page-wrapper--page" ng-class="{ \'page-wrapper--page-no-cover\': !vm.page.cover }"><mobile-header center-title="Page" back-icon="chrevon-left"></mobile-header><header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><ds-cover space-id="data.id" data="data" ng-if="data && data.cover.url" aspect-width="1237" aspect-height="556"></ds-cover><landingpage-header landingpage-header-info="vm.landingpageHeaderInfo" data="vm.page"></landingpage-header><div class="share-this-custom-floating" ng-class="{ \'share-this-custom--visible\': vm.showShare }" ng-if="!vm.isDraft"><share-this share-title="vm.title" share-url="vm.permalink" class="share-this"></share-this></div><div class="w-content-animation-header page-detail"><div class="container content-ads" style="max-width: 730px"><div class="row page-content-detail"><div class="col-xs-12"><h1 itemprop="headline" itemprop="name" class="new-holospace-heading">{{vm.page.body.name}}</h1><h3 class="new-holospace-subheanding heading-normal-dimmed heading-small">Page {{vm.isDraft ? \'drafted\' : \'published\'}} by <a rel="author" itemprop="author" itemscope itemtype="http://schema.org/person" ui-sref="holospace.home({holospaceName: vm.createdBySpace.vanityUrl})"><span itemprop="name">{{vm.createdBySpace.name}} </span></a>on <span itemprop="datePublished">{{ (vm.page.status === \'published\' ? vm.page.published : (vm.page.modified || vm.page.created)) | date:"MM/dd/yyyy \'at\' h:mma" }}</span></h3><div class="clearfix"></div><h2 itemprop="description" class="new-holospace-description" ng-bind-html="vm.page.body.description | sanitize"></h2></div><ds-engagement class="page-content-engagement" data="vm.normalizedData" ng-if="vm.normalizedData" dont-open-post="true"></ds-engagement><div itemprop="text" class="col-xs-12" ng-if="params"><ds-story-view params="params"></ds-story-view></div></div><div class="side-ads"><div id="aol-ad"></div><div id="div-gpt-ad-holonis_sticky_1" slot-targeting="slotTargeting" ad class="ads-vertical" ng-if="showAds"></div></div></div></div><div ng-if="vm.aolPlayerEnabled"><div class="aol-ad-player" ng-if="data.cover.url"><!-- TAG START { player: " Holonis Player + Revenue Optimized Playlist (Desktop - With Cover)", owner: "Holonis Editorial", for: "Holonis Editorial" } --><div id="5be9c8ffa6b48b566a869ece" class="vdb_player vdb_5be9c8ffa6b48b566a869ece5b561699b46ab336fc851017"><script type="text/javascript" src="//delivery.vidible.tv/jsonp/pid=5be9c8ffa6b48b566a869ece/5b561699b46ab336fc851017.js"></script></div><!-- TAG END { date: 11/12/18 } --></div><div class="aol-ad-player" ng-if="!data.cover.url"><!-- TAG START { player: "Holonis Player + Revenue Optimized Playlist (Desktop)", owner: "Holonis Editorial", for: "Holonis Editorial" } --><div id="5b58c69c4deb1a7891c52940" class="vdb_player vdb_5b58c69c4deb1a7891c529405b561699b46ab336fc851017"><script type="text/javascript" src="//delivery.vidible.tv/jsonp/pid=5b58c69c4deb1a7891c52940/5b561699b46ab336fc851017.js"></script></div><!-- TAG END { date: 11/08/18 } --></div></div><div id="div-gpt-ad-holonis_main_banner" slot-targeting="slotTargeting" ad class="ads-bottom" ng-if="showAds"></div><div id="div-gpt-ad-holonis_just_premium" slot-targeting="slotTargeting" ad class="ad-untrackable"></div><taboola-ads user="vm.space.userId"></taboola-ads><ds-comments object-id="vm.page.id" object-type="page" content="data" class="content-page" ng-if="!vm.isDraft"></ds-comments></div>'), e.put('public/modules/pages/views/form.view.html', '<header class="ds-product-nav--mobile"><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><ds-header-creation data="data" header-title="header.title" params="header.params" tracker="header.tracker"></ds-header-creation><div class="ds-view ds-view--creation ds-page-create"><ds-cover editing="state.editingCover" aspect-width="1237" aspect-height="556" has-placeholder="true" editable="true" space-id="data.id" data="data"></ds-cover><div class="ds-view-container"><section class="ds-product-create-detail"><ds-title title="state.title"></ds-title><div class="form-group"><ds-input ng-model="data.name" type="text" id="title" big="true" label="Page title" placeholder="Enter the page name" validate="$validators.name" required></ds-input><ds-text ng-model="data.description" mentions="true" class="ds-comment-input" label="About your page" placeholder="Description or short summary of your page" validate="$validators.description" ng-click="focus($event)" tabindex="1"></ds-text></div></section></div><ds-story params="params" type="page" ng-if="params"></ds-story></div>'), e.put('public/modules/pages/views/tab.view.html', '<div ng-if="vm.callToAction" class="heading-intro"><p class="general-holospace-text">Pages allow you to create anything from a blog post to an article to a photo gallery.<br>You can even embed and market the products or services you\'re offering directly from your content.<br>This tab is where all the pages you\u2019ve created are found.</p><a class="icn icn-add-content" ui-sref="page.create"></a></div><div ng-show="!vm.callToAction"><div class="holospace-tab-content" main-content><tile-group type="pages" vanity="vm.vanity" perpage="15" class="" ads="vm.showAds" space-id="vm.spaceId" model="items" state-pagination="true"></tile-group></div></div>'), e.put('public/modules/pixels/views/pixels.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><mobile-header center-title="Pixels" back-icon="chrevon-left"></mobile-header><div class="ds-view pixels-content ds-view--creation"><div class="pixels-hero" ng-if="pixelsHero"><img ng-src="{{$root.cdnBaseUrl}}/images/pixel-icon.png" class="pixel-icon"><h2>Add Marketing Pixels</h2><i class="dsicon-close" id="pixel-hero-close" ng-click="close()"></i><p>Pixels are little bits of code that allow you to track the results of your advertising and marketing campaigns.</p><p>Adding pixels helps you to more easily create remarketing lists that serve tailored, dynamic ads based on the pages people visited and the actions they took on your Holospace.</p><p>Retargeting is effective because it focuses your advertising spend on people who are already familiar with you or your brand, and have recently demonstrated interest.</p></div><div class="pixels-form ds-view-container"><h3>Marketing Pixels</h3><section><svg-icon icon="logo-facebook-bw" class="section-icon"></svg-icon><form class="form-group" ng-submit="::save(\'facebook\')"><ds-input ng-model="pixels.facebook.id" type="text" id="pixel-facebook" big="true" label="Facebook" placeholder="Add your Facebook pixel id, ex 46594856" required></ds-input><button type="submit" id="pixel-facebook-save" ng-disabled="!validate(\'facebook\')">Save</button></form><a class="about-source" id="pixel-facebook-about" href="https://developers.facebook.com/docs/facebook-pixel" target="_blank">more about Facebook pixels</a></section><section><svg-icon icon="logo-twitter-bw" class="section-icon"></svg-icon><form class="form-group" ng-submit="::save(\'twitter\')"><ds-input ng-model="pixels.twitter.id" type="text" id="pixel-twitter" big="true" label="Twitter" placeholder="Add your Twitter pixel id, ex 46594856" required></ds-input><button id="pixel-twitter-save" ng-disabled="!validate(\'twitter\')">Save</button></form><a class="about-source" id="pixel-twitter-about" href="https://business.twitter.com/en/help/campaign-measurement-and-analytics/conversion-tracking-for-websites.html" target="_blank">more about Twitter pixels</a></section><section><svg-icon icon="logo-pinterest-bw" class="section-icon"></svg-icon><form class="form-group" ng-submit="::save(\'pinterest\')"><ds-input ng-model="pixels.pinterest.id" type="text" id="pixel-pinterest" big="true" label="Pinterest" placeholder="Add your Pinterest pixel id, ex 46594856" required></ds-input><button id="pixel-pinterest-save" ng-disabled="!validate(\'pinterest\')">Save</button></form><a class="about-source" id="pixel-pinterest-about" href="https://developers.pinterest.com/docs/ad-tools/conversion-tag/" target="_blank">more about Pinterest pixels</a></section><section><svg-icon icon="logo-ga" class="section-icon"></svg-icon><form class="form-group" ng-submit="::save(\'googleanalytics\')"><ds-input ng-model="pixels.googleanalytics.id" type="text" id="pixel-ga" big="true" label="Google Analytics" placeholder="Add your GA pixel id, ex 46594856" required></ds-input><button id="pixel-googleanalytics-save" ng-disabled="!validate(\'googleanalytics\')">Save</button></form><a class="about-source" id="pixel-googleanalytics-about" href="https://developers.google.com/analytics/devguides/collection/analyticsjs/tracker-object-reference" target="_blank">more about Google Analytics pixels</a></section></div></div>'), e.put('public/modules/places/views/places-city.view.html', '<div class="holospace-header"><div class="holo-radial-gradient" ng-style="{ \'background-image\' : \'url(\' + (info.cover | processImageURL : getUniqueSelector()) + \')\' }" data-uid></div><div class="places-info"><div class="places-profile-image" ng-style="{ \'background-image\': \'url(\' + (info.profileImage | processImageURL : getUniqueSelector()) + \')\' }" data-uid></div><div><h1 class="places-name">{{info.name}}</h1><h2 class="places-tagline">{{info.tagline}}</h2></div></div></div><main class="page-wrapper page-wrapper-light page-places"><div class="temp-tabs hide-scroll"><div class="tabs-wrap"><ul class="holo-tabs list-blank clearfix"><li class="">Home</li><li class="">Shop</li><li class="active">Explore</li><li class="">Channels</li><li class="">Pages</li></ul></div></div><div class="container"><div class="row"><div class="col-xs-12"><p class="lead">{{info.name}} Categories</p><div class="live-search"><label class="live-search-label"><input type="search" class="live-search-field" placeholder="Start typing any category name..." ng-model="search"></label></div></div></div><div class="row"><div class="places-list col-xs-12"><p class="places-list-item" ui-sref="places.intern({section: \'list\'})" ng-repeat="category in categories | filter: search | limitTo: limit.number">{{category.name}} ({{category.items}})</p></div></div><div class="row"><div class="col-xs-12"><a href="javascript:;" class="places-see-more" ng-click="toggleLimit()">Se {{limit.text}} categories</a></div></div></div></main><div class="page-places"><div class="container"><div class="row"><div class="col-xs-12"><p class="lead">Neighborhoods</p><br></div></div><div class="row"><div class="places-list col-xs-12"><p class="places-list-item" ui-sref="places.intern({section: \'list\'})" ng-repeat="neighborhood in neighborhoods">{{neighborhood.name}}</p></div></div></div></div>'), e.put('public/modules/places/views/places-list.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><main class="page-wrapper page-places-list"><div class="container"><div class="row"><div class="col-xs-12"><ul class="breadcrumb"><li class="breadcrumb-item" ui-sref="places">United States</li><li class="breadcrumb-item" ui-sref="places">California</li><li class="breadcrumb-item" ui-sref="places.intern({section: \'city\'})">San Diego</li><li class="breadcrumb-item">San Diego Painters</li></ul></div></div><div class="row"><div class="col-xs-12 col-sm-8"><div class="box"><ul class="places-contacts-list list-unstyled"><li class="places-contacts-list-item heading"><p class="places-contacts-list-sorter">Sort by: Relevance <img ng-src="{{$root.cdnBaseUrl}}/images/chevron-down.svg" class="icon"></p><h3>San Diego Painters</h3><address>456 Painters found in San Diego, CA</address></li><li class="places-contacts-list-item" ng-repeat="city in cities | limitTo: 7"><div class="places-contacts-list-logo" ng-style="{\'background-image\': \'url(\'+ (\'images/contact-list-logo.png\' | processImageURL : getUniqueSelector()) +\')\'}" data-uid></div><h3>San Diego Painters</h3><p><a href="">Painters, Painting Contractors, Exterior Painters</a></p><address><p>750 B Street, Suite 1230</p><p></p><p>San Diego, CA</p><p></p><p>858-123-1234</p><p></p></address><img ng-src="{{$root.cdnBaseUrl}}/images/chevron-right.svg" class="arrow"></li></ul></div><ul class="pagination"><li><a href=""><img ng-src="{{$root.cdnBaseUrl}}/images/pag-guillemet-left.svg" class="icon"></a></li><li><a href=""><img ng-src="{{$root.cdnBaseUrl}}/images/pag-chevron-left.svg" class="icon"></a></li><li><a href="">1</a></li><li><a href="">2</a></li><li><a href="">3</a></li><li><a href="">4</a></li><li><a href="">5</a></li><li><a href="">6</a></li><li><a href="">7</a></li><li><a href="">8</a></li><li><a href="">9</a></li><li><a href="">10</a></li><li><a href="">11</a></li><li><a href="">12</a></li><li><a href="">13</a></li><li><a href="">14</a></li><li><a href=""><img ng-src="{{$root.cdnBaseUrl}}/images/pag-chevron-right.svg" class="icon"></a></li><li><a href=""><img ng-src="{{$root.cdnBaseUrl}}/images/pag-guillemet-right.svg" class="icon"></a></li></ul></div><aside class="col-sm-4 aside"><div map-lazy-load="//maps.google.com/maps/api/js?libraries=places&js&key={{vm.mapApiKey}}"><ng-map class="maps" center="{{cities[3].position}}" zoom-to-include-markers="true"><marker ng-repeat="city in cities | limitTo: 10" position="{{city.position}}" title="{{city.name}}"></marker></ng-map></div><div class="box"><p class="lead">Top Categories</p><p>Painters</p><p>Carpenters</p><p>Chinese Restaurants</p><p>Babysitters</p><p>Doggie Day Care</p><p>Landscapers</p><p>Personal Fitness Trainers</p><p>Writers</p></div><div class="box"><p class="lead">Local Neighborhoods</p><p>Mira Mesa</p><p>Rancho Bernardo</p><p>Gaslamp</p><p>Old Town</p><p>National City</p><p>Kearny Mesa</p></div><img ng-src="{{$root.cdnBaseUrl}}/images/deal1.jpg"></aside></div></div></main>'), e.put('public/modules/places/views/places-main.view.html', '<div class="holospace-header"><div class="holo-radial-gradient" ng-style="{ \'background-image\' : \'url(\' + (info.cover | processImageURL : getUniqueSelector()) + \')\' }" data-uid></div><div class="places-info"><div class="places-profile-image" ng-style="{ \'background-image\': \'url(\' + (info.profileImage | processImageURL : getUniqueSelector()) + \')\' }" data-uid></div><div><h1 class="places-name">{{info.name}}</h1><h2 class="places-tagline">{{info.tagline}}</h2></div></div></div><main class="page-wrapper page-wrapper-light page-places"><div class="temp-tabs hide-scroll"><div class="tabs-wrap"><ul class="holo-tabs list-blank clearfix"><li class="">Home</li><li class="">Shop</li><li class="active">Explore</li><li class="">Channels</li><li class="">Pages</li></ul></div></div><div class="container"><div class="row"><div class="col-xs-12"><p class="lead">California Cities</p><div class="live-search"><label class="live-search-label"><input type="search" class="live-search-field" placeholder="Star typing any city name..." ng-model="search"></label></div></div></div><div class="row"><div class="places-list col-xs-12"><p class="places-list-item" ui-sref="places.intern({section: \'city\'})" ng-repeat="city in cities | filter: search | limitTo: limit.number">{{city.name}} ({{city.items}})</p></div></div><div class="row"><div class="col-xs-12"><a href="javascript:;" class="places-see-more" ng-click="toggleLimit()">Se {{limit.text}}...</a></div></div></div></main><img src="http://d14dsi4x2zx6ql.cloudfront.net/files/styles/welcome_image/public/VC_LandingPage_AWIM000957_1280x640_0.jpg?itok=qYk83xVZ" class="places-ad">'), e.put('public/modules/places/views/places.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><div class="places-wrapper"><h1>U.S. States</h1><div><a ui-sref="directory">Directory</a></div><div class="places-states-container"><a ui-sref="holospace.explore({ holospaceName: state.vanityUrl })" class="places-state-item" ng-repeat="state in vm.states">{{state.name}}</a></div></div>'), e.put('public/modules/posts/views/detail.view.html', '<div class="user-deactivate-message"><p>This content is not available anymore.</p></div><div class="post-page"><mobile-header center-title="Post" back-icon="chrevon-left"></mobile-header><header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><div class="ds-post" data-id="{{ post.id }}" ng-if="post"><div class="ds-post-bg"></div><div class="ds-post-header-mobile"><a ng-href="{{post.space.vanityUrl}}"><ds-tile-header data="post"></ds-tile-header></a><ds-karot data="post" type="\'post\'"></ds-karot></div><section class="ds-post-interaction"><ds-karot data="post" type="\'post\'"></ds-karot><div class="ds-post-author"><ds-tile-header data="post" class="ds-post-header-desktop"></ds-tile-header><ds-post-text data="post"></ds-post-text><div ng-bind-html="embedSource" ng-if="isYoutube" class="ds-post-embed"></div><embedly-card url="embedSource" ng-if="embedSource && !isYoutube"></embedly-card><ds-embed no-interaction="true" ng-if="!isVideo && !embedSource" autoplay="true" class="ds-post-embed" data="embedPostData" ng-show="post.hasEmbedPost || post.content.type == \'link\' || hasVideoEmbedded" sub-type="post.content.subType"></ds-embed><ds-embed no-interaction="true" force="\'video\'" data="post" ng-if="isVideo" autoplay="true"></ds-embed><div ng-bind-html="post.iframeTag" ng-if="isIframe && !isVerticalIframe" class="ds-post-iframe"></div><div ng-bind-html="post.iframeTag" ng-if="isIframe && isVerticalIframe" class="ds-post-iframe-vertical"></div><div class="ds-post-image" data-uid ng-if="!embedSource && !isVideo && !isIframe && post.content.cover && !(post.hasEmbedPost || post.content.type == \'link\') && post.content.embedded[0].mediaType != \'video\'"><header class="tile-content-header tile-content-type-space"><div class="ds-post-image-container"><img ng-src="{{ post.content.cover | processImageURL : getUniqueSelector() }}" alt=""></div></header></div><ds-engagement data="post" dont-open-post="true"></ds-engagement></div></section></div><ds-comments content="post" scroller=".ds-post-interaction, .ds-post" object-id="post.id" class="post-detail" object-type="{{post.type}}" should-focus="shouldFocus" ads="{ header: true }"></ds-comments></div>'), e.put('public/modules/posts/views/form.view.html', '<header class="ds-product-nav--mobile"><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><ds-header-creation data="data" header-title="header.title" params="header.params" tracker="header.tracker"></ds-header-creation><!-- post header --><div id="modal-tips-create-post-step--share-tip"><div class="modal-tips-create-post-step--share-tip"><div class="modal-dialog modal-sm"><div class="modal-content"><button type="button" class="close close--tips-create-post-step--share-tip" aria-label="Close" ng-click="vm.closeTip();">X</button><header><p>Share something</p><div class="icon-embed-social-links close--tips-create-post-step--share-tip fade-in" ng-click="vm.closeTip();"><img ng-src="{{$root.cdnBaseUrl}}/images/intro/icons/embed-icon2x.png" alt="embed-content-icon"></div><div class="intro-line fade-in"></div><p class="info">Use text, media or embed from thousands of sources</p></header><section class="fade-in-up"><ul><li><img ng-src="{{$root.cdnBaseUrl}}/images/intro/icons/facebook-icon2x.png" alt="facebook-icon"></li><li><img ng-src="{{$root.cdnBaseUrl}}/images/intro/icons/twitter-icon2x.png" alt="twitter-icon"></li><li><img ng-src="{{$root.cdnBaseUrl}}/images/intro/icons/tumblr-icon2x.png" alt="tumblr-icon"></li><li><img ng-src="{{$root.cdnBaseUrl}}/images/intro/icons/pinterest-icon2x.png" alt="pinterest-icon"></li><li><img ng-src="{{$root.cdnBaseUrl}}/images/intro/icons/youtube-icon2x.png" alt="youtube-icon"></li><li><img ng-src="{{$root.cdnBaseUrl}}/images/intro/icons/instragram-icon2x.png" alt="instragram-icon"></li><div class="intro-line fade-in-left"></div></ul><p>Connect social media apps to increase the channels where you can share</p></section></div></div></div></div><div class="content-creation step-three post"><!--\n        Post Creation\n    --><div class="content-creation-body step-three holo-container-md" style="position: relative"><div class="tooltip-post"><svg-icon icon="tips-icon" class-name="tips-icon" uib-tooltip-template="vm.tooltipTemplate" tooltip-placement="bottom-left" tooltip-trigger="none" tooltip-is-open="$root.isVisible"></svg-icon><div ng-click="$root.toggleTooltip()" class="tooltip-tap-area"></div></div><div class="post-create border-btm"><div class="form-group"><ds-text single-line="true" class="post-creation-text" placeholder="Share something, start typing..." ng-model="data.description" mentions="true" ng-keypress="vm.changeTextLength()" tabindex="1"></ds-text><div class="optimize-warning text-center" ng-if="vm.shareOnTwitter && data.description.length > 140"><span>The orange text won\'t be shared to Twitter because it exceeds 140 characters.</span></div></div><content-creator disable-delete-content="params.disableDeleteContent" space-id="params.spaceId" page-id="params.contentId" content-blocks="params.contents" template="params.template" single="params.single" bucket="params.bucket" vanity="params.vanity" ng-if="params.showContentCreator && !state.edit">></content-creator><ds-story-view ng-if="state.edit" params="data"></ds-story-view><span class="ds-input-error-message ds-input-error-message--required" ng-if="$validators.content === false">{{ \'A description or content is required to publish a post.\' }}</span></div><!-- data.body.story --><ds-share selected-providers="data.shareTo"></ds-share></div></div>'), e.put('public/modules/posts/views/tab.view.html', '<div ng-if="space.provider === \'localstack\'" class="unclaimed-holospace"><section id="about" class="about"><div class="container-fluid"><div class="row"><div class="col-xs-12"><div class="w-location-info"><svg-icon icon="unclaimed-marker"></svg-icon><p>{{ space.location[0].address }}, {{ space.location[0].city }}, {{ space.location[0].stateAbbr }} {{ space.location[0].zipCode }}</p></div><div class="w-location-sub-info"><ul><li><svg-icon icon="unclaimed-phone" class="phone-rotate"></svg-icon><span>{{ space.phoneNumber }}</span></li><li><svg-icon icon="unclaimed-compass"></svg-icon><span><a ng-href="{{ vm.directions }}" target="_system">Directions</a></span></li><li class="unclaimed-hours" ng-click="toggleHours()"><svg-icon icon="unclaimed-clock"></svg-icon><span>Hours</span></li></ul><div class="hours-dialog" ng-show="hoursVisible"><h3>Hours</h3><span class="hours-close" ng-click="toggleHours()"><svg-icon icon="close"></svg-icon></span><ul><li ng-repeat="hour in formatedHours"><span>{{ hour.day }}</span> <span class="time">{{ hour.time || \'Closed\' }}</span></li></ul></div></div></div></div></div></section><div class="w-claim-this-space" ng-if="space.isClaimable">Want to Claim this Space? <a href="mailto:support@holonis.com?subject=Request%20to%20claim%20this%20business:%20{{space.name}}&body=I%20am%20interested%20in%20claiming%20this%20business:%20{{space.name}}%0D%0A%0D%0AAddress:%20https://www.holonis.com/{{space.vanityUrl}}">click here</a></div></div><div ng-if="vm.ownerHasBlocked" class="heading-intro"><p style="line-height: 1.2">User blocked.</p></div><div ng-if="!vm.ownerHasBlocked && vm.callToAction" class="heading-intro"><p class="general-holospace-text">Posts are a quick way to share a status, photo, video, or link to your followers and channels.<br>This tab is where all the posts you\u2019ve created are found.</p><a class="icn icn-add-content" ui-sref="post.create"></a><p style="line-height: 1.2" ng-if="!vm.isMySpace">No posts yet</p></div><div ng-show="!vm.ownerHasBlocked && !vm.callToAction"><div class="holospace-tab-content" main-content><tile-group type="posts" vanity="vm.vanity" perpage="15" class="" ads="vm.showAds" space-id="vm.spaceId" model="items" state-pagination="true"></tile-group></div></div>'), e.put('public/modules/social/views/social.view.html', '<div ng-if="vm.callToAction" class="heading-intro"><span>You don\'t have any content</span><p>Start by saying something about yourself!</p><a class="icn icn-add-content" ui-sref="create"></a></div><div ng-if="!vm.callToAction"><div class="holospace-tab-content" main-content><tile-group type="" perpage="15" class="" space-id="vm.spaceId"></tile-group></div></div><modal id="modal-content" type="content"></modal>'), e.put('public/modules/tiles/templates/group.template.html', '<div class="tile-group"><div class="loaderInline isLoading" ng-show="isLoading" ng-class="{\'isLoaded\' : !isLoading}"></div><div class="tile-group-wrapper grid" infinite-scroll="infiniteScroll()" infinite-scroll-distance="0.2" infinite-scroll-container="container" infinite-scroll-disabled="loading || loadingMore || infiniteScrollDisabled"><tile class="grid-item" ng-repeat="item in data" data="item" selectable="selectable" on-selectable-change="onSelectableChange" no-engagement="noEngagement" show-video-info="showVideoInfo" ng-if="item.status !== \'deleted\'"></tile></div><div class="wrapper-preloader" ng-class="{ \'loader-hidden\' : !loading}"><holonis-loader><article class="card card-preloader"><div class="card-wrapper"><header class="tile-heading"><div class="pr-sqa pr-bg"></div><div class="pr-row-left"></div><div class="pr-bg pr-row pr-row-40"></div><div class="pr-bg pr-row pr-row-30 pr-row-small"></div><div></div></header><div class="card-content"><div class="pr-bg pr-row pr-row-80"></div><div class="pr-bg pr-row pr-row-100"></div><div class="pr-bg pr-row pr-row-40"></div><div class="preloader-img"></div></div></div></article><article class="card card-preloader"><div class="card-wrapper"><header class="tile-heading"><div class="pr-sqa pr-bg"></div><div class="pr-row-left"></div><div class="pr-bg pr-row pr-row-40"></div><div class="pr-bg pr-row pr-row-30 pr-row-small"></div><div></div></header><div class="card-content"><div class="pr-bg pr-row pr-row-80"></div><div class="pr-bg pr-row pr-row-100"></div><div class="pr-bg pr-row pr-row-40"></div><div class="preloader-img"></div></div></div></article><article class="card card-preloader"><div class="card-wrapper"><header class="tile-heading"><div class="pr-sqa pr-bg"></div><div class="pr-row-left"></div><div class="pr-bg pr-row pr-row-40"></div><div class="pr-bg pr-row pr-row-30 pr-row-small"></div><div></div></header><div class="card-content"><div class="pr-bg pr-row pr-row-80"></div><div class="pr-bg pr-row pr-row-100"></div><div class="pr-bg pr-row pr-row-40"></div><div class="preloader-img"></div></div></div></article></div><div class="pre-render-loader-more" ng-if="isPrerender && $root.$state.current.next"><a href="{{$root.$state.current.next}}">Load more</a></div></div>'), e.put('public/modules/tiles/templates/tile.template.html', '<div class="tile tile-new tile--{{data.type}} tile-content-type-{{::data.content.type}}" data-url="{{::data.url}}" data-id="{{::data.id}}" ng-class="{\'tile--hasGallery\' : data.hasGallery, \'selected\' : data.selected, \'selectable\' : selectable, \'tile--has-cover\': data.content.cover }"><tile-unclaimed data="data" class="wrapper-tile" ng-if="data.localstack"></tile-unclaimed><div ng-if="::data.type == \'ads\'" class="ads-tile"><div class="ad-unit-center"><div id="{{ ::adsSlotName }}"></div></div></div><div class="wrapper-tile" ng-if="::data.type != \'ads\' && !data.localstack"><div class="tile-selected-mask mask-z-index" ng-click="toggleSelect($event, data)"><svg-icon icon="check-mask"></svg-icon></div><div class="tile-header clearfix" ng-if="::data.content.subType === \'share\' && data.shareType === \'dynamic\' && !noHeader"><ds-karot data="data.v2 || data" type="data.type" ng-if="!selectable && !hideKarot"></ds-karot><p class="share-names"><span ng-repeat="item in data.header.sharedByParsed"><a href="{{ ::item.vanityUrl}}" ng-if="::!item.multiple">{{ ::item.name }}</a><a ng-click="::$parent.openShares($parent.data);" ng-if="::item.multiple">{{ ::item.name }}</a>{{ item.separator }} </span>shared this <strong>{{ ::data.header.sharedType }}</strong></p></div><div class="tile-header clearfix" ng-if="::data.type !== \'space\' && (!isShare || isSingleShare) && !noHeader"><i ng-if="data.provider !== \'holonis\'" class="tile-network-icon fa fa-{{data.provider}}"></i> <a ui-sref="holospace.home({ holospaceName: data.header.author.vanityUrl })" class="tile-avatar-link"><img ng-src="{{ ((data.header.author.photo || data.header.photo) | processImage : 50 : true) || ($root.cdnBaseUrl + \'/images/default-user.png?1\') }}" alt="" class="tile-avatar" data-uid></a><div class="tile-header-info"><ds-karot data="data.v2 || data" type="data.type" ng-if="!selectable && !hideKarot"></ds-karot><p class="tile-name"><ds-space-name ng-if="!data.header.storyHtml" space="data.header.author"></ds-space-name><span ng-if="data.header.storyHtml" ng-bind-html="data.header.storyHtml | sanitize"></span></p><span><span ng-if="data.provider === \'holonis\'"><span>{{data.typeLabel}}</span> <span ng-hide="state.isProductOrService">- {{(data.published || data.created || data.modified) | amTimeAgo}}</span> </span><span ng-if="data.provider !== \'holonis\'"><span class="text-capitalize">{{data.provider}}</span> - {{(data.published || data.created || data.modified) | amTimeAgo}}</span></span></div><div ng-if="data.v2.featured" class="tile--badge-featured animated fadeIn"><div class="featured--text"><svg-icon icon="shape-star" class="featured--star"></svg-icon>Featured</div></div></div><!-- type space --><div class="tile-header clearfix" ng-if="(data.type === \'space\') && !noHeader"><a ng-href="{{data.url}}" ui-sref="holospace.home({holospaceName: data.space.vanityUrl})"><header class="space tile-content-header tile-content-type-{{data.content.type}}"><img ng-src="{{((data.space.thumb || data.space.headerMediaUrl | processImageURL : getUniqueSelector()) || $root.cdnBaseUrl + (data.space.business ? \'/images/cover-business-default.png?1\' : \'/images/cover-default.png?1\')) }}" alt="" data-uid><ds-holospace-follow data="data"></ds-holospace-follow><div class="tile-content-header--shade"></div></header><div class="tile-header--space-info"><div class="avatar-space"><img ng-src="{{ ((data.space.photo | processImage : 100 : true ) || $root.cdnBaseUrl + (data.space.business ? \'/images/default-business.png?1\' : \'/images/default-user.png?1\')) }}" alt=""></div><div class="space-info"><h1><ds-space-name space="data.space"></ds-space-name></h1></div></div></a></div><!-- end: type space --><div class="tile-content"><div class="tile-content-wrapper"><span ng-if="data.descriptionOnTop && data.content.description && data.shareType !== \'dynamic\'" class="tile-content-text" ng-class="{\'tile-content-description-top\': data.hasExtraContent}"><a ng-click="openPost(data, $event);"><p class="tile-content-description" ng-if="!data.hasMentions">{{ ::data.content.description | cut : true : 400 : \'\' }} <span class="tile-seemore" ng-if="::data.content.description.length >= 400">See more...</span></p><p class="tile-content-description" ng-if="data.hasMentions"><span ng-bind-html="data.content.description | cut : true : 400 : \'\' | escapeHTML | mentions : data.v2.header.links"></span> <span class="tile-seemore" ng-if="::data.content.description.length >= 400">See more...</span></p></a></span><div ng-if="isVideo"><ds-embed type-label="data.typeLabel" no-interaction="true" sub-type="data.content.subType" data="data" content="data" hide-video="true" show-video-info="showVideoInfo"></ds-embed></div><div ng-if="!isVideo" ng-class="{ \'old-video\': oldVideo }"><a ng-href="{{data.url}}" ng-click="openPost(data, $event);"><header class="tile-content-header tile-content-type-space" ng-style="{{data.content.style}}" ng-if="data.content.cover && !(data.content.embedded.content || (data.content.embedded[0] && data.content.embedded[0].type === \'embedly\'))"><img ng-if="!item.content.embedded[0].embedlyData || data.content.embedded[0].embedlyData.provider_name !== \'Eventbrite\'" ng-src="{{ (data.content.coverData || data.cover) | processImage : 500 }}" alt="" data-uid> <img ng-if="item.content.embedded[0].embedlyData && data.content.embedded[0].embedlyData.provider_name === \'Eventbrite\'" ng-src="{{ data.content.cover | processImageURL : getUniqueSelector() }}" alt="" data-uid></header><div class="tile-content-text"><h1 class="tile-content-title" ng-if="!data.content.embedded.content && data.content.title">{{data.content.title}}</h1><p class="tile-content-description" ng-if="!data.content.embedded.content && data.content.subtitle">{{data.content.subtitle | cut : true : 400 : \'\'}} <span class="tile-seemore" ng-if="::data.content.description.length >= 400" ng-click="openPost(data, $event)">See more...</span></p></div></a></div><ds-channel-mosaic data="data"></ds-channel-mosaic><div ng-if="::hasEmbed" class="tile-share" ng-class="{ \'--has-description\': data.content.description, \'--is-video\': data.content.embedded.type === \'video\' }"><ds-embed share="data.content.type === \'share\'" type-label="data.typeLabel" no-interaction="true" sub-type="data.content.subType" data="data.content.embedded.content ? data.content.embedded : data.content.embedded[0]" content="data" hide-video="true"></ds-embed></div><div ng-if="::originalContentIsDeleted" class="this-share tile-share-deleted"><p>{{ ::data.content.subtitle }}</p></div><a ng-if="::!originalContentIsDeleted" ng-href="{{data.url}}" class="tile-general-link" ng-click="openPost(data, $event);" ng-style="data.content.embedded.content.description && data.content.embedded.content.description.length > 150 \n                    && {\'height\':\'calc(100% - 160px)\'}" ng-class="{ \'tile-general-link--embed\': hasLinkEmbedded, \'tile-general-link--embed-share\': hasLinkShared}"></a><div class="tile-general-link--extra" role="button" ng-click="openPost(data, $event)" ng-class="{ \'tile-general-link--extra--story\': story && hasLinkEmbedded }" ng-if="hasLinkShared || (hasLinkEmbedded && story)"></div><div class="tile-general-link--extra-left" role="button" ng-click="openPost(data, $event)" ng-class="{ \'tile-general-link--extra-left--small\': hasLinkEmbedded }" ng-if="hasLinkShared || hasLinkEmbedded"></div></div></div><div class="tile-footer"><a ng-href="{{data.url}}" ng-if="!data.content.embedded.content && data.isItem"><div ng-if="!state.isOffer" class="tile-footer-product"><item-price data="data.content"></item-price></div><make-offer-banner ng-if="state.isOffer" size="\'normal\'" class="offer-banner-position"></make-offer-banner></a><button class="button-follow" ng-if="data.type === \'space\' && !data.isMySpace" ng-click="toggleFollow(data)"><span ng-if="!data.space.isFollowing">Follow</span> <span ng-if="data.space.isFollowing">Unfollow</span></button><!-- draft footer --> <a ng-if="data.status === \'draft\' " ui-sref="holospace.home({holospaceName: data.header.authoredBy.vanityUrl})" class="link-draft">By | {{data.header.authoredBy.name}}</a><!-- end: draft footer --><!-- provider link embed --></div><ds-engagement data="data" ng-if="::showEngagementBar" no-interaction="noEngagement"></ds-engagement></div></div>'), e.put('public/modules/tiles/templates/tile.unclaimed.template.html', '<div class="wrapper-tile"><div class="tile-selected-mask" ng-click="toggleSelect($event, data)"><svg-icon icon="check-mask"></svg-icon></div><div class="tile-header clearfix" ng-if="data.type !== \'space\'"><a ng-href="{{data.source}}" target="_blank" class="tile-avatar-link"><img ng-src="{{ ((data.header.author.photo || data.header.photo) | processImage : 50 : true) || ($root.cdnBaseUrl + \'/images/default-user.png?1\') }}" alt="" class="tile-avatar" data-uid></a><div class="tile-header-info"><p class="tile-name"><a ng-if="!data.header.storyHtml" target="_blank" ng-href="{{data.source}}">{{data.header.author.name}}</a> <a ng-if="data.header.storyHtml" target="_blank" ng-href="{{data.source}}" ng-bind-html="data.header.storyHtml | sanitize"></a></p><span><span ng-if="data.provider === \'holonis\'"><span>{{data.typeLabel}}</span> - {{(data.published || data.created || data.modified) | amTimeAgo}}</span><!-- provider holonis --> <span ng-if="data.provider !== \'holonis\'"><span class="text-capitalize">{{data.provider}}</span> - {{(data.published || data.created || data.modified) | amTimeAgo}}</span><!--social provider--></span></div></div><!-- end: type space --><div class="tile-content"><div class="tile-content-wrapper"><div ng-if="isVideo"><ds-embed dont-open-post="true" type-label="data.typeLabel" no-interaction="true" sub-type="data.content.subType" data="data" content="data" hide-video="true" show-video-info="showVideoInfo"></ds-embed></div><div ng-if="data.content.embedded.content || (data.content.embedded[0] && data.content.embedded[0].embedlyData)" class="tile-share" ng-class="{ \'--has-description\': data.content.description, \'--is-video\': data.content.embedded.type === \'video\' }"><ds-embed dont-open-post="true" type-label="data.typeLabel" no-interaction="true" sub-type="data.content.subType" data="data.content.embedded.content ? data.content.embedded : data.content.embedded[0]" content="data" hide-video="true"></ds-embed></div></div></div></div>'), e.put('public/modules/transactions/views/sales.view.html', '<section class="tab-embed-wrap tab-embed-wrap--transactions" data-ng-controller="HolospaceTransactionsSalesController as vm" ng-class="{ \'tab-embed-wrap--transactions--not-loaded\': !state.loaded }"><div class="ds-view transactions"><div class="ds-view-container"><ds-title title="\'Transactions\'"></ds-title><div class="transactions-container"><table class="ds-table ds-table--transactions" infinite-scroll="loadMore()" infinite-scroll-disabled="isLastPage || state.loading" ng-class="{ \'ds-table-table--loading\': state.loading }"><thead class="ds-table-head"><tr class="ds-table-row"><th class="ds-table-cell ds-table-cell--header ds-table-cell--thumb-holder"></th><th class="ds-table-cell ds-table-cell--header ds-table-cell--name"><div class="ds-table-cell-container">Items</div></th><th class="ds-table-cell ds-table-cell--header ds-table-cell--quantity"><div class="ds-table-cell-container ds-table-cell-container--right">Quantity</div></th><th class="ds-table-cell ds-table-cell--header"><div class="ds-table-cell-container ds-table-cell-container--center ds-table-cell--total">Total</div></th><th class="ds-table-cell ds-table-cell--header"><div class="ds-table-cell-container ds-table-cell-container--right ds-table-cell--status">Status</div></th><th class="ds-table-cell ds-table-cell--header ds-table-cell--spacer"><div class="ds-table-cell-container"></div></th></tr></thead><tbody class="ds-table-body"><tr class="ds-table-row" ng-repeat="sale in sales" ui-sref="transactionsSaleDetail({ id: sale.id, holospaceName: holospaceName })"><td class="ds-table-cell ds-table-cell--thumb-holder"><div class="ds-table-cell-container"><div class="ds-table-cell-thumb" style="background-image: url(\'{{ sale.item.item.cover.url | processImageURL : sale.item.item.cover.width : true }}\')"></div></div></td><td class="ds-table-cell ds-table-cell--name"><div class="ds-table-cell-container"><span class="ds-table-cell-caption ds-table-cell-caption--type">{{ sale.item.item.item.type }} </span><span class="ds-table-cell-text" title="{{ sale.item.item.name }}">{{ sale.item.item.name | cut : true : 50 : \'...\' }}</span></div></td><td class="ds-table-cell ds-table-cell--quantity"><span class="ds-table-cell-text">{{ sale.quantity }}</span></td><td class="ds-table-cell ds-table-cell--price"><span class="ds-table-cell-text">{{ sale.total_price > 0 ? \'$\' + sale.total_price : \'Free\' }}</span></td><td class="ds-table-cell ds-table-cell--status"><span class="ds-table-cell-text" ng-switch="sale.status"><span ng-switch-when="succeeded">Success</span> <span ng-switch-when="failed">Canceled</span> <span ng-switch-when="pending">Pending</span></span></td><td class="ds-table-cell ds-table-cell--mobile"><span class="ds-table-cell--name"><span class="ds-table-cell-text">{{ sale.item.item.name }} </span></span><span class="ds-table-cell-text">QTY: {{ sale.quantity }} </span><span class="ds-table-cell--price"><span class="ds-table-cell-text">{{ sale.total_price > 0 ? \'$\' + sale.total_price : \'Free\' }}</span></span></td><td class="ds-table-cell ds-table-cell--spacer"><span class="ds-table-cell-text"><i class="ds-table-chevron dsicon-chrevon-left"></i></span></td></tr></tbody></table><div class="loader-inline-wrapper" ng-if="state.loading"><div class="loaderInline"></div></div></div><em class="ds-table--empty" ng-hide="sales.length || !state.loaded">Transactions is where you review and manage sales to your customers and purchases you\u2019ve made on Holonis.</em></div></div></section>'), e.put('public/modules/video-input/templates/video-input-picker.template.html', '<input type="file" accept="video/mp4,video/x-m4v,video/*" file-picker class="video-input-picker">'), e.put('public/modules/video-input/templates/video-input-player.template.html', '<article class="ds-embed ds-embed-post"><div class="ds-upload-wrapper --selected"><ds-player api="player" autoplay="true" ng-if="shouldShowPlayer()" video-id="state.video.id" oo-id="state.video.ooId" editing="true"></ds-player><a href="#" ng-click="playIconClickHandler()" ng-show="!shouldShowPlayer()"><div ng-show="!shouldShowPlayer()" id="video-upload-box" class="ds-upload-box" ng-style="{\'background-image\':\'url(\' + (state.thumb.url | processImageURL : 500 ) + \')\'}"><ds-video-progress ng-class="{error:state.error}" progress-callback="progressCallback"></ds-video-progress><div ng-show="!state.error" class="ds-upload-play"></div><a href="#" ng-show="state.error" ng-click="playIconClickHandler()" class="video-upload-tryagain">Try Again</a></div></a></div></article>'), e.put('public/modules/videos/views/videos.view.html', '<header><div ng-controller="HeaderController as vm" ng-include="\'public/modules/core/views/header.web.html\'" top-nav></div></header><section ng-controller="HeaderController as vm" class="message-inside-nav inside-nav no-hero nav-shadow to-front"><tab-snap><h2 class="page-title"><div uib-dropdown auto-close="outsideClick" is-open="vm.isNavMenuOpenMobile"><i class="ds-back-icon dsicon-chrevon-left" uib-dropdown-toggle data-uid is-open="vm.isNavMenuOpenMobile"></i><div uib-dropdown-menu template-url="public/modules/core/templates/nav-dropdown.template.html" aria-labelledby="button-template-url"></div><span class="title-text-message">Videos</span></div></h2></tab-snap></section><main class="page-wrapper page-wrapper-light page-drafts page-video-draft page-wrapper--page"><tabs class="tabs-embed tabs-component w-tabs-likes-saved" space-id="vm.spaceId" array="vm.tabsArray" on-tab-change="" drop-settings-fn="vm.dropSettingsFn" always-fixed="true"></tabs><div ng-if="items && items.length < 1" class="heading-intro heading-intro--video"><p class="general-holospace-text">Every video you share will live here.<br>Why don\'t you start sharing right now?</p><a class="icn icn-add-content" ui-sref="create"></a></div><div ng-show="!vm.callToAction"><div class="holospace-tab-content" main-content><tile-group type="videos" perpage="15" class="tile-group-videos-tab" space-id="vm.space.id" vanity="vm.space.vanityUrl" model="items" state-pagination="true" show-video-info="true"></tile-group></div></div></main>'), e.put('public/modules/core/templates/modal/activate-message-request.template.html', '<div class="modal-privacy"><div class="modal-privacy__header"><i class="dsicon-close" ng-click="cancel();"></i> <img class="modal-privacy__header-icon" ng-src="{{$root.cdnBaseUrl}}/images/sprite/black-lock.svg" alt="lock"><div class="modal-privacy__header-title"><h2 class="modal-privacy__header-title-nowarp">Activate Messaging Requests</h2></div><div class="modal-privacy__header-description"><p>You\u2019re activating a privacy setting that enables you to review, approve, ignore or block users from sending you private messages. Here are some things you\u2019ll need to know.</p></div></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>You will have to review all new requests from users who want to message you.</p><hr></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Any current conversations will automatically become approved. You can change this later.</p></div></div><div class="modal-privacy-actions"><a href="#" class="ds-btn ds-btn-nowarp ds-btn--md ds-btn--blue" ng-click="setMessagingPermission(true);">Activate Requests</a> <a href="#" ng-click="cancel();" class="ds-btn-outline">Cancel</a></div>'), e.put('public/modules/core/templates/modal/content.template.html', '<div id="modal-content" class="modal-feeds instagram"><div class="modal-feeds-bar"><button class="modal-feeds-close"></button><h2 class="modal-feeds-referrer">Viewing {{(modal.data.space || modal.data.spaceObj).name}}\'s post</h2></div><div class="modal-feeds-dialog"><div class="modal-feeds-dialog-container"><div class="modal-feeds-dialog-middle"><header class="modal-feeds-header"><figure class="modal-feeds-user-profile animated"><img ng-src="{{(modal.data.space || modal.data.spaceObj).profilePhoto | processImageURL : getUniqueSelector() }}" data-uid></figure><div class="modal-feeds-user-texts"><h2 class="modal-feeds-user-name animated">{{(modal.data.space || modal.data.spaceObj).name}}</h2><p class="modal-feeds-user-description animated" ng-if="modal.data.description">{{modal.data.description}}</p></div></header><content-viewer content="modal.openerScope.content" ng-if="modal.openerScope.content"></content-viewer></div></div></div><!--\n\t<button class="modal-feeds-nav-prev"></button>\n\t<button class="modal-feeds-nav-next"></button>\n\t--></div>'), e.put('public/modules/core/templates/modal/create-intro.template.html', '<section class="create-modal"><h1 class="title">Discover Create</h1><p>Choose what you want to create and publish across the Internet.</p><p>Use the features in the Create menu to tell your stories, build your brand, sell what you uniquely offer, or attract an audience to monetize. What you share from Create can be discovered across the Internet.</p><button type="button" name="button" ng-click="close()"><span>Get Started!</span></button></section>'), e.put('public/modules/core/templates/modal/deactivate-message-request.template.html', '<div class="modal-privacy"><div class="modal-privacy__header"><i class="dsicon-close" ng-click="cancel();"></i> <img class="modal-privacy__header-icon" ng-src="{{$root.cdnBaseUrl}}/images/sprite/black-lock.svg" alt="lock"><div class="modal-privacy__header-title"><h2 class="modal-privacy__header-title-nowarp">Deactivate Messaging Requests</h2></div><div class="modal-privacy__header-description"><p>You\u2019re deactivating a privacy setting that enables you to review, approve, ignore or block users from sending you private messages. Here are some things you\u2019ll need to know.</p></div></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Anyone can openly message you, but you can still block users.</p><hr></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Any pending requests will now automatically be able to message you.</p></div></div><div class="modal-privacy-actions"><a href="#" class="ds-btn ds-btn-nowarp ds-btn--md ds-btn--blue" ng-click="setMessagingPermission(false);">Deactivate Requests</a> <a href="#" ng-click="cancel();" class="ds-btn-outline">Cancel</a></div>'), e.put('public/modules/core/templates/modal/default.template.html', '<div class="modal"><div class="moda-content"></div></div>'), e.put('public/modules/core/templates/modal/feed.template.html', '<div id="modal-feeds" class="modal-feeds instagram"><div class="modal-feeds-bar"><button class="modal-feeds-close"></button><h2 class="modal-feeds-referrer">Viewing {{modal.data.normalized.user.name}} {{modal.data.provider}}</h2></div><div class="modal-feeds-dialog"><div class="modal-feeds-dialog-container"><div class="modal-feeds-dialog-middle"><header class="modal-feeds-header"><figure class="modal-feeds-user-profile animated"><img ng-src="{{modal.data.normalized.user.photo | processImageURL : getUniqueSelector() }}" data-uid></figure><div class="modal-feeds-user-texts"><h2 class="modal-feeds-user-name animated">{{modal.data.normalized.user.name}}</h2><p class="modal-feeds-user-description animated" ng-if="modal.data.message">{{modal.data.message}}</p></div></header><div class="modal-feeds-content-embed" ng-show="!(modal.data.type === \'video\' && modal.data.provider === \'isVideo\')"></div><div class="videogular-container" ng-if="modal.data.type === \'video\' && modal.data.provider === \'isVideo\'"><videogular><vg-media vg-src="modal.config.sources" vg-tracks="modal.config.tracks" vg-native-controls="false"></vg-media><vg-overlay-play></vg-overlay-play><vg-controls vg-autohide="true" vg-autohide-time="1000"><vg-play-pause-button></vg-play-pause-button><vg-time-display>{{ currentTime | date:\'mm:ss\':\'+0000\' }}</vg-time-display><vg-scrub-bar><vg-scrub-bar-current-time></vg-scrub-bar-current-time></vg-scrub-bar><vg-time-display>{{ timeLeft | date:\'mm:ss\':\'+0000\' }}</vg-time-display><vg-volume><vg-mute-button></vg-mute-button><vg-volume-bar></vg-volume-bar></vg-volume><vg-fullscreen-button></vg-fullscreen-button></vg-controls><div class="vg-media-text" ng-show="true">Feed Template{{modal.data.title}}</div></videogular></div></div></div></div><button class="modal-feeds-nav-prev"></button> <button class="modal-feeds-nav-next"></button></div>'), e.put('public/modules/core/templates/modal/intro-join.template.html', '<div class="modal-feeds"><div class="intro-modal-signin"><button type="button" class="close close--modal-intro-join" aria-label="Close"></button><div class="modal-dialog modal-sm"><div class="modal-content"><div class="modal-content-signin"><header><h1>Join Holonis</h1><div class="fb-button"><a href=""><img ng-src="{{$root.cdnBaseUrl}}/images/intro/fb-button.png" alt=""></a></div><div class="gplus-button"><a href=""><img ng-src="{{$root.cdnBaseUrl}}/images/intro/gplus-button.png" alt=""></a></div></header><section><p>Use Email</p><form><label><input type="text" required> <span>Email</span></label><label><input type="password" required> <span>Password</span></label><label><input type="password" required> <span>Confirm Password</span></label><!--hardcoded function--> <button class="trigger-modal" data-open-modal="modal-intro-registration-email">Sign up</button></form></section></div></div></div></div></div>'), e.put('public/modules/core/templates/modal/intro-registration-conect.template.html', '<div class="modal-feeds"><div class="intro-modal-registration-conect"><div class="modal-dialog modal-sm"><div class="modal-content"><div class="modal-content-registration-conect"><img ng-src="{{$root.cdnBaseUrl}}/images/intro/logo-conect.png" alt=""><section><h1>It\u2019s Building Now</h1><img ng-src="{{$root.cdnBaseUrl}}/images/intro/load-spinner.gif" alt=""><p>HoloSpace robots at work</p></section></div></div></div></div></div>'), e.put('public/modules/core/templates/modal/intro-registration-email.template.html', '<div class="modal-feeds"><div class="intro-modal-registration-email"><!-- <button type="button" class="close close--modal-intro-registration-email" aria-label="Close"></button> --><div class="modal-dialog modal-sm"><div class="modal-content"><div class="modal-content-registration-email"><header><h1>Create a Holospace</h1></header><section><div class="block white shadow"><h2>Fantastic! now let\u2019s confirm a few things to complete the build.</h2><p>What email address would you like to use for things like notifications and orders?</p><form class="form-email"><label for=""><input type="text" name="name" value="" placeholder="me@email.com" required></label></form></div><div class="block white shadow"><p>What are you going to call this Holospace?</p><form class="form-holospace-title"><label for=""><input type="text" name="name" value="" placeholder="Holospace Title" required> <span>Required</span></label></form></div><div class="block white shadow nickname"><p>Okay, now choose your Holospace\u2019s address</p><form class="form-nickname"><label for=""><input type="text" name="name" value="" required> <span>holonis.com/</span></label><b>Verify Address</b></form></div></section><footer><button class="cancel close--modal-intro-registration-email">Cancel</button> <button class="next" disabled="disabled">Next</button></footer></div></div></div></div></div>'), e.put('public/modules/core/templates/modal/intro-signin.template.html', '<div class="modal-feeds"><div class="intro-modal-signin"><button type="button" class="close close--modal-intro-signin" aria-label="Close"></button><div class="modal-dialog modal-sm"><div class="modal-content"><div class="modal-content-signin"><header><h1>Sign In</h1><div class="fb-button"><a href=""><img ng-src="{{$root.cdnBaseUrl}}/images/intro/fb-button.png" alt=""></a></div><div class="gplus-button"><a href=""><img ng-src="{{$root.cdnBaseUrl}}/images/intro/gplus-button.png" alt=""></a></div></header><section><p>Use Email</p><form><label><input type="text" required> <span>Email</span></label><label><input type="password" required> <span>Password</span></label><button>Sign In</button></form></section></div></div></div></div></div>'), e.put('public/modules/core/templates/modal/intro.template.html', '<div class="modal-feeds"><div class="intro-modal"><button type="button" class="close close--modal-intro" aria-label="Close">X</button><div class="modal-dialog modal-sm"><div class="modal-content"><p>What is a HoloSpace?<br><br>The definition and story of what a HoloSpace is will be supplied shortly, This will require the modal to scroll what will will be mostly textual content at first, but we would love to include a short video here, or perhaps some CSS animations to tell the story.</p></div></div></div></div>'), e.put('public/modules/core/templates/modal/likes.template.html', '<div class="ds-likes-modal"><ds-input placeholder="Search for someone..." ng-model="form.query" ng-if="form.next && data.likes.length > 0"></ds-input><ul class="likes-list"><!--<div class="loaderInline" ng-if="state.loadingMore"></div>--> <em class="likes-list-empty" ng-if="!state.loadingMore && data.likes < 1">We couldn\'t fetch likes for this.</em><li class="likes-list-item" ng-repeat="like in data.likes"><a href="/{{like.vanityUrl}}" class="likes-user"><img class="likes-thumb" src="{{ like.profilePhoto | processImageURL : getUniqueSelector() : true }}" ng-if="like.profilePhoto" data-uid> <img class="likes-thumb" src="{{ $root.cdnBaseUrl + \'/images/default-user.png?1\' }}" ng-if="!like.profilePhoto"><ds-space-name space="like"></ds-space-name></a><div class="likes-button-container" ng-if="spaceId != like.id" ng-click="like.followDisabled || toggleFollow(spaceId, like.id, like.isFollowing, $index)"><button class="ds-button-primary ds-button-like-active" ng-if="!!like.isFollowing && !like.followDisabled">Following</button> <button class="ds-button-like-default" ng-if="!like.isFollowing && !like.followDisabled">Follow</button><div class="likes-loader" ng-if="like.followDisabled"><div class="loaderInline"></div></div></div></li><div class="ds-likes-modal-more" ng-class="{ \'--loading\': state.loadingMore }" ng-if="form.next && data.likes.length > 0"><button class="ds-button-seemore" ng-click="getLikes(form.query, form.page + 1)">See More</button><div class="loaderInline"></div></div></ul></div>'), e.put('public/modules/core/templates/modal/modal-tips-create-post-step.template.html', '<!-- <div class="modal-feeds">\n\t<div class="modal-tips-create-post-step">\n\t\t<div class="modal-dialog modal-sm">\n\t\t\t<div class="modal-content">\n\t\t\t\t<button type="button" class="close close--tips-create-post" aria-label="Close">X</button>\n\t\t\t\t<section>\n\t\t\t\t\t<h2 class="fade-in-down">Create Something</h2>\n\t                <p class="fade-in-up">Go ahead and tap the plus icon to see a menu</p>\n\t\t\t\t</section>\n\t\t\t\t<footer>\n                    <ul>\n                        <li class="intro-icon-feeds">\n                            <img ng-src="{{$root.cdnBaseUrl}}/images/intro/intro-icon-feeds.png" alt="">\n                        </li>\n                        <li class="intro-icon-search">\n                            <img ng-src="{{$root.cdnBaseUrl}}/images/intro/intro-icon-search.png" alt="">\n                        </li>\n                        <li class="intro-icon-create fade-in">\n\t\t\t\t\t\t\t<div class="intro-line"></div>\n                            <img ng-src="{{$root.cdnBaseUrl}}/images/intro/intro-icon-create.png" alt="">\n                        </li>\n                        <li class="intro-icon-notifications">\n                            <img ng-src="{{$root.cdnBaseUrl}}/images/intro/intro-icon-notifications.png" alt="">\n                        </li>\n                        <li class="intro-icon-avatar">\n                            <img ng-src="{{$root.cdnBaseUrl}}/images/intro/intro-icon-avatar.png" alt="">\n                        </li>\n                    </ul>\n                </footer>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n -->'), e.put('public/modules/core/templates/modal/modal-tips-create-post.template.html', '<div class="modal-feeds"><div class="modal-tips-create-post"><div class="modal-dialog modal-sm"><div class="modal-content"><button type="button" class="close close--tips-create-post" aria-label="Close">X</button><section><h2 class="fade-in-down">Create Something</h2><p class="fade-in-up">Go ahead and tap the plus icon to see a menu</p></section><footer><ul><li class="intro-icon-feeds"><svg class="icon"><use xlink:href="#home-icon"></use></svg></li><li class="intro-icon-search"><svg class="icon"><use xlink:href="#magnifier"></use></svg></li><li class="intro-icon-create fade-in trigger-modal click-tip-open" ng-click="vm.gotoCreationTipOpen()"><!-- TODO: ui-sref="create" --><div class="intro-line"></div><svg class="icon"><use xlink:href="#plus"></use></svg></li><li class="intro-icon-notifications"><svg class="icon"><use xlink:href="#notification"></use></svg></li><li class="intro-icon-avatar"><svg class="icon"><use xlink:href="#avatar-icon"></use></svg></li></ul></footer></div></div></div></div>'), e.put('public/modules/core/templates/modal/modal.template.html', '<div class="modal"><div class="moda-content"></div></div>'), e.put('public/modules/core/templates/modal/post.template.html', '<div class="ds-post" data-id="{{ data.id }}"><div class="ds-post-bg"></div><div class="ds-post-header-mobile"><a ng-href="{{data.space.vanityUrl}}"><ds-tile-header data="data"></ds-tile-header></a><ds-karot data="data" type="\'post\'"></ds-karot></div><div class="ds-post-image" ng-if="!embedSource && !isVideo && !isIframe && data.content.cover && data.content.type != \'link\' && !data.hasEmbedPost && !oldVideo"><header class="tile-content-header tile-content-type-space"><div class="ds-post-image-container"><img ng-src="{{ data.content.cover | processImageURL : data.content.maxWidth }}" alt="cover image" ng-style="{{dimensions}}"></div></header></div><ds-embed no-interaction="true" force="\'video\'" data="data" ng-if="isVideo" autoplay="true"></ds-embed><div ng-bind-html="data.iframeTag" ng-if="isIframe && !isVerticalIframe" class="ds-post-iframe"></div><section class="ds-post-interaction"><ds-karot data="data" type="\'post\'"></ds-karot><div class="ds-post-author"><ds-tile-header data="data" class="ds-post-header-desktop"></ds-tile-header><ds-post-text data="data"></ds-post-text><embedly-card class="embedly-card-content" url="embedSource" ng-if="embedSource"></embedly-card><ds-embed no-interaction="true" ng-if="!isVideo && !embedSource && dsEmbedData" autoplay="true" class="ds-post-embed" data="dsEmbedData" ng-show="data.hasEmbedPost || data.content.type == \'link\' || oldVideo" sub-type="data.content.subType"></ds-embed><div ng-bind-html="data.iframeTag" ng-if="isIframe && isVerticalIframe" class="ds-post-iframe-vertical"></div><ds-engagement data="data" dont-open-post="true"></ds-engagement></div><ds-comments content="data" scroller=".ds-post-interaction, .ds-post" modal="true" object-id="data.id" object-type="{{data.type}}" inverse="true" should-focus="shouldFocus" ads="{ header: true, forceSmall: true }"></ds-comments></section></div>'), e.put('public/modules/core/templates/modal/private-account.template.html', '<div class="modal-privacy"><div class="modal-privacy__header"><i class="dsicon-close" ng-click="close();cancel()"></i> <img class="modal-privacy__header-icon" ng-src="{{$root.cdnBaseUrl}}/images/sprite/black-lock.svg" alt="lock"><div class="modal-privacy__header-title"><h2>Make My Account Private</h2></div><div class="modal-privacy__header-description"><p>You\u2019re about to set your account to private, so there are a few things you\u2019ll need to know. Here\u2019s what will be changing.</p></div></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Only people you approve to follow you will be able to see or engage with your content.</p><hr></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Your content <b>will not</b> be found by search engines or appear in search results on Holonis.</p><hr></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Your content cannot be shared to other platforms like Facebook or Twitter.</p><hr></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Products or services you may want to sell are only visible to approved follwers.</p><hr></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Any customer\u2019s with pending transactions will automatically become new followers if not already.</p></div></div><div class="modal-privacy-actions"><a href="#" class="ds-btn ds-btn--md ds-btn--blue" ng-click="setPrivate(true);">Make me Private</a> <a href="#" class="ds-btn-outline" ng-click="cancel();">Cancel</a></div>'), e.put('public/modules/core/templates/modal/public-account.template.html', '<div class="modal-privacy"><div class="modal-privacy__header"><i class="dsicon-close" ng-click="close();cancel();"></i> <img class="modal-privacy__header-icon" ng-src="{{$root.cdnBaseUrl}}/images/sprite/black-public.svg" alt="lock"><div class="modal-privacy__header-title"><h2>Make My Account Public</h2></div><div class="modal-privacy__header-description"><p>You\u2019re about to set your account to public, so there are a few things you\u2019ll need to know. Here\u2019s what will be changing.</p></div></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Anyone who discovers your content may view and engage with it.</p><hr></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Your content <b>will be</b> found by search engines and appear in search results on Holonis.</p><hr></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Your content can by publicly shared to other platforms like Facebook or Twitter.</p><hr></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Products or services you create are visibile to any visitor, it is an open shop.</p><hr></div><div class="modal-privacy__disclaimer"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/blue-check.svg" alt="check"><p>Anyone may openly follow you and your publications.</p></div></div><div class="modal-privacy-actions"><a href="#" class="ds-btn ds-btn--md ds-btn--blue" ng-click="setPrivate(false);">Make me Public</a> <a href="#" class="ds-btn-outline" ng-click="cancel();">Cancel</a></div>'), e.put('public/modules/core/templates/modal/service-provider.template.html', '<div class="service-provider" ng-controller="ItemSelectionController"><h1 class="service-provider__title desktop-only">Choose your payment provider</h1><div class="service-provider__content"><div class="service-provider__content--paypal" ng-show="paypalIsEnabled"><div class="image-container" ng-class="{\'provider-hover\' : paypalHover}"><img class="provider-app-logo" src="{{$root.cdnBaseUrl}}/images/paypal.png"></div><ul><li>Ideal for individual sellers or small businesses</li><li>Use your existing account or create one easily</li><li>Sell products or services</li><li>Trusted on over 800,000 websites</li></ul><a ng-mouseenter="paypalHover=true" ng-mouseleave="paypalHover=false" class="btn-provider-chose" ng-click="paypalProvider();close()">Choose</a></div><hr class="mobile-only line"><div class="service-provider__content--stripe"><div class="image-container" ng-class="{\'provider-hover\' : stripeHover}"><img class="provider-app-logo" src="{{$root.cdnBaseUrl}}/images/stripe-logo.png"></div><ul><li>Ideal for businesses of all sizes</li><li>Use your existing account or create one easily</li><li>Accepts a wide range of major credit cards</li><li>Excellent customer service</li></ul><a class="btn-provider-chose" ng-mouseenter="stripeHover=true" ng-mouseleave="stripeHover=false" ng-click="stripeProvider();close()">Choose</a></div></div></div>'), e.put('public/modules/core/templates/modal/share.post.template.html', '<div class="ds-share-modal"><div class="ds-share-modal-top" ng-class="{ \'ds-share-modal-top--expanded\': !(state.hasMinHeight && state.expanded) }"><div class="text-area-wrapper ds-share-modal-textarea" ng-if="!vm.single && !vm.hasEmbed(contentBlock)"><ds-text single-line="true" class="ds-comment-input" placeholder="Say something..." ng-click="focus($event)" ng-model="shareData.description" mentions="true" tabindex="1"></ds-text><span class="required-content-creation-error" ng-show="vm.form[\'contentBlockContent{{$index}}\'].$invalid && !contentBlockContentFocus">required</span></div><div class="ds-share-modal-tilewrapper"><tile class="ds-share-modal-tile grid-item" data="data" hide-karot="true" style="max-height: {{state.maxHeight}}px"></tile><button class="ds-button-expand ds-share-modal-expand" ng-click="toggleCollapse()" ng-if="state.hasMinHeight">{{ state.expanded ? \'Collapse\' : \'Expand\' }}</button></div></div><ds-share selected-providers="shareData.shareTo"></ds-share><div class="ds-share-modal-bottom clearfix"><button type="button" name="button" class="ds-button-like ds-button-primary ds-button-share" ng-click="postShareContent()" ng-disabled="busyTracker.active()">{{ label }}</button></div></div>'), e.put('public/modules/core/templates/modal/share.who-shared.template.html', '<div class="ds-who-shared-modal"><em class="shares-list-empty" ng-if="!state.loadingMore && data.shares < 1">We couldn\'t fetch who shared this.</em><div class="shares-list-item tile" ng-repeat="share in data.shares"><div class="ds-main-tile-header"><a ui-sref="holospace.home({holospaceName: share.header.space.vanityUrl})"><ds-avatar class="ds-main-tile-header-avatar" avatar="::share.header.space.photo" size="36"></ds-avatar><a><div class="ds-main-tile-header-info"><div class="ds-space-name"><div class="ds-space-name-container"><a class="ds-space-name-text" ui-sref="holospace.home({ holospaceName: share.header.space.vanityUrl })">{{ ::share.header.space.name }}<div ng-if="::share.header.space.isVerified" class="ds-space-name-icon-container" title="Verified Holospace.&#10;Holonis confirmed this is an authentic account for this person, business, public figure, influencer or brand."><img ng-src="{{ ::share.header.space.badges[0].icon}}.svg" class="ds-space-name-verified icon" alt="{{ ::share.header.space.badges[0].title }}"></div></a></div></div><small><a ui-sref="holospace.home({ holospaceName: share.header.space.vanityUrl })">@{{ ::share.header.space.vanityUrl }}</a> shared {{ ::$parent.contentSpace.vanityUrl }}\'s {{ ::share.type }} {{ ::share.published | amTimeAgo }}</small></div><ds-holospace-follow is-follow="true" data="::share.header.space" ng-if="::!share.header.space.isFollowing"></ds-holospace-follow></a></a></div><div ng-click="::$parent.openPost(share, $event)" class="ds-main-tile-content" ng-if="::share.body.description" ng-bind-html="::share.body.description | cut:true:400: \' ...\' | escapeHTML | mentions"></div><div ng-click="::$parent.openPost(share, $event)" class="ds-main-tile-content-see-more" ng-if="::share.body.description.length > 400">See more</div><ds-engagement data="share.v1" share-modal="list"></ds-engagement></div><div class="ds-who-shared-modal-more" ng-class="{ \'--loading\': state.loadingMore }" ng-if="state.showMore"><button class="ds-button-seemore" ng-click="getShares()">See More</button><div class="loaderInline"></div></div></div>'), e.put('public/modules/core/templates/modal/shares.template.html', '<div class="ds-likes-modal"><ds-input placeholder="Search for someone..." ng-model="form.query" ng-if="form.next && data.shares.length > 0"></ds-input><ul class="likes-list"><!--<div class="loaderInline" ng-if="state.loadingMore"></div>--> <em class="likes-list-empty" ng-if="!state.loadingMore && data.shares < 1">We couldn\'t fetch shares for this.</em><li class="likes-list-item" ng-repeat="share in data.shares"><a href="/{{share.vanityUrl}}" class="likes-user"><img class="likes-thumb" src="{{ share.profilePhoto | processImageURL : getUniqueSelector() : true }}" ng-if="share.profilePhoto" data-uid> <img class="likes-thumb" src="{{ $root.cdnBaseUrl + \'/images/default-user.png?1\' }}" ng-if="!share.profilePhoto"><ds-space-name space="share"></ds-space-name></a><div class="likes-button-container" ng-if="spaceId != share.id" ng-click="share.followDisabled || toggleFollow(spaceId, share.id, share.isFollowing, $index)"><button class="ds-button-primary ds-button-like-active" ng-if="!!share.isFollowing && !share.followDisabled">Following</button> <button class="ds-button-like-default" ng-if="!share.isFollowing && !share.followDisabled">Follow</button><div class="likes-loader" ng-if="share.followDisabled"><div class="loaderInline"></div></div></div></li><div class="ds-likes-modal-more" ng-class="{ \'--loading\': state.loadingMore }" ng-if="form.next && data.shares.length > 0"><button class="ds-button-seemore" ng-click="getShares(form.query, form.page + 1)">See More</button><div class="loaderInline"></div></div></ul></div>'), e.put('public/modules/core/templates/modal/signup-leads.template.html', '<div class="ds-modal-image"><i class="ds-modal-close dsicon-close" ng-click="close()"></i></div><div class="ds-modal-signup-leads-content"><header class="ds-modal-signup-leads-title">Want to see more?</header><p class="ds-modal-signup-leads-description">Sign up now and engage with your favorite<br>celebrities, influencers, brands, and more.<br>It\'s fast, free and fun.</p><a ng-href="signup" class="btn ds-modal-button--get-started"><span class="ds-modal-button--get-started-text">Let\'s Go!</span></a><p class="ds-modal-signup-privacy">Holonis knows that your privacy is important.<br>We will never sell your information to any 3rd parties.</p></div>'), e.put('public/modules/core/templates/modal/stripe.connect.template.html', '<div class="app-display-full stripe"><h1 class="holonis-payment desktop-only">Holonis Payments</h1><div class="app-display-content"><img src="{{$root.cdnBaseUrl}}/images/stripe-logo-big.png" class="app-stripe-logo"><p class="service-description">You can process payments for your shop using Stripe. When you finish creating an item (product or service) and click publish, Stripe will send you an email at the address below to create your account.</p><p class="app-text-description with-link">You can also connect using an <a ng-href="{{ stripeConnectLink }}" class="app-text-description-link">existing Stripe Account</a>.<!-- Learn more about using <a href="#">Stripe with Holonis</a>. --></p><div class="app-text-subtitle"><h2>Credit Card Rates</h2><hr></div><p class="text-description">Each transaction carries 8.5% + 30\xA2 fee. Funds deposited into your account have this amount withdrawn automatically.</p><div class="app-text-subtitle"><h2>Business Email Address</h2><hr></div><p class="text-description">This email address will be used to create your Stripe account.</p><ds-input ng-model="email" type="email" id="email" placeholder="Put your email address"></ds-input><div class="app-text-subtitle"><h2>Business Country</h2><hr></div><p class="text-description">Currently account holders must reside in the U.S. Payments can be accepted internationally.</p><ds-select model="country" id="country" placeholder="Select your country" class="ds-select-input" options="countries" params="code,country" required></ds-select><div class="app-actions"><a ng-click="submit()" class="app-button app-button-connect">Submit</a> <a ng-click="cancel()" class="app-button app-button-outline">Cancel</a></div><p class="app-text-footer"><a href="https://www.paypal.com/us/webapps/mpp/ua/useragreement-full" target="_blank">Terms of Use </a><span>&</span> <a href="https://www.holonis.com/holonis/p/privacy-policy" target="_blank">Privacy Policy</a></p><div class="ds-messagebox ds-messagebox-warning" ng-if="warning"><div class="ds-messagebox-icon"></div><p class="ds-messagebox-text">A Stripe account with this e-mail address already exists. Please use a different email address or <a ng-href="{{ stripeConnectLink }}">connect your shop with and existing account.</a></p></div></div></div>'), e.put('public/modules/core/templates/modal/video.template.html', '<div class="ds-post"><div class="ds-post-bg"></div><ds-player data="data"></ds-player><div class="ds-upload-edit"><form class="ds-upload-form"><ds-input ng-model="videoModel.title" placeholder="Type a title for the video" class="ds-upload-title"></ds-input><ds-input ng-model="videoModel.description" placeholder="Add a description" class="ds-upload-subtitle"></ds-input></form><button class="ds-button-like ds-button-primary ds-button-share ds-upload-button" ng-click="save()">Save</button></div></div>'), e.put('public/modules/core/templates/modal/welcome-auto-follow.template.html', '<div class="modal-body"><h2 ng-bind="::title"></h2><div class="row"><div class="column first_column"><p class="semi-bold" ng-bind="::subTitleRight"></p><p ng-bind="::bodyRight"></p><p><button ng-bind="::button_titleRight" class="btn btn-hollow-primary single-button" ng-click="goToFeeds()"></button></p></div><div class="column"><p class="semi-bold" ng-bind="::subTitleLeft"></p><p ng-bind="::bodyLeft"></p><p><button ng-bind="::button_titleLeft" class="btn btn-hollow-primary single-button" ng-click="goToProfile()"></button></p></div></div><p class="footer-note" ng-bind="::note"></p></div>'), e.put('public/modules/core/templates/modal/welcome-intro.template.html', '<div class="modal-body"><h2 ng-bind="::title"></h2><p class="semi-bold" ng-bind="::subTitle"></p><p ng-bind="::body"></p><p><button ng-bind="::button_title" class="btn btn-hollow-primary single-button dense-padding" ng-click="cancel()"></button></p></div>'), e.put('public/modules/ecommerce/views/modals/order-message.view.html', '<div class="msg-modal msg-modal-active" overlay-close><div class="msg-modal-content"><button class="close-btn" overlay-close></button><div class="msg-modal-header"><button class="back-btn" overlay-close></button> <span class="msg-modal-heading">Message {{ state.to }}</span></div><div class="msg-modal-to">To:<ds-avatar avatar="state.order[state.to].photo" size="30"></ds-avatar>{{ state.order[state.to].name }}</div><textarea class="msg-modal-textarea" placeholder="Write your message..." ng-model="newMessage"></textarea><div class="msg-modal-footer"><div class="cancel-btn" overlay-close>Cancel</div><div class="send-btn" ng-click="sendNewMessage(newMessage)" overlay-close>Send</div></div></div></div>'), e.put('public/modules/ecommerce/views/modals/rate.view.html', '<div class="rate-transaction" style="border-radius: 7px"><ds-header class="ds-tooltip-header" center-title="Transaction review" left-title="Cancel" left-action="close()" right-title="Send" right-action="review()"></ds-header><div class="rate-transaction-image" style="background-image: url({{ ::state.item.cover.url | processImageURL : state.item.cover.width : true }})" alt="transaction-image"></div><div class="rate-transaction-wrapper"><em class="rate-transaction-title">{{ state.item.name }}</em><div class="ds-form-wrapper"><label class="ds-input-label">Rate this item</label><ds-rating level="data.reviewRating" editable="!data.rating"></ds-rating><span class="ds-input-error-message ds-input-error-message--required" ng-if="$validators.reviewRating == \'required\'">{{ \'This field is required\' }}</span></div><ds-text ng-model="data.reviewText" validate="$validators.reviewText" class="ds-comment-input" label="Write a review" params="inputs.review" placeholder="Got any feedback?" tabindex="1" max-characters="inputs.review.maxCharacters"></ds-text><button type="button" class="rate-transaction-send ds-button-reset ds-hoverable-link" ng-click="review()">Send</button></div></div>'), e.put('public/modules/ecommerce/templates/modal/offer-modal.template.html', '<div class="modal-body"><svg-icon icon="close" class="modal-icon" ng-click="close()"></svg-icon><h2 ng-bind="modalTitle"></h2><p ng-bind-html="modalBody"></p><div class="btn-group"><input type="button" value="Cancel" class="btn btn-hollow-secondary" ng-click="close()"> <input type="button" ng-value="pimaryBtnLabel" class="btn btn-hollow-primary" ng-click="updateOrderAction()"></div></div>'), e.put('public/modules/ecommerce/templates/modal/order-details-options-mobile.html', '<div class="modal-body"><svg-icon icon="close" class="modal-icon" ng-click="close()"></svg-icon><h2 ng-bind="::title"></h2><p ng-repeat="action in actions track by $index"><input type="button" ng-value="action.title" class="modal-action-buttons" ng-click="selectAction(action,order);closeModal()"></p></div>'), e.put('public/modules/ecommerce/templates/modal/order-upload-video.template.html', '<div class="order-upload-modal"><div class="order-upload-modal__title"><h2>Create Video</h2><hr class="order-summary-line"></div><div class="order-upload-modal__container"><section class="order__header"><ds-avatar avatar="order.buyer.photo" ui-sref="holospace.home({ holospaceName: order.buyer.vanityUrl })" size="36"></ds-avatar><div class="buyer-info"><small ng-if="order.buyer.type !== \'space\'" style="display:block">Guest user</small><ds-space-name class="buyer-info-name capitalize" space="::order.buyer || order.billing"></ds-space-name><em class="buyer-info-timestamp"><span>{{ ::order.created | amUtc | amTimeAgo }}</span></em></div></section><video-input-player bus="videoUploadBus"></video-input-player><div class="order-upload-modal__instructions" ng-if="order.contract.service.instructions">{{ order.contract.service.instructions }}</div><div class="order-upload-modal__actions"><span class="badge-offer"></span><p>Final check to make sure you\u2019re happy with your video shoutout for {{ order.buyer.name }} as per their instructions above.</p><div class="order-upload-modal__actions-buttons"><label for="order-video-upload" class="ds-btn ds-btn-with-icon ds-btn--default ds-btn--full-width ds-btn--dark-blue" ng-class="{ \'is-disabled\' : state.uploadingVideo }"><svg-icon icon="video-upload-add" class="ds-btn-icon ds-btn-icon--reupload-video"></svg-icon>Re-upload Video</label><label class="ds-btn ds-btn-with-icon ds-btn--default ds-btn--full-width ds-btn--white ds-btn--font-gray" ng-class="{ \'is-disabled\' : !state.uploadFinished }" ng-click="send()"><svg-icon icon="video-round-border-gray" class="ds-btn-icon ds-btn-icon--send-video"></svg-icon>Send Video</label></div></div></div></div>'), e.put('public/modules/ds/action-group/templates/action-group.html', '<div class="ds-action-group"><span class="ds-action-group-text">Close</span> <i class="ds-action-group-text-icon dsicon-chevron-bottom-small"><article class="ds-action-group-options"><p class="ds-action-group-tagline">This item has been automatically saved.<br>What would you like to do?</p><div class="ds-action-group-buttons"><button type="button" class="ds-button-big ds-button-primary">Save as Draft</button> <button type="button" class="ds-button-big ds-button-borderless">Delete</button></div></article></i></div>'), e.put('public/modules/ds/actions/templates/actions.html', '<div class="ds-actions-wrapper"><ul class="ds-actions"><li class="ds-action" ng-repeat="action in actions track by $index" ng-click="action.method($event, action)" ng-if="action.status">{{ action.getLabel() || action.label }}</li></ul></div>'), e.put('public/modules/ds/add/templates/add.html', '<div class="ds-add"><div class="ds-add-action" ng-click="action()" ng-if="!hideAction"><div class="ds-add-action-circle"><i class="dsicon-plus-sign-active ds-add-action-icon"></i></div><div class="ds-add-action-label">{{ label }}</div></div><div class="ds-add-info"><img class="ds-add-info__image" ng-src="{{ src }}" alt="" ng-if="src"><h3 class="ds-add-info__title" ng-if="caption">{{ caption }}</h3><p class="ds-add-info__description">{{ description }}</p></div></div>'), e.put('public/modules/ds/address/templates/address.html', '<div class=""><ds-input ng-model="model.address" type="text" label="Address" placeholder="{{ placeholder }}" has-autocomplete="true" required></ds-input><ds-show-hide ng-model="model.selected" focus="true" no-checkbox="true"><ds-input-group><ds-input ng-model="model.note" type="text" label="Notes" placeholder="Apt, suite, etc. (optional)"></ds-input></ds-input-group></ds-show-hide></div>'), e.put('public/modules/ds/avatar/templates/avatar.html', '<span style="width: {{ ::width}}px; height: {{ ::height }}px" class="ds-avatar-wrapper"><span class="ds-avatar"><!-- Don\'t use :: on edit state --> <img ng-src="{{ getImage() }}" ng-if="zoomable" overlay-image="{{ getImage() }}" alt="{{ space.name }}"> <img ng-src="{{ getImage() }}" ng-if="!zoomable" alt="{{ space.name }}"></span><div class="ds-avatar-edit-wrapper" ng-if="editable"><div class="ds-avatar-editable" role="button" ng-click="change()"><i class="ds-avatar-icon dsicon-image-ico"></i></div></div></span>'), e.put('public/modules/ds/channel-mosaic/templates/mosaic.html', '<div class="ds-channel-mosaic ds-channel-mosaic-{{ data.block.length }} clearfix" ng-if="data.hasGallery"><ul><li class="ds-channel-mosaic-item" ng-class="{\'ds-channel-mosaic-video\': block.body.story && block.body.story.type == \'video\' }" ng-repeat="block in data.block | limitTo:6" style="background-image: url(\'{{ block.cover.url | processImageURL : 300 }}\')" data-uid><span class="ds-channel-mosaic-text" ng-if="!block.cover.url">{{ block.body.name || block.body.description || block.body.story.body.name || block.body.story.body.description }}</span> <span class="ds-channel-mosaic-total" ng-if="$parent.data.contentsCount > 6"><span>+{{$parent.data.contentsCount - $parent.data.block.length}}</span></span></li></ul></div>'), e.put('public/modules/ds/chart/templates/chart.html', '<canvas class="chart chart-line" chart-data="data" chart-labels="labels"></canvas>'), e.put('public/modules/ds/comments/templates/comments.html', '<div class="ds-comments"><div ng-if="headerAd" class="comment-header-ads"><div class="ad-unit-center" ng-class="{ \'ad-unit-small\': ads.forceSmall }"><div id="{{ ::headerAd.slotName }}"></div></div></div><div class="ds-comments-wrapper" ng-if="contentTitle"><ds-title title="contentTitle"></ds-title></div><div class="ds-comments-wrapper" ng-if="!status.loading"><div class="ds-comments-form ds-comments-form-unsigned ds-comment-box" ng-if="!status.logged && objectType != \'item\'" ng-click="showLogin()"><span class="ds-comment-thumb"><svg-icon icon="bubble"></svg-icon></span><p class="ds-comment-input ds-body-default">{{ placeholder }}</p></div><div class="ds-comments-form ds-comment-box" ng-if="status.logged && objectType != \'item\'" ng-class="{ \'ds-comments-form--focused\': status.focused  }" ng-click="checkAuthAndFocusText($event)"><span class="ds-comment-thumb"><img ng-src="{{ (space.photo | processImage : 50 : true) || ($root.cdnBaseUrl + \'/images/default-user.png?1\') }}" data-uid></span><ds-text single-line="true" class="ds-comment-input" placeholder="{{ placeholder }}" auto-focus="autoFocus" ng-click="focus($event)" ng-model="model.body" mentions="true" ng-keydown="pressed($event)" tabindex="1"></ds-text><a class="ds-comments-publish ds-body-link" ng-click="publish()" ng-class="{ \'ds-comments-publish--allowed\' : status.allowed, \'ds-comments-publish--loading\': status.sending }">Publish</a></div><div class="ds-comments-empty" ng-if="status.loaded && !comments.length && objectType != \'item\'" ng-click="checkAuthAndFocusText($event)"><ds-add caption="Start a conversation" description="Be the first to leave a comment" ng-src="{{ $root.cdnBaseUrl + \'/images/comments-new.svg\'}}" hide-action="true"></ds-add></div><ul class="ds-comment-list" ng-if="comments.length" ng-class="{\'no-media\' : modalWithoutMedia() }"><li class="ds-comment ds-comment-box ds-comment-show-more" ng-if="pagination.next && inverse"><a ng-click="showMore()" ng-if="!status.loadingMore" class="ds-body-link">Show More</a><div class="loaderInline" ng-if="status.loadingMore"></div></li><li class="ds-comment ds-comment-box" ng-repeat="comment in comments" id="comment:{{comment.id}}" ng-class="{ \'ds-comment-box-ads\': comment.type === \'ads\'}"><div ng-if="comment.type === \'ads\'" class="comment-ads"><div class="ad-unit-center"><div id="{{ ::comment.slotName }}"></div></div></div><div ng-if="comment.type !== \'ads\'"><ds-karot data="comment" content="content" type="\'comment\'" ng-if="!noKarot"></ds-karot><a ui-sref="holospace.home({holospaceName: comment.space.vanityUrl})"><span class="ds-comment-thumb"><img ng-src="{{ (comment.space.photo | processImage : 32 : true) || ($root.cdnBaseUrl + \'/images/default-user.png?1\') }}" data-uid></span></a><div><a ui-sref="holospace.home({holospaceName: comment.space.vanityUrl})" class="ds-comment-name"><ds-space-name class="ds-comment-owner ds-heading-default" space="comment.space"></ds-space-name><ds-rating ng-if="objectType == \'item\'" level="comment.rating || content.body.rating || content.review.rating"></ds-rating></a><p class="ds-comment-body ds-body-large" ng-bind-html="comment.body | escapeHTML | mentions : comment.links"></p><small class="ds-comment-time-ago ds-caption-default">{{ comment.created | amUtc | amTimeAgo }}</small></div></div></li><li class="ds-comment ds-comment-box ds-comment-show-more" ng-if="pagination.next && !inverse"><a ng-click="showMore()" ng-if="!status.loadingMore" class="ds-body-link">Show More</a><div class="loaderInline" ng-if="status.loadingMore"></div></li></ul></div><div ng-if="status.loading" class="ds-comment-loading"><div class="loaderInline"></div></div></div>'), e.put('public/modules/ds/confirm/templates/confirm.html', '<div class="ds-confirm-container" ng-class="{ \'ds-confirm--loading\': state.loading }"><p class="ds-confirm-text">{{ params.message }}</p><div class="ds-confirm-buttons"><button ng-if="!params.confirm.hide" class="ds-confirm-primary-button ds-button-big ds-button-primary" type="button" name="button" ng-click="confirm()">{{ params.confirm.text }}</button> <button ng-if="!params.cancel.hide" class="ds-confirm-secondary-button ds-button-big ds-button-borderless" type="button" ng-click="cancel()" name="button">{{ params.cancel.text }}</button></div></div>'), e.put('public/modules/ds/code/templates/code.html', '<div class="ds-code"><div class="ds-code-container"><input class="ds-code-input" type="tel" ng-repeat="input in inputs track by $index" pattern="\\d*" ng-model="inputs[$index]" ng-keydown="handleBackspace($event)" ui-event=" { input: \'prevent($event, $index)\' } " ng-paste="handlePaste($event)"></div><span ng-if="!params.noErrorMessage"><span class="ds-input-error-message ds-input-error-message--required" ng-if="validate == \'required\'">{{ \'This field is required\' }}</span> <span class="ds-input-error-message ds-input-error-message--custom" ng-if="validate == \'custom\'">{{ params.errorMessage || \'This field is required\' }}</span></span></div>'), e.put('public/modules/ds/cover/templates/cover.html', '<div class="ds-cover" ng-class="{ \'ds-cover--editing\': editing, \'ds-cover--uploading\': uploading }"><div class="ds-cover--placeholder" ng-if="hasPlaceholder && !(draft.url || data.cover.originalUrl || data.cover.url)"><div class="ds-cover--placeholder-button" ng-click="changeImage()"><svg-icon icon="cover-placeholder" class="ds-cover--placeholder-icon"></svg-icon><span class="ds-cover--placeholder-text ds-hoverable-link">Add an optional cover image</span></div></div><ds-header class="ds-cover-header--mobile ds-tooltip-header" center-title="Reposition image" right-title="Save" left-title="Cancel" left-action="discard()" right-action="save()" ng-if="editing"></ds-header><div ng-if="!hasPlaceholder || (draft.url || data.cover.originalUrl || data.cover.url)"><div class="ds-cover-upload-message">We are cropping your cover, please wait...</div><div class="ds-cover-container"><div class="ds-cover-wrapper" style="height: {{ style.container.height }}px; max-height: {{ aspectHeight }}px"><img ng-if="editing" class="ds-cover-image" ng-class="{\'ds-cover-image--editing\': editing}" ng-src="{{ draft.url | exif }}" alt="" ds-cropper ng-cropper-proxy="cropperProxy" ng-cropper-show="showEvent" ng-cropper-hide="hideEvent" ng-cropper-options="params"><div overlay-image="{{ getCoverOverlayImage() }}" class="ds-cover-image--preview" ng-class="{ \'ds-cover-image--choosing\': state.choosing, \'ds-cover-image--editing\': editing }" ng-hide="state.changing" style="background-image: url(\'{{ getCoverImage() }}\')" alt="{{ data.name }} Cover"></div><div class="loaderInline" ng-show="state.changing || state.choosing || (editing && !state.imageLoaded)"></div></div><div class="ds-cover-shade-top"></div><div class="ds-cover-shade-bottom"></div><div class="ds-cover-edit" role="button" ng-if="editable"><div class="ds-cover-icon ds-cover-edit-wrapper" ng-if="data.cover.url" ng-click="repositionImage()"><i class="dsicon-reposition ds-cover-edit-icon"></i></div><div class="ds-cover-icon ds-cover-edit-wrapper" ng-click="changeImage()"><i class="dsicon-image ds-cover-edit-icon" id="intro-cover"></i></div></div><div class="ds-cover-reposition ds-cover--when-editable"><em class="ds-cover-label">Reposition image </em><i class="ds-cover-reposition-icon dsicon-picker"></i></div><div class="ds-cover-enlarge ds-cover--when-editable"><em class="ds-cover-label">Enlarge image</em><div class="ds-cover-slider-wrapper"><span class="ds-cover-slider-button dsicon-minus-small" ng-click="slide(-0.1)"></span><rzslider class="ds-cover-slider" rz-slider-model="draft.z" rz-slider-options="slider.options"></rzslider><span class="ds-cover-slider-button dsicon-plus-small" ng-click="slide(+0.1)"></span></div></div><div class="ds-cover-buttons ds-cover--when-editable" ng-class="{ \'disabled\': state.loadingEdit }"><div class="ds-action-group-buttons"><button type="button" class="ds-button ds-button-borderless ds-cover-cancel" ng-click="discard()">Cancel</button> <button type="button" class="ds-button-like ds-cover-save" ng-click="save()">Done</button></div></div></div></div></div>'), e.put('public/modules/ds/data-form/templates/create.template.html', '<div class="modal-form-create"><i class="dsicon-close" ng-if="!showPreview" ng-click="cancel()" ng-class=" helpDismissed ? \'close-dismissed\' : \'modal-form-create-close\'"></i></div><div ng-show="!showPreview"><div class="ds-modal-form-header" ng-if="!helpDismissed"><i class="ds-modal-create-form-help-dismiss dsicon-close" ng-click="dismissHelp()"></i><br><div class="ds-modal-form-header-title">Create a new form</div><p class="ds-modal-form-header-description">Forms are handy little blocks that can be embedded into your pages, items, about page. They allow you to do cool things like email marketing, offer customer service, generate leads or just give people another way to reach you</p></div><form name="createForm" novalidate ng-submit="save(createForm, form)"><div class="ds-modal-form-content"><div class="ds-form-wrapper"><label class="ds-input-label">Title: A call to action and the purpose of your form.</label><div ng-class="createForm.$submitted && createForm.title.$error.required ? \'ds-input-container error\' : \'ds-input-container\'"><input type="text" ng-model="form.title" name="title" class="ds-input ds-input--big" placeholder="e.g. \u201CContact Us\u201D, \u201CCustomer Support\u201D\u2026" required></div><span class="ds-input-error-message ds-input-error-message--required ng-binding ng-scope" ng-if="createForm.$submitted && createForm.title.$error.required">This field is required</span></div><div class="ds-form-wrapper"><label class="ds-input-label">Description: Add additional instructions so people are informed.</label><div ng-class="createForm.$submitted && createForm.description.$error.required ? \'ds-textarea-container error\' : \'ds-textarea-container\'"><textarea placeholder="e.g. \u201CPlease provide your name, email and phone number. We\u2019ll get back to you within 24 hours.\u201D" class="ds-textarea" name="description" ng-model="form.description" required></textarea></div><span class="ds-input-error-message ds-input-error-message--required ng-binding ng-scope" ng-if="createForm.$submitted && createForm.description.$error.required">This field is required</span></div><div class="form-group"><div class="ds-modal-input-label--bold">Name</div><p class="ds-modal-input-description cursor-default">This is automatically added to your form by default and is required</p></div><div class="form-group"><div class="ds-modal-input-label--bold">E-mail</div><p class="ds-modal-input-description cursor-default">This is automatically added to your form by default and is required</p></div><div class="ds-form-wrapper"><div class="checkbox switcher"><label><span class="ds-modal-input-label--bold">Phone</span> <input type="checkbox" ng-model="phoneField.active"> <span><small></small></span></label><ds-checkbox ng-show="phoneField.active" ng-model="phoneField.required" label="Make phone mandatory?"></ds-checkbox></div></div><div class="form-group"><div class="checkbox switcher"><label><span class="ds-modal-allow-people">Allow people to leave a message</span> <input ng-model="messageField.active" type="checkbox"> <span><small></small></span></label></div><span class="cursor-default">Enabling this option allows people to provide you with additional information, opinions and feedback.</span></div><div class="ds-form-wrapper"><label class="ds-input-label">Send form to</label><div ng-class="createForm.$submitted && createForm.email.$error.required ? \'ds-textarea-container error\' : \'ds-textarea-container\'"><textarea style="height:62px" placeholder="When anyone submits the form, we will send the info to the email address you entered. This is currently the only way to access the form data so make sure the email is accurate." class="ds-textarea" name="email" ng-model="form.email" ng-pattern="emailPattern" required></textarea></div><span class="ds-input-error-message ds-input-error-message--required ng-binding ng-scope" ng-if="createForm.$submitted && createForm.email.$error.required">This field is required</span> <span class="ds-input-error-message ds-input-error-message--required ng-binding ng-scope" ng-if="createForm.$submitted && createForm.email.$error.pattern">Invalid email</span></div><div class="ds-form-wrapper"><label class="ds-input-label">Success Message</label><div ng-class="createForm.$submitted && createForm.successMessage.$error.required ? \'ds-textarea-container error\' : \'ds-textarea-container\'"><textarea placeholder="You may supply a message that appears when the form is completed. This is a great way to provide additional instructions or just to say thank you." class="ds-textarea" ng-model="form.successMessage" name="successMessage" required></textarea><span class="ds-input-error-message ds-input-error-message--required ng-binding ng-scope" ng-if="createForm.$submitted && createForm.successMessage.$error.required">This field is required</span></div></div></div><div class="ds-modal-actions"><a class="ds-modal-actions--cancel" ng-click="cancel()">Cancel</a> <a class="ds-modal-actions--preview" ng-click="createForm.$valid ? (showPreview = true) : createForm.$setSubmitted()">Preview form</a> <button type="submit" class="ds-modal-actions--add">{{ isEdit ? \'Save form\' : \'Add form\' }}</button></div></form></div><div ng-include="\'public/modules/ds/data-form/templates/preview.template.html\'" ng-show="showPreview"></div>'), e.put('public/modules/ds/data-form/templates/preview.template.html', '<div class="ds-modal-preview"><div class="ds-modal-preview-blocker" ng-if="!hideActions"></div><form name="previewForm" novalidate ng-submit="submit(previewForm)"><p class="ds-modal-preview-your-form" ng-if="!hideActions">Preview your form</p><div class="ds-modal-preview-content"><div ng-show="!submitResponse"><div class="ds-modal-preview-title"><center>{{ form.title }}</center></div><center><p class="ds-modal-preview-description">{{ form.description }}</p></center><div class="ds-form-wrapper"><label class="ds-input-label">Name</label><div ng-class="previewForm.$submitted && previewForm.name.$error.required ? \'ds-input-container error\' : \'ds-input-container\'"><input type="text" ng-model="dataFormFields.name.value" name="name" class="ds-input" placeholder="Enter your Full Name here" ng-disabled="!isInteractive || isSubmitting" required></div><span class="ds-input-error-message ds-input-error-message--required" ng-if="previewForm.$submitted && previewForm.name.$error.required">This field is required</span></div><div class="ds-form-wrapper" ng-if="phoneField.active"><label class="ds-input-label">Phone</label><div ng-class="previewForm.$submitted && previewForm.phone.$error.required ? \'ds-input-container error\' : \'ds-input-container\'"><input type="text" ng-model="dataFormFields.phone.value" name="phone" class="ds-input" placeholder="Enter your phone number, this will never be shared" ng-disabled="!isInteractive || isSubmitting" ng-required="phoneField.required"></div><span class="ds-input-error-message ds-input-error-message--required" ng-if="previewForm.$submitted && previewForm.phone.$error.required && phoneField.required">This field is required</span></div><div class="ds-form-wrapper"><label class="ds-input-label">E-mail</label><div ng-class="previewForm.$submitted && previewForm.email.$error.required ? \'ds-input-container error\' : \'ds-input-container\'"><input type="email" ng-model="dataFormFields.email.value" name="email" class="ds-input" placeholder="Enter your E-mail address" ng-disabled="!isInteractive || isSubmitting" ng-pattern="emailPattern" required></div><span class="ds-input-error-message ds-input-error-message--required" ng-if="previewForm.$submitted && previewForm.email.$error.required">This field is required</span> <span class="ds-input-error-message ds-input-error-message--required" ng-if="previewForm.$submitted && previewForm.email.$error.pattern">Invalid email</span></div><div class="ds-form-wrapper" ng-if="messageField.active"><label class="ds-input-label">Message</label><div class="ds-textarea-container space-bottom"><textarea placeholder="Write a message for this Holospace" class="ds-textarea stretchy text-limit" ng-model="dataFormFields.message.value" ng-disabled="!isInteractive || isSubmitting" name="message" required></textarea></div><span class="ds-input-error-message ds-input-error-message--required" ng-if="previewForm.$submitted && previewForm.message.$error.required">This field is required</span></div><div class="ds-form-wrapper"><center><div class="g-recaptcha" vc-recaptcha ng-model="dataForm.reCaptchaResponse"></div></center><span class="ds-input-error-message ds-input-error-message--required" ng-if="previewForm.$submitted && !dataForm.reCaptchaResponse">This field is required</span></div><button type="submit" class="ds-modal-preview-btn" ng-disabled="!isInteractive || isSubmitting"><span class="ds-modal-preview-btn--text">Submit</span></button></div><div ng-if="submitResponse" class="ds-modal-submission-container animated fadeIn"><div class="oval"><svg-icon icon="success-submission" class="submission-icon"></svg-icon></div><div class="submission-text">{{ submitResponse.success }}</div></div></div><div class="ds-modal-preview-actions" ng-if="!hideActions"><a class="ds-modal-preview-actions--back" ng-click="$parent.$parent.showPreview = false;">Back</a> <a class="ds-modal-preview-actions--cancel" ng-click="cancel()">Cancel</a> <a class="ds-modal-preview-actions--save-form" ng-class="{ \'link-disabled\': createForm.$invalid }" ng-click="createForm.$valid && save(createForm, form)">Save form</a></div></form></div>'), e.put('public/modules/ds/dynamic-input/templates/dynamic.input.html', '<div class="ds-dynamic-input"><div class="ds-dynamic-input-container"><div class="ds-dynamic-input-row" ng-repeat="row in ngModel track by $index"><i class="dsicon-close ds-dynamic-input-dump" ng-click="remove($index)"></i><div class="ds-dynamic-input-row-wrapper"><ds-input ng-model="row.method" type="text" label="Method" placeholder="e.g. UPS - 3 Day Delivery Insured..." validate="validate[$index].method" required></ds-input><ds-input ng-model="row.price" type="tel" label="Price per order" placeholder="$0.00" validate="validate[$index].price" params="{ mask: { currency: 2 } }" required></ds-input><ds-input ng-model="row.additionalPrice" type="tel" label="Price per additional item" placeholder="$0.00" params="{ mask: { currency: 2 } }" validate="validate[$index].additionalPrice" required></ds-input></div></div></div><button class="ds-dynamic-input-add" type="button" ng-click="add()">Add new method</button></div>'), e.put('public/modules/ds/embed/templates/ds.embed.default.html', '<div class="ds-embed" ng-class="{ \'ds-embed--internal-embedded\': data.type !== \'embedly\', \'--not-share\': subType !== \'share\' || data.status === \'deleted\', \'ds-embed-wrappner-no-cover\' : !data.content.cover && !data.thumbnail }"><ds-tile-header data="data" ng-if="showHeader"></ds-tile-header><a ng-href="{{ data.url || data.embedlyData.url || data.source }}" ng-attr-target="{{ (data.embedlyData && (data.embedlyData.url || data.source) ? \'_blank\' : \'\') }}" class="ds-embed-embedded" ng-click="openPost($event)"><div class="ds-embed-image" ng-class="{\'ds-embed-video\' : playable }" ng-attr-style="background-image: url(\'{{ data.content.cover || data.thumbnail | processImage : getUniqueSelector() }}\'); padding-bottom: {{ data.ratio }}%" ng-if="data.content.cover || data.thumbnail" data-uid></div><div class="ds-embed-content" ng-class="{ \'ds-embed-content-no-cover\' : !data.content.cover && !data.thumbnail }"><h4 class="ds-embed-title" ng-if="data.content.title || data.embedlyData.title">{{ data.content.title || data.embedlyData.title | cut:true:80 }}</h4><p class="ds-embed-tagline" ng-if="data.content.description || data.embedlyData.description">{{ data.content.description || data.embedlyData.description | cut:true: 120 }}</p><ds-channel-mosaic data="data"></ds-channel-mosaic><a class="ds-embed-source" ng-if="!data.isItem && data.type != \'page\' && data.type != \'channel\' && (data.provider || (data.embedlyData && data.embedlyData.provider_name))" href="{{externalUrl}}" target="_blank">{{ data.provider || data.embedlyData.provider_name }} </a><em class="ds-embed-price" ng-if="data.isItem"><item-price data="data.content"></item-price></em></div></a><ds-engagement no-interaction="noInteraction" data="data" ng-if="!hideEngagement"></ds-engagement></div>'), e.put('public/modules/ds/embed/templates/ds.embed.html', '<div ng-switch="type"><ds-embed-post data="data" hide-engagement="hideEngagement" ng-switch-when="post" no-interaction="noInteraction" type-label="typeLabel"></ds-embed-post><div ng-switch-when="video"><ds-embed-video autoplay="autoplay" data="data" ng-if="!editor" hide-video="hideVideo" hide-video-modal="hideVideoModal" content="content" show-info="showVideoInfo"></ds-embed-video><ds-embed-video-upload data="data" ctx="ctx" ng-if="editor" hide-video="hideVideo" content="content"></ds-embed-video-upload></div><ds-embed-share data="::content.v2" ng-switch-when="share"></ds-embed-share><ds-embed-tile data="data" hide-engagement="hideEngagement || showVideoInfo" ng-switch-when="item" no-interaction="noInteraction" type-label="typeLabel"></ds-embed-tile><ds-embed-default sub-type="subType" data="data" ng-switch-default dont-open-post="dontOpenPost" no-interaction="noInteraction" content="content"></ds-embed-default></div>'), e.put('public/modules/ds/embed/templates/ds.embed.post.html', '<article class="ds-embed-post-container" ng-class="{ \'ds-embed-post-container--has-image\': content.image }"><ds-tile-header norefer="false" data="data" type-label="typeLabel"></ds-tile-header><div class="ds-embed-post-content"><div class="ds-embed-post-content-wrapper" ng-class="{ \'ds-embed-post-content-wrapper--with-thumb\': data.content.cover }"><a ng-href="{{content.url}}" class="ds-embed-post-content-wrapper-text" ng-if="content.text || content.title" ng-click="openPost(data, $event)"><h3 class="ds-embed-post-content-title" ng-if="content.title">{{content.title}}</h3><p class="ds-embed-post-content-text" ng-if="content.image" ng-bind-html="content.text | cut:true:188: \' ...\' | escapeHTML | mentions"></p><p class="ds-embed-post-content-text --full" ng-if="!content.image" ng-bind-html="content.text | cut:true:376: \' ...\' | escapeHTML | mentions"></p></a><div ng-if="!!content.image && !content.tile" class="tile-content-header tile-content-type-space" style="padding-bottom: {{ content.ratio }}%"><a ng-href="{{content.url}}" ng-click="openPost(data, $event)"><img ng-src="{{ getImage() }}" alt="{{ content.text | cut:true:100: \' ...\' }}"></a></div><div class="ds-embed-embedded" ng-if="content.tile"><ds-async-embed></ds-async-embed></div></div></div><ds-engagement no-interaction="noInteraction" data="data" ng-if="!hideEngagement"></ds-engagement></article>'), e.put('public/modules/ds/embed/templates/ds.embed.share.html', '<article class="ds-embed ds-embed-share"><a class="ds-main-tile-link" target="{{ ::main.externalLink ? \'_blank\' : \'_self\'}}" href="{{ ::main.url }}" ng-click="::openPost($event)"><div class="ds-main-channel-mosaic ds-channel-mosaic ds-channel-mosaic-{{ main.body.contents.length }} clearfix" ng-if="main.type === \'channel\'"><ul><li class="ds-channel-mosaic-item" ng-class="{\'ds-channel-mosaic-video\': block.body.story && block.body.story.type == \'video\' }" ng-repeat="block in main.body.contents | limitTo:6" style="background-image: url(\'{{ block.cover | processImage : 300 }}\')" data-uid><span class="ds-channel-mosaic-text" ng-if="::!block.cover.url">{{ ::block.body.name || block.body.description || block.body.story.body.name || block.body.story.body.description }}</span> <span class="ds-channel-mosaic-total" ng-if="$parent.data.contentsCount > 6"><span>+{{::$parent.data.contentsCount - $parent.main.body.contents.length}}</span></span></li></ul></div><div class="ds-main-tile-image" ng-if="::main.cover" style="padding-bottom: {{ ::main.cover.ratio }}%" ng-class="{ \'ds-embed-video\': main.externalVideo }"><img ng-src="{{ ::main.cover | processImage : 500 }}" style="position:absolute" alt="{{ ::main.description }}" data-uid><div class="ds-embed-video" ng-if="::content.type === \'video\'"><div class="ds-embed-title-video">{{ ::content.story.name | cut:true:80 }}</div><div class="ds-embed-title-video owner-vanity">By {{ ::content.header.space.vanityUrl }}</div><div class="ds-embed-title-video video-views" ng-show="::content.engagment.views > 0">{{ ::content.engagment.views | pluralize : \'View\' }}</div></div></div><div class="ds-main-tile-content ds-main-tile-content-item" ng-if="::main.content || main.body"><h4>{{ ::(main.content.name || main.content.title || main.body.name) | cut:true:80 }}</h4><p>{{ ::main.content.description | cut:true:120: \' ...\' }}</p><small class="item-price" ng-if="::main.type === \'item\'"><item-price ng-if="main.content.item.pricingModel === \'fixed\'" data="main.content.item"></item-price><make-offer-banner ng-if="main.content.item.pricingModel === \'offer\'" size="\'normal\'"></small></div><p ng-hide="main.type === \'item\'" class="ds-main-tile-action">{{ ::main.publishedAt }}</p></a><div class="ds-main-tile-header"><a ui-sref="holospace.home({ holospaceName: main.header.space.vanityUrl })"><ds-avatar class="ds-main-tile-header-avatar" avatar="::main.header.space.photo" resize="50" size="26"></ds-avatar></a><div class="ds-main-tile-header-info"><div class="ds-space-name"><div class="ds-space-name-container"><a class="ds-space-name-text white-space--normal" ui-sref="holospace.home({ holospaceName: main.header.space.vanityUrl })">{{ ::main.header.space.name }}<div ng-if="::main.header.space.isVerified" class="ds-space-name-icon-container" title="Verified Holospace.&#10;Holonis confirmed this is an authentic account for this person, business, public figure, influencer or brand."><img ng-src="{{ ::main.header.space.badges[0].icon}}.svg" class="ds-space-name-verified icon" alt="{{ ::main.header.space.badges[0].title }}"></div></a></div></div><small><a ui-sref="holospace.home({ holospaceName: main.header.space.vanityUrl })">@{{ ::main.header.space.vanityUrl }}</a></small></div><ds-holospace-follow is-follow="true" data="::main.header.space" ng-if="::!main.header.space.isFollowing"></ds-holospace-follow></div><div ng-click="::openPost($event)" class="ds-main-tile-content" ng-if="::main.description && main.type === \'post\'" ng-bind-html="::main.description | cut:true:400: \' ...\' | escapeHTML | mentions"></div><div ng-click="::openPost($event)" class="ds-main-tile-content-see-more" ng-if="::main.description.length > 400 && main.type === \'post\'">See more</div></article>'), e.put('public/modules/ds/embed/templates/ds.embed.tile.html', '<div class="ds-embed" ng-class="{ \'ds-embed--internal-embedded\': data.type !== \'embedly\', \'--not-share\': subType !== \'share\' || data.status === \'deleted\', \'ds-embed-wrappner-no-cover\' : !data.content.cover && !data.thumbnail }"><ds-tile-header data="data" ng-if="showHeader"></ds-tile-header><a ng-href="{{ data.url || data.embedlyData.url || data.source }}" ng-attr-target="{{ (data.embedlyData && (data.embedlyData.url || data.source) ? \'_blank\' : \'\') }}" class="ds-embed-embedded" ng-click="openPost($event)"><div class="ds-embed-image" ng-class="{\'ds-embed-video\' : playable }" style="background-image: url(\'{{ data.content.cover || data.thumbnail | processImage : getUniqueSelector() }}\'); padding-bottom: {{ data.ratio }}%" ng-if="data.content.cover || data.thumbnail" data-uid></div><div class="ds-embed-content" ng-class="{ \'ds-embed-content-no-cover\' : !data.content.cover && !data.thumbnail }"><h4 class="ds-embed-title" ng-if="data.content.title || data.embedlyData.title">{{ data.content.title || data.embedlyData.title | cut:true:80 }}</h4><p class="ds-embed-tagline" ng-if="data.content.description || data.embedlyData.description">{{ data.content.description || data.embedlyData.description | cut:true: 120 }}</p><a class="ds-embed-source" ng-if="!data.isItem && data.type != \'page\' && (data.provider || (data.embedlyData && data.embedlyData.provider_name))" href="{{externalUrl}}" target="_blank">{{ data.provider || data.embedlyData.provider_name }} </a><em class="ds-embed-price" ng-if="data.isItem"><item-price data="data.content"></item-price></em></div></a><ds-engagement no-interaction="noInteraction" data="data" ng-if="!hideEngagement"></ds-engagement></div>'), e.put('public/modules/ds/embed/templates/ds.embed.video.html', '<article class="ds-embed ds-embed-post"><div class="ds-embed-image" ng-if="oldVideo"><videogular><vg-media vg-src="filestack" vg-tracks="" vg-native-controls="false"></vg-media><vg-overlay-play></vg-overlay-play><vg-controls vg-autohide="true" vg-autohide-time="1000"><vg-play-pause-button></vg-play-pause-button><vg-time-display>{{ currentTime | date:\'mm:ss\':\'+0000\' }}</vg-time-display><vg-scrub-bar><vg-scrub-bar-current-time></vg-scrub-bar-current-time></vg-scrub-bar><vg-time-display>{{ timeLeft | date:\'mm:ss\':\'+0000\' }}</vg-time-display><vg-volume><vg-mute-button></vg-mute-button><vg-volume-bar></vg-volume-bar></vg-volume><vg-fullscreen-button></vg-fullscreen-button></vg-controls><div class="vg-media-text" ng-show="true">{{ data[0].title }}</div></videogular></div><ds-player api="player" autoplay="autoplay || playing" ng-if="(!hideVideo || playing) && fromHolonis " data="data"></ds-player><a ng-href="{{ content.url }}" ng-click="openPost($event)" ng-if="hideVideo && !playing && data.status == \'published\'"><div class="ds-embed-image ds-embed-video" ng-style="internalBackground"><div class="ds-embed-title-video">{{ internalContent.title | cut:true:80 }}</div><div class="ds-embed-title-video owner-vanity">By {{ data.space.vanityUrl }}</div><div class="ds-embed-title-video video-views" ng-show="data.block[0].views > 0">{{ data.block[0].views }} {{ data.block[0].views.length > 1 ? \'views\' : \'view\' }}</div></div><div class="ds-embed-content ds-embed-content-video" ng-if="showInfo"><h4 class="ds-embed-title" ng-if="internalContent.title">{{ internalContent.title | cut:true:80 }}</h4><p class="ds-embed-tagline" ng-if="internalContent.description">{{ internalContent.description | cut:true: 120 }}</p></div></a><a ng-href="{{ content.url }}" ng-click="openPost($event)" ng-if="data.status !== \'published\'"><div class="ds-embed-image ds-embed-video ds-embed-video--deleted" style="padding-bottom:{{ data.ratio }}%; background-image: url(\'{{ data.content.cover | processImageURL : 500 }}\')"><div class="ds-embed-title-video">This video is not available anymore.</div><div class="ds-embed-title-video owner-vanity"></div><div class="ds-embed-title-video video-views"></div></div><div class="ds-embed-content ds-embed-content-video" ng-if="showInfo"><h4 class="ds-embed-title" ng-if="data.block[0].title"></h4><p class="ds-embed-tagline" ng-if="data.block[0].description"></p></div></a></article>'), e.put('public/modules/ds/embed/templates/ds.embed.video.upload.html', '<article class="ds-embed ds-embed-post"><div class="ds-upload-wrapper --selected"><ds-player api="player" autoplay="true" ng-if="finished && playing" data="data" editing="true"></ds-player><a ng-href="{{ content.url }}" ng-click="playVideo($event)" ng-show="!finished || !playing"><div ng-show="!finished || !playing" id="video-upload-box" class="ds-upload-box" ng-style="{\'background-image\':\'url(\' + thumb + \')\'}"><ds-video-progress ng-class="{error:error}" progress-callback="progressCallback"></ds-video-progress><div ng-show="!error" class="ds-upload-play"></div><a ng-show="error" ng-click="processUpload()" class="video-upload-tryagain" href="">Try Again</a></div></a><form class="ds-upload-form"><ds-input disabled="oldInstance" ng-model="data.content.title" placeholder="Type your video title" class="ds-upload-title"></ds-input><ds-input disabled="oldInstance" ng-model="data.content.description" placeholder="Add a description" class="ds-upload-subtitle"></ds-input></form></div></article>'), e.put('public/modules/ds/engagement/templates/engagement.channel.html', '<article class="ds-engagement" ng-show="data.status != \'draft\'"><div class="ds-engagement-bottom ds-engagement-channel"><div class="ds-engagement-icon" ng-class="{\'ds-engagement-icon--liked\' : data.engagement.liked}" ng-click="likeDisabled || toggleLike(data)"><i class="dsicon-heart ds-engagement-icon--default"><i class="dsicon-heart-fill ds-engagement-icon--active"></i></i></div><a ng-attr-href="{{::hasLink ? data.url : undefined}}" class="ds-engagement-icon dsicon-comment" ng-click="focusComment()" auto-focus="autoFocus"></a> <i class="ds-engagement-icon dsicon-share" ng-click="share(data)"></i> <span ng-attr-href="{{::hasLink ? data.url : undefined}}" class="ds-label-views ds-label-text ds-label-text-no-default-cursor">{{ data.page.length }} Card{{ data.page.length > 1 ? \'s\' : \'\' }} </span><a ng-attr-href="{{::hasLink ? data.url : undefined}}" class="ds-label-views ds-label-text ds-label-text-no-default-cursor" ng-if="data.engagement.views > 0">{{data.engagement.views | abbreviateNumber }} {{data.engagement.views > 1 ? \'Views\' : \'View\'}}</a></div></article>'), e.put('public/modules/ds/engagement/templates/engagement.html', '<article class="ds-engagement" ng-show="::hasEngagement && data.status != \'draft\'"><div class="ds-engagement-top" ng-class="{ \'ds-engagement-top--hidden\': !engagementVisible && !noInteraction }"><span role="button" class="ds-label-top ds-label-text ds-label-likes" ng-click="openLikes()" ng-if="statistics.likes">{{ statistics.likes | abbreviateNumber }} <span>{{ label.likes }}</span> </span><a ng-attr-href="{{::hasLink ? data.url : undefined}}" class="ds-label-top ds-label-text cursor-pointer" ng-if="statistics.comments" ng-click="focusComment()">{{ statistics.comments | abbreviateNumber }} <span>{{ label.comments }}</span> </a><span role="button" class="ds-label-top ds-label-text cursor-pointer" ng-click="openShares()" ng-if="statistics.shares">{{ statistics.shares | abbreviateNumber }} <span>{{ label.shares }}</span> </span><a ng-attr-href="{{::hasLink ? data.url : undefined}}" class="ds-label-views ds-label-text" ng-class="::{ \'cursor-default\': !hasLink }" ng-if="::statistics.views > 0">{{ ::statistics.views | abbreviateNumber }} <span>{{ ::label.views }}</span></a></div><div class="ds-engagement-bottom" ng-class="{ \'has-stats\': hasStats }" ng-if="!noInteraction"><i class="dsicon-heart ds-engagement-icon" ng-class="{\'ds-engagement-icon--liked\' : statistics.liked}" ng-click="::likeDisabled || toggleLike()"><i class="dsicon-heart-fill ds-engagement-icon--active"></i> </i><a ng-attr-href="{{::hasLink ? data.url : undefined}}" class="ds-engagement-icon dsicon-comment" ng-click="focusComment()" auto-focus="autoFocus"></a> <i class="ds-engagement-icon dsicon-share" ng-click="share(data)"></i></div></article>'), e.put('public/modules/ds/engagement/templates/engagement.item.html', '<article class="ds-engagement ds-engagement-item" ng-show="::hasEngagement && data.status != \'draft\'"><div class="ds-engagement-top" ng-class="{ \'ds-engagement-top--hidden\': !engagementVisible && !noInteraction }"><span role="button" class="ds-label-top ds-label-text ds-label-likes" ng-click="openLikes()" ng-if="statistics.likes">{{ statistics.likes | abbreviateNumber }} <span>{{ label.likes }}</span> </span><span role="button" class="ds-label-top ds-label-text cursor-pointer" ng-click="openShares()" ng-if="statistics.shares">{{ statistics.shares | abbreviateNumber }} <span>{{ label.shares }}</span> </span><a ng-attr-href="{{::hasLink ? data.url : undefined}}" class="ds-label-views ds-label-text" ng-class="::{ \'cursor-default\': !hasLink }" ng-if="::statistics.views > 0">{{ ::statistics.views | abbreviateNumber }} <span>{{ ::label.views }}</span></a></div><div class="ds-engagement-bottom" ng-class="{ \'has-stats\': hasStats }" ng-if="!noInteraction"><i class="dsicon-heart ds-engagement-icon" ng-class="{\'ds-engagement-icon--liked\' : statistics.liked}" ng-click="::likeDisabled || toggleLike()"><i class="dsicon-heart-fill ds-engagement-icon--active"></i> </i><i class="ds-engagement-icon dsicon-share" ng-click="share(data)"></i></div></article>'), e.put('public/modules/ds/form/templates/checkbox.html', '<label class="ds-checkbox"><div class="ds-checkbox-input"><input ng-disabled="disabled" id="{{ inputId }}" type="checkbox" name="{{ name }}" ng-model="ngModel" ng-change="change && change(arg)"><div class="ds-checkbox-mask"><i class="dsicon-check ds-checkbox-mask__icon"></i></div></div><div class="ds-checkbox-text"><span class="ds-checkbox-label" ng-if="label">{{ label }} </span><span class="ds-checkbox-description" ng-if="description">{{ description }}</span></div></label>'), e.put('public/modules/ds/form/templates/conditional.input.html', '<div class="ds-conditional-input"><ds-input ng-model="model" mask="{{ mask }}" mask-placeholder="{{ maskPlaceholder }}" maxlength="{{ maxlength }}" params="params" type="{{ type }}" label="{{ labelInput }}" disabled-value="{{ disabledLabel }}" placeholder="{{ placeholder }}" disabled="checked"></ds-input><ds-checkbox label="{{ labelCheckbox }}" ng-model="checked"></ds-checkbox></div>'), e.put('public/modules/ds/form/templates/counter.html', '<div class="ds-form-wrapper" ng-class="{ \'ds-form-combo\': params.combo, \'ds-form-plain\': !params.combo, \'ds-form--min\': state.min, \'ds-form--min\': state.max }"><label for="{{ id }}" ng-if="label" class="ds-input-label">{{ label }}</label><div ng-show="!disabled" class="ds-input-container ds-counter"><div class="ds-counter-wrapper"><input maxlength="{{ maxLength || 9 }}" ng-keypress="hasWord && verify($event)" value="{{ start || 0 }}" type="tel" id="{{ id }}" name="{{ name }}" placeholder="{{ placeholder }}" class="ds-input" ng-model="model" style="max-width: calc(100% - {{ style.padding }}px)" ng-class="{ \'ds-input-hidden\': singular && !params.combo }"> <span ng-if="singular && !params.combo"><i class="ds-counter-control ds-counter-control--plain ds-counter-control--plus ds-counter-control--plus-borderless" ng-click="add(1)"><svg-icon icon="plus"></svg-icon></i><i class="ds-counter-control ds-counter-control--plain ds-counter-control--minus ds-counter-control--minus-borderless" ng-click="add(-1)" ng-class="{ \'ds-counter-control--minus--inactive\': model == 0 }"></i></span><div class="ds-counter-container" ng-class="{ \'ds-counter-container--combo\': params.combo, \'ds-counter-container-center\': singular && !params.combo }" style="max-width: calc(100% - {{ style.padding }}px)"><span ng-if="!singular && !params.combo"><i class="ds-counter-control ds-counter-control--plain ds-counter-control--plus dsicon-plus" ng-click="add(1)"></i> <i class="ds-counter-control ds-counter-control--plain ds-counter-control--minus dsicon-minus" ng-click="add(-1)" ng-class="{ \'ds-counter-control--minus--inactive\': model == 0 }"></i> </span><span class="ds-counter-model" ng-class="{ \'ds-counter-visible\': singular && !params.combo }">{{ model }} </span><span class="ds-counter-content">{{ model > 1 ? plural : singular }}</span></div><div class="ds-counter-controls ds-counter-controls--combo" ng-if="params.combo"><i class="ds-counter-control ds-counter-plus dsicon-chevron-bottom-small" ng-click="add(1)"></i> <i class="ds-counter-control dsicon-chevron-bottom-small" ng-click="add(-1)"></i></div></div><span class="ds-input-error-message" ng-if="validate">This field is required</span></div><div ng-show="disabled" class="ds-input-container"><div class="ds-counter-container" ng-class="{ \'ds-counter-container--combo\': params.combo }"><span class="ds-input">{{ model }}</span></div></div></div>'), e.put('public/modules/ds/form/templates/input.action.html', '<div class="ds-form-wrapper"><label for="{{ id }}" ng-if="label" class="ds-input-label">{{ label }}</label><div class="ds-input-container ds-input-action-container"><input disabled="true" class="ds-input" value="{{ model }}"> <em class="ds-input-action ds-button-seemore" ng-click="action && action()">{{ actionLabel }}</em></div></div>'), e.put('public/modules/ds/form/templates/input.group.html', '<div class="ds-input-group"><div class="ds-input-group-container" ng-transclude></div></div>'), e.put('public/modules/ds/form/templates/input.html', '<div class="ds-form-wrapper" ng-class="{ \'ds-form-wrapper--combo\': params.combo, \'ds-form-wrapper--has-icon\': params.icon }"><label for="{{ id }}" ng-if="label" class="ds-input-label" ng-class="{ \'ds-input-label--disabled\': disabled }">{{ label }}</label><div ng-show="!disabled" class="ds-input-container" ng-class="{ \'ds-input-container--autocomplete\': hasAutocomplete,\n                    \'ds-input-error--required\': validate == \'required\',\n                    \'ds-input-error--email\': validate == \'invalidEmail\',\n                    \'ds-input-error--custom\': validate == \'custom\',\n                    \'ds-input--has-icon-validator\': params.iconValidator,\n                    \'ds-input--icon-validator-valid\': params.iconValidator.valid,\n                    \'ds-input--icon-validator-loading\': params.iconValidator.loading,\n                    \'ds-input--has-prefix\': params.prefix\n                  }"><label class="ds-input-icon dsicon-{{ params.icon }}" for="{{ id }}" ng-if="params.icon"></label><div class="ds-input-wrapper"><span class="ds-input-prefix" ng-if="params.prefix">{{ params.prefix }} </span><input type="{{ type }}" id="{{ id }}" name="{{ name }}" placeholder="{{ placeholder }}" class="ds-input ds-input--enabled" ui-mask-placeholder-char="space" ng-class="{ \'ds-input--big\': big }" ng-model="$parent.ngModel" ng-change="change(params)" ng-focus="focus(params)" ng-blur="blur(params)" ng-if="params.mask.currency" ui-money-mask maxlength="{{maxlength}}"> <input type="{{ type }}" id="{{ id }}" name="{{ name }}" ng-attr-placeholder="{{ placeholder }}" class="ds-input ds-input--enabled" ui-mask-placeholder="{{::params.mask.placeholder}}" ui-mask-placeholder-char="space" ng-class="{ \'ds-input--big\': big }" ng-model="$parent.ngModel" ng-change="change(params)" ng-focus="focus(params)" ng-blur="blur(params)" ng-if="params.mask.custom" ui-mask="{{params.mask.custom}}" maxlength="{{maxlength}}"> <input type="{{ type }}" id="{{ id }}" name="{{ name }}" ng-attr-placeholder="{{ placeholder }}" class="ds-input ds-input--enabled" ng-class="{ \'ds-input--big\': big }" ng-model="$parent.ngModel" ng-change="change(params)" ng-focus="focus(params)" ng-blur="blur(params)" ng-if="!params.mask.currency && !params.mask.custom" maxlength="{{maxlength}}"> <i class="ds-input-icon-validator dsicon-{{ params.iconValidator.className }}" ng-if="params.iconValidator && !params.iconValidator.error"></i> <i class="ds-input-icon-validator ds-input-icon-validator--error dsicon-close" ng-if="params.iconValidator && params.iconValidator.error"></i></div><span ng-if="!params.noErrorMessage"><span class="ds-input-error-message ds-input-error-message--required" ng-if="validate == \'required\'">{{ \'This field is required\' }}</span> <span class="ds-input-error-message ds-input-error-message--custom" ng-if="validate == \'custom\'">{{ params.errorMessage || \'This field is required\' }}</span> <span class="ds-input-error-message ds-input-error-message--custom" ng-if="validate == \'invalidEmail\'">{{ \'Invalid e-mail\' }}</span></span></div><div ng-if="disabled" class="ds-input-container ds-input-container--disabled"><label class="ds-input-icon dsicon-{{ params.icon }}" for="{{ id }}" ng-if="params.icon"></label><input disabled="true" class="ds-input" value="{{ disabledValue || ngModel || placeholder }}"></div></div>'), e.put('public/modules/ds/form/templates/radio.html', '<label class="ds-checkbox"><div class="ds-checkbox-input"><input ng-disabled="disabled" id="{{ inputId }}" type="radio" name="{{ name }}" ng-model="ngModel" ng-change="change && change(arg)" ng-value="ngValue"><div class="ds-checkbox-mask"><i class="dsicon-check ds-checkbox-mask__icon"></i></div></div><div class="ds-checkbox-text" ng-class="{ \'checkbox-with-description\': description }"><span class="ds-checkbox-label" ng-if="label">{{ label }} </span><span class="ds-checkbox-description" ng-if="description">{{ description }}</span></div></label>'), e.put('public/modules/ds/form/templates/select.html', '<div class="ds-form-wrapper"><label for="{{ id }}" class="ds-input-label" ng-if="label">{{ label || \'Country\' }}</label><select class="ds-select-mobile" id="{{ id }}" name="{{ name }}" ng-model="ngModel"><option ng-repeat="option in options track by $index" value="{{ option[_value] }}">{{ option[_text] }}</option></select><div class="ds-select" ng-class="{ \'-active\': active }" ng-click="active = !active"><span class="ds-select-text {{!text ? \'ds-select-text-placeholder\' : \'\'}}">{{ text || placeholder }}</span><svg-icon icon="chevron-down" class="ds-select-chevron"></svg-icon><ul class="ds-select-options" ng-if="!noOptions"><li class="ds-select-option" ng-repeat="option in options track by $index" ng-click="select(option)"><span data-value="{{ option[_value] }}">{{ option[_text] }}</span> <span class="ds-select-tip" ng-if="_tip">{{ option[_tip] }}</span></li></ul></div></div>'), e.put('public/modules/ds/form/templates/set-minimum-price.html', '<div class="ds-conditional-input"><ds-input ng-model="model" mask="{{ mask }}" mask-placeholder="{{ maskPlaceholder }}" maxlength="{{ maxlength }}" params="params" type="{{ type }}" label="{{ labelInput }}" disabled-value="{{ disabledLabel }}" placeholder="{{ placeholder }}" disabled="!checked"></ds-input><ds-checkbox label="{{ labelCheckbox }}" ng-model="checked"></ds-checkbox></div>'), e.put('public/modules/ds/form/templates/stripe-form.html', '<div class="ds-stripe-fields"><div class="ds-form-field"><ds-input params="inputs.ccName" change="onInputChange(\'ccName\')" ng-model="data.ccName" type="text" id="checkout-cc-name" label="Name on payment card" validate="$validators.ccName" maxlength="200"></ds-input><ds-input params="inputs.ccNumber" blur="blurCCNumber()" change="onInputChange(\'ccNumber\')" ng-model="data.ccNumber" type="text" id="checkout-cc-number" label="Card Number" validate="$validators.ccNumber" placeholder="{{ data.ccNumberAbbr }}" maxlength="19" class="dark-placeholder"></ds-input><ds-input-group><ds-input params="inputs.ccExp" change="onInputChange(\'ccExp\')" ng-model="data.ccExp" type="text" id="checkout-cc-exp" label="Exp. Date" placeholder="MM/YY" validate="$validators.ccExp" maxlength="5" disabled="data.ccCard"></ds-input><ds-input params="inputs.ccCvv" change="onInputChange(\'ccCvv\')" ng-model="data.ccCvv" type="text" id="checkout-cc-cvv" label="CVV" placeholder="3 or 4 Digit Code" validate="$validators.ccCvv" required maxlength="4" disabled="data.ccCard"></ds-input></ds-input-group><ds-input params="inputs.ccZip" change="onInputChange(\'ccZip\')" class="zip-input" ng-model="data.ccZip" type="text" id="checkout-cc-zip" label="Zip Code" placeholder="Enter 5 Digit Zip Code" validate="$validators.ccZip" maxlength="5"></ds-input><ds-checkbox description="Save this card for future use" ng-model="data.saveCard" ng-if="!isLoggedOut()"></ds-checkbox></div></div>'), e.put('public/modules/ds/form/templates/text.html', '<div class="ds-form-wrapper"><label for="{{ id }}" class="ds-input-label" ng-if="label">{{ label }}</label><div class="ds-textarea-wrapper" ng-class="{ \'ds-text-wrapper--has-label\': !!label, \'ds-textarea-wrapper--error\': !!validate }"><div class="ds-textarea-container"><div contenteditable="{{ !disabled }}" id="{{ id }}" name="{{ name }}" placeholder="{{ placeholder }}" class="ds-textarea ds-text"></div><div class="ds-input-counter" ng-if="maxCharacters" ng-class="{ \'ds-input-counter--exceeded\': state.characters < 0 }">{{ state.characters }}</div><span class="ds-input-error-message" ng-if="validate == \'required\'">This field is required</span> <span class="ds-input-error-message" ng-if="validate == \'custom\'">{{ params.error.custom || \'Double check your data\' }}</span></div></div></div>'), e.put('public/modules/ds/form/templates/textarea.html', '<div class="ds-form-wrapper"><label for="{{ id }}" class="ds-input-label" ng-if="label">{{ label }}</label><div class="ds-textarea-container"><textarea id="{{ id }}" name="{{ name }}" placeholder="{{ placeholder }}" class="ds-textarea" ng-model="model"></textarea><span class="ds-input-error-message">This field is required</span></div></div>'), e.put('public/modules/ds/gallery/templates/gallery.html', '<div class="ds-gallery" ng-show="images.length > 0"><div class="swiper-container ds-gallery-swiper ds-gallery-active"><div class="swiper-wrapper"><div class="swiper-slide" ng-repeat="image in images" ng-init="$last && initSwiper()"><div class="ds-gallery-swiper-image" overlay-image="{{ image | processImage : 500 }}" style="background-image: url({{ image | processImage : 500 }})" data-uid></div></div></div><div class="swiper-pagination"></div></div><div class="ds-gallery-thumbs-container"><div class="swiper-container ds-gallery-thumbs"><div class="swiper-wrapper ds-gallery-thumbs-wrapper" ng-class="{ \'ds-gallery-thumbs-wrapper--centered\': images.length < 7 }"><article class="swiper-slide ds-gallery-thumb" ng-repeat="image in images" ng-click="activeImage($event)" ng-class="{ \'ds-gallery-thumb--selected\': image.selected }"><img class="ds-gallery-thumb-img" ng-src="{{ image | processImage : 150 : true }}" alt=""><div class="ds-gallery-thumb-filter"></div></article></div></div><div class="swiper-button-next" ng-show="images.length > 7"></div><div class="swiper-button-prev" ng-show="images.length > 7"></div></div></div>'), e.put('public/modules/ds/header/templates/exit.html', '<div class="ds-header-exit"><em class="ds-header-exit">This item has been automatically saved. What would you like to do?</em><div class="ds-action-group-buttons"><button type="button" class="ds-button-big ds-button-primary" ng-click="draft()">{{ params.draft }}</button> <button type="button" class="ds-button-big ds-button-borderless" ng-click="discard()" ng-if="params.discard">{{ params.discard }}</button> <button type="button" class="ds-button-big ds-button-borderless" ng-click="delete()" ng-if="params.delete">{{ params.delete }}</button></div></div>'), e.put('public/modules/ds/header/templates/header.creation.html', '<div class="ds-nav-wrapper" ng-class="{ \'ds-nav--loading\': state.loading || state.submitting }" title=""><nav class="ds-nav-desktop ds-nav"><div class="ds-nav-left ds-nav-side"><a ui-sref="feeds" title="Holonis"><img ng-src="{{$root.cdnBaseUrl}}/images/svg/logo-holonis-solo.svg" class="ds-nav-icon ds-nav-logo"> </a><span title="{{ params.cancel.label }}" class="ds-nav-left-close" ng-click="discard($event)" ng-if="params.cancel">{{ params.cancel.label }} </span><span title="{{ params.delete }}" class="ds-nav-left-close" ng-click="delete($event)" ng-if="params.delete">{{ params.delete }} </span><span title="{{ params.discard }}" class="ds-nav-left-close" ng-click="discard($event)" ng-if="params.discard">{{ params.discard }}</span></div><div class="ds-nav-center ds-nav-side"><span class="ds-nav-pale">{{ headerTitle }}</span></div><div class="ds-nav-right ds-nav-side ds-karot ds-nav-creation-right" ng-class="{ \'is-disabled\' : $parent.state.uploadingVideo }"><div class="ds-nav-link ds-nav-close" ng-click="cancel($event)" ng-if="params.cancel"><span class="ds-nav-close__text" title="{{ params.cancel.label }}">{{ params.cancel.label }}</span> <i class="dsicon-chevron-bottom-small ds-nav-close__icon"></i></div><div class="ds-nav-link ds-nav-close" ng-click="delete($event)" ng-if="params.delete"><span class="ds-nav-close__text" title="{{ params.delete }}">{{ params.delete }}</span></div><div class="ds-nav-link ds-nav-close" ng-click="discard($event)" ng-if="params.discard"><span class="ds-nav-close__text" title="{{ params.discard }}">{{ params.discard }}</span></div><div class="ds-nav-icons"><a class="ds-nav-link ds-nav-publish" title="{{ params.publish || \'Publish\' }}" ng-click="publish()" ng-if="state.owner && params.publish">{{ params.publish || \'Publish\' }}</a> <a class="ds-nav-link ds-nav-publish" title="{{ params.save || \'Save\' }}" ng-click="save()" ng-if="state.owner && params.save">{{ params.save || \'Save\' }}</a> <a class="ds-nav-link ds-nav-publish" title="{{ params.draft || \'Draft\' }}" ng-click="draft()" ng-if="!state.owner">{{ params.draft || \'Draft\' }}</a></div><a class="ds-nav-options ds-nav-icons" ng-click="seo($event)" ng-if="params.seo" title="Options"><i class="dsicon-options"></i></a><ds-user-selection class="ds-user-desktop" disabled="data.published" params="params.user" ng-if="params.user" title="Users"></ds-user-selection></div></nav><ds-user-selection class="ds-user-mobile" disabled="data.published" params="params.user" title="Users" ng-class="{ \'ds-nav--loading\': tracker.active() || state.loading }" ng-if="params.user"></ds-user-selection></div>'), e.put('public/modules/ds/header/templates/header.html', '<header class="ds-header"><div class="ds-header-left" ng-click="leftAction && leftAction()"><span ng-if="leftTitle">{{ leftTitle }}</span> <i class="{{leftIcon}}" ng-if="leftIcon"></i></div><div class="ds-header-center"><span class="ds-header-bold">{{ centerTitle }}</span></div><div class="ds-header-right" ng-click="rightAction && rightAction()"><span class="ds-header-link ds-button-primary-action">{{ rightTitle }}</span> <i class="dsicon-{{rightIcon}}"></i></div></header>'), e.put('public/modules/ds/header/templates/header.selection.html', '<div class="ds-nav-wrapper"><nav class="ds-nav-desktop ds-nav"><div class="ds-nav-left ds-nav-side"><a ui-sref="feeds"><img ng-src="{{$root.cdnBaseUrl}}/images/svg/logo-holonis-solo.svg" class="ds-nav-icon ds-nav-logo"> </a><span class="ds-nav-left-close" ng-click="close()">Close</span></div><div class="ds-nav-center ds-nav-side"><h1 class="ds-nav-title">{{ title }}</h1></div><div class="ds-nav-right ds-nav-side ds-karot ds-nav-creation-right"><div class="ds-nav-link ds-nav-close" ng-click="close()"><span class="ds-nav-close__text">Close</span></div><ds-user-selection class="ds-user-desktop"></ds-user-selection></div></nav></div>'), e.put('public/modules/ds/header/templates/mobile-header.template.html', '<section class="ds-header mobile-only"><i class="ds-back-icon dsicon-{{backIcon}}" ng-click="vm.appBackFn();"></i><h2 class="ds-mobile-header-title">{{centerTitle}}</h2><div ng-if="!vm.isLoggedOut" uib-dropdown auto-close="outsideClick" is-open="vm.isNavMenuOpenMobile" on-toggle="toggleSideMenu(open)"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/menu-icon.svg" uib-dropdown-toggle data-uid is-open="vm.isNavMenuOpenMobile"><div uib-dropdown-menu template-url="public/modules/core/templates/nav-dropdown.template.html" aria-labelledby="button-template-url"></div></div><div ng-show="vm.isMenuOpen" ng-click="vm.closeMenu()" class="menu-overlay"></div></section>'), e.put('public/modules/ds/header/templates/seo.html', '<div class="ds-header-seo"><ds-header class="ds-tooltip-header" center-title="Options" right-title="Done" right-action="close()"></ds-header><ds-title title="\'SEO\'"></ds-title><ds-seo data="data"></ds-seo><ds-select class="ds-select-input" ng-model="data.meta.category.id" id="category" placeholder="Uncategorized" label="Category" class="ds-select-input" options="data.categories" params="id,name"></ds-select><div class="ds-form-wrapper"><label class="ds-input-label">Tags</label><ds-tags model="data.meta.tags" type="text" id="varianttag" placeholder="Select and press enter" required></ds-tags></div><ds-share-channel class="ds-header-seo-share" ng-if="!params.hideChannels" data="data" current-id="currentId"></ds-share-channel><ds-share selected-providers="data.shareTo" ng-if="!params.hideShare"></ds-share></div>'), e.put('public/modules/ds/holospace/templates/holospace.html', '<div class="ds-holospace-container"><div class="ds-holospace-bar"></div><div class="ds-holospace" ng-class="{ \'ds-holospace--editing-cover\': state.editingCover }"><ds-cover editing="state.editingCover" editable="editable" aspect-width="1237" aspect-height="433" space-id="data.id" data="data"></ds-cover><div class="ds-holospace-wrapper"><div class="ds-holospace-wrapper-left"><ds-avatar editable="editable" zoomable="true" src="data.profilePhoto" avatar="data.photo" size="100" resize="200" space="data" id="intro-avatar"></ds-avatar><div class="ds-holospace-wrapper-left-container"><ds-space-name is-heading="true" space="data" ng-if="!editable"></ds-space-name><h2 class="ds-holospace-tagline" ng-if="!editable">{{ data.information.tagline }}</h2><div ng-if="editable" class="ds-holospace-editable-name"><ds-input class="ds-space-name ds-space-name-input" ng-model="data.name" type="text" id="holospaceName" placeholder="Enter the holospace name" maxlength="50"></ds-input></div><div class="ds-holospace-tagline-input-wrapper" ng-if="editable" id="intro-tagline"><ds-input class="ds-holospace-tagline ds-holospace-tagline-input" ng-model="data.information.tagline" type="text" id="holospaceName" placeholder="Enter your tagline" maxlength="50"></ds-input><em class="ds-holospace-tagline-counter">{{ 50 - data.information.tagline.length }}</em></div><div class="ds-holospace-networks"><a ng-href="{{ socialMedia.href }}" class="ds-holospace-networks-container" ng-repeat="socialMedia in data.links | limitTo: 4" target="_blank"><svg-icon icon="logo-{{ socialMedia.name.replace(\' \', \'\').toLowerCase() }}-bw" class="ds-holospace-networks-icon"></svg-icon></a><em class="ds-holospace-networks-container" role="button" ng-click="addLink()" ng-show="editable"><i class="dsicon-dots ds-holospace-links" id="intro-links"></i> </em><em class="ds-holospace-networks-container" role="button" ng-click="modalLinks()" ng-if="!editable && data.links.length > 4"><i class="dsicon-dots ds-holospace-links"></i></em></div></div></div><div class="ds-holospace-wrapper-right"><div class="ds-holospace-stats ds-holospace-views"><span class="ds-holospace-stats-bold">{{ data.views | abbreviateNumber }} </span><span class="ds-holospace-stats-regular">{{ data.views == 1 ? \'View\' : \'Views\' }}</span></div><div class="ds-holospace-stats" ng-click="openFollowModal(null)"><span class="ds-holospace-stats-bold">{{ data.followersCount | abbreviateNumber }} </span><span class="ds-holospace-stats-regular">{{ data.followersCount == 1 ? \'Follower\' : \'Followers\' }}</span></div><div class="ds-holospace-edit" ng-if="data.isMySpace && !editable" role="button" ui-sref="edit({ holospaceName: data.vanityUrl })"><i class="ds-holospace-edit-icon dsicon-pencil"></i></div><ds-holospace-follow theme="holospace" data="data" ng-if="!editable"></ds-holospace-follow><button class="ds-holospace-chat ds-button chat-icon" ng-if="!data.isMySpace && !vm.isLoggedOut" overlay="message"><svg-icon icon="chat-icon" class="chat-icon"></svg-icon></button> <a class="ds-holospace-chat ds-button chat-icon" ng-if="vm.isLoggedOut" ng-click="showLogin()"><svg-icon icon="chat-icon" class="chat-icon visitor"></svg-icon></a><div class="dsicon-options ds-holospace-options" ng-if="!editable"><ds-karot data="content" type="\'space\'"></ds-karot></div></div></div><div class="ds-holospace-overlay"></div></div><div class="modalLinks" ng-class="{ \'showLinks\' : showLinks }"><header><h6>Links</h6><div class="close-links" ng-click="modalLinks()"><svg-icon icon="close"></svg-icon></div></header><ul class="links-list"><a ng-href="{{ socialMedia.href }}" target="_system" class="u-url holo-social-links" ng-repeat="socialMedia in data.links"><li><svg-icon icon="logo-{{ socialMedia.name.toLowerCase().split(\' \').join(\'\') }}-bw" class="ds-holospace-networks-icon {{socialMedia.name.toLowerCase()}}"></svg-icon><p>{{socialMedia.name}}</p></li></a></ul></div></div>'), e.put('public/modules/ds/holospace-follow/templates/holospace.follow.html', '<div class="ds-holospace-button-wrapper" ng-class="{ \'ds-holospace-button-wrapper--loading\': state.loadingFollow, \'ds-holospace-button--blue\': isFollow }"><button class="ds-button ds-holospace-follow" id="btn-follow" ng-class="{ \'ds-holospace-follow--following\': data.isFollowing, \'ds-holospace-follow--holospace\': theme === \'holospace\', \'link-disabled\': data.hasAskedFollow}" ng-if="!data.isMySpace" ng-mouseenter="data.isFollowing && showUnfollow()" ng-mouseleave="data.isFollowing && hideUnfollow()" ng-click="toggleFollow($event)">{{ data.isFollowing || data.hasAskedFollow ? state.following : \'Follow\' }}</button><div class="ds-holospace-following--mobile" ng-click="toggleFollow($event)" ng-if="data.isFollowing"><i class="ds-holospace-following--mobile-logged-out dsicon-logged-out"></i> <i class="ds-holospace-following--mobile-check dsicon-check"></i></div></div>'), e.put('public/modules/ds/image-uploader/templates/image.uploader.html', '<div class="ds-image-uploader"><div class="ds-image-uploader-label" ng-click="pickImage()" ng-class="{ \'ds-image-uploader-label--hovering\': state.hovering, \'ds-image--error\': validate }"><input class="ds-image-uploader__input" id="{{ inputId }}" type="file" accept="image/*" multiple="multiple" ng-change="upload" ng-model="images" file-picker><div class="ds-image-uploader-text"><em class="ds-image-uploader-bold">Drag and drop </em><span>or upload</span></div><div class="ds-image-uploader-text ds-image-uploader-text--mobile"><i class="dsicon-camera ds-image-uploader-text__icon"></i> <span>Upload image</span></div></div><div class="swiper-container ds-image-uploader-swiper"><div class="swiper-wrapper ds-image-uploader-container" sv-part="content" sv-root disable-sort-mobile="true"><div class="swiper-slide ds-image-upload-content ds-image-uploader--placeholder"><span class="ds-image-upload-content__featured" ng-if="content.length > 0"><i class="dsicon-featured"></i> <span class="ds-image-upload-content__text">Featured image</span></span></div><div class="swiper-slide ds-image-upload-content" ng-repeat="file in content track by $index" style="background-image: url({{ file.local || file.source }})" ng-class="{ \'ds-image-upload-content--uploading\': file.uploading, \'ds-image-upload-content--editing\': file.editing }" ng-click="toggleEdit($index)" sv-element disable-sort-mobile="true"><div class="loaderInline" ng-if="file.uploading"></div><div class="ds-image-upload-delete" sv-handle><i class="dsicon-close ds-image-upload-delete__icon" ng-click="delete($index)"></i></div></div></div><div class="swiper-pagination"></div></div><span class="ds-input-error-message ds-input-error-message--required" ng-if="validate == \'custom\'">{{ \'At least one image is required.\' }}</span></div>'), e.put('public/modules/ds/karot/templates/karot.html', '<div class="ds-karot" ng-click="showTooltip($event)"><i class="dsicon-chevron-bottom ds-karot-icon"></i></div>'), e.put('public/modules/ds/mentions/templates/mentions.html', '<div class="ds-mentions"><ul class="ds-mentions-list"><li ng-repeat="space in spaceList track by $index" class="ds-mention-item ds-body-default" ng-mouseover="select($index)" ng-click="choose()" ng-class="{ \'ds-mention-selected\': $index === index }"><ds-avatar src="space.profilePhoto" class="ds-mentions-avatar" size="28"></ds-avatar><div class="ds-mentions-user"><ds-space-name class="ds-mentions-name ds-caption-default" space="space"></ds-space-name><span class="ds-mentions-vanity-url ds-caption-default">@{{ space.vanityUrl }}</span></div></li></ul></div>'), e.put('public/modules/ds/modal/templates/modal.template.html', '<div class="ds-modal-container {{ containerAdditionalClass }}" ng-click="close($event)" ng-class="{ \'ds-modal-container--overflow\': overflow, \'ds-modal-container--hide-overlay\': hideOverlay }" style="z-index: {{ overflow && zindex && zindex.modal }}"><div class="ds-modal {{ additionalClass }}" ng-class="{ \'ds-modal-visible\' : visible, \'ds-modal-full\' : full, \'ds-modal-big\': big, \'ds-modal--dynamic-height\': dynamicHeight, \'ds-modal--overflow\': overflow }" style="z-index: {{zindex && zindex.modal }}; top:{{ top }}px; left:{{ left }}px; {{ width ? \'width:\' + width + \'px\' : \'\' }}; {{ height ? \'height:\' + height + \'px\' : \'\' }}; {{ overflow ? (\'margin-bottom: \' + (top - 10) +\'px\') : \'\' }}"><div class="ds-modal-header" ng-class="{ \'ds-modal-header--noHeader\' : noHeader }"><div class="ds-modal-header-left"><h1>{{ title }}</h1><em class="ds-modal-status" ng-if="status">{{ status }} </em><i class="ds-modal-close dsicon-close" ng-if="close" ng-click="close()" ng-hide="hideClose"></i><div class="ds-modal-actions" ng-if="params.primaryButton || params.secondaryButton"><button class="ds-button ds-button-borderless ds-button-secondary-action" name="button" ng-click="params.secondaryButton.onClick() || close()" ng-if="params.secondaryButton">{{ params.secondaryButton.text || \'Cancel\' }}</button> <button class="ds-button ds-button-borderless ds-button-primary-action" name="button" ng-click="params.primaryButton.onClick()" ng-if="params.primaryButton">{{ params.primaryButton.text || \'Save\' }}</button></div></div><div class="ds-modal-header-center"></div><div class="ds-modal-header-right"></div></div><div class="ds-modal-wrapper" ng-class="{ \'ds-modal-wrapper--no-padding\': noPadding, \'ds-modal-wrapper--no-max-height\': noMaxHeight || overflow, \'ds-modal-wrapper--loading\': !loaded, \'ds-modal-wrapper--dynamic-height\': dynamicHeight }"><div class="loaderInline --ds-modal" ng-show="!loaded"></div><div class="ds-modal-wrapper-content" ng-show="loaded" ng-class="{ \'ds-modal-wrapper-content--dynamic-height\': dynamicHeight }"></div></div></div><div class="ds-modal-overlay {{ overlayAdditionalClass }}" ng-click="dataFormClose ? dataFormCloseClose($event) : close()" style="z-index: {{ !overflow && zindex && zindex.overlay }}"></div><div class="loaderInline loaderInline--overlay" ng-show="!visible"></div></div>'), e.put('public/modules/ds/nav/templates/nav.mobile.html', '<nav class="ds-nav-mobile ds-nav"><a class="ds-nav-icon ds-nav-icons"><i class="dsicon-holospace ds-nav-icon-holospace -default"></i> <i class="dsicon-holospace-active ds-nav-icon-holospace -active"></i> </a><a class="ds-nav-icon ds-nav-icons"><i class="dsicon-glass ds-nav-icon-glass -default"></i> <i class="dsicon-glass-active ds-nav-icon-glass -active"></i> </a><a class="ds-nav-icon ds-nav-icons"><i class="dsicon-plus-sign ds-nav-icon-plus -default"></i> <i class="dsicon-plus-sign-active ds-nav-icon-plus -active"></i> </a><a class="ds-nav-icon ds-nav-icons"><i class="dsicon-notification ds-nav-icon-notification -default"></i> <i class="dsicon-notification-active ds-nav-icon-notification -active"></i></a><div class="ds-nav-thumb ds-nav-icons" style="background-image: url(\'https://avatars0.githubusercontent.com/u/19292452?v=3&s=460\')"></div></nav>'), e.put('public/modules/ds/password/templates/password.html', '<div class="ds-password"><ds-input ds-autofocus="dsAutofocus" tabindex="{{ tabindex }}" ng-model="ngModel" change="ngChange && ngChange()" params="params" validate="validate" type="password" label="{{ label }}" placeholder="{{ placeholder }}" required></ds-input><span class="ds-password-strength"><div ng-show="!level || ngModel.length <= 1" class="ds-password__strength-container"><img src="{{$root.cdnBaseUrl}}/images/sprite/pass-default.svg" alt="password"> <span class="weak"></span></div><div ng-show="level === 1 && ngModel.length > 1" class="ds-password__strength-container"><img src="{{$root.cdnBaseUrl}}/images/sprite/pass-level-1.svg" alt="password"> <span class="weak">Too weak</span></div><div ng-show="level === 2" class="ds-password__strength-container"><img src="{{$root.cdnBaseUrl}}/images/sprite/pass-level-2.svg" alt="password"> <span class="weak">Too weak</span></div><div ng-show="level === 3" class="ds-password__strength-container"><img src="{{$root.cdnBaseUrl}}/images/sprite/pass-level-4.svg" alt="password"> <span class="good">Still weak</span></div><div ng-show="level === 4 && ngModel.length <= 8" class="ds-password__strength-container"><img src="{{$root.cdnBaseUrl}}/images/sprite/pass-level-5.svg" alt="password"> <span class="strong">Strong</span></div><div ng-show="level === 4 && ngModel.length > 8" class="ds-password__strength-container"><img src="{{$root.cdnBaseUrl}}/images/sprite/pass-level-6.svg" alt="password"> <span class="strong">Strong</span></div></span></div>'), e.put('public/modules/ds/player/templates/player.html', '<div class="ds-player"><div ng-attr-id="{{id}}"></div><i ng-if="data.content.embedded.status === \'published\'" class="ds-player-share dsicon-share" ng-click="share(data)" ng-class="{ \'ds-player-share--visible\': show.share }" ng-if="!editing"></i></div>'), e.put('public/modules/ds/post-text/templates/post.text.html', '<div class="ds-post-text"><h1 class="ds-post-text-title" ng-if="!isPost">{{ data.content.title }}</h1><p class="ds-post-text-subtitle" ng-if="showText"><span ng-bind-html="text | escapeHTML | mentions : data.v2.header.links"></span></p></div>'), e.put('public/modules/ds/product-listing/templates/listing.html', '<section class="ds-product-listing" ng-show="items.length > 0"><ds-title title="\'More from this seller\'"></ds-title><div class="ds-product-listing-container"><a ui-sref="item.detail({ space: item.header.space.vanityUrl, vanityUrl: item.vanityUrl })" class="ds-product-listing-item" ng-repeat="item in items"><div class="ds-product-listing-wrapper" ng-if="item.cover.url"><img ng-src="{{ item.cover | processImage : 150 }}" alt="{{ item.body.name }}" class="ds-product-listing-image"></div><h4 class="ds-product-listing-name">{{ item.body.name }}</h4><ds-rating level="item.body.rating"></ds-rating><span class="ds-product-listing-no-rating" ng-if="item.body.rating == null">No rating</span><div class="ds-product-listing-amount"><em class="ds-product-listing-price" ng-show="item.body.item.pricingModel !== \'offer\'">{{ item.body.item.free || item.body.item.finalPrice == 0 ? \'Free\' : (item.body.item.finalPrice | currency) }} </em><em class="ds-product-listing-price offer-banner" ng-show="item.body.item.pricingModel === \'offer\'"><make-offer-banner title="Make an offer" size="\'small\'"></make-offer-banner></em><div ng-if="item.body.item.discount"><s class="ds-product-listing-old-price">{{ item.body.item.price | currency }}</s> <small class="ds-product-listing-discount">{{ item.body.item.discount }}% OFF</small></div></div></a></div></section>'), e.put('public/modules/ds/rating/templates/rating.html', '<div class="ds-rating" ng-show="level != null || editable || forceVisibility" ng-class="{ \'ds-rating--editable\': editable }"><input ng-repeat-start="star in stars" type="radio" name="{{::$parent.$id}}--rating" id="{{ star.id }}" ng-model="$parent.level" ng-value="star.value"><div ng-repeat-end="star in stars" class="ds-rating-star-container"><label class="ds-rating-star dsicon-star-empty" for="{{ star.id }}"></label><label class="ds-rating-star dsicon-star-filled" for="{{ star.id }}"></label></div></div>'), e.put('public/modules/ds/recommendations/templates/ds.recommendations.html', '<section class="ds-recommendations"><div class="ds-recommendations-container"><div class="ds-recommendations-header"><em class="ds-recommendations-title">Popular Holospaces </em><i class="ds-recommendations-close dsicon-close" ng-click="close()"></i></div><div class="swiper-button-prev"></div><div class="swiper-button-next"></div><div class="ds-recommendations-swiper-container"><div class="ds-recommendations-swiper-wrapper swiper-wrapper"><div class="swiper-slide ds-recommendations-swiper-slide" ng-repeat="space in spaces track by $index"><div class="ds-recommendations-card"><a ui-sref="holospace.home({ holospaceName: space.vanityUrl })"><div class="ds-recommendations-avatar"><ds-avatar avatar="space.photo" class="ds-mentions-avatar" resize="200" size="90"></ds-avatar></div><div class="ds-recommendations-name"><ds-space-name space="space" view-name="space.name"></ds-space-name><div class="ds-recommendations-followed-by">@{{ space.vanityUrl }}</div></div></a><div class="ds-recommendations-follow"><ds-holospace-follow is-follow="true" data="space"></ds-holospace-follow></div></div></div></div></div></div></section>'), e.put('public/modules/ds/search/templates/search.html', '<div class="ds-search"><ds-input ng-model="ngModel" change="ngChange && ngChange()" type="text" params="params" id="search" placeholder="{{ placeholder }}"></ds-input></div>'), e.put('public/modules/ds/seo/templates/seo.html', '<div class="ds-seo" ng-class="{ \'ds-seo--editing\': state.editing }" style="height: {{ style.height }}px"><div class="ds-seo-inactive ds-seo-container"><div class="ds-seo-edit" ng-click="edit(true)">Edit</div><article class="ds-seo-title">{{ data.meta.title || data.name || \'A Good Title Can Show Up in Search Results\' }}</article><article class="ds-seo-link">{{ link || \'https://www.holonis.com/your-holospace-title\' }}</article><article class="ds-seo-description">{{ data.meta.description || data.description || data.information && data.information.tagline || \'When you type something into Google, this is what shows up in the search results. It comes form your title and description, or the information created on your page.\'}}</article></div><div class="ds-seo-active ds-seo-container"><div class="ds-seo-edit ds-seo-save" ng-click="state.save && save()" ng-class="{ \'ds-seo-save--disabled\': !state.save }">Save</div><ds-text label="Search title" placeholder="Type a search title" ng-click="focus($event)" ng-model="draft.title" tabindex="1"></ds-text><ds-text label="Search description" placeholder="Add a search description" ng-click="focus($event)" ng-model="draft.description" tabindex="1"></ds-text></div></div>'), e.put('public/modules/ds/share/templates/facebook-share-warning.modal.html', '<div class="facebook-share-modal-warning"><h1>Just one more step!</h1><p>Sharing to your Facebook profile requires a confirmation.</p><button ng-click="close()">Ok, proceed</button></div>'), e.put('public/modules/ds/share/templates/share.channel.template.html', '<div class="ds-share-channel"><div class="loaderInline isFeedback" ng-if="!state.loaded"></div><div ng-if="state.loaded && content.channels.length > 0" class="ds-share-channel-wrapper"><ds-title title="\'Share to your channel\'"></ds-title><ds-select class="ds-select-input" active="state.opened" placeholder="Add this page to a channel" text="model.text" class="ds-select-input" no-options="true" required></ds-select><div class="ds-share-channel-container" ng-class="{ \'ds-share-container--visible\': state.opened, \'ds-share-container--loaded\': state.loaded }"><div class="ds-share-swiper-wrapper"><div class="swiper-container ds-share-swiper"><div class="swiper-wrapper ds-share-swiper-container"><div class="swiper-slide ds-share-swiper-slide" ng-repeat="channel in content.channels track by $index" ng-click="toggleChannel($index)" ng-class="{ \'ds-share-swiper-slide--selected\': channel.selected }"><div class="ds-share-swiper-slide-content"><em class="ds-share-swiper-slide-title">{{ channel.body.name }}</em> <em class="ds-share-swiper-slide-description">{{ channel.body.description }}</em></div><div class="ds-share-swiper-mask dsicon-check"></div></div></div></div><div class="swiper-button-next top-position swiper-button-next-{{ data.id }}"></div><div class="swiper-button-prev top-position swiper-button-prev-{{ data.id }}"></div></div></div></div></div>'), e.put('public/modules/ds/share/templates/share.template.html', '<div class="ds-share" ng-class="{ \'ds-share--loaded\': accounts.length > 0 }"><div class="ds-share-container"><div class="ds-share-loader" ng-if="!providersLoaded"><div class="loaderInline"></div></div><div class="ds-share-buttons" ng-if="!$root.state.activeSpace.isPrivate"><div aria-role="button" social="facebook" name="button" ng-click="toggleNetwork($event)" class="ds-share-buttons-button ds-button-social" ng-if="providersLoaded && (providers.facebook.length > 0 || expiredProviders.facebook)"><i class="hicon-facebook ds-button-social-icon"></i> <span class="ds-button-social-text">Facebook</span></div><div aria-role="button" social="twitter" name="button" ng-click="toggleNetwork($event)" class="ds-share-buttons-button ds-button-social" ng-if="providersLoaded && providers.twitter.length > 0"><i class="hicon-twitter ds-button-social-icon"></i> <span class="ds-button-social-text">Twitter</span></div></div><div class="ds-share-accounts" ng-show="accounts.length > 0" ng-class="{ \'ds-share-accounts--visible\': accounts.length > 0 }"><div class="ds-select-all" ng-if="hasSelectAll" ng-class="{ \'ds-select-all--deselect\': hasSelected }" ng-click="toggleSelect()"><div class="ds-share-thumb"><i class="dsicon-check ds-select-all-check"></i></div><div class="ds-share-name"><span ng-if="hasSelected">Deselect all</span> <span ng-if="!hasSelected">Select all</span></div></div><div class="ds-share-account" ng-repeat="account in accounts" ng-click="toggleAccount($event)" ng-class="{ \'ds-share-account--checked\': account.selected }"><div class="ds-share-thumb" style="background-image: url(\'{{account.picture}}\')"><i class="dsicon-check ds-share-check"></i></div><div class="ds-share-name {{account.type}} {{account.selected}}">{{account.displayName | cut:true:10: "..."}}</div></div></div><div class="ds-share-networks animate-if" ng-class="{ \'ds-share-networks--hidden\': accounts.length > 0, \'ds-share-networks--no-accounts\': noSocial }" ng-show="providersLoaded"><img ng-src="{{$root.cdnBaseUrl}}/images/share.png" alt="Many social networks logos"><h4 class="ds-share-networks-title">Social Networks</h4><p class="ds-share-networks-tagline" ng-if="$root.state.activeSpace.isPrivate">This Holospace is private<br>Content sharing is currently deactivated</p><p class="ds-share-networks-tagline" ng-if="noSocial === false && !$root.state.activeSpace.isPrivate">Share this content with everyone<br>on your social media</p><p class="ds-share-networks-tagline" ng-if="noSocial === true && !$root.state.activeSpace.isPrivate"><a ng-click="goToApps()">Connect your apps and start<br>sharing this content</a></p></div></div></div>'), e.put('public/modules/ds/show-hide/templates/show.hide.html', '<div class="ds-show-hide"><ds-checkbox name="{{ name }}" label="{{ label }}" ng-model="ngModel" ng-hide="noCheckbox"></ds-checkbox><div class="ds-show-hide-container" ng-transclude ng-if="ngModel"></div></div>'), e.put('public/modules/ds/story/templates/story-view.html', '<section class="ds-story"><div class="ds-view-container ds-product-stripe-wrapper"><div class="ds-story ds-story-view"><div class="stories-content"></div></div></div></section>'), e.put('public/modules/ds/story/templates/story.html', '<section class="ds-story-main"><div class="ds-view-container ds-product-stripe-wrapper" id="intro-about"><div class="ds-product-story" ng-show="!state.addContent"><ds-add label="Add new story" caption="{{ showTitle || type + \' Story\' }}" description="Use the + button to create stories about your {{ type }}" src="{{ $root.cdnBaseUrl + \'/images/story.png\' }}" action="addContent()"></ds-add></div><div class="ds-story content-creation" ng-show="state.addContent"><ds-title title="\'Stories\'"></ds-title><div class="stories-main"><div class="story-actions-main"><a class="story-action story-action-add ds-add-action-circle"><i class="dsicon dsicon-plus-sign-active"></i></a><div class="story-actions"><span class="story-action ds-add-action-circle" type="image"><i class="dsicon dsicon-image-ico"></i> <small class="story-action-label">Image</small> </span><span class="story-action ds-add-action-circle"><label for="story-video-uploader"><i class="dsicon dsicon-video-ico"></i></label><small class="story-action-label">Video</small> </span><span class="story-action ds-add-action-circle" type="embed"><i class="dsicon dsicon-embed-ico"></i> <small class="story-action-label">Embed</small> </span><span ng-show="hasCreateFormAction" class="story-action ds-add-action-circle" type="form"><svg-icon icon="forms" class="forms-icon"></svg-icon><small class="story-action-label">Form</small> </span><span ng-show="hasCreateAdAction" class="story-action ds-add-action-circle" type="ad"><svg-icon icon="tag-price" class="forms-icon"></svg-icon><small class="story-action-label">Ad</small> </span><input id="story-video-uploader" type="file" class="story-filepicker" accept="video/mp4,video/x-m4v,video/*" file-picker></div></div><textarea class="stories-content"></textarea></div></div></div></section>'), e.put('public/modules/ds/tags/templates/tags.html', '<div class="ds-tags"><div class="ds-form-wrapper"><label for="{{ id }}" ng-if="label" class="ds-input-label" ng-class="{ \'ds-input-label--disabled\': disabled }">{{ label }}</label><div class="ds-input-container"><div class="ds-tags-container"><div class="ds-tags-item" ng-repeat="tag in model track by $index"><span class="ds-tags-text">{{ tag | cut:true:34: " ..." }} </span><i class="ds-tags-close dsicon-close" ng-click="remove($event)"></i></div><input type="{{ type }}" id="{{ id }}" name="{{ name }}" placeholder="{{ untouched ? placeholder : \'\' }}" class="ds-input" ng-keyup="change($event)" ng-class="{ \'ds-input--big\': big, \'ds-tag-input--full\': !model.length }" ng-model="currentValue"></div><span ng-if="!disabled && error" class="ds-input-error-message">This field is required</span></div></div></div>'), e.put('public/modules/ds/space-name/templates/space.name.html', '<a class="ds-space-name" ui-sref="holospace.home({holospaceName: space.vanityUrl})" ng-show="space || viewName"><div class="ds-space-name-container"><em class="ds-space-name-text" ng-if="!isHeading">{{ viewName || space.name }}</em><h1 class="ds-space-name-text fill-max-width" ng-if="isHeading">{{ viewName || space.name }}</h1><div ng-if="space.isVerified" class="ds-space-name-icon-container" title="Verified Holospace.&#10;Holonis confirmed this is an authentic account for this person, business, public figure, influencer or brand."><img ng-src="{{ space.badges[0].icon}}.svg" class="ds-space-name-verified icon" alt="{{ space.badges[0].title }}"></div></div></a>'), e.put('public/modules/ds/tile-header/templates/tile.header.html', '<div class="ds-tile-header" ng-class="{ \'--no-refer\': norefer }"><ds-avatar class="ds-tile-header-thumb" href="href" avatar="picture" resize="50" size="36"></ds-avatar><div class="ds-tile-header-author"><a class="ds-tile-header-name" ui-sref="holospace.home({ holospaceName: data.header.author.vanityUrl || data.createdBy.vanityUrl })"><ds-space-name space="data.header.author || data.createdBy"></ds-space-name></a><em class="ds-tile-header-tagline"><span><span>{{data.typeLabel || data.type || data.provider}}</span> - {{(data.created || data.modified) | amTimeAgo}}</span></em></div></div>'), e.put('public/modules/ds/title/templates/title.html', '<h3 class="ds-title">{{ title }}</h3>'), e.put('public/modules/ds/tooltip/templates/tooltip.template.html', '<div class="ds-tooltip" ng-show="visible" ng-class="{ \'ds-tooltip--no-padding\': noPadding, \'ds-tooltip--has-header\': fullscreenMobile }"><div class="ds-tooltip-arrow" ng-class="{ \'ds-tooltip-arrow--centered\': centered }" ng-show="!noArrow"></div><div class="ds-tooltip-container"><div class="ds-tooltip-wrapper"><div class="ds-tooltip-content" ng-hide="!loaded"></div></div></div></div>'), e.put('public/modules/ds/user-selection/templates/tooltip.html', '<div class="ds-user-tooltip"><ds-header class="ds-tooltip-header" center-title="Creating as" left-title="Close" left-action="close()"></ds-header><div class="ds-user-tooltip-header">Creating for</div><ul class="ds-user-tooltip-list"><li class="ds-user-tooltip-list__item" ng-repeat="space in content.spaces" ng-class="{ \'ds-user-tooltip--selected\': space.active }" ng-click="toggleSpace(space.id, space.accessLevel)"><div class="ds-user-tooltip-list__item-space"><div class="ds-user-tooltip-list__item-space-avatar"><ds-avatar avatar="space.photo" class="ds-user-thumb__img" size="28"></ds-avatar></div><div class="ds-user-tooltip-list__item-space-text"><em class="ds-user-tooltip-name">{{ space.name }} </em><span class="ds-user-tooltip-tagline">{{ space.accessLevel }}</span></div></div><div class="ds-user-tooltip-check"><i class="dsicon-check ds-user-tooltip-check__icon"></i></div></li></ul></div>'), e.put('public/modules/ds/user-selection/templates/user.html', '<div class="ds-user"><div class="ds-user-thumb"><ds-avatar src="data.active.profilePhoto" class="ds-user-thumb__img" resize="50" size="28"></ds-avatar></div><div class="ds-user-info"><em class="ds-user-name">{{ data.active.name }} </em><span class="ds-user-tagline">{{ data.active.accessLevel }}</span></div><ds-karot type="\'user-selection\'" content="data" ng-if="!disabled"></ds-karot></div>'), e.put('public/modules/ds/variants/templates/add.html', '<div class="ds-variants-add"><ds-input ng-model="newVariant.name" type="text" id="variantname" error="state.error" params="{ errorMessage: \'You can\\\'t repeat a variant name.\' }" label="Variant name" placeholder="e.g. color, size, style, material" required></ds-input><ds-tags model="newVariant.values" current-value="state.currentVariant" type="text" id="varianttag" label="Option values" placeholder="e.g. Blue (hit Enter to add more)" required></ds-tags><ds-input-group><a class="ds-button-delete ds-variants-add-save" type="button" ng-click="delete()" ng-if="isEdit">Delete </a><a class="ds-button-seemore ds-variants-add-save" type="button" ng-click="add()">Save</a></ds-input-group></div>'), e.put('public/modules/ds/variants/templates/variants.html', '<section class="ds-variants"><a class="ds-button-seemore ds-variants-addbutton" type="button" ng-click="add()" ng-show="!data.item.variantOptions || data.item.variantOptions.length < 3">Add variant</a><table class="ds-variants-table"><thead class="ds-variants-head"><tr class="ds-variants-row"><th class="ds-variants-cell ds-variants-cell--header"></th><th class="ds-variants-cell ds-variants-cell--header">SKU / ID</th><th class="ds-variants-cell ds-variants-cell--header">Pricing</th><th class="ds-variants-cell ds-variants-cell--header">Quantity</th><th class="ds-variants-cell ds-variants-cell--header ds-variants-cell--editable" ng-repeat="variantOption in data.item.variantOptions track by $index" ng-click="edit($index)"><span class="ds-variants-cell-text">{{ variantOption.name }}</span></th><th class="ds-variants-cell ds-variants-cell--header ds-variants-spacer" ng-if="!data.item.variantOptions || data.item.variantOptions.length < 3"></th></tr></thead><tbody class="ds-variants-body"><tr class="ds-variants-row" ng-repeat="variant in data.item.variants track by $index" ng-class="{ \'ds-variants-row--disabled\': !variant.enabled }"><td class="ds-variants-cell"><div class="ds-variants-cell-container"><div class="ds-variants-bg"></div><ds-checkbox ng-model="variant.enabled" change="change($index)"></ds-checkbox></div></td><td class="ds-variants-cell"><div class="ds-variants-cell-container"><span class="ds-variants-cell-text">{{ variant.sku }}</span></div></td><td class="ds-variants-cell"><div class="ds-variants-cell-container"><ds-input validate="$validators.item.variants[$index].price" maxlength="10" ng-model="variant.price" change="change($index)" type="tel" id="price-variants" params="{ mask: { currency: true } }" placeholder="$" required></ds-input></div></td><td class="ds-variants-cell"><div class="ds-variants-cell-container"><ds-input validate="$validators.item.variants[$index].quantity" ng-model="variant.quantity" change="change($index)" type="tel" id="quantity-variants" params="{ mask: { custom: \'9?9?9\', placeholder: \'   \' } }" placeholder="#" required></ds-input></div></td><td class="ds-variants-cell" ng-repeat="value in variant.values track by $index"><div class="ds-variants-cell-container"><span class="ds-variants-cell-text">{{ value }}</span><div class="ds-variants-bg"></div></div></td><td class="ds-variants-cell ds-variants-cell--header ds-variants-spacer" ng-if="!data.item.variantOptions || data.item.variantOptions.length < 3"><div class="ds-variants-cell-container"><div class="ds-variants-bg"></div></div></td></tr></tbody></table></section>'), e.put('public/modules/ds/video-uploader/templates/ds.video.modal.html', '<div><style type="text/css">.video-upload-wrapper {position:relative; width:583px;}\n    .video-upload-wrapper.selected {border-radius:7px; overflow:hidden;}\n    .video-upload-wrapper.selected:before {position:absolute; top:0; left:0; right:0; bottom:0; border:5px solid #4A90E2; border-radius:7px; content:\'\'; z-index:1; pointer-events:none;}\n    .video-upload-wrapper .video-upload-box {position:relative; width:583px; height:390px; background-size:cover; background-color:#000;}\n    .video-upload-wrapper .video-upload-loader {position:absolute; width:84px; height:84px; top:50%; left:50%; transform:translate3d(-50%, -50%, 0);}\n    .video-upload-wrapper .video-upload-loader:before {position:absolute; width:84px; height:84px; top:0; left:0; border:4px solid rgba(255, 255, 255, 0.2); content:\'\'; box-sizing:border-box; border-radius:100%;}\n    .video-upload-wrapper .video-upload-play {}\n    .video-upload-wrapper .video-upload-form {}</style><div class="video-upload-wrapper selected"><div id="video-upload-box" class="video-upload-box" ng-style="{\'background-image\':\'url(\' + vm.file.info.thumb + \')\'}"><div id="video-upload-loader" class="video-upload-loader">{{vm.file.upload.message}} {{vm.file.upload.progress}}</div><div class="video-upload-play"></div></div><form class="video-upload-form"><label><input type="text" name="" placeholder="Type a title for the video" ng-model="vm.videoTitle"></label><label><input type="text" name="" placeholder="Add a description" ng-model="vm.videoDescription"></label><button ng-show="vm.file.modelSaved" ng-click="vm.save()">add</button></form></div></div>'), e.put('public/modules/ds/video-uploader/templates/ds.video.progress.html', '<div class="video-upload-loader"></div>'), e.put('public/modules/ds/video-uploader/templates/ds.video.uploader.html', '<div><input type="file" id="filepicker" accept="video/mp4,video/x-m4v,video/*" file-picker></div>'), e.put('public/modules/insights/templates/modal/item.template.html', '<div><ds-select class="ds-select-combo publication-time-select" ng-model="time.selected" ng-change="changeChart()" options="time.select.options" params="value,name" required></ds-select><div class="insights-chart"><div class="insights-chart-group active"><ul class="insights-chart-tabs"><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Sold units</span> <span class="insights-chart-tabs-total">{{ data.totals.ordersQuantitySold | abbreviateNumber }}</span></a></li><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Net Revenue</span> <span class="insights-chart-tabs-total">{{ data.totals.ordersNetRevenue | currency }}</span></a></li><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Rating</span> <span class="insights-chart-tabs-total" ng-if="!data.rating">None</span><ds-rating level="data.rating"></ds-rating></a></li><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Views</span> <span class="insights-chart-tabs-total">{{ data.totals.viewsNew | abbreviateNumber }}</span></a></li></ul></div></div><div class="insights-publication-detail-tile-wrapper" ng-class="{ \'insights-publication-detail-tile-loading\': !tile && !state.loaded, \'insights-publication-detail-tile-has-error\': state.loaded && state.error }"><div class="loaderInline"></div><tile ng-if="tile" data="tile"></tile><em class="insights-publication-detail-tile-error">Couldn\'t fetch item data.</em></div></div>'), e.put('public/modules/insights/templates/modal/publication.template.html', '<div><ds-select class="ds-select-combo publication-time-select" ng-model="time.selected" ng-change="changeChart()" options="time.select.options" params="value,name" required></ds-select><div class="insights-chart"><div class="insights-chart-group active"><ul class="insights-chart-tabs"><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Likes</span> <span class="insights-chart-tabs-total">{{ data.likes | abbreviateNumber }}</span><!-- <span class="insights-chart-tabs-comparison"><strong>TODO</strong> WoW</span> --></a></li><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Comments</span> <span class="insights-chart-tabs-total">{{ data.comments | abbreviateNumber }}</span><!-- <span class="insights-chart-tabs-comparison"><strong>TODO</strong> WoW</span> --></a></li><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Shares</span> <span class="insights-chart-tabs-total">{{ data.shares | abbreviateNumber }}</span><!-- <span class="insights-chart-tabs-comparison"><strong>TODO</strong> WoW</span> --></a></li><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Views</span> <span class="insights-chart-tabs-total">{{ data.views | abbreviateNumber }}</span><!-- <span class="insights-chart-tabs-comparison"><strong>TODO</strong> WoW</span> --></a></li></ul></div></div><div class="insights-publication-detail-tile-wrapper" ng-class="{ \'insights-publication-detail-tile-loading\': !tile && !state.loaded, \'insights-publication-detail-tile-has-error\': state.loaded && state.error }"><div class="loaderInline"></div><tile ng-if="tile" data="tile"></tile><em class="insights-publication-detail-tile-error">Couldn\'t fetch publication data.</em></div></div>'), e.put('public/modules/insights/templates/modal/video.template.html', '<div><div class="insights-chart"><div class="insights-chart-group active"><ul class="insights-chart-tabs"><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Total Views</span> <span class="insights-chart-tabs-total">{{ data.views | abbreviateNumber }}</span><!-- <span class="insights-chart-tabs-comparison"><strong>TODO</strong> WoW</span> --></a></li><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Min Viewed</span> <span class="insights-chart-tabs-total">{{ data.totalWatched | millisecondsToMinutes }}</span><!-- <span class="insights-chart-tabs-comparison"><strong>TODO</strong> WoW</span> --></a></li><li><a class="insights-chart-tab active cursor-default"><span class="insights-chart-tabs-type">Avg Watch Time</span> <span class="insights-chart-tabs-total">{{ data.averageTime | millisecondsToHours }}</span><!-- <span class="insights-chart-tabs-comparison"><strong>TODO</strong> WoW</span> --></a></li></ul></div></div><div class="insights-publication-detail-tile-wrapper" ng-class="{ \'insights-publication-detail-tile-loading\': !tile && !state.loaded, \'insights-publication-detail-tile-has-error\': state.loaded && state.error }"><div class="loaderInline"></div><tile ng-if="tile" data="tile"></tile><em class="insights-publication-detail-tile-error">Couldn\'t fetch publication data.</em></div></div>'), e.put('public/modules/shop/templates/modal/checkout.template.html', '<div class="checkout-signin-container" ng-if="isLoggedOut() && main.step === \'checkout\'"><img src="{{$root.cdnBaseUrl}}/images/already-member-desktop.png" class="blue-banner" alt="blue banner"><div class="checkout-signin-container__header"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/holonis-white-logo.svg" alt="Holonis Logo"><h1>Already a member?</h1><a href="#" ng-click="Authentication.showSignupPrompt();saveProductUrl()" class="ds-btn ds-btn--white ds-btn--big">Sign in</a></div></div><div class="checkout-signin-container" ng-if="isLoggedOut() && main.step === \'confirmation\'"><img src="{{$root.cdnBaseUrl}}/images/already-member-desktop.png" class="blue-banner" alt="blue banner"><div class="checkout-signin-container__header"><img ng-src="{{$root.cdnBaseUrl}}/images/sprite/holonis-white-logo.svg" class="confirmation-img" alt="Holonis Logo"><div class="checkout-signin-container__text"><h1>{{ isRegisteredEmail ? \'We found your account\' : \'Now be found\' }}</h1><p class="confirmation-text">{{ isRegisteredEmail ? \'Sign in to your account to more easily manage your purchase and communicate with sellers\' : \'Make your checkout experience faster next time and enjoy all that Holonis has to offer.\'}}</p></div><a href="#" ng-click="Authentication.showSignupPrompt()" ng-if="!isRegisteredEmail" class="ds-btn ds-btn--white ds-btn--big uppercase confirmation">Sign up now</a> <a href="#" ng-click="registeredUserSignIn()" ng-if="isRegisteredEmail" class="ds-btn ds-btn--white ds-btn--md uppercase confirmation">Sign in now</a></div></div><div class="ds-checkout-container"><h2 ng-if="!isLoggedOut()">{{ main.title }}</h2><a class="ds-checkout-back" ng-click="back();state.showCardInfo = false" ng-if="main.hasBackButton()"><svg-icon icon="chevron-left" class="space-icon"></svg-icon></a><div class="ds-checkout-steps"><div class="ds-checkout-main ds-checkout-main-loader" ng-if="main.step === \'loading\'"><div class="loaderInline"></div></div><form class="ds-checkout-main" ng-class="{\'mobile-visitor\' : isLoggedOut()}" ng-if="main.step === \'checkout\'" ng-submit="review()"><div ng-show="step.checkout.instructions.visible"><h3 class="ds-form-title">{{ step.checkout.instructions.editTitle }}</h3><div class="ds-form-field"><ds-text params="main.inputs.instructions" change="validate(\'instructions\')" ng-model="data.instructions" id="checkout-instructions" label="Instructions for the content of the video" placeholder="My dad Cliff is your superfan and I want him to know I love him very much on Father\u2019s Day." validate="$validators.instructions" max-characters="500"></ds-text></div></div><div ng-show="step.checkout.info.visible"><h3 class="ds-form-title">{{ step.checkout.edit ? step.checkout.info.editTitle : step.checkout.info.title }}</h3><div class="ds-form-field"><ds-input params="main.inputs.name" change="validate(\'name\')" ng-model="data.name" type="text" id="checkout-name" label="Full Name" validate="$validators.name" ds-autofocus="true" maxlength="200"></ds-input><ds-input params="main.inputs.company" change="validate(\'company\')" ng-model="data.company" type="text" id="checkout-company" label="Company Name" placeholder="optional" validate="$validators.company" maxlength="200"></ds-input><ds-input params="main.inputs.email" change="validate(\'email\')" ng-model="data.email" type="email" id="checkout-email" label="Email" placeholder="Used for communications with the seller" validate="$validators.email" required ds-autofocus="true"></ds-input><ds-input params="main.inputs.address1" change="validate(\'address1\')" ng-model="data.address1" type="text" id="checkout-address1" label="Street Address" validate="$validators.address1" maxlength="200"></ds-input><ds-input params="main.inputs.address2" change="validate(\'address2\')" ng-model="data.address2" type="text" id="checkout-address2" label="Apt / Suite / Other " validate="$validators.address2" maxlength="200"></ds-input><ds-input-group><ds-input class="ds-input-50" params="main.inputs.postCode" change="validate(\'postCode\')" ng-model="data.postCode" type="text" id="checkout-zip" label="Zip Code" placeholder="Enter 5 Digit Zip Code" validate="$validators.postCode" maxlength="5"></ds-input><ds-input params="main.inputs.city" change="validate(\'city\')" ng-model="data.city" type="text" id="checkout-city" label="City" placeholder="City" validate="$validators.city" maxlength="100"></ds-input></ds-input-group><span class="ds-select-error-message ds-input-error-message ds-input-error-message--required ng-binding ng-scope" ng-if="$validators.country == \'required\' && stripePaymentMethod">This field is required</span><ds-select id="checkout-state" change="validate(\'region\')" ng-model="data.region" options="states" params="id,state" label="State" placeholder="Select your state" required></ds-select><span class="ds-select-error-message ds-input-error-message ds-input-error-message--required ng-binding ng-scope" ng-if="$validators.region == \'required\'">This field is required</span><ds-input params="main.inputs.phone" change="validate(\'phone\')" ng-model="data.phone" type="text" id="checkout-phone" label="Phone" placeholder="( 555 ) 555 - 55555" validate="$validators.phone"></ds-input><ds-checkbox label="Use this as my billing address" ng-model="data.useAsBillingAddress" ng-if="stripePaymentMethod"></ds-checkbox></div></div><div ng-if="step.checkout.payment.visible && !main.isFree"><h3 class="ds-form-title">{{ step.checkout.edit ? step.checkout.payment.editTitle : step.checkout.payment.title }}</h3><div class="ds-form-field"><div class="ds-checkbox-group"><span ng-repeat="(key, method) in main.paymentMethods"><ds-radio name="method" ng-value="key" label="{{ method.name }}" description="{{ method.description }}" ng-model="data.paymentMethod"></ds-radio></span></div><span class="ds-input-error-message ds-input-error-message--required ds-input-error-message--custom-required" ng-if="$validators.paymentMethod == \'required\'">Payment method is required.</span></div></div><div ng-if="step.checkout.cc.visible && !main.isFree"><h3 class="ds-form-title">{{ step.checkout.edit ? step.checkout.cc.editTitle : step.checkout.cc.title }}</h3><a class="edit-card" ng-click="state.showCardInfo = true" ng-if="step.checkout.edit"><ds-input ng-if="!state.showCardInfo" params="inputs.ccNumber" blur="blurCCNumber()" change="onInputChange(\'ccNumber\')" ng-model="data.ccNumber" type="text" id="checkout-cc-number" label="Card Number" validate="$validators.ccNumber" placeholder="{{ data.ccNumberAbbr || \'your card number\' }}" maxlength="19" class="card-placeholder"></ds-input></a><ds-stripe-form ng-if="!step.checkout.edit" parent-form="form" data="data" bypass-validation="ccByPass" validators="$validators"></ds-stripe-form><ds-stripe-form ng-if="step.checkout.edit && state.showCardInfo" parent-form="form" data="data" bypass-validation="ccByPass" validators="$validators"></ds-stripe-form></div><div ng-if="step.checkout.delivery.visible && main.deliveryOptions.length"><h3 class="ds-form-title">{{ step.checkout.delivery.title }}</h3><div class="ds-form-field"><div class="ds-checkbox-group" ng-if="main.deliveryOptions.length > 1"><ds-radio name="delivery" ng-value="option.id" label="{{ option.label }}" description="{{ option.description }}" ng-model="data.delivery" ng-repeat="option in main.deliveryOptions"></ds-radio></div><div class="ds-shop-checkout-single-shipping" ng-if="main.deliveryOptions.length === 1"><span>{{ main.deliveryOptions[0].label }}</span> <small>{{ main.deliveryOptions[0].description }}</small></div><span class="ds-input-error-message ds-input-error-message--required ds-input-error-message--custom-required" ng-if="$validators.delivery == \'custom\'">Delivery method is required.</span></div></div><div ng-if="step.checkout.cc.visible && main.isFree && !main.isShippingFree"><h3 class="ds-form-title">{{ step.checkout.edit ? step.checkout.cc.editFreeTitle : step.checkout.cc.freeTitle }}</h3><ds-stripe-form parent-form="form" data="data" bypass-validation="ccIsValid" validators="$validators"></ds-stripe-form></div><div ng-if="step.checkout.payment.visible && main.isFree && !main.isShippingFree"><h3 class="ds-form-title">{{ step.checkout.edit ? step.checkout.payment.editFreeTitle : step.checkout.payment.freeTitle }}</h3><div class="ds-form-field"><div class="ds-checkbox-group"><span ng-repeat="(key, method) in main.paymentMethods"><ds-radio name="method" ng-value="key" label="{{ method.name }}" description="{{ method.description }}" ng-model="data.paymentMethod"></ds-radio></span></div><span class="ds-input-error-message ds-input-error-message--required ds-input-error-message--custom-required" ng-if="$validators.paymentMethod == \'required\'">Payment method is required.</span></div></div><button class="clearfix ds-button ds-button-primary ds-button-big ds-checkout-submit" ng-click="emailExists()" type="submit">{{ step.checkout.edit ? step.checkout.editButton : step.checkout.button }}</button></form><div class="ds-checkout-main ds-checkout-review" ng-if="main.step === \'review\'"><h3 class="ds-form-title">{{ state.summaryTitle }}</h3><div class="ds-shop-checkout-item"><div class="ds-shop-checkout-image"><img ng-src="{{ tile.cover | processImage : 400 }}" alt="{{ tile.body.name }}"></div><div class="ds-shop-checkout-data"><h3 class="ds-shop-checkout-item-title" ng-if="!state.isVideoService">{{ state.itemName | cut : true : 120 : \'...\' }}</h3><h3 class="ds-shop-checkout-item-title" ng-if="state.isVideoService">Video service from {{ tile.header.space.name | cut : true : 40 }} to {{ data.name | cut : true : 40 }}</h3><ul><li ng-repeat="select in params.selects">{{ select.label }}: <b>{{ params.selected[$index] }}</b></li></ul><ul ng-if="data.isOffer"><li>QTY: <b>1</b></li></ul><p class="ds-shop-checkout-item-price" ng-if="!data.isOffer">{{ params.finalPrice | currency }} <span class="ds-product-price-discount" ng-if="item.discount"><s class="ds-product-price-discount-old">{{ params.price | currency }}</s> <span class="ds-product-price-discount-amount">{{ item.discount }}% OFF</span></span></p><p class="ds-shop-checkout-item-price" ng-if="data.isOffer">{{ params.contract.offer.price.formatted }}</p><div ng-if="!state.isVideoService && !data.isOffer"><hr><div class="ds-shop-checkout-qty"><label>QTY</label><ds-counter model="data.quantity" singular="Item" plural="Items" min="1" max="params.maxQuantity" required></ds-counter></div></div></div></div><div class="ds-shop-review-row ds-shop-review-row-hover" ng-click="edit(\'instructions\')" ng-if="state.isVideoService"><div class="ds-shop-review-label">Instructions</div><div class="ds-shop-review-value ds-shop-review-value-limited">{{ data.instructions | cut : true : 120 : \'...\' }}</div><a class="ds-shop-review-update-arrow"><svg-icon icon="chevron-right" class="space-icon"></svg-icon></a></div><div class="ds-shop-review-row ds-shop-review-row-hover" ng-click="edit(\'payment\')" ng-if="!stripePaymentMethod && (!main.isFree || !main.isShippingFree)"><div class="ds-shop-review-label">Card / Billing</div><div class="ds-shop-review-value">{{ main.paymentMethods[data.paymentMethod].name }}</div><a class="ds-shop-review-update-arrow"><svg-icon icon="chevron-right" class="space-icon"></svg-icon></a></div><div class="ds-shop-review-row ds-shop-review-row-hover" ng-click="edit(\'cc\')" ng-if="stripePaymentMethod && (!main.isFree || !main.isShippingFree)"><div class="ds-shop-review-label">Card / Billing</div><div class="ds-shop-review-value"><span ng-if="data.ccLast4">{{ data.ccProvider }} &bull;&bull;&bull;&bull; {{ data.ccLast4 }}</span></div><a class="ds-shop-review-update-arrow"><svg-icon icon="chevron-right" class="space-icon"></svg-icon></a></div><div class="ds-shop-review-row ds-shop-review-row-hover" ng-click="edit(\'info\')"><div class="ds-shop-review-label">{{ main.onlyContactInfo ? \'Contact Info\' : \'Shipping\' }}</div><div class="ds-shop-review-value ds-shop-review-value-multiline" ng-if="!main.onlyContactInfo"><span>{{ data.name }}</span> <span>{{ data.address1 }} {{ data.address2 }}</span> <span>{{ data.city }}, {{ data.region }} {{ data.postCode }}</span></div><div class="ds-shop-review-value" ng-if="main.onlyContactInfo"><span>{{ data.name }}</span></div><a class="ds-shop-review-update-arrow"><svg-icon icon="chevron-right" class="space-icon"></svg-icon></a></div><div class="ds-shop-review-row ds-shop-review-row-borderless" ng-show="main.deliveryOptions.length"><div class="ds-shop-review-label">{{ data.delivery == \'pickup\' ? \'Local pick up\' : \'Delivery\' }}</div><div class="ds-shop-review-value ds-shop-review-value-checkbox"><div class="ds-checkbox-group" ng-if="main.deliveryOptions.length > 1"><ds-radio name="delivery" ng-value="option.id" label="{{ option.label }}" description="{{ option.description }}" ng-model="data.delivery" ng-repeat="option in main.deliveryOptions"></ds-radio></div><div class="ds-shop-review-single-shipping" ng-if="main.deliveryOptions.length === 1"><span>{{ main.deliveryOptions[0].label }}</span> <small>{{ main.deliveryOptions[0].description }}</small></div></div></div><div class="ds-shop-review-row ds-shop-review-row-borderless" ng-show="state.isVideoService"><div class="ds-shop-review-label">Delivery</div><div class="ds-shop-review-value ds-shop-review-value-checkbox"><div class="ds-shop-review-single-shipping"><span>Delivery via email</span> <small>{{ data.email }}</small></div></div></div><div class="ds-shop-checkout-price" ng-class="{ \'ds-shop-checkout-price-updating\': state.updatingPrice }" ng-show="!isFree()"><div class="ds-shop-checkout-price-summary"><p>Subtotal <span>{{ orderPrice.subtotal | currency }}</span></p><p ng-if="main.hasShippingPrice">Shipping <span>{{ orderPrice.shipping | currency }}</span></p><p ng-if="main.hasDiscount">Discount <span>{{ orderPrice.discount | currency }}</span></p><p>Tax <span>{{ orderPrice.tax | currency }}</span></p></div><div class="ds-shop-checkout-price-total"><p>Order Total <span>{{ orderPrice.total | currency }}</span></p></div></div><p class="ds-shop-checkout-error" ng-if="step.review.messageError">{{ step.review.messageError }}</p><div id="ds-checkout-button-container" ng-show="!stripePaymentMethod && !isFree()"></div><button class="clearfix ds-button ds-button-primary ds-button-big ds-checkout-submit" ng-click="processPayment(data);emailExists()" ng-if="stripePaymentMethod || isFree()" ng-class="{ \'ds-checkout-button-purchasing\': step.review.purchasing }">{{ state.submitText }}</button></div><div class="ds-checkout-main ds-checkout-confirmation" ng-if="main.step === \'confirmation\'"><h3 class="ds-form-title">{{ state.confirmationTitle }}</h3><div class="ds-shop-confirmation-row"><div ng-if="step.confirmation.orderNumber"><small>Your order number is:</small><p class="ds-shop-confirmation-order">{{ step.confirmation.orderNumber }}</p><hr></div><small>An email will be sent to:</small><p>{{ data.email }}</p></div><h3 class="ds-form-title">Your Purchase</h3><div class="ds-shop-checkout-item"><div class="ds-shop-checkout-image"><img ng-src="{{ tile.cover | processImage : 400 }}" alt="{{ tile.body.name }}"></div><div class="ds-shop-checkout-data"><h3 class="ds-shop-checkout-item-title" ng-if="!state.isVideoService">{{ state.itemName | cut : true : 120 : \'...\' }}</h3><h3 class="ds-shop-checkout-item-title" ng-if="state.isVideoService">Video service from {{ tile.header.space.name | cut : true : 40 }} to {{ data.name | cut : true : 40 }}</h3><ul ng-if="!state.isVideoService"><li>QTY: <b>{{data.quantity}}</b></li></ul><ul><li ng-repeat="select in params.selects">{{ select.label }}: <b>{{ params.selected[$index] }}</b></li></ul><p class="ds-shop-checkout-item-price" ng-if="!data.isOffer">{{ orderPrice.price | currency }} <span class="ds-product-price-discount" ng-if="item.discount"><s class="ds-product-price-discount-old">{{ orderPrice.subtotal | currency }}</s> <span class="ds-product-price-discount-amount">{{ item.discount }}% OFF</span></span></p><p class="ds-shop-checkout-item-price" ng-if="data.isOffer">{{ params.contract.offer.price.formatted }}</p></div></div><div ng-show="data.instructions" class="ds-shop-checkout__instructions"><h3>Instructions for the content of the video</h3><p>{{ data.instructions }}</p></div><div class="ds-shop-checkout-price"><div class="ds-shop-checkout-price-summary"><p>Subtotal <span>{{ orderPrice.subtotal | currency }}</span></p><p ng-if="main.hasShippingPrice">Shipping <span>{{ orderPrice.shipping | currency }}</span></p><p ng-if="main.hasDiscount">Discount <span>{{ orderPrice.discount | currency }}</span></p><p>Tax <span>{{ orderPrice.tax | currency }}</span></p></div><div class="ds-shop-checkout-price-total"><p class="ds-shop-confirmation-total">Order Total <span>{{ orderPrice.total | currency }}</span></p></div></div><div ng-show="main.deliveryOptions.length"><h3 class="ds-form-title">{{ state.summaryTitle }}</h3><div class="ds-shop-confirmation-row" ng-if="data.delivery != \'pickup\'"><h4>Ship To</h4><p>{{ data.name }}</p><p>{{ data.address1 }} {{ data.address2 }}</p><p>{{ data.city }}, {{ data.region }} {{ data.postCode }}</p><p>Tel: {{ data.phone }}</p></div><div class="ds-shop-confirmation-row" ng-if="data.delivery == \'pickup\'"><h4>Local pick up</h4><p>{{ item.pickup.address }}</p><p>{{ item.pickup.notes }}</p></div><div ng-if="orderPrice.shipping > 0"><h3 class="ds-form-title">Delivery Option</h3><div class="ds-shop-confirmation-row"><h4>{{ main.deliveryOptions[data.shipping].label }} {{ main.deliveryOptions[data.shipping].description }}</h4><p>Shipping Fee: {{ orderPrice.shipping | currency }}</p></div></div></div></div></div></div>'), e.put('public/modules/shop/templates/modal/registered-user.template.html', '<div class="onboarding-content" style="position: relative"><div class="onboarding-switch"><article class="onboarding-step onboarding-step__login-user onboarding-step__login-user--loaded guest-user"><form ng-submit="signin()"><div class="onboarding--heading">We found your account</div><div class="onboarding-step-avatar"><div class="onboarding-step-avatar-wave onboarding-step-avatar-wave-1"></div><div class="onboarding-step-avatar-wave onboarding-step-avatar-wave-2"></div><div class="onboarding-step-avatar-wave onboarding-step-avatar-wave-3"></div><div class="onboarding-step-avatar-wave onboarding-step-avatar-wave-4"></div><ds-avatar class="onboarding-step-user" src="registeredUserPhoto" class="ds-mentions-avatar" size="100"></ds-avatar></div><ds-input validate="$validators.passwordLogin" params="inputs.loginPassword" ng-model="data.passwordLogin" class="onboarding-last-input" type="password" label="Password" placeholder="Type your password to sign in" required ds-autofocus="true"></ds-input><button class="clearfix ds-button ds-button-primary ds-button-big" type="submit" ng-disabled="!data.passwordLogin"><span class="ds-button-wrapper">Continue as {{ registeredUserName }}</span></button></form></article></div></div>'), e.put('public/modules/users/views/password/forgot-password.view.html', '<div class="onboarding-content"><div class="onboarding-switch" ng-class="{ \'onboarding-switch--loading\': state.loading }"><article class="onboarding-step onboarding-step__email-2"><form name="createPassword" novalidate><div class="onboarding-hexagon"><div class="onboarding-hexagon-wrapper"><svg-icon icon="hexagon" class="onboarding-hexagon-bg"></svg-icon></div><img class="onboarding-hexagon-icon" ng-src="{{$root.cdnBaseUrl}}/images/onboarding/asterisk.svg" alt="create Password"></div><div class="onboarding-text"><h2 class="onboarding-title">Create a password</h2><p class="onboarding-description">For your security, create a password with at least <span ng-class="{\'text-error\' : data.password.length < 8 && createPassword.$submitted}">8 characters</span> using <span ng-class="{\'text-error\' : data.password === data.password.toLowerCase() && createPassword.$submitted}">1 capital letter</span>, <span ng-class="{\'text-error\' : !hasNumber && createPassword.$submitted}">1 number</span> and <span ng-class="{\'text-error\' : hasSpecialChar && createPassword.$submitted}">1 special character</span>.</p></div><ds-password validate="$validators.password" params="inputs.password" level="state.passwordLevel" ng-model="data.password" ng-change="matchPasswords()" label="Password" placeholder="Type a password" required></ds-password><div class="onboarding-step__confirm-pw-container"><ds-input ng-model="data.confirm" type="password" params="inputs.confirm" label="Confirm password" change="matchPasswords()" placeholder="Retype the password" validate="$validators.confirm" class="onboarding-last-input" required></ds-input><div ng-if="data.password === data.confirm && data.password.length > 1" class="onboarding-step__confirm-pw-container__content"><span>match</span> <img src="{{$root.cdnBaseUrl}}/images/sprite/green-check.svg" alt="checked"></div><div ng-if="createPassword.$submitted && data.password !== data.confirm" class="onboarding-step__confirm-pw-container__content"><span class="text-error">not a match</span> <img src="{{$root.cdnBaseUrl}}/images/sprite/red-alert.svg" alt="checked"></div><!-- HERE --></div><button class="clearfix ds-button ds-button-primary ds-button-big" ng-click="resetPassword()" type="submit">Next</button></form></article></div></div>'), e.put('public/modules/users/views/password/reset-password.view.html', '<section class="row" data-ng-controller="PasswordController"><h3 class="col-md-12 text-center">Reset your password</h3><div class="col-xs-offset-2 col-xs-8 col-md-offset-5 col-md-2"><form data-ng-submit="resetUserPassword()" class="signin form-horizontal" autocomplete="off"><fieldset><div class="form-group"><label for="newPassword">New Password</label><input type="password" id="newPassword" name="newPassword" class="form-control" data-ng-model="passwordDetails.newPassword" placeholder="New password"></div><div class="form-group"><label for="verifyPassword">Verify Password</label><input type="password" id="verifyPassword" name="verifyPassword" class="form-control" data-ng-model="passwordDetails.verifyPassword" placeholder="Verify password"></div><div class="text-center form-group"><button type="submit" class="btn btn-large btn-primary">Update password</button></div><div data-ng-show="error" class="text-center text-danger"><strong>{{error}}</strong></div><div data-ng-show="success" class="text-center text-success"><strong>{{success}}</strong></div></fieldset></form></div></section>'), e.put('public/modules/users/views/authentication/errors/404.html', '<div class="w-404"><!-- Load page --><div class="animationload"><div class="loader"></div></div><!-- End load page --><!-- Content Wrapper --><div id="wrapper"><div class="container"><!-- brick of wall --><div class="brick"></div><!-- end brick of wall --><!-- Number --><div class="number"><div class="four"></div><div class="zero"><div class="nail"></div></div><div class="four"></div></div><!-- end Number --><!-- Info --><div class="info"><h2>Something is wrong</h2><p>The page you are looking for was moved, removed, renamed or might never existed.</p><a ui-sref="homescreen" class="btn">Go Home</a></div><!-- end Info --></div><!-- end container --></div><!-- end Content Wrapper --><!-- Footer --><footer id="footer"><div class="container"><!-- Worker --><div class="worker"></div><!-- Tools --><div class="tools"></div></div><!-- end container --></footer><!-- end Footer --></div>')
    }]);